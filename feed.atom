<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>Planète PostgreSQL</title>
  <id>https://planete.postgresql.fr/</id>
  <updated>2024-10-23T04:38:32Z</updated>
  <subtitle>L&#39;actualité de PostgreSQL de français</subtitle>
  <link href="https://planete.postgresql.fr/"></link>
  <author>
    <name>PostgreSQL.fr</name>
    <email>contact@postgresql.fr</email>
  </author>
  <entry>
    <title>Poissons et coquillages</title>
    <updated>2024-10-14T08:30:00Z</updated>
    <id>tag:fljd.in,2024-10-14:/2024/10/14/poissons-et-coquillages/</id>
    <link href="https://fljd.in/2024/10/14/poissons-et-coquillages/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;En tant que pur produit académique des années 2010, mon langage de script de prédilection a&#xA;toujours été le Bash (&lt;em&gt;Bourne Again Shell&lt;/em&gt;). Non sans ignorer qu&amp;rsquo;il ait pu en exister d&amp;rsquo;autres, je&#xA;ne me suis jamais vraiment tourné vers d&amp;rsquo;autres shells pour automatiser les tâches du quotidien&#xA;dans mon métier de DBA.&lt;/p&gt;&#xA;&lt;p&gt;Et pour cause, j&amp;rsquo;ai administré des centaines de serveurs de distributions très variées et il&#xA;n&amp;rsquo;était pas bien vu d&amp;rsquo;installer des dépendances systèmes lourdes pour enrichir des scripts Python&#xA;ou Perl. Nous apprenions donc à écrire des scripts portables et universels, compatibles partout&#xA;où nous déposions nos valises.&lt;/p&gt;&#xA;&lt;p&gt;Me suis-je enfermé dans un dogme conservateur, en m&amp;rsquo;interdisant &lt;em&gt;de facto&lt;/em&gt; à me tourner vers des&#xA;shells modernes et bien plus aisés à appréhender ?&lt;/p&gt;</summary>
    <author>
      <name>Florent Jardin</name>
    </author>
  </entry>
  <entry>
    <title>Les types hiérarchiques</title>
    <updated>2024-09-19T11:20:00Z</updated>
    <id>tag:fljd.in,2024-09-19:/2024/09/19/les-types-hierarchiques/</id>
    <link href="https://fljd.in/2024/09/19/les-types-hierarchiques/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bien que la norme SQL définisse un ensemble de règles pour que les systèmes de bases&#xA;de données puissent être interchangeables, il existe de petites singularités dans la&#xA;nature. À ce titre, le type de données &lt;code&gt;hierarchyid&lt;/code&gt; fourni par SQL Server est un&#xA;exemple flagrant. Si vous êtes amené à basculer vers PostgreSQL, deux solutions s&amp;rsquo;offrent&#xA;à vous.&lt;/p&gt;&#xA;&lt;p&gt;Une première et plus simple consiste à lier chaque nœud à son parent à l&amp;rsquo;aide d&amp;rsquo;une nouvelle&#xA;colonne &lt;code&gt;parentid&lt;/code&gt; et d&amp;rsquo;y appliquer une contrainte de clé étrangère. Une autre approche,&#xA;plus complète, consiste à utiliser l&amp;rsquo;extension &lt;code&gt;ltree&lt;/code&gt;. Cet article traite de ce dernier&#xA;cas.&lt;/p&gt;</summary>
    <author>
      <name>Florent Jardin</name>
    </author>
  </entry>
  <entry>
    <title>Faire vivre une communauté</title>
    <updated>2024-07-30T09:30:00Z</updated>
    <id>tag:fljd.in,2024-07-30:/2024/07/30/faire-vivre-une-communaute/</id>
    <link href="https://fljd.in/2024/07/30/faire-vivre-une-communaute/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Le &lt;a href=&#34;https://pgday.fr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PG Day France&lt;/a&gt; s&amp;rsquo;est tenu les 11 et 12 juin derniers à Lille, ma ville natale.&#xA;Il s&amp;rsquo;agit de l&amp;rsquo;événement de la communauté française de PostgreSQL qui pose ses valises dans une&#xA;ville différente chaque année. L&amp;rsquo;occasion était trop belle pour moi et j&amp;rsquo;y ai rencontré de nombreuses&#xA;personnes venant de toute la France et de ses alentours, pour discuter de PostgreSQL au cours&#xA;de deux jours d&amp;rsquo;ateliers et de conférences.&lt;/p&gt;&#xA;&lt;p&gt;Pour cette édition, j&amp;rsquo;ai eu le plaisir de prendre la parole et de faire un retour d&amp;rsquo;expérience&#xA;sur l&amp;rsquo;animation du groupe Meetup local dont j&amp;rsquo;ai repris les rennes il y a maintenant quatre ans.&#xA;Dans cet article, je souhaite retranscrire les principaux points abordés lors de cette présentation,&#xA;en attendant que la vidéo de la conférence soit mise en ligne.&lt;/p&gt;</summary>
    <author>
      <name>Florent Jardin</name>
    </author>
  </entry>
  <entry>
    <title>Un assistant pour copier les données distantes</title>
    <updated>2024-05-28T00:00:00Z</updated>
    <id>tag:fljd.in,2024-05-28:/2024/05/28/un-assistant-pour-copier-les-donnees-distantes/</id>
    <link href="https://fljd.in/2024/05/28/un-assistant-pour-copier-les-donnees-distantes/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lors de la dernière &lt;a href=&#34;https://blog.dalibo.com/2023/12/08/pgsession16_programme.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PGSession 16&lt;/a&gt;, j&amp;rsquo;ai rédigé et animé un &lt;a href=&#34;https://dali.bo/wsfdw_html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;atelier&lt;/a&gt; de&#xA;trois heures au sujet de la migration vers PostgreSQL à l&amp;rsquo;aide des Foreign Data&#xA;Wrappers, ou FDW. Ce fut notamment l&amp;rsquo;occasion de présenter au grand public,&#xA;l&amp;rsquo;extension &lt;a href=&#34;https://github.com/cybertec-postgresql/db_migrator&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;db_migrator&lt;/code&gt;&lt;/a&gt; pour laquelle j&amp;rsquo;ai dédié un &lt;a href=&#34;https://fljd.in/2023/07/28/en-route-vers-la-liberte-avec-db_migrator/&#34;&gt;article&lt;/a&gt; sur ce&#xA;blog.&lt;/p&gt;&#xA;&lt;p&gt;Au cours de cet atelier, nous pouvons constater que la copie des données avec&#xA;l&amp;rsquo;extension &lt;code&gt;db_migrator&lt;/code&gt; n&amp;rsquo;est pas parfaitement prise en charge. En effet, bien&#xA;qu&amp;rsquo;il existe une fonction de bas niveau pour répartir sur plusieurs processus le&#xA;transfert table à table, de nombreuses situations devront exiger de rédiger un&#xA;grand nombre de requêtes SQL pour se tirer d&amp;rsquo;affaire. Au cours des mois qui&#xA;suivirent, je me suis attelé à la conception d&amp;rsquo;un &lt;a href=&#34;https://github.com/fljdin/fdw-assistant&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;assistant&lt;/a&gt; écrit en&#xA;PL/pgSQL dont le but est de simplifier la génération de ces requêtes.&lt;/p&gt;</summary>
    <author>
      <name>Florent Jardin</name>
    </author>
  </entry>
  <entry>
    <title>Les modes de transfert dans une migration</title>
    <updated>2023-10-11T00:00:00Z</updated>
    <id>tag:fljd.in,2023-10-11:/2023/10/11/les-modes-de-transfert-dans-une-migration/</id>
    <link href="https://fljd.in/2023/10/11/les-modes-de-transfert-dans-une-migration/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;En informatique, un projet de migration consiste à changer un ou plusieurs&#xA;composants techniques sans qu&amp;rsquo;aucun comportement des applications n&amp;rsquo;en soit&#xA;impacté. Dans le paysage des bases de données (et le métier que j&amp;rsquo;exerce), il&#xA;s&amp;rsquo;agira de choisir un nouveau système (comme PostgreSQL) en remplacement d&amp;rsquo;un&#xA;autre (comme Oracle ou Microsoft SQL Server).&lt;/p&gt;&#xA;&lt;p&gt;Dans un &lt;a href=&#34;https://fljd.in/2021/12/06/migrer-vers-postgresql/&#34;&gt;précédent article&lt;/a&gt;, je décrivais les étapes exhaustives pour&#xA;réaliser une migration complète à l&amp;rsquo;aide de la technologie des &lt;em&gt;Foreign Data&#xA;Wrappers&lt;/em&gt;, mais l&amp;rsquo;étape critique de transfert des données qui y était décrite ne&#xA;s&amp;rsquo;adapte pas à toutes les situations. Voyons ensemble les alternatives qui&#xA;permettent de couvrir une grande partie des besoins.&lt;/p&gt;</summary>
    <author>
      <name>Florent Jardin</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL Anonymizer 2.0 - Générer des données factices</title>
    <updated>2024-10-10T05:00:00Z</updated>
    <id>tag:blog.dalibo.com,2024-10-10://2024/10/10/postgresql_anonymizer_generer_des_donnees_factices.html</id>
    <link href="https://blog.dalibo.com//2024/10/10/postgresql_anonymizer_generer_des_donnees_factices.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;em&gt;Eymoutiers, le 10 octobre 2024&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Après plusieurs mois de développement, la version 2.0 de &lt;a href=&#34;https://postgresql-anonymizer.readthedocs.io/&#34;&gt;PostgreSQL Anonymizer&lt;/a&gt;&#xA;est entrée en phase bêta et c’est l’occasion pour nous de lancer une série&#xA;d’articles pour présenter ses nouvelles capacités en avant-première !&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Pour ce premier aperçu technique, voyons comment générer des données factices&#xA;(également appelées «données synthétiques»).&lt;/p&gt;&#xA;&#xA;&lt;!--MORE--&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/img/2024_pexels-markusspiske-3806754.jpg&#34; alt=&#34;Photo Credit Markus Spiske&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/img/logo_pg_anonymizer_picto.png&#34; alt=&#34;Logo PostgreSQL Anonymizer&#34; style=&#34;float: right; padding: 10px; width: 200px;&#34; /&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;pourquoi-cest-important-&#34;&gt;Pourquoi c’est important ?&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://postgresql-anonymizer.readthedocs.io/&#34;&gt;PostgreSQL Anonymizer&lt;/a&gt; 2.0 propose une large gamme de fonctions pour générer&#xA;des données factices mais réalistes. Ces fonctions sont utiles pour écrire des&#xA;règles de masquage et remplacer des données sensibles par des données qui&#xA;« ont l’air vraies ».&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Mais ce n’est pas le seul intérêt de ces fonctions. En fait, on peut également&#xA;les utiliser dès les premiers pas d’un nouveau projet : lors de la conception&#xA;d’un modèle de données, il est essentiel de « peupler » les tables avec des&#xA;données pour ne pas démarrer les développements « à vide ».&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Considérons une nouvelle application qui doit s’appuyer sur une table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;customer&lt;/code&gt;&#xA;classique :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;customer&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;&#x9;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;          &lt;span class=&#34;nb&#34;&gt;INT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;PRIMARY&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;KEY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&#x9;&lt;span class=&#34;n&#34;&gt;firstname&lt;/span&gt; &#x9;&lt;span class=&#34;nb&#34;&gt;TEXT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&#x9;&lt;span class=&#34;n&#34;&gt;lastname&lt;/span&gt;    &lt;span class=&#34;nb&#34;&gt;TEXT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&#x9;&lt;span class=&#34;n&#34;&gt;email&lt;/span&gt;       &lt;span class=&#34;nb&#34;&gt;TEXT&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;On voudrait insérer 2000 personnes dans cette table, mais comment faire&#xA;puisque l’application n’existe pas encore ?&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;pourquoi-cest-compliqué-&#34;&gt;Pourquoi c’est compliqué ?&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Évidement, insérer 2000 fois &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;Jean Dupont&lt;/code&gt; dans la table n’est pas vraiment&#xA;une option ! Toute la difficulté est donc de produire de données &lt;strong&gt;réalistes&lt;/strong&gt;&#xA;et &lt;strong&gt;adaptées au contexte&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Par exemple, si l’application est destinée à des usagers adultes, on voudra que&#xA;les dates de naissance soient comprises entre 1950 et 2006.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;C’est ici qu’entre en jeu &lt;a href=&#34;https://postgresql-anonymizer.readthedocs.io/&#34;&gt;PostgreSQL Anonymizer&lt;/a&gt; avec son large panel de&#xA;fonctions de &lt;a href=&#34;https://postgresql-anonymizer.readthedocs.io/en/latest/masking_functions/#randomization&#34;&gt;randomisation&lt;/a&gt; et ses &lt;a href=&#34;https://postgresql-anonymizer.readthedocs.io/en/latest/masking_functions/#advanced-faking&#34;&gt;générateurs de données factices&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;customer&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&#xA;&#x9;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pg_catalog&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;99&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;-- avoid collisions !&lt;/span&gt;&#xA;&#x9;&lt;span class=&#34;n&#34;&gt;anon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dummy_first_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&#xA;&#x9;&lt;span class=&#34;n&#34;&gt;anon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dummy_last_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&#xA;&#x9;&lt;span class=&#34;n&#34;&gt;anon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dummy_free_email&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;generate_series&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;NB&lt;/strong&gt; : La fonction &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;random(x,y)&lt;/code&gt; est une des nouveautés de PostgreSQL 17 !&#xA;Pour les versions antérieures, la fonction &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;anon.random_int_between(x,y)&lt;/code&gt; est&#xA;une alternative équivalente.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Au total, PostgreSQL Anonymizer fournit plus de 70 fonctions de génération&#xA;de données factices ! Elles ont toutes le prefixe &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;dummy_&lt;/code&gt;. La liste complète&#xA;est disponible dans la section &lt;em&gt;Advanced Faking&lt;/em&gt; de la documentation :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://postgresql-anonymizer.readthedocs.io/en/latest/masking_functions/#advanced-faking&#34;&gt;https://postgresql-anonymizer.readthedocs.io/en/latest/masking_functions/#advanced-faking&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Ce qui nous donne :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;customer&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;LIMIT&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;firstname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lastname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;email&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;-----+-----------+----------+----------------------&lt;/span&gt;&#xA; &lt;span class=&#34;mi&#34;&gt;143&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Eloisa&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Beer&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mavis_ab&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hotmail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;&#xA; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Braden&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Hagenes&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ariel_nam&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;yahoo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Imaginons maintenant que l’application doit stocker des numéros de téléphone et&#xA;qu’elle est destinée au marché français. On peut alors utiliser la fonction&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;anon.dummy_phone_number()&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;anon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dummy_phone_number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;dummy_phone_number&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;-------------------&lt;/span&gt;&#xA; &lt;span class=&#34;mi&#34;&gt;648&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;881&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1114&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Cela fonctionne, mais le format ne correspond pas à celui des numéros de&#xA;téléphone français.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Pour obtenir des valeurs factices adaptées au contexte local, on peut simplement&#xA;ajouter le suffixe &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;_locale&lt;/code&gt; à la fin de la fonction et préciser que l’on&#xA;souhaite un numéro français :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;customer&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;ADD&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;COLUMN&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;phone&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;TEXT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;UPDATE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;customer&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SET&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;phone&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;anon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dummy_phone_number_locale&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;fr_FR&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Ce qui nous donne :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;customer&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;LIMIT&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;   &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;firstname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lastname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;email&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;     &lt;span class=&#34;n&#34;&gt;phone&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;--------+-----------+----------+----------------------+----------------&lt;/span&gt;&#xA; &lt;span class=&#34;mi&#34;&gt;115076&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Zelda&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Robel&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;afton_eos&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gmail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;05&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;38&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;52&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;85&lt;/span&gt;&#xA; &lt;span class=&#34;mi&#34;&gt;123886&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Kamille&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ernser&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;kiera_ut&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hotmail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;04&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;18&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;60&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;76&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Au total et à ce jour, 7 locales sont disponibles partiellement ou&#xA;intégralement : ar_SA, en_US, fr_FR, ja_JP, pt_BR, zh_CN, zh_TW.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;On l’aura compris : générer des données factices de bonne qualité n’est pas une&#xA;mince affaire ! Plutôt que de développer cette fonctionnalité &lt;em&gt;ex-nihilo&lt;/em&gt; dans&#xA;&lt;a href=&#34;https://postgresql-anonymizer.readthedocs.io/&#34;&gt;PostgreSQL Anonymizer&lt;/a&gt;, nous avons choisi de nous appuyer sur la librairie&#xA;&lt;a href=&#34;https://github.com/cksac/fake-rs&#34;&gt;fake-rs&lt;/a&gt; qui supporte à la fois de nombreuses locales et un large éventail de&#xA;catégories.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;le-projet-postgresql-faker-est-désormais-en-fin-de-vie&#34;&gt;Le projet PostgreSQL Faker est désormais en fin de vie&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Si vous avez déjà utilisé &lt;a href=&#34;https://postgresql-anonymizer.readthedocs.io/&#34;&gt;PostgreSQL Anonymizer&lt;/a&gt;, vous connaissez peut-être&#xA;également l’existence de l’extension &lt;a href=&#34;https://gitlab.com/dalibo/postgresql_faker&#34;&gt;PostgreSQL Faker&lt;/a&gt; qui répondait&#xA;auparavant à ce besoin de données factices. Pour différentes raisons, nous&#xA;avons choisi de geler ce projet et d’intégrer cette fonctionnalité directement&#xA;dans &lt;a href=&#34;https://postgresql-anonymizer.readthedocs.io/&#34;&gt;PostgreSQL Anonymizer&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Le projet &lt;a href=&#34;https://gitlab.com/dalibo/postgresql_faker&#34;&gt;PostgreSQL Faker&lt;/a&gt; est donc désormais déprécié et tous ses&#xA;utilisateurs et utilisatrices sont encouragés à migrer progressivement vers&#xA;&lt;a href=&#34;https://postgresql-anonymizer.readthedocs.io/&#34;&gt;PostgreSQL Anonymizer&lt;/a&gt; 2.0.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;à-vous-de-jouer-&#34;&gt;À vous de jouer !&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Tous ces nouveaux &lt;a href=&#34;https://postgresql-anonymizer.readthedocs.io/en/latest/masking_functions/#advanced-faking&#34;&gt;générateurs de données factices&lt;/a&gt; sont encore en phase bêta !&#xA;N’hésitez pas à les tester et à partager vos commentaires et vos usages.&#xA;Comment générez-vous les données factices pour remplir vos tables ?&#xA;Est-ce que cette nouvelle fonctionnalité répond à votre besoin ?&#xA;Etc…&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Pour toute demande ou idée, ouvrez un ticket via le lien ci-dessous et&#xA;parlons-en !&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://gitlab.com/dalibo/postgresql_anonymizer/-/issues&#34;&gt;https://gitlab.com/dalibo/postgresql_anonymizer/-/issues&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;PS: Cet article a été rédigé sans l’assistance d’une intelligence artificielle.&lt;/em&gt;&lt;/p&gt;</summary>
    <author>
      <name>blog.dalibo.com</name>
    </author>
  </entry>
  <entry>
    <title>Contraintes temporelles dans PostgreSQL 18</title>
    <updated>2024-10-01T05:00:00Z</updated>
    <id>tag:blog.dalibo.com,2024-10-01://2024/10/01/postgresql-18-contraintes-temporelles.html</id>
    <link href="https://blog.dalibo.com//2024/10/01/postgresql-18-contraintes-temporelles.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;em&gt;Toulouse, le 1er octobre 2024&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Le mois dernier, le support du mot clé &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;WITHOUT OVERLAPS&lt;/code&gt; a été ajouté à&#xA;PostgreSQL pour la définition des contraintes et clés primaires et étrangères.&#xA;Nous allons voir, grâce à un petit exemple, comment ceci pourrait être&#xA;utilisé… À partir de PostgreSQL 18 !&lt;/p&gt;&#xA;&#xA;&lt;!--MORE--&gt;&#xA;&#xA;&lt;p&gt;Considérons une application de facturation disposant &lt;em&gt;a minima&lt;/em&gt; d’une table&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;customers&lt;/code&gt; et d’une table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;invoices&lt;/code&gt;, avec une relation entre les deux :&lt;/p&gt;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;customers&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;generated&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;BY&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;DEFAULT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;identity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;PRIMARY&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;KEY&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt;&#xA;&lt;span class=&#34;o&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;invoices&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;generated&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;BY&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;DEFAULT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IDENTITY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;period&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;daterange&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;customer_id&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;REFERENCES&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;customers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;float&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;CONSTRAINT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;temporal_invoices_uq&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;UNIQUE&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;customer_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;period&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WITHOUT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;OVERLAPS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;En particulier, nous avons défini une contrainte unique sur les colonnes&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;customer_id&lt;/code&gt; et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;period&lt;/code&gt; avec la clause &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;WITHOUT OVERLAPS&lt;/code&gt; pour garantir&#xA;l’unicité d’une facture par client sur une période donnée et ainsi éviter une&#xA;facturation redondante.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La clause &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;WITHOUT OVERLAPS&lt;/code&gt; de cette contrainte se matérialise par la&#xA;valorisation de la colonne &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;conperiod&lt;/code&gt; dans la table &lt;a href=&#34;https://www.postgresql.org/docs/devel/catalog-pg-constraint.html&#34;&gt;pg_constraint&lt;/a&gt; :&lt;/p&gt;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;conperiod&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_constraint&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;conname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;temporal_invoices_uq&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;conperiod&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;-----------&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&lt;p&gt;et on retrouve sa définition via :&lt;/p&gt;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_get_constraintdef&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;oid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_constraint&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;conname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;temporal_invoices_uq&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;             &lt;span class=&#34;n&#34;&gt;pg_get_constraintdef&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;-----------------------------------------------&lt;/span&gt;&#xA; &lt;span class=&#34;k&#34;&gt;UNIQUE&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;customer_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;period&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WITHOUT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;OVERLAPS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;(Note : l’extension &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;btree_gist&lt;/code&gt; est nécessaire pour cet exemple car notre&#xA;contrainte contient la colonne – sans &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;WITHOUT OVERLAPS&lt;/code&gt; – &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;customer_id&lt;/code&gt; qui&#xA;n’est pas de type “range”.)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Que se passe-t-il si nous essayons de facturer un même client sur deux&#xA;périodes se recouvrant ?&lt;/p&gt;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;customers&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;dalibo&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&#xA;&lt;span class=&#34;o&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;customers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;----+--------&lt;/span&gt;&#xA;  &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dalibo&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;span class=&#34;o&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;invoices&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;customer_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;period&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;[2024-08-01, 2024-08-31]&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;daterange&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;45&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&#xA;&lt;span class=&#34;o&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;invoices&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;customer_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;period&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;[2024-08-12, 2024-09-23]&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;daterange&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;678&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;90&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;ERROR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;conflicting&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;violates&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exclusion&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;constraint&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;temporal_invoices_uq&#34;&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;DETAIL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;Key&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;customer_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;period&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2024&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;08&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2024&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;09&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;conflicts&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;existing&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;customer_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;period&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2024&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;08&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2024&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;09&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)).&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&lt;p&gt;Comme prévue, une erreur est levée ! Pratique, non ?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A contrario, nous pouvons bien sûr insérer des lignes sans recouvrement :&lt;/p&gt;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;invoices&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;customer_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;period&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;[2024-09-01, 2024-09-30]&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;daterange&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;678&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;90&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&#xA;&lt;span class=&#34;o&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;invoices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;         &lt;span class=&#34;n&#34;&gt;period&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;customer_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;----+-------------------------+-------------+--------&lt;/span&gt;&#xA;  &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2024&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;08&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2024&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;09&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;45&lt;/span&gt;&#xA;  &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2024&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;09&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2024&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;  &lt;span class=&#34;mi&#34;&gt;678&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Avant l’introduction de cette clause, il était possible d’implémenter le même&#xA;comportement via une contrainte d’exclusion :&lt;/p&gt;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;invoices2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;generated&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;BY&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;DEFAULT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IDENTITY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;period&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;daterange&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;customer_id&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;REFERENCES&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;customers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;float&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;CONSTRAINT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exclusion_invoices&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXCLUDE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;USING&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gist&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;customer_id&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WITH&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;period&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WITH&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt;&#xA;&lt;span class=&#34;o&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;invoices2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;customer_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;period&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;[2024-09-01, 2024-09-30]&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;daterange&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;678&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;90&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&#xA;&lt;span class=&#34;o&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;invoices2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;customer_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;period&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;[2024-08-12, 2024-09-27]&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;daterange&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1234&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;ERROR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;conflicting&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;violates&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exclusion&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;constraint&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;exclusion_invoices&#34;&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;DETAIL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;Key&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;customer_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;period&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2024&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;08&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2024&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;09&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;28&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;conflicts&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;existing&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;customer_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;period&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2024&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;09&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2024&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)).&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Ajoutons aussi que cette clause, même si elle se réfère au champ fonctionnel&#xA;des &lt;a href=&#34;https://fr.wikipedia.org/wiki/Base_de_donn%C3%A9es_temporelle&#34;&gt;bases de données temporelles&lt;/a&gt; et aux ajouts au standard&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/SQL%3A2011&#34;&gt;SQL:2011&lt;/a&gt;, s’applique dans le cas de PostgreSQL à tout type d’intervalle,&#xA;donc pas uniquement les intervalles de types “temporels” comme les dates dans&#xA;notre exemple mais aussi, par exemple, à des entiers.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Le standard &lt;a href=&#34;https://en.wikipedia.org/wiki/SQL%3A2011&#34;&gt;SQL:2011&lt;/a&gt; dénomme “périodes” les colonnes telles que &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;period&lt;/code&gt;&#xA;dans notre exemple et une table incluant une telle colonne est appelée&#xA;&lt;em&gt;application-time period table&lt;/em&gt;. Il propose une autre fonctionnalité&#xA;intéressante pour les tables temporelles : le découpage automatique des&#xA;“périodes” lors d’&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;UPDATE&lt;/code&gt;/&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;DELETE&lt;/code&gt; au travers d’une clause &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;FOR PORTION OF&lt;/code&gt;.&#xA;À suivre pour une intégration future dans PostgreSQL…&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Pour aller plus loin :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;la &lt;a href=&#34;https://www.postgresql.org/docs/devel/sql-createtable.html#SQL-CREATETABLE-PARMS-UNIQUE&#34;&gt;documentation de CREATE TABLE&lt;/a&gt; sur cette nouvelle&#xA;clause,&lt;/li&gt;&#xA;  &lt;li&gt;le &lt;a href=&#34;https://git.postgresql.org/gitweb/?p=postgresql.git;a=commitdiff;h=fc0438b4e80535419a4e54dba87642cdf84defda&#34;&gt;changement&lt;/a&gt; ajoutant cette fonctionnalité dans l’historique git&#xA;de PostgreSQL, par Paul A. Jungwirth, intégré par Peter Eisentraut,&lt;/li&gt;&#xA;  &lt;li&gt;et enfin, le &lt;a href=&#34;https://www.depesz.com/2024/09/30/waiting-for-postgresql-18-add-temporal-primary-key-and-unique-constraints/&#34;&gt;billet (en Anglais) sur depesz.com&lt;/a&gt; sur le même sujet.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;!--&#xA;   vim: spelllang=fr spell&#xA;   --&gt;</summary>
    <author>
      <name>blog.dalibo.com</name>
    </author>
  </entry>
  <entry>
    <title>Créer une extension Postgres en Rust #1 - Un nouveau monde</title>
    <updated>2024-09-20T05:00:00Z</updated>
    <id>tag:blog.dalibo.com,2024-09-20://2024/09/20/ecrire_une_extension_postgres_en-rust_1_un_nouveau_monde.html</id>
    <link href="https://blog.dalibo.com//2024/09/20/ecrire_une_extension_postgres_en-rust_1_un_nouveau_monde.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;em&gt;Eymoutiers, le 20 septembre 2024&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Nous lançons ici une nouvelle série d’articles dédiés au &lt;strong&gt;développement&#xA;d’extensions PostgreSQL en général et au framework &lt;a href=&#34;https://github.com/pgcentralfoundation/pgrx&#34;&gt;PGRX&lt;/a&gt;&lt;/strong&gt; en particulier.&#xA;Chaque article sera conçu comme un mini-atelier avec des rappels théoriques,&#xA;des objectifs, un exemple concret et des exercices optionnels pour les&#xA;lectrices et lecteurs qui veulent aller plus loin !&lt;/p&gt;&#xA;&#xA;&lt;p&gt;On démarre avec un classique “Hello World” !&lt;/p&gt;&#xA;&#xA;&lt;!--MORE--&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/img/2024_pgrx_pexels-jacob-colvin-1761279.jpg&#34; alt=&#34;Photo Credit Jacob Colvin&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;objectifs&#34;&gt;Objectifs&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Dans cette première partie, nous avons les objectifs suivants:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;Initialiser un environnement de développement &lt;a href=&#34;https://github.com/pgcentralfoundation/pgrx&#34;&gt;PGRX&lt;/a&gt;&lt;/li&gt;&#xA;  &lt;li&gt;Créer une extension minimaliste&lt;/li&gt;&#xA;  &lt;li&gt;Lancer l’extension dans une instance Postgres&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h3 id=&#34;démarrage&#34;&gt;Démarrage&lt;/h3&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Astuce: On peut éviter d’installer Rust et PGRX de&#xA;manière permanente sur la machine hôte, pour cela voir directement&#xA;le chapitre suivant &lt;a href=&#34;&#34;&gt;Démarrage avec Docker&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Avant toutes choses, nous allons installer le framework &lt;a href=&#34;https://github.com/pgcentralfoundation/pgrx&#34;&gt;PGRX&lt;/a&gt;. Pour cela, il&#xA;faut au préalable mettre en place Rust (par exemple avec l’installateur &lt;a href=&#34;https://rustup.rs/&#34;&gt;rustup&lt;/a&gt;).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Une fois que &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;Rust&lt;/code&gt; et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;cargo&lt;/code&gt; sont installés, on lance l’installation&#xA;de &lt;a href=&#34;https://github.com/pgcentralfoundation/pgrx&#34;&gt;PGRX&lt;/a&gt; et l’initialisation de l’environnement de développement :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;go&#34;&gt;cargo install --locked cargo-pgrx&#xA;cargo pgrx init&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Suivant la puissance de la machine hôte, cette étape peut être longue (5 à 30 minutes).&#xA;Elle est va également consommer beaucoup d’espace disque (environ 4Go).&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;démarrage-avec-docker&#34;&gt;Démarrage avec Docker&lt;/h3&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Ce chapitre remplace le précédent :)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Vous pouvez directement réaliser les exemples ci-dessous en&#xA;vous connectant à une machine docker préparée spécialement à&#xA;cet effet :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;go&#34;&gt;docker run -it --volume `pwd`:/pgrx daamien/pgrx&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;h3 id=&#34;bonjour-le-monde&#34;&gt;Bonjour le monde&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;On peut maintenant créer une extension nommée &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;world&lt;/code&gt; avec :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;go&#34;&gt;cargo pgrx new world&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Un nouveau dossier &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;world&lt;/code&gt; vient d’apparaître et contient le&#xA;strict nécessaire pour générer une extension Postgres, notamment&#xA;un fichier source (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;src/lib.rs&lt;/code&gt;) qui contient la fonction&#xA;suivante &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;hello_world&lt;/code&gt;:&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-rust highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;nd&#34;&gt;#[pg_extern]&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;fn&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;hello_world&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;&#39;static&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;    &lt;span class=&#34;s&#34;&gt;&#34;Hello, world&#34;&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;La fonction retourne une valeur statique de type &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;str&lt;/code&gt; (appelé &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;slice de chaînes&#xA;de caractères&lt;/code&gt;) qui représente simplement une suite de caractères UTF-8. Cette&#xA;valeur de retour sera automatiquement convertie en type &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;TEXT&lt;/code&gt; pour Postgres.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Grâce à PGRX, tous les types essentiels de Postgres sont automatiquement convertis&#xA;en type Rust. La liste complète des conversions est disponible ci-dessous :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pgcentralfoundation/pgrx#mapping-of-postgres-types-to-rust&#34;&gt;https://github.com/pgcentralfoundation/pgrx#mapping-of-postgres-types-to-rust&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;lancer-lextension&#34;&gt;Lancer l’extension&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pgcentralfoundation/pgrx&#34;&gt;PGRX&lt;/a&gt; va maintenant pouvoir lancer une instance Postgres, charger cette&#xA;nouvelle extension, créer une base de test et ouvrir une session de travail&#xA;dessus :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;go&#34;&gt;cd world&#xA;cargo pgrx run&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Une fois la compilation effectuée, nous voici connecté⋅es à une instance Postgres !&#xA;Nous pouvons directement créer et tester notre nouvelle extension.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;world&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXTENSION&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;world&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXTENSION&lt;/span&gt;&#xA;&#xA;&lt;span class=&#34;n&#34;&gt;world&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hello_world&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;hello_world&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;--------------&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;Hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;world&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Difficile de faire plus simple, non ?&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;ajouter-une-nouvelle-fonction&#34;&gt;Ajouter une nouvelle fonction&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Dans le fichier &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;world/src/lib.rs&lt;/code&gt;, on peut ajouter autant de nouvelles&#xA;fonctions que nécessaire.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Par exemple, créons une fonction qui prend un paramètre en entrée :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-rust highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;nd&#34;&gt;#[pg_extern]&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;fn&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;    &lt;span class=&#34;nd&#34;&gt;format!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;Hello, {name}&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Note: Par facilité, on utilise ici le type &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;String&lt;/code&gt; plutot que &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;&amp;amp;str&lt;/code&gt; pour la&#xA;valeur de retour… Le type String sera également converti en type TEXT pour&#xA;Postgres&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Lançons à nouveau l’extension :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;go&#34;&gt;cargo pgrx run&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Cette fois, seul le module &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;world&lt;/code&gt; est recompilé !&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Une fois dans la nouvelle session psql ouverte, on recharge l’extension :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;world&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;DROP&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXTENSION&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;world&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;world&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXTENSION&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;world&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Et la nouvelle fonction est disponible :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;world&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;Bob&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;   &lt;span class=&#34;n&#34;&gt;hello&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;------------&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;Hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Bob&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;h3 id=&#34;écrire-la-même-chose-en-c-&#34;&gt;Écrire la même chose en C ?&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;En guise de comparaison, voici 2 extensions similaires écrites en langage C :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/magnusp/pg_hello/blob/master/pg_hello.c&#34;&gt;https://github.com/magnusp/pg_hello/blob/master/pg_hello.c&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/petr-korobeinikov/postgresql-extension-example/blob/master/hello_ext/hello_ext.c&#34;&gt;https://github.com/petr-korobeinikov/postgresql-extension-example/blob/master/hello_ext/hello_ext.c&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;pour-aller-plus-loin&#34;&gt;Pour aller plus loin…&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Voici quelques propositions d’activités pour poursuivre la découverte :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;&#xA;    &lt;p&gt;En utilisant la macro &lt;a href=&#34;https://doc.rust-lang.org/std/macro.panic.html#examples&#34;&gt;panic!&lt;/a&gt;, créer une fonction &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;hello2()&lt;/code&gt; qui renvoie&#xA;une erreur si la variable &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;name&lt;/code&gt; est vide.&lt;/p&gt;&#xA;  &lt;/li&gt;&#xA;  &lt;li&gt;&#xA;    &lt;p&gt;En utilisant la commande &lt;a href=&#34;https://doc.rust-lang.org/rust-by-example/flow_control/match.html&#34;&gt;match&lt;/a&gt;, dites “Bonjour” si le nom Pierre et “Hola”&#xA;si le nom est Diego ou Maya.&lt;/p&gt;&#xA;  &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Un exemple d’implémentation est disponible sur :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://gitlab.com/daamien/pgrx-notebook/-/blob/main/world/src/lib.rs&#34;&gt;https://gitlab.com/daamien/pgrx-notebook/-/blob/main/world/src/lib.rs&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;bilan&#34;&gt;Bilan&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;En quelques minutes, on a pu créer une extension Postgres pour écrire et tester&#xA;des fonctions internes.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Si l’on fait la comparaison avec le framework classique de développement&#xA;d’extensions en C ( &lt;a href=&#34;https://www.postgresql.org/docs/current/extend-pgxs.html&#34;&gt;PGXS&lt;/a&gt; ), on remarque déjà plusieurs avantages clairs :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;La création de l’environnement de développement est automatisée&lt;/li&gt;&#xA;  &lt;li&gt;La création de nouvelles fonctions est très simple&lt;/li&gt;&#xA;  &lt;li&gt;Tous les types de base Postgres sont automatiquement convertis&lt;/li&gt;&#xA;  &lt;li&gt;La manipulation des chaînes de caractères est bien plus souple en Rust&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h3 id=&#34;la-suite-au-prochain-épisode-&#34;&gt;La suite au prochain épisode !&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Jusqu’où Rust nous mènera-t-il ? Rendez-vous dans l’épisode #2&#xA;pour le savoir !&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;PS: Cet article a été rédigé sans l’assistance d’une intelligence artificielle.&lt;/em&gt;&lt;/p&gt;</summary>
    <author>
      <name>blog.dalibo.com</name>
    </author>
  </entry>
  <entry>
    <title>Gestion des permissions sous PostgreSQL</title>
    <updated>2024-06-28T05:00:00Z</updated>
    <id>tag:blog.dalibo.com,2024-06-28://2024/06/28/permission.html</id>
    <link href="https://blog.dalibo.com//2024/06/28/permission.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;em&gt;Vallée de Munster, 28 juin 2024&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La gestion des permissions sous PostgreSQL peut parfois être la source&#xA;de certaines (mauvaises) surprises. Nous vous proposons un article qui a&#xA;pour objectif de donner quelques informations sur la gestion des droits,&#xA;et certaines problématiques rencontrées par certains clients qui&#xA;souhaitent permettre l’accès à une base à plusieurs rôles.&lt;/p&gt;&#xA;&#xA;&lt;!--MORE--&gt;&#xA;&#xA;&lt;figure style=&#34;float: right;padding: 10px;width: 200px;&#34;&gt;&#xA;  &lt;img style=&#34;padding: 0;&#34; src=&#34;/img/2024_keyboard.png&#34; alt=&#34;Clavier et clé&#34; /&gt;&#xA;  &lt;figcaption style=&#34;font-size: 10px;text-align: center; font-style: italic;&#34;&gt;Image by &lt;a href=&#34;https://pixabay.com/users/jeongguhyeok-645950/?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=621830&#34;&gt;GuHyeok Jeong&lt;/a&gt; from &lt;a href=&#34;https://pixabay.com//?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=621830&#34;&gt;Pixabay&lt;/a&gt;&lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h3 id=&#34;mise-en-place&#34;&gt;Mise en place&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Imaginons qu’il est demandé à un DBA (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt;) de donner l’accès à un&#xA;schéma (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v&lt;/code&gt; dans nos exemples) d’une base (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;db2&lt;/code&gt;) à plusieurs&#xA;rôles &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;daniel&lt;/code&gt;, &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt; et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Notre DBA va dans un premier temps initialiser une base, le schéma et&#xA;les rôles. Pour ce faire, il peut utiliser les commandes suivantes :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cat &lt;/span&gt;init.sql&#xA;&lt;span class=&#34;gp&#34;&gt;CREATE ROLE owner WITH LOGIN;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;CREATE DATABASE db2 OWNER owner;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;CREATE ROLE daniel WITH LOGIN;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;CREATE ROLE michel WITH LOGIN;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&#xA;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;psql &lt;span class=&#34;nt&#34;&gt;-f&lt;/span&gt; init.sql&#xA;&lt;span class=&#34;go&#34;&gt;CREATE ROLE&#xA;CREATE DATABASE&#xA;CREATE ROLE&#xA;CREATE ROLE&#xA;CREATE ROLE&#xA;GRANT ROLE&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Le rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt; peut maintenant créer un schéma au sein de la base &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;db2&lt;/code&gt;&#xA;(car il en est le propriétaire) :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;CREATE schema v&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;CREATE SCHEMA&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Et y créer une table qui va être utilisée pour nos tests :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;CREATE TABLE v.weather&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;city VARCHAR&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;50&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;CREATE TABLE&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Pour l’attribution des permissions, notre DBA a plusieurs options. Nous&#xA;vous proposons d’en voir quelques-unes dans la suite de l’article.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;donner-des-permissions-sur-les-objets-existants&#34;&gt;Donner des permissions sur les objets existants&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Après avoir validé ces accès, &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt; (qui est propriétaire de la base)&#xA;va créer des tables ou d’autres objets, et donner (avec la commande&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;GRANT&lt;/code&gt;) des accès aux autres rôles en fonction de ces besoins.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Par exemple, pour donner le droit de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SELECT&lt;/code&gt; sur notre table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;weather&lt;/code&gt;,&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt; peut utiliser la commande suivante :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GRANT SELECT ON TABLE v.weather TO daniel&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;GRANT&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Lorsque le rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;daniel&lt;/code&gt; essaye de lire le contenu de la table&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v.weather&lt;/code&gt;, PostgreSQL va lui renvoyer l’erreur suivante :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;daniel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;SELECT &lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; from v.weather&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;ERROR:  permission denied for schema v&#xA;LINE 1: SELECT * from v.weather&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;En effet, en complément du droit de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SELECT&lt;/code&gt; sur la table, le&#xA;propriétaire du schéma (ou un &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SUPERUSER&lt;/code&gt;) doit aussi permettre&#xA;l’utilisation de ce dernier. Cette modification se fait de la façon&#xA;suivante :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GRANT USAGE ON SCHEMA v TO daniel,michel&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;GRANT&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Après cette manipulation, l’utilisateur &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;daniel&lt;/code&gt; est maintenant en mesure&#xA;de consulter la table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v.weather&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;daniel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;SELECT &lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; from v.weather&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt; city &#xA;------&#xA;(0 rows)&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Nonobstant, l’ajout (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;INSERT&lt;/code&gt;) reste bien évidement (et heureusement)&#xA;impossible pour ce rôle :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;daniel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;INSERT INTO v.weather VALUES&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;x&#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;ERROR:  permission denied for table weather&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;h3 id=&#34;donner-des-permissions-sur-plusieurs-objets-dans-un-schéma&#34;&gt;Donner des permissions sur plusieurs objets dans un schéma&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Comme nous l’avons vu, la commande &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;GRANT&lt;/code&gt; permet de donner des droits&#xA;sur un ou plusieurs objets précis, en spécifiant le type de droit et le&#xA;schéma contenant lesdits objets.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Dans certains cas, on souhaite donner un ou plusieurs privilèges pour&#xA;l’ensemble des tables d’un schéma. (Par exemple, permettre à un ou&#xA;plusieurs rôles de lire les tables d’une application qui utilise un&#xA;schéma spécifique.) Pour répondre à ce besoin, PostgreSQL propose les&#xA;options du style &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;ALL &amp;lt;OBJECT&amp;gt; IN SCHEMA&lt;/code&gt;, où &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;OBJECT&lt;/code&gt; peut prendre&#xA;différentes valeurs (par exemple &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;TABLES&lt;/code&gt;, &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;FUNCTIONS&lt;/code&gt;, …).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Imaginons que notre DBA &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt; souhaite permettre à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;daniel&lt;/code&gt; de&#xA;consulter toutes les tables du schéma &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v&lt;/code&gt;, il peut donc lancer la&#xA;requête suivante (on ajoute au passage une table pour l’exercice) :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;CREATE TABLE v.country&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;name VARCHAR&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;50&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;CREATE TABLE&#xA;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GRANT SELECT ON ALL TABLES IN SCHEMA v TO daniel&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;GRANT&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;On constate que l’ajout des permissions fonctionne sans surprise :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;daniel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;SELECT &lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; from v.weather&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt; name&#xA;------&#xA;(0 rows)&#xA;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;daniel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;SELECT &lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; from v.country&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt; name&#xA;------&#xA;(0 rows)&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Mais que se passe-t-il lors de l’ajout d’une table dans notre schéma ?&#xA;Le rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;daniel&lt;/code&gt; pourra-t-il consulter une nouvelle table ?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Ajoutons une table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v.province&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;CREATE TABLE v.province&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;name VARCHAR&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;50&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;CREATE TABLE&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Et observons le comportement lors d’une tentative de lecture :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;daniel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;SELECT &lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; FROM v.province&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;ERROR:  permission denied for table province&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Cette erreur semble surprenante et incohérente. Surtout au regard de la&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/current/sql-grant.html&#34;&gt;documentation&lt;/a&gt;&#xA;qui ne semble pas loquace concernant ce fonctionnement déroutant :&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;em&gt;There is also an option to grant privileges on all objects of the&#xA;same type within one or more schemas. This functionality is currently&#xA;supported only for tables, sequences, functions, and procedures. ALL&#xA;TABLES also affects views and foreign tables, just like the&#xA;specific-object GRANT command. ALL FUNCTIONS also affects aggregate&#xA;and window functions, but not procedures, again just like the&#xA;specific-object GRANT command. Use ALL ROUTINES to include&#xA;procedures.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;En réalité, la commande &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;GRANT&lt;/code&gt; s’applique uniquement aux objets déjà en&#xA;place. Pour modifier les permissions des objets à venir, il est&#xA;nécessaire de modifier les privilèges par défaut en utilisant la&#xA;commande &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;ALTER DEFAULT PRIVILEGES&lt;/code&gt;. En s’appuyant uniquement sur la&#xA;commande &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;GRANT&lt;/code&gt;, les permissions devront évoluer à mesure des&#xA;évolutions (de contenu) du schéma.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;donner-des-accès-sur-tous-les-objets-existants-et-à-venir&#34;&gt;Donner des accès sur tous les objets (existants et à venir)&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Vu notre récente expérience avec l’ajout d’une table dans un schéma, et&#xA;la non-accessibilité de cette dernière par un rôle qui, pourtant,&#xA;s’était vu accorder le droit en lecture sur &lt;strong&gt;toutes les tables du&#xA;schéma (avec &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;ALL TABLES IN &amp;lt;mon_schema&amp;gt;&lt;/code&gt;)&lt;/strong&gt;, voyons comment pallier ce&#xA;problème via la commande &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;ALTER DEFAULT PRIVILEGES&lt;/code&gt; et les implications&#xA;possibles lorsque plusieurs rôles ont accès à un schéma.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Imaginons que notre DBA &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt; souhaite donner des accès à une table&#xA;(ou d’autres objets) déjà existante, mais aussi aux tables (objets)&#xA;futures. Pour cela l’utilisateur propriétaire (ou un &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SUPERUSER&lt;/code&gt;) doit&#xA;utiliser une combinaison de commandes &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;GRANT&lt;/code&gt; et&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;ALTER DEFAULT PRIVILEGES&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Par exemple, &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt; peut donner des privilèges (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SELECT&lt;/code&gt; pour les&#xA;tables existantes et à venir dans le schéma &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v&lt;/code&gt;) avec les commandes&#xA;suivantes :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GRANT SELECT ON ALL TABLES IN SCHEMA v TO daniel,michel&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ALTER DEFAULT PRIVILEGES IN SCHEMA v&#xA;&lt;span class=&#34;gp&#34;&gt;    GRANT SELECT ON TABLES TO daniel,michel;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;ALTER DEFAULT PRIVILEGES&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;On constate que les rôles &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;daniel&lt;/code&gt; et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt; peuvent lire le contenu&#xA;de cette table :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;daniel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;SELECT &lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; FROM v.weather&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt; city&#xA;------&#xA;(0 rows)&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;michel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;SELECT &lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; FROM v.weather&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt; city&#xA;------&#xA;(0 rows)&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Mais aussi des nouvelles tables ajoutées par &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;CREATE TABLE v.pays&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;city VARCHAR&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;50&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;CREATE TABLE&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;michel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;SELECT &lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; FROM v.pays&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt; city&#xA;------&#xA;(0 rows)&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Sur la base de ces tests, nous pouvons légitimement nous demander quel va&#xA;être le comportement si notre DBA &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt; donne la possibilité à&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt; d’écrire dans notre schéma &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Pour permettre la création de tables par &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt; dans le schéma &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v&lt;/code&gt;,&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt; doit lancer la commande suivante :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GRANT CREATE ON SCHEMA v TO michel&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;On constate ensuite que &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt; peut (toujours) lire le contenu de la&#xA;table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v.weather&lt;/code&gt;, mais aussi créer une nouvelle table dans le schéma&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;michel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;SELECT &lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; FROM v.weather&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt; city&#xA;------&#xA;(0 rows)&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;michel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;CREATE TABLE v.capital&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;name VARCHAR&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;50&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;CREATE TABLE&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Nous pouvons essayer de lire le contenu de cette nouvelle table avec le&#xA;rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;daniel&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;daniel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;SELECT &lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; FROM v.capital&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;ERROR:  permission denied for table capital&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Et constater de façon déroutante, que notre requête &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SELECT&lt;/code&gt;&#xA;dysfonctionne pour un problème de permission non accordée sur la table.&#xA;Cela peut paraître surprenant étant donné que &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt; a bien modifié les&#xA;privilèges par défaut pour permettre le &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SELECT&lt;/code&gt; sur les tables du&#xA;schéma &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v&lt;/code&gt; à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;daniel&lt;/code&gt; et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;En réalité cet accès n’est pas autorisé et ce pour plusieurs raisons :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;Le rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt; n’est pas propriétaire de la table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v.capital&lt;/code&gt;&#xA;    &lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\d&lt;/span&gt;t v.&lt;span class=&#34;k&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;         List of relations&#xA; Schema |   Name   | Type  | Owner&#xA;--------+----------+-------+--------&#xA; v      | capital  | table | michel&#xA; v      | country  | table | owner&#xA; v      | province | table | owner&#xA; v      | weather  | table | owner&#xA;(4 rows)&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;&#xA;  &lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;ALTER DEFAULT PRIVILEGES&lt;/code&gt; utilise de façon implicite le paramètre&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;FOR ROLE&lt;/code&gt; avec pour valeur (par défaut) le rôle connecté à la base&#xA;(dans notre cas, il s’agissait de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt;). Ce paramètre permet&#xA;d’indiquer qu’on modifie les privilèges par défaut pour les objets&#xA;créés uniquement par ce rôle. Dans notre cas, lors de la&#xA;modification des privilèges par défaut par &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt;, on aurait pu&#xA;expliciter cette valeur comme ceci :&#xA;    &lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ALTER DEFAULT PRIVILEGES FOR ROLE owner IN SCHEMA v&#xA;&lt;span class=&#34;gp&#34;&gt;    GRANT SELECT ON TABLES TO daniel,michel;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;&#xA;  &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Pour permettre à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;daniel&lt;/code&gt; de lire la table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v.capital&lt;/code&gt; ajoutée par&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt;, il existe plusieurs options :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;soit &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt; ou un &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SUPERUSER&lt;/code&gt; change les privilèges sur la table,&#xA;ou l’ensemble des tables du schéma, après création de ladite table&#xA;en utilisant la commande &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;GRANT&lt;/code&gt; ;&lt;/li&gt;&#xA;  &lt;li&gt;soit le rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt; (ou toujours un &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SUPERUSER&lt;/code&gt;) modifie les&#xA;privilèges par défaut &lt;strong&gt;avant&lt;/strong&gt; de créer sa table pour permettre aux&#xA;autres rôles de consulter ses tables en exécutant un&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;ALTER DEFAULT PRIVILEGES&lt;/code&gt; avec ou sans l’option &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;FOR ROLE&lt;/code&gt; en&#xA;fonction de qui est connecté à la base.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;À noter que, même si l’utilisateur &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt; ne peut pas lire la table&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;capital&lt;/code&gt; créée par &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;SELECT &lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; FROM v.capital&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;ERROR:  permission denied for table capital&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;il reste propriétaire du schéma &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v&lt;/code&gt; et peut donc supprimer cette table :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;DROP TABLE v.capital&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;DROP TABLE&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;h3 id=&#34;groupes-de-rôles&#34;&gt;Groupes de rôles&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Une autre solution pour faciliter la gestion des permissions est&#xA;d’utiliser l’appartenance d’un rôle à un autre rôle (équivalent à un ou&#xA;des groupes). Par exemple, on pourrait imaginer un rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;write&lt;/code&gt; avec la&#xA;permission de créer des objets dans le schéma &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v&lt;/code&gt;, et un second rôle&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;read&lt;/code&gt; avec le droit de lecture (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SELECT&lt;/code&gt;) sur les tables.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Sur base de ces rôles, on pourrait donner des permissions à nos DBA&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt; et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;daniel&lt;/code&gt; sans modifier directement leurs permissions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Par exemple pour créer les rôles (groupes) :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;postgres@~=#&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;CREATE ROLE write NOLOGIN&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;gp&#34;&gt;postgres@~=#&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;CREATE ROLE &lt;span class=&#34;nb&#34;&gt;read &lt;/span&gt;NOLOGIN&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GRANT USAGE ON SCHEMA v TO &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;GRANT&#xA;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GRANT CREATE,USAGE ON SCHEMA v TO write&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;GRANT&#xA;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ALTER DEFAULT PRIVILEGES IN SCHEMA v&#xA;&lt;span class=&#34;gp&#34;&gt;    GRANT SELECT ON TABLES TO read;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;On peut maintenant ajouter nos rôles dans les rôles (groupes) &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;read&lt;/code&gt; et&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;write&lt;/code&gt; en fonction de nos besoins :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;postgres@~=#&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;GRANT write TO michel&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;GRANT&#xA;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;postgres@~=#&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;GRANT &lt;span class=&#34;nb&#34;&gt;read &lt;/span&gt;TO daniel&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;GRANT&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Cette solution, qui simplifie la vie des DBA, vient aussi avec certaines&#xA;contraintes. Par exemple, dans certaines situations les utilisateurs&#xA;doivent utiliser la commande &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SET ROLE&lt;/code&gt; pour modifier le rôle connecté,&#xA;afin de profiter des avantages de cette approche.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Par exemple :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;michel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;SET ROLE write&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &#xA;&lt;span class=&#34;gp&#34;&gt;michel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;CREATE TABLE v.state&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;city VARCHAR&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;50&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;gp&#34;&gt;michel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\d&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;         List of relations&#xA; Schema |  Name   | Type  | Owner&#xA;--------+---------+-------+--------&#xA; v      | state   | table | write&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Si &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt; oublie d’utiliser la commande &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SET ROLE&lt;/code&gt; à la création d’un&#xA;objet, il ne sera pas utilisable (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SELECT&lt;/code&gt; dans notre cas) par les&#xA;membres du rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;read&lt;/code&gt;, car la table appartiendra au rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt;, et&#xA;non au rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;write&lt;/code&gt;. Pour changer ce fonctionnement, il est possible&#xA;d’utiliser l’option &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;INHERIT&lt;/code&gt; (ou &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;NOINHERIT&lt;/code&gt;) lors de la création des&#xA;rôles : elle force en quelque sorte l’utilisation de la commande&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SET ROLE&lt;/code&gt; pour créer ou lire des objets (tables) avec le bon rôle.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Il est possible de combiner le paramètre &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;NOINHERIT&lt;/code&gt; avec l’utilisation&#xA;des commandes suivantes afin de forcer le passage par un rôle spécifique&#xA;lors de la connexion à une base :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;postgres@~=#&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ALTER ROLE michel IN DATABASE db2 SET ROLE write&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;ALTER&#xA;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;postgres@~=#&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ALTER ROLE daniel IN DATABASE db2 SET ROLE &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;ALTER&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Ce qui aura pour effet de forcer l’utilisation du rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;write&lt;/code&gt; pour&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt; lors de la connexion à la base, et du rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;read&lt;/code&gt; pour&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;daniel&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Bien que cette solution semble plus élégante que distribuer des&#xA;permissions à un grand nombre de rôles, elle est aussi source de&#xA;quelques contraintes dont il faut tenir compte lors de la conception de&#xA;notre stratégie de définition des permissions :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;il n’est pas possible de prendre en charge des profils différents en&#xA;fonction du schéma, cette option semble uniquement paramétrable au&#xA;niveau de la base ;&lt;/li&gt;&#xA;  &lt;li&gt;la propriété des objets est « masquée » par le ou les rôles de&#xA;rôles. Dans notre exemple, lorsque &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt; crée une table, elle&#xA;sera vue comme appartenant au rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;write&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;La gestion des permissions sous PostgreSQL va se complexifier, au fur et&#xA;à mesure que vos instances prendront une place de plus en plus&#xA;importante au sein de votre système d’information. Notre SGBD favori&#xA;offre un large éventail d’options pour paramétrer et définir les accès&#xA;et permissions. De par la complexité inhérente à toutes ces&#xA;possibilités, ne pas tomber dans un piège ou sur une configuration&#xA;inadaptée demande rigueur et maitrise de tous ces concepts.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Nous vous proposerons bientôt un second article pour présenter quelques&#xA;solutions afin de simplifier l’automatisation de l’attribution des&#xA;permissions. Nous y évoquerons entre autre les rôles prédéfinis&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_read_all_data&lt;/code&gt; et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_write_all_data&lt;/code&gt; disponibles depuis la version&#xA;14 de PostgreSQL.&lt;/p&gt;</summary>
    <author>
      <name>blog.dalibo.com</name>
    </author>
  </entry>
  <entry>
    <title>Les mains dans le cambouis #4 - Journaux de transactions</title>
    <updated>2024-06-14T05:00:00Z</updated>
    <id>tag:blog.dalibo.com,2024-06-14://2024/06/14/wal.html</id>
    <link href="https://blog.dalibo.com//2024/06/14/wal.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;em&gt;Lyon, le 14 juin 2024&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Notre série d’articles concernant le moteur PostgreSQL continue. Au programme&#xA;aujourd’hui : les journaux de transactions. Éléments incontournables de PostgreSQL,&#xA;les journaux de transactions (ou fichiers &lt;em&gt;WAL&lt;/em&gt;) sont essentiels au bon&#xA;fonctionnement d’une instance mais sont également au cœur du mécanisme de &#xA;sauvegarde PITR (Point In Time Recovery) et de réplication. Mais que contiennent-ils&#xA;exactement ?&lt;/p&gt;&#xA;&#xA;&lt;!--MORE--&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/img/2024-cambouis.jpg&#34; alt=&#34;moteur&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Plongeons dans les entrailles des journaux de transactions avec &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_waldump&lt;/code&gt; !&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;quésaco-&#34;&gt;Quésaco ?&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Le mécanisme de &lt;em&gt;Write-Ahead Logging&lt;/em&gt; (ou &lt;em&gt;WAL&lt;/em&gt;) est implémenté dans le moteur de&#xA;PostgreSQL. Le principe est assez simple : il s’agit de consigner l’ensemble &#xA;des modifications effectuées sur les données dans une série de journaux de&#xA;transactions, les &lt;em&gt;WAL&lt;/em&gt;. Chaque écriture est donc réalisée en mémoire, puis&#xA;consignée dans ces journaux. PostgreSQL les applique dans les fichiers de données&#xA;en tâche de fond, en lot et de manière régulière. Aussi, dans l’éventualité d’un &#xA;&lt;em&gt;crash&lt;/em&gt; où le contenu de la mémoire est alors perdu, il est possible de lire ces&#xA;journaux pour rejouer les opérations et revenir à un état cohérent de l’instance.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Belle présentation, n’est-ce pas ? Mais concrètement, qu’est-ce que c’est qu’un&#xA;&lt;em&gt;WAL&lt;/em&gt; ?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Commençons par ce qui est le plus simple. Un fichier WAL est un segment de 16 Mo&#xA;et se trouve par défaut dans le dossier &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_wal&lt;/code&gt; du &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;$PGDATA&lt;/code&gt;. Il est composé de&#xA;24 caractères.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-plaintext highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;ls -lh /var/lib/pgsql/16/data/pg_wal/&#xA;total 17M&#xA;-rw------- 1 postgres postgres  16M May 17 07:40 000000010000000000000001&#xA;drwx------ 2 postgres postgres 4.0K May 17 07:36 archive_status&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Le nom d’un segment comporte son numéro de &lt;em&gt;timeline&lt;/em&gt;, le numéro du WAL de 4&#xA;Go dont il fait partie et son numéro propre, le tout en hexadécimal. Si&#xA;nous prenons par exemple le premier fichier ci-dessus, nous trouvons :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;00000001&lt;/code&gt; : qui correspond à la &lt;em&gt;timeline&lt;/em&gt; &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;1&lt;/code&gt; ;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;00000000&lt;/code&gt; : qui correspond au journal &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;0&lt;/code&gt; de 4 Go ;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;00000001&lt;/code&gt; : qui correspond au segment &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;1&lt;/code&gt; du journal &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;0&lt;/code&gt;, de 16 Mo.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Il est possible de retrouver les informations du fichier WAL en cours&#xA;d’utilisation grâce aux fonctions &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_current_wal_lsn()&lt;/code&gt; et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_walfile_name()&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;postgres&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_current_wal_lsn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;pg_current_wal_lsn&lt;/span&gt; &#xA;&lt;span class=&#34;c1&#34;&gt;--------------------&lt;/span&gt;&#xA; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;D6FD8&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&#xA;&lt;span class=&#34;n&#34;&gt;postgres&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_walfile_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;0/19D6FD8&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;     &lt;span class=&#34;n&#34;&gt;pg_walfile_name&lt;/span&gt;      &#xA;&lt;span class=&#34;c1&#34;&gt;--------------------------&lt;/span&gt;&#xA; &lt;span class=&#34;mi&#34;&gt;000000010000000000000001&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Le résultat de la première fonction peut se lire de la manière suivante :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;0&lt;/code&gt; : est le numéro du WAL de 4 Go ;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;/1&lt;/code&gt; : est le numéro de segment (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;0x19D6FD8 / 0x1000000&lt;/code&gt;) ;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;9D6FD8&lt;/code&gt; : est l’emplacement de la prochaine écriture dans le segment (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;0x19D6FD8 % 0x1000000&lt;/code&gt;).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Comme expliqué un peu plus haut, les écritures sont faites de manière&#xA;séquentielle dans les fichiers WAL. Il est donc nécessaire de connaître&#xA;l’emplacement de la prochaine insertion dans le fichier WAL.&lt;/p&gt;&#xA;&#xA;&lt;!-- ![Cache PostgreSQL de 128 ko](/img/cambouis/strategie-acces-1.png) --&gt;&#xA;&#xA;&lt;h3 id=&#34;analyse-avec-loutil-pg_waldump&#34;&gt;Analyse avec l’outil &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_waldump&lt;/code&gt;&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Insérons une nouvelle ligne dans une table déjà existante et ne contenant &#xA;qu’une colonne de type entier : &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;insert into t1 values (1)&lt;/code&gt;. L’outil &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_waldump&lt;/code&gt;&#xA;va nous permettre de comprendre un peu plus ce qu’il se passe avec les WALs. Il&#xA;s’utilise de la manière suivante, où &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;000000010000000000000001&lt;/code&gt; est le nom du&#xA;fichier WAL courant et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;-f&lt;/code&gt; l’option qui permet de suivre en temps réel les&#xA;modifications.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-bash highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;/usr/pgsql-16/bin/pg_waldump &lt;span class=&#34;nt&#34;&gt;-f&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$PGDATA&lt;/span&gt;/pg_wal/000000010000000000000001&#xA;&#xA;&lt;span class=&#34;c&#34;&gt;# insert into t1 values (1);&lt;/span&gt;&#xA;rmgr: Heap        len &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;rec/tot&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;:     54/   186, tx:        745, lsn: 0/019D7010, prev 0/019D6FD8, desc: INSERT off: 3, flags: 0x00, blkref &lt;span class=&#34;c&#34;&gt;#0: rel 1663/16384/16385 blk 0 FPW&lt;/span&gt;&#xA;rmgr: Transaction len &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;rec/tot&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;:     34/    34, tx:        745, lsn: 0/019D70D0, prev 0/019D7010, desc: COMMIT 2024-05-17 07:44:16.298141 UTC&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Regardons la première ligne du &lt;em&gt;WAL&lt;/em&gt; après l’insertion. Plusieurs éléments sont&#xA;intéressants :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;745&lt;/code&gt; est l’identifiant de la transaction qui a effectué l’&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;INSERT&lt;/code&gt; ;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;lsn&lt;/code&gt; signifie &lt;em&gt;Log Segment Number&lt;/em&gt;. La valeur correspond bien à ce qui avait&#xA;été donné par &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_current_wal_lsn()&lt;/code&gt;. Il est suivi par le précédant &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;lsn&lt;/code&gt; &#xA;(&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;prev&lt;/code&gt;) ;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;desc&lt;/code&gt; indique l’opération exécutée ;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;off&lt;/code&gt; (pour &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;offset&lt;/code&gt;) détermine l’emplacement de l’écriture dans le bloc de&#xA;donnée ;&lt;/li&gt;&#xA;  &lt;li&gt;enfin, le champ &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;rel 1663/16384/16385&lt;/code&gt; est très intéressant car il indique&#xA;concrètement quel fichier est concerné par cette modification.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Sur les autres lignes d’autres éléments peuvent être notés, comme par exemple&#xA;l’horodatage du &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;COMMIT&lt;/code&gt; : &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;COMMIT 2024-05-17 07:44:16.298141 UTC&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Nous avons retrouvé l’identifiant de transaction grâce à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_waldump&lt;/code&gt;. Cette&#xA;valeur se retrouve également dans la colonne &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;xmin&lt;/code&gt; de la table en question. La&#xA;colonne &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;xmin&lt;/code&gt;, comme &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;xmax&lt;/code&gt;, est cachée par défaut, mais vous pouvez les&#xA;retrouver en les mentionnant explicitement.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;d1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;xmin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;xmax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;xmin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;xmax&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &#xA;&lt;span class=&#34;c1&#34;&gt;------+------+---&lt;/span&gt;&#xA;  &lt;span class=&#34;mi&#34;&gt;745&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;    &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Elle correspond à l’identifiant de la transaction qui a créé cette version de&#xA;la ligne. Si vous souhaitez en savoir plus sur cette mécanique de version de&#xA;ligne et de snapshot, allez jeter un œil sur notre module de formation&#xA;&lt;a href=&#34;https://public.dalibo.com/exports/formation/manuels/formations/dba2/dba2.handout.html#pr%C3%A9sentation-de-mvcc&#34;&gt;juste ici&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Ces journaux contiennent donc toutes les modifications, survenant dans&#xA;tous les fichiers de données et à quels emplacements. Pour reconstruire&#xA;une instance, il suffit de demander à PostgreSQL d’appliquer les &#xA;enregistrements contenus dans les journaux.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;influence-du-paramètre-wal_level&#34;&gt;Influence du paramètre wal_level&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Selon les besoins (réplication logique, sauvegarde &lt;em&gt;PITR&lt;/em&gt;), il est nécessaire de&#xA;modifier la quantité d’informations présentes dans ces fichiers WAL. Cette&#xA;configuration se fait grâce au paramètre &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;wal_level&lt;/code&gt;. Il peut prendre trois&#xA;valeurs : &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;minimal&lt;/code&gt;, &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;replica&lt;/code&gt; ou &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;logical&lt;/code&gt;. Par défaut, ce paramètre est&#xA;configuré à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;replica&lt;/code&gt;, ce qui est adapté pour la mise en place d’une réplication&#xA;physique, ou d’une sauvegarde &lt;em&gt;PITR&lt;/em&gt;.&#xA;Lorsque ce paramètre est positionné à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;logical&lt;/code&gt;, la quantité de données écrites dans&#xA;les &lt;em&gt;WAL&lt;/em&gt; est nettement supérieure. C’est l’objet de notre test de benchmark.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;benchmark&#34;&gt;Benchmark&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Encore une fois, l’outil &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pgbench&lt;/code&gt; est utilisé pour effectuer ce test.&#xA;L’idée est d’effectuer le même test de charge une première fois avec le&#xA;paramètre &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;wal_level&lt;/code&gt; positionné à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;minimal&lt;/code&gt;, puis à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;replica&lt;/code&gt; et enfin à&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;logical&lt;/code&gt;, puis de comparer la volumétrie de &lt;em&gt;WAL&lt;/em&gt; générée dans chacun des cas.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La base de données utilisée fait environ 50 Go et a été initialisée grâce à la&#xA;commande &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pgbench&lt;/code&gt; suivante :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-bash highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;pgbench &lt;span class=&#34;nt&#34;&gt;-i&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;-s&lt;/span&gt; 3400&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Le test s’est déroulé sur des périodes de 5 minutes (option &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;--time&lt;/code&gt; de la&#xA;commande) et avec la simulation de 10 clients (option &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;--client&lt;/code&gt;).&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-bash highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;pgbench &lt;span class=&#34;nt&#34;&gt;--time&lt;/span&gt; 300 &lt;span class=&#34;nt&#34;&gt;--client&lt;/span&gt; 10&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Les résultats de nos tests sont les suivants. Une augmentation de 4.5% d’espace&#xA;disque est à noter entre la configuration &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;minimal&lt;/code&gt; et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;replica&lt;/code&gt;. Une&#xA;augmentation d’environ 7.5% est à relever entre le mode &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;replica&lt;/code&gt; et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;logical&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/img/cambouis/wal-1.png&#34; alt=&#34;resultats&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;La configuration du paramètre &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;wal_level&lt;/code&gt; est incontournable lors de&#xA;l’installation de votre instance. Choisissez le paramètre qui vous convient selon&#xA;vos besoins. Ne le positionnez pas à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;logical&lt;/code&gt; si votre seul besoin est de&#xA;pouvoir retrouver votre instance après un crash (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;recovery&lt;/code&gt;), &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;minimal&lt;/code&gt; suffira&#xA;dans ce cas là.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Un certain adage dit que “Qui peut le plus, peut le moins !” … certes,&#xA;mais à quel prix ? Des écarts importants existent entre la volumétrie de WAL&#xA;générée selon le paramétrage de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;wal_level&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Cet article, un peu moins technique que les précédents, fait office d’une belle&#xA;piqûre de rappel sur ce qu’est un journal de transactions et de son utilité.&#xA;Savez-vous que les journaux de transactions sont intimement liés aux&#xA;&lt;em&gt;checkpoints&lt;/em&gt; ? Notre &lt;a href=&#34;https://dali.bo/202401_cambouis&#34;&gt;premier article&lt;/a&gt; donne quelques&#xA;détails là dessus. N’hésitez à aller le (re)lire.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Des questions, des commentaires ? &lt;a href=&#34;mailto:guillaume.lelarge@dalibo.com,pierrick.chovelon@dalibo.com?subject=[BLOG - commentaire] les mains dans le cambouis - wal&#34;&gt;Écrivez-nous !&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</summary>
    <author>
      <name>blog.dalibo.com</name>
    </author>
  </entry>
  <entry>
    <title>Sortie de PostgreSQL 17 bêta 1</title>
    <updated>2024-05-28T05:00:00Z</updated>
    <id>tag:blog.dalibo.com,2024-05-28://2024/05/28/pg17beta1.html</id>
    <link href="https://blog.dalibo.com//2024/05/28/pg17beta1.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;em&gt;Pont-à-Mousson, le 28 mai 2024&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La semaine dernière, le PostgreSQL Global Development Group a annoncé la sortie de la &lt;strong&gt;première version bêta de la version majeure 17&lt;/strong&gt;. Jetons un œil sur ce que contient cette nouvelle version.&lt;/p&gt;&#xA;&#xA;&lt;!--MORE--&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/img/portrait_guillaume.jpg&#34; alt=&#34;portrait de Guillaume&#34; style=&#34;float: right; padding:10px;&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;les-nouveautés&#34;&gt;Les nouveautés&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Parmi les nouveautés attendues sur les performances, notons des améliorations sur les opérations de maintenance (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;VACUUM&lt;/code&gt; et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;ANALYZE&lt;/code&gt;). Les requêtes utilisant des CTE sont optimisées. Les index B-Tree et BRIN profitent aussi de belles améliorations, les premiers lorsqu’ils sont utilisés pour des clauses &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;IN&lt;/code&gt;, les seconds pour des constructions parallélisées. Les contraintes &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;NOT NULL&lt;/code&gt; sont mieux prises en compte pour optimiser l’exécution des requêtes.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Le standard SQL/JSON a évolué avec l’ajout des fonctionnalités de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SQL_TABLE&lt;/code&gt; et l’ajout du constructeur SQL/JSON. Ces fonctionnalités étaient prévues pour la version 15 mais ont dû attendre suite à des soucis sur leur design à l’époque. La commande &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;MERGE&lt;/code&gt; permet enfin d’utiliser la clause &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;RETURNING&lt;/code&gt; et gère en plus les vues.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Au niveau de la sécurité, le rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_maintain&lt;/code&gt;, qui a été recalé de la version 16, apparaît enfin pour donner à des utilisateurs simples le droit d’exécuter des opérations de maintenance comme &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;VACUUM&lt;/code&gt;, &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;ANALYZE&lt;/code&gt;, &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;REINDEX&lt;/code&gt;, etc.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La supervision n’est pas en reste avec une nouvelle vue, appelée &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_stat_checkpointer&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Dans les fonctionnalités qui m’intéressent le plus, je note :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;la nouvelle option &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;ON_ERROR&lt;/code&gt; de la commande &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;COPY&lt;/code&gt; qui permet de continuer un batch d’insertion, y compris en cas d’erreur sur quelques lignes ;&lt;/li&gt;&#xA;  &lt;li&gt;les sauvegardes incrémentales avec l’outil &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_basebackup&lt;/code&gt; ;&lt;/li&gt;&#xA;  &lt;li&gt;le fournisseur de collation interne (sémantique identique à la collation &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;C&lt;/code&gt; mais sur un encodage &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;UTF-8&lt;/code&gt; ;&lt;/li&gt;&#xA;  &lt;li&gt;la vue &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_stat_progress_vacuum&lt;/code&gt; indique enfin la progression dans le traitement des index.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Évidemment, ce ne sont que quelques nouveautés (certes, les plus importantes). L’&lt;a href=&#34;https://www.postgresql.org/about/news/postgresql-17-beta-1-released-2865/&#34;&gt;annonce officielle&lt;/a&gt; donne plus de détails. Et pour les curieux, les &lt;a href=&#34;https://www.postgresql.org/docs/17/release-17.html&#34;&gt;Release Notes de la version 17&lt;/a&gt; sont évidemment la source la plus complète.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;dalibo-et-la-version-17&#34;&gt;Dalibo et la version 17&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;En ce qui concerne Dalibo, nous allons entamer cet été un effort pour nous mettre à jour sur cette version. Comme chaque année, cela se passe en deux étapes :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;la création d’un workshop sur les nouveautés de la version 17,&lt;/li&gt;&#xA;  &lt;li&gt;et la mise à jour de nos modules de formation.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;La version 17 finale devrait être disponible en septembre ou octobre 2024.&lt;/p&gt;</summary>
    <author>
      <name>blog.dalibo.com</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL 17</title>
    <updated>2024-09-27T08:00:00Z</updated>
    <id>tag:www.loxodata.com,2024-09-27:/post/postgresql-17/</id>
    <link href="http://www.loxodata.com/post/postgresql-17/" rel="alternate"></link>
    <summary type="html">&lt;h1 id=&#34;sortie-de-postgresql-17&#34;&gt;Sortie de PostgreSQL 17&lt;/h1&gt;&#xA;&lt;p&gt;26 septembre 2024 - Le &lt;a href=&#34;https://www.postgresql.org&#34;&gt;PostgreSQL Global Development&#xA;Group&lt;/a&gt; annonce aujourd&amp;rsquo;hui la publication de&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/17/release-17.html&#34;&gt;PostgreSQL 17&lt;/a&gt;, dernière&#xA;version de la base de données open source de référence.&lt;/p&gt;&#xA;&lt;p&gt;PostgreSQL 17 repose sur plusieurs décennies de développement, améliorant ses&#xA;performances et sa mise à l&#39;échelle tout en s&amp;rsquo;adaptant aux modèles émergents&#xA;d&amp;rsquo;accès aux données et à leur stockage. Cette version de&#xA;&lt;a href=&#34;https://www.postgresql.org&#34;&gt;PostgreSQL&lt;/a&gt; amène des gains de performance&#xA;généralisés, dont une révision complète de l&amp;rsquo;implantation de la gestion de la&#xA;mémoire des opérations de vacuum, des optimisations de l&amp;rsquo;accès au stockage, des&#xA;améliorations pour les charges de travail fortement concurrentielles,&#xA;l&amp;rsquo;accélération des chargements et exports en masse et des améliorations de&#xA;l&amp;rsquo;exécution des requêtes utilisant les index. PostgreSQL 17 possède&#xA;des fonctionnalités qui profitent aussi bien aux nouvelles charges de travail&#xA;qu&amp;rsquo;aux systèmes critiques. On peut citer les ajouts à l&amp;rsquo;expérience développeur&#xA;avec la commande SQL/JSON &lt;code&gt;JSON_TABLE&lt;/code&gt; et les améliorations de réplication&#xA;logique qui simplifient la gestion de la haute disponibilité et des mises à jour&#xA;de version majeures.&lt;/p&gt;&#xA;&lt;p&gt;« PostgreSQL 17 souligne la manière dont la communauté open source&#xA;mondiale, qui pilote le développement de PostgreSQL, construit les améliorations&#xA;qui aident les utilisateurs à tous les niveaux de leur expérience avec la base&#xA;de données » dit Jonathan Katz, un membre de la « core team » de&#xA;PostgreSQL. « Qu&amp;rsquo;il s&amp;rsquo;agisse d&amp;rsquo;améliorations pour opérer les bases de&#xA;données à l&#39;échelle ou de nouvelles fonctionnalités qui contribuent à une&#xA;expérience développeur agréable, PostgreSQL va parfaire votre expérience de la&#xA;gestion de données. »&lt;/p&gt;&#xA;&lt;p&gt;PostgreSQL, système innovant de gestion des données, reconnu pour sa fiabilité&#xA;et sa robustesse, bénéficie depuis plus de 25 ans d&amp;rsquo;un développement open source&#xA;par une communauté mondiale de développeurs et développeuses. Il est devenu le&#xA;système de gestion de bases de données relationnelles de référence pour les&#xA;organisations de toute taille.&lt;/p&gt;&#xA;&lt;h3 id=&#34;des-gains-de-performance-sur-lensemble-du-moteur&#34;&gt;Des gains de performance sur l&amp;rsquo;ensemble du moteur&lt;/h3&gt;&#xA;&lt;p&gt;Le processus de&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/17/routine-vacuuming.html&#34;&gt;vacuum&lt;/a&gt; de&#xA;PostgreSQL, critique pour le bon déroulement des opérations, nécessite des&#xA;ressources du serveur de l&amp;rsquo;instance pour s&amp;rsquo;exécuter. PostgreSQL 17 introduit une&#xA;nouvelle structure interne de la mémoire pour vacuum qui divise par 20&#xA;l&amp;rsquo;utilisation mémoire. PostgreSQL améliore ainsi la vitesse des opérations de&#xA;vacuum tout en réduisant l&amp;rsquo;usage des ressources partagées, les rendant&#xA;disponibles à votre charge de travail.&lt;/p&gt;&#xA;&lt;p&gt;PostgreSQL 17 poursuit l&amp;rsquo;amélioration des performances de sa couche&#xA;d&amp;rsquo;entrées/sorties. Les charges de travail hautement concurrentes pourront voir&#xA;leurs performances en écriture doubler grâce à une amélioration sur le&#xA;traitement du &lt;a href=&#34;https://www.postgresql.org/docs/17/wal-intro.html&#34;&gt;write-ahead&#xA;log&lt;/a&gt;&#xA;(&lt;a href=&#34;https://www.postgresql.org/docs/17/wal-intro.html&#34;&gt;WAL&lt;/a&gt;). De plus, la nouvelle&#xA;interface d&amp;rsquo;entrées/sorties par flux accélère les lectures séquentielles&#xA;(lecture de toutes les données d&amp;rsquo;une table). Cette même fonctionnalité bénéficie&#xA;aussi à &lt;a href=&#34;https://www.postgresql.org/docs/17/sql-analyze.html&#34;&gt;&lt;code&gt;ANALYZE&lt;/code&gt;&lt;/a&gt; qui&#xA;peut ainsi mettre à jour les statistiques du planificateur de requêtes bien plus&#xA;rapidement.&lt;/p&gt;&#xA;&lt;p&gt;PostgreSQL 17 étend ses gains de performance à l&amp;rsquo;exécution de requêtes. Il&#xA;améliore la performance des requêtes avec des clauses &lt;code&gt;IN&lt;/code&gt; utilisant des index&#xA;de type&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/17/indexes-types.html#INDEXES-TYPES-BTREE&#34;&gt;B-tree&lt;/a&gt;,&#xA;la méthode d&amp;rsquo;indexation par défaut de PostgreSQL. De plus, il est maintenant&#xA;possible de paralléliser la construction des index&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/17/brin.html&#34;&gt;BRIN&lt;/a&gt;. PostgreSQL 17 comporte&#xA;plusieurs améliorations dans la planification des requêtes, dont des&#xA;optimisations sur les contraintes &lt;code&gt;NOT NULL&lt;/code&gt; et des améliorations dans le&#xA;traitement des &lt;a href=&#34;https://www.postgresql.org/docs/17/queries-with.html&#34;&gt;common table&#xA;expressions&lt;/a&gt; (&lt;a href=&#34;https://www.postgresql.org/docs/17/queries-with.html&#34;&gt;les&#xA;requêtes&lt;code&gt;WITH&lt;/code&gt;&lt;/a&gt;). Cette&#xA;version prend en charge plus d&amp;rsquo;instructions SIMD (Single Instruction/Multiple&#xA;Data) pour accélérer les calculs, incluant l&amp;rsquo;usage d&amp;rsquo;AVX-512 pour la fonction&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/17/functions-bitstring.html&#34;&gt;&lt;code&gt;bit_count&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;amélioration-pour-les-développeurs&#34;&gt;Amélioration pour les développeurs&lt;/h3&gt;&#xA;&lt;p&gt;PostgreSQL a été la &lt;a href=&#34;https://www.postgresql.org/about/news/postgresql-92-released-1415/&#34;&gt;première base de données relationnelle à ajouter le support&#xA;de JSON&#xA;(2012)&lt;/a&gt;, et&#xA;PostgreSQL 17 complète son implantation du standard SQL/JSON.&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/17/functions-json.html#FUNCTIONS-SQLJSON-TABLE&#34;&gt;&lt;code&gt;JSON_TABLE&lt;/code&gt;&lt;/a&gt;&#xA;est maintenant disponible dans PostgreSQL 17, permettant aux développeurs de&#xA;convertir des données JSON dans une table standard PostgreSQL. PostgreSQL 17&#xA;supporte maintenant les &lt;a href=&#34;https://www.postgresql.org/docs/17/functions-json.html#FUNCTIONS-JSON-CREATION-TABLE&#34;&gt;constructeurs&#xA;SQL/JSON&lt;/a&gt;&#xA;(&lt;code&gt;JSON&lt;/code&gt;, &lt;code&gt;JSON_SCALAR&lt;/code&gt;, &lt;code&gt;JSON_SERIALIZE&lt;/code&gt;) et &lt;a href=&#34;https://www.postgresql.org/docs/17/functions-json.html#SQLJSON-QUERY-FUNCTIONS&#34;&gt;les fonctions de&#xA;requêtage&lt;/a&gt;&#xA;(&lt;code&gt;JSON_EXISTS&lt;/code&gt;, &lt;code&gt;JSON_QUERY&lt;/code&gt;, &lt;code&gt;JSON_VALUE&lt;/code&gt;), offrant de nouvelles possibilités&#xA;aux développeurs d&amp;rsquo;interagir avec leurs données JSON. Cette version ajoute plus&#xA;d&amp;rsquo;&lt;a href=&#34;https://www.postgresql.org/docs/17/functions-json.html#FUNCTIONS-SQLJSON-PATH-OPERATORS&#34;&gt;expressions&#xA;&lt;code&gt;jsonpath&lt;/code&gt;&lt;/a&gt;,&#xA;avec un accent sur la conversion de données JSON vers des types de données&#xA;natifs de PostgreSQL comme les types numériques, booléens, chaînes de caractères&#xA;et date/heure.&lt;/p&gt;&#xA;&lt;p&gt;PostgreSQL 17 rajoute des fonctionnalités à la commande&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/17/sql-merge.html&#34;&gt;&lt;code&gt;MERGE&lt;/code&gt;&lt;/a&gt;, utilisée pour les&#xA;mises à jour conditionnelles, en incluant une clause &lt;code&gt;RETURNING&lt;/code&gt; et la capacité&#xA;de mettre à jour les&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/17/sql-createview.html&#34;&gt;vues&lt;/a&gt;. En prime,&#xA;PostgreSQL 17 dispose de nouvelles capacités de chargement et d&amp;rsquo;export de&#xA;données en masse pouvant aller jusqu&#39;à doubler la performance lors de l&amp;rsquo;export&#xA;de grandes lignes en utilisant la commande&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/17/sql-copy.html&#34;&gt;&lt;code&gt;COPY&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;COPY&lt;/code&gt; bénéficie&#xA;d&amp;rsquo;améliorations de performance, lorsque les encodages de la source et de la&#xA;destination correspondent et inclut une nouvelle option, &lt;code&gt;ON_ERROR&lt;/code&gt;, qui permet&#xA;la poursuite d&amp;rsquo;un import même en cas d&amp;rsquo;erreur d&amp;rsquo;insertion.&lt;/p&gt;&#xA;&lt;p&gt;Cette version étend les fonctionnalités de gestion des données à la fois dans&#xA;les partitions et dans les données distribuées sur des instances PostgreSQL&#xA;distantes. PostgreSQL 17 supporte l&amp;rsquo;utilisation de colonnes identité et des&#xA;contraintes d&amp;rsquo;exclusions sur des &lt;a href=&#34;https://www.postgresql.org/docs/17/ddl-partitioning.html&#34;&gt;tables&#xA;partitionnées&lt;/a&gt;. Les&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/17/postgres-fdw.html&#34;&gt;foreign data wrapper&#xA;PostgreSQL&lt;/a&gt;&#xA;(&lt;a href=&#34;https://www.postgresql.org/docs/17/postgres-fdw.html&#34;&gt;&lt;code&gt;postgres_fdw&lt;/code&gt;&lt;/a&gt;), qui&#xA;sont utilisés pour exécuter des requêtes sur des instances PostgreSQL distantes,&#xA;peuvent maintenant transmettre les sous-requêtes &lt;code&gt;EXISTS&lt;/code&gt; et &lt;code&gt;IN&lt;/code&gt; vers un&#xA;serveur distant pour un traitement plus efficace.&lt;/p&gt;&#xA;&lt;p&gt;PostgreSQL 17 inclut un fournisseur de collation interne, indépendant de la&#xA;plateforme et immutable permettant de garantir l&amp;rsquo;immutabilité des résultats et&#xA;fournit une sémantique de tri similaire à la collation &lt;code&gt;C&lt;/code&gt;  mais avec l&amp;rsquo;encodage&#xA;&lt;code&gt;UTF-8&lt;/code&gt; au lieu de &lt;code&gt;SQL_ASCII&lt;/code&gt;. L&amp;rsquo;utilisation de ce nouveau fournisseur de&#xA;collation garantit que les résultats triés des requêtes basées sur du texte&#xA;seront identiques, indépendamment de l&amp;rsquo;environnement.&lt;/p&gt;&#xA;&lt;h3 id=&#34;améliorations-de-la-réplication-logique-pour-la-haute-disponibilité-et-les-mises-à-jour-majeures&#34;&gt;Améliorations de la réplication logique pour la haute disponibilité et les mises à jour majeures&lt;/h3&gt;&#xA;&lt;p&gt;La &lt;a href=&#34;https://www.postgresql.org/docs/17/logical-replication.html&#34;&gt;réplication&#xA;logique&lt;/a&gt; est&#xA;utilisée pour transmettre des données en temps réel dans de nombreux cas&#xA;d&amp;rsquo;usage. Toutefois, avant cette version, une mise à jour majeure nécessitait de&#xA;supprimer les &lt;a href=&#34;https://www.postgresql.org/docs/17/logical-replication-subscription.html#LOGICAL-REPLICATION-SUBSCRIPTION-SLOT&#34;&gt;slots de réplication&#xA;logique&lt;/a&gt;,&#xA;ce qui obligeait à resynchroniser les données vers les souscripteurs après la&#xA;mise à jour. À partir de PostgreSQL 17, les mises à jour utilisant la&#xA;réplication logique seront simplifiées : elles ne nécessiteront plus de supprimer&#xA;les slots de réplication logique.&lt;/p&gt;&#xA;&lt;p&gt;PostgreSQL 17 inclut désormais un contrôle des bascules sur incident pour la&#xA;réplication logique, ce qui la rend plus résiliente dans les environnements&#xA;hautement disponibles.&lt;/p&gt;&#xA;&lt;p&gt;Enfin, PostgreSQL 17 introduit l&amp;rsquo;outil en ligne de commande&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/17/app-pgcreatesubscriber.html&#34;&gt;&lt;code&gt;pg_createsubscriber&lt;/code&gt;&lt;/a&gt;&#xA;pour convertir un réplica physique en réplica logique.&lt;/p&gt;&#xA;&lt;h3 id=&#34;autres-options-de-gestion-de-la-sécurité-et-des-opérations-de-maintenance&#34;&gt;Autres options de gestion de la sécurité et des opérations de maintenance&lt;/h3&gt;&#xA;&lt;p&gt;PostgreSQL 17 étend les possibilités de gestion du cycle de vie des systèmes de&#xA;bases de données. Une nouvelle option TLS, &lt;code&gt;sslnegotiation&lt;/code&gt;, est ajoutée, qui&#xA;permet aux utilisateurs d&amp;rsquo;effectuer une négociation TLS&#xA;directe lors de l&amp;rsquo;utilisation&#xA;d&amp;rsquo;&lt;a href=&#34;https://en.wikipedia.org/wiki/Application-Layer_Protocol_Negotiation&#34;&gt;ALPN&lt;/a&gt;&#xA;(enregistrée comme &lt;code&gt;postgresql&lt;/code&gt; dans le répertoire ALPN). PostgreSQL 17 ajoute&#xA;le &lt;a href=&#34;https://www.postgresql.org/docs/17/predefined-roles.html&#34;&gt;rôle prédéfini&lt;/a&gt;&#xA;&lt;code&gt;pg_maintain&lt;/code&gt;, qui donne les privilèges d&amp;rsquo;effectuer des opérations de&#xA;maintenance aux utilisateurs.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/docs/17/app-pgbasebackup.html&#34;&gt;&lt;code&gt;pg_basebackup&lt;/code&gt;&lt;/a&gt;,&#xA;l&amp;rsquo;utilitaire de sauvegarde intégré à PostgreSQL, supporte désormais les&#xA;sauvegardes incrémentales et ajoute l&amp;rsquo;utilitaire&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/17/app-pgcombinebackup.html&#34;&gt;&lt;code&gt;pg_combinebackup&lt;/code&gt;&lt;/a&gt;&#xA;pour reconstruire une sauvegarde complète.&#xA;En complément, &lt;a href=&#34;https://www.postgresql.org/docs/17/app-pgdump.html&#34;&gt;&lt;code&gt;pg_dump&lt;/code&gt;&lt;/a&gt;&#xA;intègre une nouvelle option, appelée &lt;code&gt;--filter&lt;/code&gt;, qui permet de préciser un&#xA;fichier contenant la liste des objets à intégrer lors de la génération d&amp;rsquo;un&#xA;export.&lt;/p&gt;&#xA;&lt;p&gt;PostgreSQL 17 ajoute des améliorations aux fonctionnalités de supervision et&#xA;d&amp;rsquo;analyse.&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/17/sql-explain.html&#34;&gt;&lt;code&gt;EXPLAIN&lt;/code&gt;&lt;/a&gt; présente&#xA;maintenant le temps passé sur les lectures et écritures de blocs et intègre deux&#xA;nouvelles options : &lt;code&gt;SERIALIZE&lt;/code&gt; et &lt;code&gt;MEMORY&lt;/code&gt;, utiles pour voir le temps passé&#xA;dans la conversion de données lors des transmissions réseau, et la quantité de&#xA;mémoire utilisée.&#xA;PostgreSQL 17 indique désormais la &lt;a href=&#34;https://www.postgresql.org/docs/17/progress-reporting.html#VACUUM-PROGRESS-REPORTING&#34;&gt;progression du vacuum des&#xA;index&lt;/a&gt;.&#xA;Cette version ajoute la vue système&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/17/view-pg-wait-events.html&#34;&gt;&lt;code&gt;pg_wait_events&lt;/code&gt;&lt;/a&gt;,&#xA;qui combinée avec&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/17/monitoring-stats.html#MONITORING-PG-STAT-ACTIVITY-VIEW&#34;&gt;&lt;code&gt;pg_stat_activity&lt;/code&gt;&lt;/a&gt;,&#xA;donne plus d&amp;rsquo;informations sur les raisons pour lesquelles une session active est&#xA;en attente.&lt;/p&gt;&#xA;&lt;h3 id=&#34;fonctionnalités-additionnelles&#34;&gt;Fonctionnalités additionnelles&lt;/h3&gt;&#xA;&lt;p&gt;De nombreuses autres fonctionnalités ont été ajoutées à PostgreSQL 17. Elles&#xA;peuvent aussi être utiles dans vos cas d&amp;rsquo;usage. Vous pouvez vous référer aux&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/17/release-17.html&#34;&gt;notes de version&lt;/a&gt; (en&#xA;anglais) pour consulter la liste complète des fonctionnalités modifiées ou&#xA;ajoutées.&lt;/p&gt;&#xA;&lt;h3 id=&#34;à-propos-de-postgresql&#34;&gt;À propos de PostgreSQL&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org&#34;&gt;PostgreSQL&lt;/a&gt; est le système de gestion de bases de&#xA;données libre de référence. Sa communauté mondiale est composée de plusieurs&#xA;milliers d’utilisateurs, utilisatrices, contributeurs, contributrices,&#xA;entreprises et institutions. Le projet PostgreSQL, démarré il y a plus de 30 ans&#xA;à l’université de Californie, à Berkeley, a atteint aujourd’hui un rythme de&#xA;développement sans pareil. L’ensemble des fonctionnalités proposées est mature,&#xA;et dépasse même celui des systèmes commerciaux leaders sur les fonctionnalités&#xA;avancées, les extensions, la sécurité et la stabilité.&lt;/p&gt;&#xA;&lt;h3 id=&#34;liens&#34;&gt;Liens&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/download/&#34;&gt;Téléchargements&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/17/release-17.html&#34;&gt;Notes de version&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/press/&#34;&gt;Dossier de presse&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/support/security/&#34;&gt;Page sécurité&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/support/versioning/&#34;&gt;Politique des versions&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://twitter.com/postgresql&#34;&gt;Suivre @postgresql sur Twitter&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/donate/&#34;&gt;Dons&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;en-savoir-plus-sur-les-fonctionnalités&#34;&gt;En savoir plus sur les fonctionnalités&lt;/h2&gt;&#xA;&lt;p&gt;Pour de plus amples informations sur les fonctionnalités ci-dessus et toutes&#xA;les autres, vous pouvez consulter les liens suivants :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/17/release-17.html&#34;&gt;Notes de version&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/featurematrix/&#34;&gt;Matrice de fonctionnalités&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;où-télécharger&#34;&gt;Où télécharger&lt;/h2&gt;&#xA;&lt;p&gt;Il existe plusieurs façons de télécharger PostgreSQL 17, dont :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;la &lt;a href=&#34;https://www.postgresql.org/download/&#34;&gt;page de téléchargement&lt;/a&gt;, qui&#xA;contient les installeurs et les outils pour&#xA;&lt;a href=&#34;https://www.postgresql.org/download/windows/&#34;&gt;Windows&lt;/a&gt;,&#xA;&lt;a href=&#34;https://www.postgresql.org/download/&#34;&gt;Linux&lt;/a&gt;,&#xA;&lt;a href=&#34;https://www.postgresql.org/download/macosx/&#34;&gt;macOS&lt;/a&gt;, et bien plus ;&lt;/li&gt;&#xA;&lt;li&gt;le &lt;a href=&#34;https://www.postgresql.org/ftp/source/v17.0&#34;&gt;code source&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;D&amp;rsquo;autres outils et extensions sont disponibles sur le &lt;a href=&#34;http://pgxn.org/&#34;&gt;PostgreSQL Extension&#xA;Network&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;documentation&#34;&gt;Documentation&lt;/h2&gt;&#xA;&lt;p&gt;La documentation au format HTML et les pages de manuel sont installées avec&#xA;PostgreSQL. La documentation peut également être &lt;a href=&#34;https://www.postgresql.org/docs/17/&#34;&gt;consultée en&#xA;ligne&lt;/a&gt; ou récupérée au format&#xA;&lt;a href=&#34;https://www.postgresql.org/files/documentation/pdf/17/postgresql-17-A4.pdf&#34;&gt;PDF&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;licence&#34;&gt;Licence&lt;/h2&gt;&#xA;&lt;p&gt;PostgreSQL utilise la &lt;a href=&#34;https://www.postgresql.org/about/licence/&#34;&gt;licence&#xA;PostgreSQL&lt;/a&gt;, licence&#xA;« permissive » de type BSD. Cette &lt;a href=&#34;http://www.opensource.org/licenses/postgresql/&#34;&gt;licence certifiée&#xA;OSI&lt;/a&gt; est largement appréciée&#xA;pour sa flexibilité et sa compatibilité avec le monde des affaires, puisqu&amp;rsquo;elle&#xA;ne restreint pas l&amp;rsquo;utilisation de PostgreSQL dans les applications propriétaires&#xA;ou commerciales. Associée à un support proposé par de multiples sociétés et une&#xA;propriété publique du code, sa licence rend PostgreSQL très populaire parmi les&#xA;revendeurs souhaitant embarquer une base de données dans leurs produits sans&#xA;avoir à se soucier des prix de licence, des verrous commerciaux ou modifications&#xA;des termes de licence.&lt;/p&gt;&#xA;&lt;h2 id=&#34;contacts&#34;&gt;Contacts&lt;/h2&gt;&#xA;&lt;p&gt;Site internet&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/&#34;&gt;https://www.postgresql.org/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Courriel&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;mailto:press@postgresql.org&#34;&gt;press@postgresql.org&lt;/a&gt; ou&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;mailto:fr@postgresql.org&#34;&gt;fr@postgreql.org&lt;/a&gt; pour un contact francophone&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;images-et-logos&#34;&gt;Images et logos&lt;/h2&gt;&#xA;&lt;p&gt;Postgres, PostgreSQL et le logo éléphant (Slonik) sont des marques déposées de&#xA;l&amp;rsquo;&lt;a href=&#34;https://www.postgres.ca&#34;&gt;Association de la Communauté PostgreSQL&lt;/a&gt;. Si vous&#xA;souhaitez utiliser ces marques, vous devez vous conformer à la &lt;a href=&#34;https://www.postgresql.org/about/policies/trademarks/&#34;&gt;politique de la&#xA;marque&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;support-professionnel-et-dons&#34;&gt;Support professionnel et dons&lt;/h2&gt;&#xA;&lt;p&gt;PostgreSQL bénéficie du support de nombreuses sociétés, qui financent des&#xA;développeurs et développeuses, fournissent l&amp;rsquo;hébergement ou un support&#xA;financier. Les plus fervents supporters sont listés sur la page des&#xA;&lt;a href=&#34;https://www.postgresql.org/about/sponsors/&#34;&gt;sponsors&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Il existe également une très grande communauté de &lt;a href=&#34;https://www.postgresql.org/support/professional_support/&#34;&gt;sociétés offrant du support&#xA;PostgreSQL&lt;/a&gt;, du&#xA;consultant indépendant aux entreprises multinationales.&lt;/p&gt;&#xA;&lt;p&gt;Les &lt;a href=&#34;https://www.postgresql.org/about/donate/&#34;&gt;dons&lt;/a&gt; au PostgreSQL Global&#xA;Development Group, ou à l&amp;rsquo;une des associations à but non lucratif, sont acceptés&#xA;et encouragés.&lt;/p&gt;&#xA;&lt;p&gt;Crédits photo Richard Jacobs.&lt;/p&gt;</summary>
    <author>
      <name>Loxodata</name>
    </author>
  </entry>
  <entry>
    <title>PGConf.EU 2024 à Athènes</title>
    <updated>2024-09-18T13:30:00Z</updated>
    <id>tag:www.loxodata.com,2024-09-18:/post/pgconf-eu2024/</id>
    <link href="http://www.loxodata.com/post/pgconf-eu2024/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cette année encore, LOXODATA participera à la PGConf Europe 2024 qui se tiendra du 22 au 25 octobre au Divani Caravel Hotel à Athènes. LOXODATA sera partenaire Bronze de l&#39;évènement.&lt;/p&gt;&#xA;&lt;p&gt;La conférence reprend le format habituel d&amp;rsquo;une journée de formations, suivi de trois journées de présentations réparties sur trois salles en parallèle. Il est toujours possible de s&amp;rsquo;&lt;a href=&#34;https://www.postgresql.eu/events/pgconfeu2024/register/&#34;&gt;inscrire&lt;/a&gt; à l&#39;évènement.&lt;/p&gt;&#xA;&lt;p&gt;Ce sera la quatorzième année consécutive que se déroule la PGConf Europe, hormis les années 2020 et 2021 pour les raisons que l&amp;rsquo;on connaît tous.&lt;/p&gt;&#xA;&lt;p&gt;C&amp;rsquo;est l&amp;rsquo;occasion pour tous les acteurs du projet PostgreSQL de se rencontrer et partager, quel que soit son niveau et l&amp;rsquo;utilisation que l&amp;rsquo;on peut avoir de PostgreSQL.&lt;/p&gt;&#xA;&lt;h1 id=&#34;le-programme&#34;&gt;Le programme&lt;/h1&gt;&#xA;&lt;p&gt;Vous pouvez retrouver le programme de l&#39;évènement sur le &lt;a href=&#34;https://www.postgresql.eu/events/pgconfeu2024/schedule/&#34;&gt;site&lt;/a&gt; de la conférence.&lt;/p&gt;&#xA;&lt;p&gt;Magnus Hagander en maître de conférence initiera l&#39;évènement avec un talk de bienvenue, puis laissera place à Stacey Haysler pour une présentation générale sur PostgreSQL, là où l&amp;rsquo;année dernière Simon Riggs nous faisait la rétrospective des vingt dernières années du projet PostgreSQL et perspectives des vingt prochaines années.&lt;/p&gt;&#xA;&lt;p&gt;Puis, vous aurez à loisir de choisir parmi une cinquantaine de présentations sur des sujets divers : techniques, communautaires ou grand public.&lt;/p&gt;&#xA;&lt;p&gt;Nous espérons vous retrouver dans les allées de cette prochaine PGConf Europe 2024 afin de partager cet évènement annuel important pour la communauté PostgreSQL en Europe.&lt;/p&gt;&#xA;&lt;p&gt;Crédits photo : Kylie Docherty et PostgreSQL Europe&lt;/p&gt;</summary>
    <author>
      <name>Loxodata</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL 17 en RC1</title>
    <updated>2024-09-06T10:00:00Z</updated>
    <id>tag:www.loxodata.com,2024-09-06:/post/postgresql-17-rc1/</id>
    <link href="http://www.loxodata.com/post/postgresql-17-rc1/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Le PostgreSQL Global Development Group a annoncé la publication de la première&#xA;Release Candidate de PostgreSQL 17. En tant que Release Candidate, la version&#xA;de PostgreSQL 17 RC1 sera quasiment identique à la publication initiale de&#xA;PostgreSQL 17, cependant, des corrections pourront être appliquées avant la&#xA;mise à disposition de la version finale de PostgreSQL 17.&lt;/p&gt;&#xA;&lt;p&gt;La date de publication pour la version finale de PostgreSQL 17 est prévue au 26&#xA;septembre 2024. Consulter la section &lt;a href=&#34;#planning-des-publications&#34;&gt;Planning des publications&lt;/a&gt; pour plus de détails.&lt;/p&gt;&#xA;&lt;h1 id=&#34;mise-à-jour-vers-la-rc1-de-postgresql-17&#34;&gt;Mise à jour vers la RC1 de PostgreSQL 17&lt;/h1&gt;&#xA;&lt;p&gt;Pour mettre à jour votre version de PostgreSQL depuis une précédente version de&#xA;PostgreSQL, vous pouvez utiliser la même stratégie que pour mettre à jour vers&#xA;toute version majeure de PostgreSQL (par exemple avec la commande &lt;code&gt;pg_upgrade&lt;/code&gt;&#xA;ou &lt;code&gt;pg_dump&lt;/code&gt;/&lt;code&gt;pg_restore&lt;/code&gt;).&lt;/p&gt;&#xA;&lt;p&gt;Pour plus d&amp;rsquo;information, consultez la section &lt;a href=&#34;https://www.postgresql.org/docs/17/upgrading.html&#34;&gt;mise à jour&lt;/a&gt;&#xA;de la documentation officielle : &lt;a href=&#34;https://www.postgresql.org/docs/17/upgrading.html&#34;&gt;https://www.postgresql.org/docs/17/upgrading.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;changements-depuis-la-bêta-3&#34;&gt;Changements depuis la bêta 3&lt;/h1&gt;&#xA;&lt;p&gt;Plusieurs corrections ont été apportées à PostgreSQL 17 suite aux remontées&#xA;d&amp;rsquo;utilisateurs ayant testé la bêta 3.&lt;/p&gt;&#xA;&lt;p&gt;Dont notamment :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;suppression de la fonctionnalité de MERGE/SPLIT d&amp;rsquo;une partition&lt;/li&gt;&#xA;&lt;li&gt;amélioration des performances suite à un correctif autour de la réplication logique et des sous-transactions&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Pour la liste complète des corrections, veuillez consulter la page des&#xA;&lt;a href=&#34;https://wiki.postgresql.org/wiki/PostgreSQL_17_Open_Items#resolved_before_17rc1&#34;&gt;tickets&lt;/a&gt; ouverts.&lt;/p&gt;&#xA;&lt;h1 id=&#34;planning-des-publications&#34;&gt;Planning des publications&lt;/h1&gt;&#xA;&lt;p&gt;Il s&amp;rsquo;agit de la première Release Candidate de la version 17. Sauf à découvrir un&#xA;problème imposant un nouveau délai ou une nouvelle Release Candidate, PostgreSQL&#xA;17 devrait être publiée le 26 septembre 2024.&lt;/p&gt;&#xA;&lt;p&gt;Pour plus d&amp;rsquo;information, veuillez consulter la page &lt;a href=&#34;https://www.postgresql.org/developer/beta/&#34;&gt;Beta Testing&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;liens&#34;&gt;Liens&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/download/&#34;&gt;Téléchargement&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/developer/beta/&#34;&gt;Information sur le Bêta Testing&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/17/release-17.html&#34;&gt;Note de publication de PostgreSQL 17&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://wiki.postgresql.org/wiki/PostgreSQL_17_Open_Items&#34;&gt;Problèmes connus de PostgreSQL 17&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/featurematrix/#configuration-management&#34;&gt;Matrice de fonctionnalités&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/account/submitbug/&#34;&gt;Soumettre un bogue&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://twitter.com/postgresql&#34;&gt;Suivre @postgresql sur Twitter&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/donate/&#34;&gt;Faire un don&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</summary>
    <author>
      <name>Loxodata</name>
    </author>
  </entry>
  <entry>
    <title>IA et neutralité carbone</title>
    <updated>2024-08-23T14:45:00Z</updated>
    <id>tag:www.loxodata.com,2024-08-23:/post/ia-neutralite-carbone/</id>
    <link href="http://www.loxodata.com/post/ia-neutralite-carbone/" rel="alternate"></link>
    <summary type="html">&lt;h2 id=&#34;neutralité-carbone-&#34;&gt;Neutralité carbone ?&lt;/h2&gt;&#xA;&lt;p&gt;Les géants de la tech américaine comme Google et Microsoft se sont engagés il y a quelques années à tendre vers la neutralité carbone en 2030. Mais qu&amp;rsquo;est-ce que la neutralité carbone ? Selon le Parlement Européen, la neutralité carbone est &amp;ldquo;l&#39;équilibre entre les émissions de carbone et l&amp;rsquo;absorption du carbone de l&amp;rsquo;atmosphère par les puits de carbone&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;L&amp;rsquo;Union européenne s&amp;rsquo;est fixé comme objectif de neutralité carbone les années 2050. Plusieurs actions sont visées pour essayer d&amp;rsquo;atteindre cet objectif, dont notamment :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Décarboner totalement la production d’énergie à l’horizon 2050&lt;/li&gt;&#xA;&lt;li&gt;Réduire la consommation d’énergie dans tous les secteurs&lt;/li&gt;&#xA;&lt;li&gt;Diminuer les émissions non liées à la consommation d’énergie&lt;/li&gt;&#xA;&lt;li&gt;Augmenter les puits de carbone (naturels et technologiques)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Or, avec l&amp;rsquo;avènement de l&amp;rsquo;IA générative, et des cryptomonnaies encore avant, on voit que l&amp;rsquo;atteinte de la neutralité carbone risque d&#39;être bousculée.&lt;/p&gt;&#xA;&lt;h2 id=&#34;ia-générative-et-datacenters&#34;&gt;IA générative et datacenters&lt;/h2&gt;&#xA;&lt;p&gt;On ne peut passer à côté désormais de tous les services d&amp;rsquo;intelligence artificielle, et notamment l&amp;rsquo;IA générative, tant les grands groupes se livrent une bataille sans merci, menant à une course à la puissance de calcul. Ce qu&amp;rsquo;il faut voir derrière ces services, c&amp;rsquo;est la demande toujours croissante de nouveaux datacenters pour stocker les innombrables données nécessaires aux algorithmes d&amp;rsquo;IA générative. Ce qui pousse à consommer de plus en plus d&#39;énergie, et donc à émettre plus de gaz à effet de serre.&lt;/p&gt;&#xA;&lt;p&gt;Cette augmentation s&amp;rsquo;est élevée à 48% sur cinq ans d&amp;rsquo;après le rapport de Google, et représentait pour la seule année 2023, près de 17,2 millions de tonnes de CO2.&lt;/p&gt;&#xA;&lt;p&gt;En plus de mettre en tension les réseaux d&#39;énergie, les ressources en eau sont aussi à surveiller de près, car c&amp;rsquo;est bien l&amp;rsquo;eau qui est utilisée pour refroidir ces grands centres de données. On peut aussi noter la demande toujours forte en matières premières pour équiper ces datacenters de puces de dernière génération d&amp;rsquo;un fabricant taïwanais bien connu.&lt;/p&gt;&#xA;&lt;p&gt;Depuis l&amp;rsquo;année dernière, Google comme d&amp;rsquo;autres sociétés essaye aussi une autre stratégie pour atteindre la neutralité carbone, celle d&amp;rsquo;investir dans des crédits de suppression carbone en plus de chercher à augmenter l&amp;rsquo;efficacité énergétique de ces datacenters.&lt;/p&gt;&#xA;&lt;h2 id=&#34;pg_vector&#34;&gt;pg_vector&lt;/h2&gt;&#xA;&lt;p&gt;En attendant, PostgreSQL est entré dans la course de l&amp;rsquo;IA générative afin de proposer des fonctionnalités facilitant son intégration. L&amp;rsquo;extension &lt;a href=&#34;https://github.com/pgvector/pgvector&#34;&gt;&lt;code&gt;pg_vector&lt;/code&gt;&lt;/a&gt; est une extension créée il y a maintenant trois ans afin de pouvoir stocker des données de type vecteur, et de faire de la recherche de similarité vectorielle efficace en proposant plusieurs types d&amp;rsquo;index et d&amp;rsquo;opérations de calcul de distance.&lt;/p&gt;&#xA;&lt;p&gt;En faisant ce choix, PostgreSQL peut devenir alors une base de données vectorielle offrant ses fonctionnalités éprouvées, avec des requêtes rendues plus efficaces pour ce type de données, à l&amp;rsquo;image du support du JSON par PostgreSQL.&lt;/p&gt;&#xA;&lt;h2 id=&#34;le-mot-de-la-fin&#34;&gt;Le mot de la fin&lt;/h2&gt;&#xA;&lt;p&gt;Les enjeux sont importants et les objectifs ambitieux, mais il est important de s&amp;rsquo;y pencher, car nous sommes tous acteurs, et face au réchauffement climatique il est urgent d&amp;rsquo;agir. On peut également espérer rendre cette consommation de l&amp;rsquo;IA moins énergivore et plus efficiente par les progrès futurs.&lt;/p&gt;&#xA;&lt;h2 id=&#34;liens&#34;&gt;Liens&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/en-us/corporate-responsibility/sustainability/report&#34;&gt;Rapport d&amp;rsquo;impact environnemental de Microsoft&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.gstatic.com/gumdrop/sustainability/google-2024-environmental-report.pdf&#34;&gt;Rapport d&amp;rsquo;impact environnemental de Google&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</summary>
    <author>
      <name>Loxodata</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL 16.4 et autres correctifs</title>
    <updated>2024-08-09T08:00:00Z</updated>
    <id>tag:www.loxodata.com,2024-08-09:/post/postgresql-16-4/</id>
    <link href="http://www.loxodata.com/post/postgresql-16-4/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Le PGDG a publié une mise à jour de toutes les versions supportées de&#xA;PostgreSQL. Il s&amp;rsquo;agit des versions 16.4, 15.8, 14.13, 13.16 et 12.20,&#xA;ainsi que la troisième publication Bêta de PostgreSQL 17.  Cette&#xA;publication corrige une vulnérabilité de sécurité et près de 55 bogues&#xA;repérés durant les derniers mois.&lt;/p&gt;&#xA;&lt;p&gt;Pour la liste complète des changements, se référer à la section &lt;a href=&#34;https://www.postgresql.org/docs/release/&#34;&gt;Notes&#xA;de publication&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;fin-de-support-de-postgresql-12&#34;&gt;Fin de support de PostgreSQL 12&lt;/h2&gt;&#xA;&lt;p&gt;La version 12 de PostgreSQL ne recevra plus aucun correctif à partir&#xA;du 14 novembre 2024. Si vous utilisez une version 12 de PostgreSQL en&#xA;production, nous vous recommandons de planifier une mise à jour vers&#xA;une version plus récente et supportée de PostgreSQL. Se référer à&#xA;notre &lt;a href=&#34;https://www.postgresql.org/support/versioning/&#34;&gt;politique de versionnement&lt;/a&gt;&#xA;pour plus d&amp;rsquo;informations.&lt;/p&gt;&#xA;&lt;h2 id=&#34;problèmes-de-sécurité&#34;&gt;Problèmes de sécurité&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/support/security/CVE-2024-7348/&#34;&gt;CVE-2024-7348&lt;/a&gt; :&#xA;le remplacement de relations dans PostgreSQL lors de l&amp;rsquo;utilisation de&#xA;&lt;code&gt;pg_dump&lt;/code&gt; permet d&amp;rsquo;exécuter du code SQL arbitraire.&lt;/p&gt;&#xA;&lt;p&gt;CVSS v3.1 Base Score: 8.8&lt;/p&gt;&#xA;&lt;p&gt;Versions vulnérables et supportées : 12 - 16.&lt;/p&gt;&#xA;&lt;p&gt;Un assaillant capable de créer et supprimer des objets non-temporaire&#xA;pourrait injecter du code SQL qui serait exécuté par une session&#xA;&lt;code&gt;pg_dump&lt;/code&gt; concurrente avec les privilèges du rôle exécutant &lt;code&gt;pg_dump&lt;/code&gt; (qui&#xA;est souvent un super-utilisateur). L&amp;rsquo;attaque implique le remplacement&#xA;d&amp;rsquo;une séquence ou d&amp;rsquo;un objet similaire avec une vue ou une table&#xA;étrangère qui exécuterait du code malicieux. Pour se prémunir de cela,&#xA;l&amp;rsquo;introduction d&amp;rsquo;un nouveau paramètre&#xA;&lt;code&gt;restrict_nonsystem_relation_kind&lt;/code&gt; permet de désactiver l&amp;rsquo;expansion de&#xA;vues autres qu&amp;rsquo;internes ainsi que l&amp;rsquo;accès aux tables étrangères et&#xA;apprend à &lt;code&gt;pg_dump&lt;/code&gt; à le définir lorsqu&amp;rsquo;il est disponible. Notez que&#xA;l&amp;rsquo;attaque est bloquée lorsque &lt;code&gt;pg_dump&lt;/code&gt; et le serveur sauvegardé sont&#xA;suffisamment récents pour avoir ce correctif.&lt;/p&gt;&#xA;&lt;p&gt;Le projet PostgreSQL remercie Noah Misch pour avoir signalé ce problème.&lt;/p&gt;&#xA;&lt;h2 id=&#34;corrections-des-bogues-et-améliorations&#34;&gt;Corrections des bogues et améliorations&lt;/h2&gt;&#xA;&lt;p&gt;Cette mise à jour corrige près de 55 bogues qui ont été signalés&#xA;depuis ces derniers mois. Les problèmes listés ci-dessous affectent la&#xA;version 16 de PostgreSQL. Certaines peuvent aussi affecter d&amp;rsquo;autres&#xA;versions supportées de PostgreSQL.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;empêche des résultats incorrects de plans &amp;ldquo;Merge Right Anti Join&amp;rdquo;,&#xA;lorsque la relation interne est connue pour avoir une clé de&#xA;jointure unique, la fusion pourrait alors se faire quand il y a des&#xA;clés de jointure dupliquées dans la relation externe ;&lt;/li&gt;&#xA;&lt;li&gt;empêche une boucle infinie dans &lt;code&gt;VACUUM&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;corrige la configuration de l&#39;élagage d&amp;rsquo;une partition pendant&#xA;&lt;code&gt;ALTER TABLE DETACH ... PARTITION CONCURRENTLY&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;corrige le comportement de fonctions stables utilisées comme argument&#xA;d&amp;rsquo;un appel &lt;code&gt;CALL&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;la fonction &lt;code&gt;pg_sequence_last_value()&lt;/code&gt; retourne maintenant &lt;code&gt;NULL&lt;/code&gt;&#xA;plutôt que de remonter une erreur quand elle est appelée sur une&#xA;séquence non tracée dans une instance secondaire et sur séquence&#xA;temporaire d&amp;rsquo;une autre session ;&lt;/li&gt;&#xA;&lt;li&gt;corrige l&amp;rsquo;analyse des opérateurs ignorés dans &lt;code&gt;websearch_to_tsquery()&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;vérifie correctement la possibilité de mettre à jour les colonnes&#xA;cibles des vues par &lt;code&gt;INSERT ... DEFAULT&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;verrouille les séquences détenues lors de &lt;code&gt;ALTER TABLE ... SET LOGGED|UNLOGGED&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;ne remonte par d&amp;rsquo;erreurs si un déclencheur &lt;code&gt;AFTER&lt;/code&gt; en file d&amp;rsquo;attente&#xA;n&amp;rsquo;existe plus ;&lt;/li&gt;&#xA;&lt;li&gt;Corrige la sélection d&amp;rsquo;un index arbitral pour &lt;code&gt;INSERT ... ON CONFLICT&lt;/code&gt; quand l&amp;rsquo;index souhaité a des expressions ou des prédicats,&#xA;par exemple à travers une vue actualisable ;&lt;/li&gt;&#xA;&lt;li&gt;refuse la modification d&amp;rsquo;une table temporaire d&amp;rsquo;une autre session&#xA;avec &lt;code&gt;ALTER TABLE&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;corrige la manipulation des statistiques étendues sur expressions&#xA;dans &lt;code&gt;CREATE TABLE ... LIKE STATISTICS&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;corrige l&#39;échec du recalcul des sous-requêtes générées par les&#xA;agrégats &lt;code&gt;MIN()&lt;/code&gt; ou &lt;code&gt;MAX()&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;désactive le caractère de soulignement dans les paramètres&#xA;positionnés ;&lt;/li&gt;&#xA;&lt;li&gt;empêche une défaillance lorsqu&amp;rsquo;une fonction JIT en ligne remonte une&#xA;erreur ;&lt;/li&gt;&#xA;&lt;li&gt;corrige la manipulation de sous-transactions d&amp;rsquo;une transaction&#xA;préparée lors du démarrage d&amp;rsquo;une instance secondaire ;&lt;/li&gt;&#xA;&lt;li&gt;empêche l&amp;rsquo;initialisation incorrecte d&amp;rsquo;un créneau de réplication logique ;&lt;/li&gt;&#xA;&lt;li&gt;corrige une fuite mémoire dans le processus d&amp;rsquo;envoi des WAL de&#xA;réplication logique quand la publication change pour une table&#xA;partitionnée pour laquelle les partitions ont des types de données&#xA;d&amp;rsquo;enregistrement qui diffèrent physiquement de la table ;&lt;/li&gt;&#xA;&lt;li&gt;désactive la création de tickets de sessions TLS avec état avec OpenSSL ;&lt;/li&gt;&#xA;&lt;li&gt;corrige la manipulation par PL/pgSQL de plages d&amp;rsquo;entier contenant&#xA;des caractères de soulignement (par exemple, &lt;code&gt;FOR i IN 1_001..1_002&lt;/code&gt;) ;&lt;/li&gt;&#xA;&lt;li&gt;corrige l&amp;rsquo;incompatibilité entre PL/Perl et Perl 5.40 ;&lt;/li&gt;&#xA;&lt;li&gt;plusieurs correctifs liés à des fonctions et déclencheurs récursifs&#xA;en PL/Python ;&lt;/li&gt;&#xA;&lt;li&gt;garantit le fait que &lt;code&gt;pg_restore -l&lt;/code&gt; rapporte les tables dépendantes&#xA;des entrées contenues correctement ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;pg_stat_statements&lt;/code&gt; passe maintenant un identifiant de requête pour&#xA;les ordres utilitaires apparaissant dans des fonctions en langage&#xA;SQL ;&lt;/li&gt;&#xA;&lt;li&gt;corrige &lt;code&gt;postgres_fdw&lt;/code&gt; lors d&amp;rsquo;une correspondance entre une table&#xA;étrangère et une vue distante non triviale ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;postgres_fdw&lt;/code&gt; n&amp;rsquo;envoie plus la clause &lt;code&gt;FETCH FIRST WITH TIES&lt;/code&gt; à un&#xA;serveur distant.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;mise-à-jour&#34;&gt;Mise à jour&lt;/h2&gt;&#xA;&lt;p&gt;Toutes les publications de mises à jour de PostgreSQL sont&#xA;cumulatives. Comme pour les autres mises à jour mineures, il n&amp;rsquo;est pas&#xA;nécessaire d&amp;rsquo;extraire et de recharger les bases de données ni&#xA;d&amp;rsquo;utiliser &lt;code&gt;pg_upgrade&lt;/code&gt; pour appliquer cette mise à jour ;&#xA;il suffit simplement d&amp;rsquo;arrêter PostgreSQL et de mettre à jour les binaires.&lt;/p&gt;&#xA;&lt;p&gt;Les utilisateurs ayant sauté une ou plusieurs mises à jour peuvent&#xA;avoir besoin d&#39;étapes additionnelles après la mise à jour.&#xA;Les notes de publication des versions précédentes fournissent les détails.&lt;/p&gt;&#xA;&lt;p&gt;Pour plus de détails, se référer à la &lt;a href=&#34;https://www.postgresql.org/docs/release/&#34;&gt;note de publication de&#xA;versions&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;note-à-propos-de-postgresql-17-bêta&#34;&gt;Note à propos de PostgreSQL 17 Bêta&lt;/h2&gt;&#xA;&lt;p&gt;Cette publication marque la troisième publication bêta de PostgreSQL&#xA;17 et rapproche d&amp;rsquo;une étape la communauté de la disponibilité&#xA;probablement vers la fin du troisième trimestre.&lt;/p&gt;&#xA;&lt;p&gt;Dans l&amp;rsquo;esprit de la communauté PostgreSQL « open-source », nous vous&#xA;encourageons fortement à tester les nouvelles fonctionnalités de&#xA;PostgreSQL sur vos systèmes pour nous aider à éliminer les bogues et&#xA;autres problèmes existants. Bien que nous ne recommandons pas&#xA;l&amp;rsquo;utilisation de PostgreSQL 17 Bêta 3 dans des environnements de&#xA;production, nous vous encourageons à trouver des moyens de tester les&#xA;applications avec cette version.&lt;/p&gt;&#xA;&lt;p&gt;Vos tests et retours aideront la communauté à s&amp;rsquo;assurer que la&#xA;publication de PostgreSQL 17 maintiendra nos standards pour livrer une&#xA;version fiable et stable de la base de données relationnelle «&#xA;open-source » la plus avancée du monde. Merci de prendre connaissance&#xA;du processus de publication et de comment vous pouvez contribuer :&#xA;(&lt;a href=&#34;https://www.postgresql.org/developer/beta/)&#34;&gt;https://www.postgresql.org/developer/beta/)&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;mettre-à-jour-vers-postgresql-17-bêta-3&#34;&gt;Mettre à jour vers PostgreSQL 17 Bêta 3&lt;/h2&gt;&#xA;&lt;p&gt;Afin de mettre à jour vers PostgreSQL 17 Bêta 3 à partir d&amp;rsquo;une&#xA;publication antérieure de PostgreSQL, vous aurez besoin d&amp;rsquo;utiliser une&#xA;stratégie similaire à la mise à jour entre versions majeures de&#xA;PostgreSQL (par exemple : &lt;code&gt;pg_upgrade&lt;/code&gt; ou&#xA;&lt;code&gt;pg_dump&lt;/code&gt;/&lt;code&gt;pg_restore&lt;/code&gt;). Pour plus d&amp;rsquo;information, merci de prendre&#xA;connaissance de la documentation sur la mise à jour.&lt;/p&gt;&#xA;&lt;h2 id=&#34;changements-depuis-la-bêta-2&#34;&gt;Changements depuis la Bêta 2&lt;/h2&gt;&#xA;&lt;p&gt;Les corrections et changements dans PostgreSQL 17 Beta 3 incluent :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;renommage du paramètre &lt;code&gt;standby_slot_names&lt;/code&gt; vers&#xA;&lt;code&gt;synchronized_standby_slots&lt;/code&gt; :&lt;/li&gt;&#xA;&lt;li&gt;plusieurs correctifs sur SQL/JSON ;&lt;/li&gt;&#xA;&lt;li&gt;corrections de &lt;code&gt;pg_combinebackup --clone&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;correction de &lt;code&gt;pg_createsubscriber&lt;/code&gt; pour fonctionner avec un nom de base&#xA;de données contenant un caractère espace ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;pg_createsubscriber&lt;/code&gt; supprime maintenant les souscriptions&#xA;préexistantes lors de l&amp;rsquo;exécution sur une base de données cibles ;&lt;/li&gt;&#xA;&lt;li&gt;amélioration de l&amp;rsquo;efficacité lors de la récupération d&amp;rsquo;information sur une&#xA;souscription avec &lt;code&gt;pg_upgrade&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;correction du comportement d&amp;rsquo;un repli TLS avec &lt;code&gt;sslmode=prefer&lt;/code&gt; en&#xA;erreur quand un serveur envoie une erreur pendant le processus de&#xA;démarrage ;&lt;/li&gt;&#xA;&lt;li&gt;documentation d&amp;rsquo;un cas d&amp;rsquo;erreur avec une sauvegarde incrémentale de&#xA;&lt;code&gt;pg_basebackup&lt;/code&gt; sur une instance secondaire lorsqu&amp;rsquo;il est exécuté&#xA;immédiatement après la sauvegarde précédente.&lt;/li&gt;&#xA;&lt;li&gt;Correction d&amp;rsquo;un problème où &lt;code&gt;pg_upgrade --transaction-size&lt;/code&gt; peut faire&#xA;qu&amp;rsquo;un processus d&amp;rsquo;arrière-plan (&lt;em&gt;backend&lt;/em&gt;) consomme de la mémoire dans un&#xA;ordre de grandeur de plus ;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Merci de se référer aux notes de publication pour la liste complète&#xA;des nouveautés et changements, ainsi qu&amp;rsquo;aux items ouverts de&#xA;PostgreSQL pour plus de détails sur les changements et correctifs.&lt;/p&gt;&#xA;&lt;h2 id=&#34;liens&#34;&gt;Liens&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/download/&#34;&gt;Téléchargements&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/release/&#34;&gt;Notes de version&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/support/security/&#34;&gt;Page sur la sécurité&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/support/versioning/&#34;&gt;Politique de version&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/developer/beta/&#34;&gt;Information sur le Bêta Testing&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/17/release-17.html&#34;&gt;Note de publication de PostgreSQL 17 Bêta&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://wiki.postgresql.org/wiki/PostgreSQL_17_Open_Items&#34;&gt;Problème connu de PostgreSQL 17&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/featurematrix/#configuration-management&#34;&gt;Matrice fonctionnelle&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/account/submitbug/&#34;&gt;Soumettre un bogue&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://twitter.com/postgresql&#34;&gt;Suivre @postgresql sur X/Twitter&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/donate/&#34;&gt;Faire un don&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Si vous avez des corrections ou suggestions sur cette annonce de&#xA;publication, merci de les envoyer à la mailing list publique&#xA;&lt;a href=&#34;https://www.postgresql.org/list/&#34;&gt;&lt;em&gt;pgsql-www@lists.postgresql.org&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;</summary>
    <author>
      <name>Loxodata</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL 17 bêta 2</title>
    <updated>2024-06-27T14:00:00Z</updated>
    <id>tag:www.loxodata.com,2024-06-27:/post/postgresql-17-beta2/</id>
    <link href="http://www.loxodata.com/post/postgresql-17-beta2/" rel="alternate"></link>
    <summary type="html">&lt;h1 id=&#34;postgresql-17-bêta-2-publiée&#34;&gt;PostgreSQL 17 Bêta 2 publiée&lt;/h1&gt;&#xA;&lt;p&gt;Le PostgreSQL Global Development Group annonce la disponibilité de la&#xA;deuxième bêta de PostgreSQL 17 en&#xA;&lt;a href=&#34;https://www.postgresql.org/download/&#34;&gt;téléchargement&lt;/a&gt;.  Cette&#xA;publication contient un aperçu des fonctionnalités qui seront&#xA;disponibles dans la version finale de PostgreSQL 17. Des modifications&#xA;peuvent toutefois intervenir d&amp;rsquo;ici là.&lt;/p&gt;&#xA;&lt;p&gt;Vous pouvez trouver des informations sur toutes les fonctionnalités et&#xA;les changements de PostgreSQL 17 dans les &lt;a href=&#34;https://www.postgresql.org/docs/17/release-17.html&#34;&gt;notes de&#xA;version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Dans l&amp;rsquo;esprit de la communauté open source PostgreSQL, nous vous&#xA;encourageons fortement à tester les nouvelles fonctionnalités de&#xA;PostgreSQL dans vos systèmes de base de données. Ceci afin de nous&#xA;aider à éliminer les bogues et autres problèmes qui pourraient&#xA;exister. Bien que nous ne vous conseillions pas de faire fonctionner&#xA;PostgreSQL 17 Bêta 2 dans vos environnements de production, nous vous&#xA;encourageons à trouver des moyens de faire fonctionner votre charge&#xA;applicative typique avec cette publication bêta.&lt;/p&gt;&#xA;&lt;p&gt;Vos tests et vos commentaires aideront la communauté à s&amp;rsquo;assurer que&#xA;PostgreSQL 17 respecte nos standards de stabilité et fiabilité. Vous&#xA;pouvez également vous renseigner sur notre &lt;a href=&#34;https://www.postgresql.org/developer/beta/&#34;&gt;processus de bêta&#xA;testing&lt;/a&gt; et comment y&#xA;contribuer.&lt;/p&gt;&#xA;&lt;h2 id=&#34;mise-à-jour-vers-postgresql-17-bêta-2&#34;&gt;Mise à jour vers PostgreSQL 17 Bêta 2&lt;/h2&gt;&#xA;&lt;p&gt;Pour mettre à jour vers PostgreSQL 17 Beta 2 à partir d&amp;rsquo;une précédente&#xA;version de PostgreSQL, vous aurez besoin d&amp;rsquo;utiliser une stratégie&#xA;similaire à la mise à jour entre versions majeures de PostgreSQL&#xA;(i.e. &lt;code&gt;pg_upgrade&lt;/code&gt; ou &lt;code&gt;pg_dump&lt;/code&gt;/&lt;code&gt;pg_restore&lt;/code&gt;). Pour plus&#xA;d&amp;rsquo;information, merci de consulter la section de la documentation&#xA;concernant les mises à jour.&lt;/p&gt;&#xA;&lt;h2 id=&#34;changement-depuis-la-publication-bêta-1&#34;&gt;Changement depuis la publication Bêta 1&lt;/h2&gt;&#xA;&lt;p&gt;Les corrections et changements depuis la publication PostgreSQL 17 Bêta&#xA;2 incluent :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Appliquer correctement le comportement par défaut de la clause &lt;code&gt;ON EMPTY&lt;/code&gt; lorsqu&amp;rsquo;elle n&amp;rsquo;est pas présente dans la requête&#xA;SQL/JSON ;&lt;/li&gt;&#xA;&lt;li&gt;Correction d&amp;rsquo;un problème avec la fonction&#xA;&lt;code&gt;pg_logical_slot_get_changes&lt;/code&gt; relative à la gestion de la propriété&#xA;de la ressource ;&lt;/li&gt;&#xA;&lt;li&gt;Plusieurs correctifs liés à la nouvelle structure de données pour&#xA;les données relatives à la commande &lt;code&gt;VACUUM&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Veuillez consulter les notes de publication pour une liste complète&#xA;des nouveautés et changements : &lt;a href=&#34;https://www.postgresql.org/docs/17/release-17.html&#34;&gt;https://www.postgresql.org/docs/17/release-17.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;tests-pour-le-débogage-et-la-compatibilité&#34;&gt;Tests pour le débogage et la compatibilité&lt;/h2&gt;&#xA;&lt;p&gt;La stabilité de chaque publication de PostgreSQL dépend de vous, la&#xA;communauté. En testant la version à venir avec votre charge et vos&#xA;outils de tests, vous pourrez nous aider à trouver les bogues et&#xA;régressions avant la publication de PostgreSQL 17.&lt;/p&gt;&#xA;&lt;p&gt;Étant donné qu&amp;rsquo;il s&amp;rsquo;agit d&amp;rsquo;une version bêta, des changements mineurs&#xA;dans le comportement de la base de données, des détails et des APIs&#xA;sont toujours possibles. Vos retours et tests aideront à déterminer&#xA;les ajustements finaux des nouvelles fonctionnalités.&lt;/p&gt;&#xA;&lt;p&gt;La qualité des tests aide à déterminer le moment de la publication&#xA;finale.&lt;/p&gt;&#xA;&lt;p&gt;Une liste des &lt;a href=&#34;https://wiki.postgresql.org/wiki/PostgreSQL_17_Open_Items&#34;&gt;problèmes&#xA;ouverts&lt;/a&gt;&#xA;est publiquement disponible dans le wiki de PostgreSQL. Vous pouvez&#xA;&lt;a href=&#34;https://www.postgresql.org/account/submitbug/&#34;&gt;rapporter des bogues&lt;/a&gt;&#xA;en utilisant le formulaire présent sur le site web de&#xA;PostgreSQL : &lt;a href=&#34;https://www.postgresql.org/account/submitbug/&#34;&gt;https://www.postgresql.org/account/submitbug/&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;planning-bêta&#34;&gt;Planning Bêta&lt;/h2&gt;&#xA;&lt;p&gt;Il s&amp;rsquo;agit de la deuxième publication bêta de la version 17. Le projet&#xA;PostgreSQL publiera autant de bêtas que cela est nécessaire pour&#xA;tester. Celles-ci seront suivies par une ou plusieurs publications de&#xA;versions candidates, jusqu&#39;à la publication de la version finale&#xA;autour de septembre ou octobre 2024.&lt;/p&gt;&#xA;&lt;p&gt;Pour plus d&amp;rsquo;information, veuillez consulter la page &lt;a href=&#34;https://www.postgresql.org/developer/beta/&#34;&gt;Beta&#xA;Testing&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;liens&#34;&gt;Liens&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/download/&#34;&gt;Téléchargement&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/developer/beta/&#34;&gt;Information sur le Bêta Testing&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/17/release-17.html&#34;&gt;Note de publication de PostgreSQL 17 Bêta&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://wiki.postgresql.org/wiki/PostgreSQL_17_Open_Items&#34;&gt;Problème connu de PostgreSQL 17&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/featurematrix/#configuration-management&#34;&gt;Matrice fonctionnelle&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/account/submitbug/&#34;&gt;Soumettre un bogue&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://twitter.com/postgresql&#34;&gt;Suivre @postgresql sur X/Twitter&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/donate/&#34;&gt;Faire un don&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Crédits photo : Carlos Gonzalez&lt;/p&gt;</summary>
    <author>
      <name>Loxodata</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL Hebdo #116</title>
    <updated>2024-09-09T14:06:00Z</updated>
    <id>tag:sebastien.lardiere.net,2024-09-09:/blog/index.php/post/2024/09/09/PostgreSQL-Hebdo-116</id>
    <link href="http://sebastien.lardiere.net/blog/index.php/post/2024/09/09/PostgreSQL-Hebdo-116" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lu ces dernières semaines :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://begriffs.com/posts/2018-03-20-user-defined-order.html&#34;&gt;User-defined Order in SQL&lt;/a&gt; : Ordonner les informations, c&#39;est souvent adopter un certain point de vue, et cette démarche fait partie de la modélisation des données ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://mccue.dev/pages/8-16-24-just-use-postgres&#34;&gt;Just use Postgres&lt;/a&gt; : passage en revue des alternatives à PostgreSQL ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/do-you-still-need-pgbadger-youre-using-grafana-alicja-kucharczyk-cgfmf&#34;&gt;Do you still need pgBadger if you’re using Grafana?&lt;/a&gt; : Grafana ne remplace pas complètement un rapport pgBadger, dans lequel on trouve de nombreuses informations utiles à la compréhension du fonctionnement d&#39;une instance PostgreSQL ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/not-so-good-idea-pipe-syntax-sql-franck-pachot-dx6he/&#34;&gt;&lt;/a&gt; : De la façon dont le language SQL s&#39;écrit, ou pourquoi on manipule des ensembles et non pas des flux ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/cybertec-postgresql/pgwatch&#34; title=&#34;https://github.com/cybertec-postgresql/pgwatch&#34;&gt;https://github.com/cybertec-postgre...&lt;/a&gt; la prochaine version de PgWatch poursuit son développement avec la version 3.0 beta4&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://dataegret.com/2024/08/handling_cancellation_request/&#34;&gt;Handling Cancellation Request&lt;/a&gt; : Comment annuler correctement une requête, depuis l&#39;application client, vers un cluster PostgreSQL avec le gestionnaire de connexions PgBouncer ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.shayon.dev/post/2024/225/stop-relying-on-if-not-exists-for-concurrent-index-creation-in-postgresql/&#34;&gt;Stop Relying on IF NOT EXISTS for Concurrent Index Creation in PostgreSQL&lt;/a&gt; : à propos d&#39;index invalide et de création conditionelle ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://anyblockers.com/posts/postgres-as-a-search-engine&#34;&gt;Postgres as a search engine&lt;/a&gt; : Peut-on utiliser PostgreSQL comme moteur de recherche ?&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://okbob.blogspot.com/2024/09/how-to-get-info-about-relations-between.html?m=1&#34;&gt;How to get info about relations between system tables?&lt;/a&gt; : à propos des liens internes du catalogue ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/news/postgresql-17-rc1-released-2926/&#34;&gt;PostgreSQL 17 RC1 Released!&lt;/a&gt;  (et en français : &lt;a href=&#34;https://www.loxodata.com/post/postgresql-17-rc1/&#34; title=&#34;https://www.loxodata.com/post/postgresql-17-rc1/&#34;&gt;https://www.loxodata.com/post/postg...&lt;/a&gt;) : la date prévue pour PostgreSQL 17.0 est le 26 septembre !&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/patroni/patroni/blob/master/docs/releases.rst#version-401&#34;&gt;Patroni 4.0&lt;/a&gt; : nouvelle version de l&#39;outil de gestion de la haute disponibilité, avec quelques ruptures de compatibilité ;&lt;/li&gt;&#xA;&lt;/ul&gt;</summary>
    <author>
      <name>Sébastien Lardière</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL Hebdo #115</title>
    <updated>2024-08-09T14:39:00Z</updated>
    <id>tag:sebastien.lardiere.net,2024-08-09:/blog/index.php/post/2024/08/09/PostgreSQL-Hebdo-115</id>
    <link href="http://sebastien.lardiere.net/blog/index.php/post/2024/08/09/PostgreSQL-Hebdo-115" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lu ces dernières semaines :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://swizec.com/blog/why-sql-is-forever/&#34;&gt;Why SQL is Forever&lt;/a&gt; : billet sur la pertinence du SQL et des transactions face aux bases de données « NoSQL », et sur le point de vue de Stonebraker (le créateur de PostgreSQL) à ce sujet ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.ubicloud.com/blog/difference-between-running-postgres-for-yourself-and-for-others&#34;&gt;Difference between running Postgres for yourself and for others&lt;/a&gt; : comparaison des modes d&#39;hébergement d&#39;une instance PostgreSQL (du point de vue d&#39;un clouder) ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://proopensource.it/blog/postgresql-connection-poolers&#34;&gt;PostgreSQL Connection Poolers&lt;/a&gt; : court billet sur les gestionnaires de connexions à PostgreSQL ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://danolivo.substack.com/p/designing-a-prototype-postgres-plan&#34;&gt;Designing a Prototype: Postgres Plan Freezing&lt;/a&gt; : intéressante démarche à propos de la mise en cache de plan d&#39;exécution de requêtes ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://drew.silcock.dev/blog/how-postgres-stores-data-on-disk/&#34;&gt;How Postgres stores data on disk – this one&#39;s a page turner&lt;/a&gt; : article complet sur la technique de stockage des donnés de PostgreSQL ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/news/postgresql-164-158-1413-1316-1220-and-17-beta-3-released-2910/&#34;&gt;PostgreSQL 16.4, 15.8, 14.13, 13.16, 12.20, and 17 Beta 3 Released!&lt;/a&gt; (en français : &lt;a href=&#34;https://www.loxodata.com/post/postgresql-16-4/&#34;&gt;PostgreSQL 16.4 et autres correctifs&lt;/a&gt;) : Troisième Bêta pour PostgreSQL 17 ! À vos tests !&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&lt;p&gt;À venir :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Le programme de PgConf Europe 2024, qui a lieu à Athènes, est publié : &lt;a href=&#34;https://www.postgresql.eu/events/pgconfeu2024/schedule/&#34; title=&#34;https://www.postgresql.eu/events/pgconfeu2024/schedule/&#34;&gt;https://www.postgresql.eu/events/pg...&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</summary>
    <author>
      <name>Sébastien Lardière</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL Hebdo #114</title>
    <updated>2024-06-28T14:14:00Z</updated>
    <id>tag:sebastien.lardiere.net,2024-06-28:/blog/index.php/post/2024/06/28/PostgreSQL-Hebdo-114</id>
    <link href="http://sebastien.lardiere.net/blog/index.php/post/2024/06/28/PostgreSQL-Hebdo-114" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lu ces dernières semaines :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/testing-dbtune-showing-postgresql-double-buffering-some-franck-pachot-voyhe/&#34;&gt;Testing DBtune, showing PostgreSQL double buffering, and some thoughts about automated database tuning for SQL databases&lt;/a&gt; : retour sur l&#39;utilisation de l&#39;outil DBtune, suite à l&#39;atelier éponyme lors du PGDay.fr à Lille ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.ploeh.dk/2024/06/03/youll-regret-using-natural-keys/&#34;&gt;You&#39;ll regret using natural keys&lt;/a&gt; : la notion de clé primaire naturelle est en réalité loin d&#39;être simple ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.loxodata.com/post/formes-normales/&#34;&gt;Les formes normales&lt;/a&gt; : une introduction aux formes normales ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://stborden.wordpress.com/2024/06/18/reduce-vacuum-by-using-on-conflict-directive/&#34;&gt;Reduce Vacuum by Using “ON CONFLICT” Directive&lt;/a&gt; : ou on comprend qu&#39;une insertion dans une table peut générer du « bloat » ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.loxodata.com/post/logical-replication-with-patroni/&#34;&gt;Réplication logique et Patroni&lt;/a&gt; : retour sur l&#39;utilisation de slots dans un cluster Patroni ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cybertec-postgresql.com/en/making-the-postgresql-visibility-map-visible/&#34;&gt;Making the PostgreSQL visibility map visible&lt;/a&gt; : plongée dans les détails internes du stockage des données et des index et de leurs optimisations parfois contre-intuitives ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/news/postgresql-17-beta-2-released-2885/&#34;&gt;PostgreSQL 17 Beta 2 Released!&lt;/a&gt; : le cycle de publication de PostgreSQL 17 continue avec la version beta2 ; Testez-là !&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.percona.com/blog/upgrading-to-the-new-etcd-version-from-3-3-for-patroni/&#34;&gt;Upgrading to the New Etcd Version From 3.3 for Patroni&lt;/a&gt; : la gestion d&#39;un cluster Patroni passe par la maitrise des différents composants du cluster, ici, le DCS Etcd ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.ongres.com/blog/toast_and_its_influences_-on_parallelism_in_postgres/&#34;&gt;TOAST and its influences on parallelism in PostgreSQL&lt;/a&gt; : de la détermination d&#39;un plan d&#39;exéction en fonction de la taille des TOASTs.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://2024.pgconf.eu/call-for-papers/&#34; title=&#34;https://2024.pgconf.eu/call-for-papers/&#34;&gt;https://2024.pgconf.eu/call-for-pap...&lt;/a&gt; : derniers jours pour soumettre un sujet à la prochaine conférence européenne sur PostgreSQL !&lt;/li&gt;&#xA;&lt;/ul&gt;</summary>
    <author>
      <name>Sébastien Lardière</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL Hebdo #113</title>
    <updated>2024-06-14T14:25:00Z</updated>
    <id>tag:sebastien.lardiere.net,2024-06-14:/blog/index.php/post/2024/06/14/PostgreSQL-Hebdo-113</id>
    <link href="http://sebastien.lardiere.net/blog/index.php/post/2024/06/14/PostgreSQL-Hebdo-113" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lu ces dernières semaines :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.percona.com/blog/administering-a-patroni-managed-postgresql-cluster/&#34;&gt;Administering a Patroni Managed PostgreSQL Cluster&lt;/a&gt; : un tutoriel assez complet pour prendre en main Patroni ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.stephane-robert.info/docs/services/bdd/relationnelles/introduction/&#34;&gt;Les bases de données relationnelles&lt;/a&gt; et &lt;a href=&#34;https://blog.stephane-robert.info/docs/services/bdd/relationnelles/postgresql/introduction/&#34;&gt;Introduction à PostgreSQL&lt;/a&gt; : Deux documentations, en français, claires et accessibles ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.dalibo.com/2024/06/03/ldap2pg-6.1.html&#34;&gt;ldap2pg 6.1 disponible&lt;/a&gt; : nouvelle version de l&#39;outil ldap2pg, qui permet de synchroniser des rôles depuis un annuaire ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.enterprisedb.com/blog/finding-memory-leaks-postgres-c-code&#34;&gt;Finding memory leaks in Postgres C code&lt;/a&gt; : quelques explications simples à propos d&#39;outils détectant une éventuelle fuite mémoire dans PostgreSQL ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://h50146.www5.hpe.com/products/software/oe/linux/mainstream/support/lcc/pdf/PostgreSQL_17_Beta_1_New_Features_en_202405125-1.pdf&#34;&gt;PostgreSQL 17 New Features With Examples (Beta 1)&lt;/a&gt; (pdf)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog-postgresql.verite.pro/2024/06/07/pg17-utf8-collation.html&#34;&gt;On analyse la nouvelle collation de PostgreSQL 17&lt;/a&gt; : les tris et recherche de texte nécessitent de correctement choisir les collations, et la version 17 simplifie ce choix ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://rss2tg.duck.consulting/tuning_postgresql_to_reduce_ssd_wearout.html&#34;&gt;Tuning PostgreSQL to reduce SSD wearout&lt;/a&gt; : intéressant, il y a des choses à prendre, mais attention à vos données ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://tembo.io/blog/optimizing-memory-usage&#34;&gt;How to Get the Most out of Postgres Memory Settings&lt;/a&gt; : retour sur l&#39;utilisation de la mémoire par PostgreSQL ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://2024.pgconf.eu/call-for-papers/&#34; title=&#34;https://2024.pgconf.eu/call-for-papers/&#34;&gt;https://2024.pgconf.eu/call-for-pap...&lt;/a&gt; : Il est temps de proposer un sujet de présentation pour la conférence européenne sur PostgreSQL, qui aura lieu à Athènes au mois d&#39;octobre.&lt;/li&gt;&#xA;&lt;/ul&gt;</summary>
    <author>
      <name>Sébastien Lardière</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL Hebdo #112</title>
    <updated>2024-05-31T15:17:00Z</updated>
    <id>tag:sebastien.lardiere.net,2024-05-31:/blog/index.php/post/2024/05/31/PostgreSQL-Hebdo-112</id>
    <link href="http://sebastien.lardiere.net/blog/index.php/post/2024/05/31/PostgreSQL-Hebdo-112" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lu ces dernières semaines :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/news/postgresql-17-beta-1-released-2865/&#34;&gt;PostgreSQL 17 Beta 1 Released!&lt;/a&gt; : c&#39;est le moment de tester !&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://rhaas.blogspot.com/2024/05/hacking-on-postgresql-is-really-hard.html&#34;&gt;Hacking on PostgreSQL is Really Hard&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://ivdl.co.za/2024/05/29/achieving-a-100x-speedup-of-deletes-on-postgresql/&#34;&gt;Achieving a 100x speedup of DELETEs on PostgreSQL&lt;/a&gt; : performance des suppressions, clé étrangère et index ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://notso.boringsql.com/posts/custom-postgresql-extensions-with-rust/&#34;&gt;Custom PostgreSQL extensions with Rust&lt;/a&gt; : utiliser du Rust dans PostgreSQL ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cybertec-postgresql.com/en/why-do-i-have-a-slow-commit-in-postgresql/&#34;&gt;Why do I have a slow COMMIT in PostgreSQL?&lt;/a&gt; : différentes réponses qui nécessitent de plonger dans les arcanes de nos bases de données et des systèmes sous-jacents ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.depesz.com/2024/05/22/waiting-for-postgresql-17-merge-split-partitions/&#34;&gt;Waiting for PostgreSQL 17 – MERGE / SPLIT partitions&lt;/a&gt; : Il est parfois nécessaire de ranger ses affaires ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/cybertec-postgresql/pgwatch3/&#34;&gt;pgwatch3&lt;/a&gt; va prendre la suite de pgwatch2 ;&lt;/li&gt;&#xA;&lt;/ul&gt;</summary>
    <author>
      <name>Sébastien Lardière</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL Hebdo #111</title>
    <updated>2024-04-19T14:28:00Z</updated>
    <id>tag:sebastien.lardiere.net,2024-04-19:/blog/index.php/post/2024/04/19/PostgreSQL-Hebdo-111</id>
    <link href="http://sebastien.lardiere.net/blog/index.php/post/2024/04/19/PostgreSQL-Hebdo-111" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lu ces derniers temps :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.shayon.dev/post/2023/355/do-you-really-need-foreign-keys/&#34;&gt;Do you really need Foreign Keys?&lt;/a&gt; : une clé étrangère a en effet des conséquences en termes de performance. Peut-on pour autant s&#39;en passer ?&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.deblan.io/post/660/anonymiser-une-base-de-donnees-mysql-et-postgresql&#34;&gt;Anonymiser une base de données MySQL et PostgreSQL&lt;/a&gt; : l&#39;anonymisation est devenue essentielle pour protéger les données personnelles tout en permettant de travailler sur des volumes de données proche de la réalité, donc souvent des données issues de système de production. Ce type d&#39;outil devient donc indispensable ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.citusdata.com/blog/2024/04/04/pgbouncer-supports-more-session-vars/&#34;&gt;PgBouncer Connection Pooler for Postgres Now Supports More Session Vars&lt;/a&gt; : support des variables de sessions dans PgBouncer, très utile lors de l&#39;utilisation du mode « transaction » ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://aliramadhan.me/2024/03/31/trillion-rows.html&#34;&gt;Building a weather data warehouse part I: Loading a trillion rows of weather data into TimescaleDB&lt;/a&gt; : de l&#39;utilisation de TimescaleDB, de COPY et autres outils pour ingérer des milliards d&#39;enregistrements ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/commandprompt/pgmanage?tab=readme-ov-file#pgmanage-10-release&#34;&gt;PgManage 1.0 Release&lt;/a&gt; : première publication majeure du fork d&#39;OmniDB ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.anayrat.info/2024/02/05/postgres-a-nouveau-elu-sgbd-de-lannee-en-2023-mais-je-suis-inquiet/&#34;&gt;Postgres à nouveau élu SGBD de l&#39;année en 2023, mais je suis inquiet&lt;/a&gt; : en français, quelques réflexions sur le métier de DBA ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://lwn.net/SubscriberLink/968300/c3a1c8bb070076c8/&#34;&gt;The PostgreSQL community debates ALTER SYSTEM&lt;/a&gt; : intéressant retour sur l&#39;adoption d&#39;une fonctionnalité dans PostgreSQL, et les interactions parfois difficiles mais nécessaire ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.pinaraf.info/2024/03/look-ma-i-wrote-a-new-jit-compiler-for-postgresql/&#34;&gt;Look ma, I wrote a new JIT compiler for PostgreSQL&lt;/a&gt; : un exemple de la modularité de PostgreSQL ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.figma.com/fr/blog/how-figmas-databases-team-lived-to-tell-the-scale/&#34;&gt;How Figma’s databases team lived to tell the scale&lt;/a&gt; : un bon exemple de gestion d&#39;architecture de bases de données quand le volume s&#39;acroit ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://rmarcus.info/blog/2024/04/12/pg-over-time.html&#34;&gt;Ten years of improvements in PostgreSQL&#39;s optimizer&lt;/a&gt; : mesures des améliorations du Planner.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&lt;p&gt;À venir dans PostgreSQL 17 :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://pganalyze.com/blog/5mins-postgres-17-faster-vacuum-adaptive-radix-trees&#34;&gt;Faster VACUUM with Adaptive Radix Trees&lt;/a&gt; : une amélioration des performances de VACUUM basée sur des travaux de recherches ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.depesz.com/2024/04/11/waiting-for-postgresql-17-add-support-for-merge-when-not-matched-by-source/&#34;&gt;Add support for MERGE … WHEN NOT MATCHED BY SOURCE.&lt;/a&gt; : à venir dans PostgreSQL 17, une amélioration de la commande MERGE permettant de travailler sur la source des données ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.depesz.com/2024/03/19/waiting-for-postgresql-17-add-returning-support-to-merge/&#34;&gt;Add RETURNING support to MERGE&lt;/a&gt; : support de la clause RETURNING (non-standard) pour la commande MERGE ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://andyatkinson.com/blog/2024/04/16/postgresql-17-merge-split-partitions&#34;&gt;Use Cases for Merging and Splitting Partitions With Minimal Locking in PostgreSQL 17&lt;/a&gt; : Fusion et division de partitions, attention toutefois aux verrous ;&lt;/li&gt;&#xA;&lt;/ul&gt;</summary>
    <author>
      <name>Sébastien Lardière</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL 17 : des sauvegardes incrémentales avec pg_basebackup</title>
    <updated>2024-07-16T11:24:05Z</updated>
    <id>tag:blog.capdata.fr,2024-07-16:/index.php/postgresql-17-sauvegardes-incrementales/</id>
    <content type="html">&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10584&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10584&amp;#038;title=PostgreSQL%2017%20%3A%20des%20sauvegardes%20incr%C3%A9mentales%20avec%20pg_basebackup&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=PostgreSQL%2017%20%3A%20des%20sauvegardes%20incr%C3%A9mentales%20avec%20pg_basebackup&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10584&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;alignnone size-full wp-image-10592&#34; src=&#34;https://blog.capdata.fr/wp-content/uploads/2024/07/SalesGrowth.jpg&#34; alt=&#34;&#34; width=&#34;279&#34; height=&#34;180&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Bonjour&lt;/p&gt;&#xA;&lt;p&gt;Les 11 et 12 juin derniers, nous étions aux journées PGDAY à Lille pour découvrir les nouveautés autour de PostgreSQL.&lt;br /&gt;&#xA;Cette conférence regroupe différents professionnels, de la communauté francophone, qui agissent en contribuant sur des sujets techniques mais aussi sur les bonnes pratiques afin d&amp;#8217;utiliser PostgreSQL dans les meilleurs conditions.&lt;/p&gt;&#xA;&lt;p&gt;Un article m&amp;#8217;a particulièrement intéressé cette année, c&amp;#8217;est celui de &lt;a href=&#34;https://www.linkedin.com/in/stefan-fercot/?originalSubdomain=be&#34;&gt;Stefan Fercot&lt;/a&gt; Senior DBA PostgreSQL qui vit en Belgique, et travaille pour une société allemande experte dans les solutions PostgreSQL. Sa présentation portait sur le sujet &amp;#8220;démystifier les sauvegardes incrémentales sous PostgreSQL&amp;#8221;.&lt;/p&gt;&#xA;&lt;p&gt;J&amp;#8217;ai écouté sa conférence tout en ayant hâte de tester sa mise en place dès mon retour de Lille.&lt;/p&gt;&#xA;&lt;p&gt;Je tiens à remercier Stefan pour son travail sur ce sujet sauvegardes PostgreSQL.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Tout d&amp;#8217;abord, il faut savoir que les sujets sauvegardes incrémentales ont été déjà abordés avec des outils comme &lt;strong&gt;Barman&lt;/strong&gt; ou &lt;strong&gt;Pg_BackRest&lt;/strong&gt;, et que certaines instances PostgreSQL de production sont sauvegardées via ces mécanismes depuis quelques années maintenant.&lt;/p&gt;&#xA;&lt;p&gt;Ici, nous parlons de la solution &amp;#8220;backup incremental&amp;#8221; inclu nativement dans le moteur PostgreSQL, et disponible avec l&amp;#8217;outil &amp;#8220;&lt;strong&gt;pg_basebackup&lt;/strong&gt;&amp;#8220;. C&amp;#8217;est d&amp;#8217;ailleurs ce point que Stefan a souligné durant la journée PGDAY du 11 juin dernier.&lt;/p&gt;&#xA;&lt;p&gt;Cette nouvelle fonctionnalité fait partie de la version &lt;strong&gt;PostgreSQL 17&lt;/strong&gt; qui est pour le moment, en version&lt;strong&gt; Beta 2&lt;/strong&gt;.&lt;br /&gt;&#xA;Celle ci devrait sortir, comme à l&amp;#8217;accoutumé, au cour de l&amp;#8217;automne prochain.&lt;/p&gt;&#xA;&lt;p&gt;Preuve que PostgreSQL est en perpétuel évolution, et rejoint la liste des SGBD étant capable, comme peuvent le faire Oracle et SQL Server, de proposer nativement des sauvegardes incrémentales.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;h2&gt;Installation de PostgreSQL 17&lt;/h2&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Pour tester cette fonctionnalité, nous devons installer la toute dernière version de PostgreSQL , la 17 beta 2. Attention, celle ci n&amp;#8217;étant pas disponible dans les dépôts PGDG, nous devons nous charger d&amp;#8217;installer cette version via le site postgresql.org&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://download.postgresql.org/pub/repos/yum/testing/17/redhat/rhel-8-x86_64/&#34;&gt;https://download.postgresql.org/pub/repos/yum/testing/17/redhat/rhel-8-x86_64/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Nous disposons d&amp;#8217;un serveur Linux fork Red Hat 8 (Rocky Linux). Il nous faut donc télécharger les &amp;#8220;rpm&amp;#8221; liés à cette version.&lt;/p&gt;&#xA;&lt;p&gt;Les packages dont nous avons besoin sont les suivants&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;# ls -lrt postgresql1* | awk &#39;{print$9}&#39;&#xD;&#xA;postgresql17-contrib-17-beta2_1PGDG.rhel8.x86_64.rpm&#xD;&#xA;postgresql17-17-beta2_1PGDG.rhel8.x86_64.rpm&#xD;&#xA;postgresql17-libs-17-beta2_1PGDG.rhel8.x86_64.rpm&#xD;&#xA;postgresql17-server-17-beta2_1PGDG.rhel8.x86_64.rpm&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Nous les installons avec le compte &lt;strong&gt;root&lt;/strong&gt; de notre serveur.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[root@ tmp]# rpm -i postgresql17-libs-17-beta2_1PGDG.rhel8.x86_64.rpm&#xD;&#xA;[root@ tmp]# rpm -i postgresql17-17-beta2_1PGDG.rhel8.x86_64.rpm&#xD;&#xA;[root@ tmp]# rpm -i postgresql17-server-17-beta2_1PGDG.rhel8.x86_64.rpm&#xD;&#xA;[root@ tmp]# rpm -i postgresql17-contrib-17-beta2_1PGDG.rhel8.x86_64.rpm&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Comme nous sommes sur un environnement &amp;#8220;Red Hat like&amp;#8221;, la création d&amp;#8217;une première instance via &amp;#8220;initdb&amp;#8221; est nécessaire.&lt;br /&gt;&#xA;Surtout, ne pas oublier d&amp;#8217;activer les &amp;#8220;data checksums&amp;#8221; (option -k), nous verrons pourquoi dans la suite de cet article. La suite est à faire avec le compte &lt;strong&gt;postgres&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres ~]$ initdb -D /data/postgres/17/pg_data -k&#xD;&#xA;The files belonging to this database system will be owned by user &amp;quot;postgres&amp;quot;.&#xD;&#xA;This user must also own the server process.&#xD;&#xA;&#xD;&#xA;The database cluster will be initialized with locale &amp;quot;en_US.UTF-8&amp;quot;.&#xD;&#xA;The default database encoding has accordingly been set to &amp;quot;UTF8&amp;quot;.&#xD;&#xA;The default text search configuration will be set to &amp;quot;english&amp;quot;.&#xD;&#xA;&#xD;&#xA;Data page checksums are enabled.&#xD;&#xA;&#xD;&#xA;creating directory /data/postgres/17/pg_data ... ok&#xD;&#xA;creating subdirectories ... ok&#xD;&#xA;selecting dynamic shared memory implementation ... posix&#xD;&#xA;selecting default &amp;quot;max_connections&amp;quot; ... 100&#xD;&#xA;selecting default &amp;quot;shared_buffers&amp;quot; ... 128MB&#xD;&#xA;selecting default time zone ... UTC&#xD;&#xA;creating configuration files ... ok&#xD;&#xA;running bootstrap script ... ok&#xD;&#xA;performing post-bootstrap initialization ... ok&#xD;&#xA;syncing data to disk ... ok&#xD;&#xA;&#xD;&#xA;initdb: warning: enabling &amp;quot;trust&amp;quot; authentication for local connections&#xD;&#xA;initdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run initdb.&#xD;&#xA;&#xD;&#xA;Success. You can now start the database server using:&#xD;&#xA;&#xD;&#xA;pg_ctl -D /data/postgres/17/pg_data -l logfile start&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Démarrer cette instance pour s&amp;#8217;assurer que tout fonctionne&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres ~]$ pg_ctl -D /data/postgres/17/pg_data -l logfile start&#xD;&#xA;waiting for server to start.... done&#xD;&#xA;server started&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Notre version enregistrée est bien une Beta 2. Version qui ne doit pas être mise sur un environnement de production comme le rappelle le site de la communauté PostgreSQL.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres ~]$ psql&#xD;&#xA;(postgres@[local]:5437) [postgres] &amp;gt; select * from version();&#xD;&#xA;version&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;PostgreSQL 17beta2 on x86_64-pc-linux-gnu, compiled by gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-22), 64-bit&#xD;&#xA;(1 row)&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;h3&gt;Upgrade de version&lt;/h3&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Comme nous disposions deja d&amp;#8217;une version PostgreSQL15 sur ce serveur, nous passons par un upgrade via l&amp;#8217;outil &amp;#8220;pg_upgrade&amp;#8221; toujours disponible dans cette nouvelle version.&lt;/p&gt;&#xA;&lt;p&gt;Lancer pg_upgrade en mode check&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres ~]$ pg_upgrade -b /usr/pgsql-15/bin/ -B /usr/pgsql-17/bin/ -c -d /data/postgres/15/pg_data/ -D /data/postgres/17/pg_data/ -p 5434 -P 5437&#xD;&#xA;.....&#xD;&#xA;.....&#xD;&#xA;&#xD;&#xA;*Clusters are compatible*&#xD;&#xA;&amp;quot;/usr/pgsql-17/bin/pg_ctl&amp;quot; -w -D &amp;quot;/data/postgres/17/pg_data&amp;quot; -o &amp;quot;&amp;quot; -m smart stop  &amp;quot;/data/postgres/17/pg_data/pg_upgrade_output.d/20240708T085906.955/log/pg_upgrade_server.log&amp;quot; &lt;/pre&gt;&#xA;&lt;p&gt;la log est générée dans le $PGDATA de la version 17.&lt;/p&gt;&#xA;&lt;p&gt;Puis lancer l&amp;#8217;exécution de pg_upgrade&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres ~]$ pg_upgrade -b /usr/pgsql-15/bin/ -B /usr/pgsql-17/bin/ -d /data/postgres/15/pg_data/ -D /data/postgres/17/pg_data/ -p 5434 -P 5437&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;h2&gt;Effectuer une sauvegarde&lt;/h2&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;h3&gt;Prérequis&lt;/h3&gt;&#xA;&lt;p&gt;Avant de pouvoir effectuer une première sauvegarde avec l&amp;#8217;outil &amp;#8220;&lt;strong&gt;pg_basebackup&lt;/strong&gt;&amp;#8221; natif, il est primordial de respecter certains prérequis important.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;L&amp;#8217;instance PostgreSQL doit être créée avec les &amp;#8216;data checksums&amp;#8217; activés. Si ce n&amp;#8217;est pas le cas, utiliser l&amp;#8217;outil &amp;#8220;&lt;strong&gt;pg_checksums&lt;/strong&gt;&amp;#8221; avec l&amp;#8217;option &amp;#8220;&lt;strong&gt;-e&lt;/strong&gt;&amp;#8220;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Si vous lancez une sauvegarde full puis une incrémentale immédiatement, vous avez toutes les chances de tomber sur cette erreur&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;pg_basebackup: error: could not initiate base backup: ERROR: incremental backups cannot be taken unless WAL summarization is enabled&lt;/pre&gt;&#xA;&lt;p&gt;En effet, pour avoir toutes les informations concernant les blocks modifiés, PostgreSQL a besoin de tracer dans les WALs toutes les modifications sur les objets en base.&lt;br /&gt;&#xA;Pour les DBA Oracle, le &amp;#8220;block change tracking&amp;#8221; de la version Enterprise Edition vous parlera très certainement&amp;#8230;.&lt;br /&gt;&#xA;Il s&amp;#8217;agit ici de la même fonctionnalité, c&amp;#8217;est à dire, tracer les modifications effectuées dans les blocks de données.&lt;br /&gt;&#xA;Cette option est le &amp;#8220;&lt;strong&gt;summarize_wal&lt;/strong&gt;&amp;#8220;.&lt;/p&gt;&#xA;&lt;p&gt;Pour activer l&amp;#8217;option, nous aurons 2 paramètres à modifier, soit via un ALTER SYSTEM directement sous psql, ou bien dans le fichier &amp;#8220;postgresql.conf&amp;#8221;.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres backup]$ vi $PGDATA/postgresql.conf&#xD;&#xA;...&#xD;&#xA;&#xD;&#xA;# - WAL Summarization -&#xD;&#xA;&#xD;&#xA;#summarize_wal = off # run WAL summarizer process?&#xD;&#xA;#wal_summary_keep_time = &#39;10d&#39; # when to remove old summary files, 0 = never&lt;/pre&gt;&#xA;&lt;p&gt;Le premier paramètre permet d&amp;#8217;activer cette option.&lt;br /&gt;&#xA;Le second définit un temps de conservation des informations concernant les blocks modifiés entre une sauvegarde FULL et un incrémentale.&lt;/p&gt;&#xA;&lt;p&gt;Nous activons donc l&amp;#8217;option &amp;#8220;&lt;strong&gt;summarize_wal&lt;/strong&gt;&amp;#8221; et la passons à &lt;strong&gt;ON&lt;/strong&gt; et laissons à 10 jours le &amp;#8220;&lt;strong&gt;wal_summary_keep_time&lt;/strong&gt;&amp;#8220;.&lt;/p&gt;&#xA;&lt;p&gt;Attention, activez ces deux paramètres avant votre première sauvegarde FULL. Si vous le faites après, vous risquez de rencontrer l&amp;#8217;erreur suivante&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;pg_basebackup: error: could not initiate base backup: ERROR: WAL summaries are required on timeline 1 from 1/AA000028 to 1/AC000060, but the summaries for that timeline and LSN range are incomplete&#xD;&#xA;DETAIL: The first unsummarized LSN in this range is 1/AA000028.&lt;/pre&gt;&#xA;&lt;p&gt;Le LSN pris lors de la première sauvegarde FULL n&amp;#8217;est pas reconnu, et donc la sauvegarde incrémentale ne peut s&amp;#8217;appuyer dessus.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Redémarrer l&amp;#8217;instance une fois les modifications effectuées&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres ~]$ pg_ctl -D /data/postgres/17/pg_data/ restart&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;h3&gt;Lancer une sauvegarde FULL&lt;/h3&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Voici la nouvelle option présente pour l&amp;#8217;outil &amp;#8220;&lt;strong&gt;pg_basebackup&lt;/strong&gt;&amp;#8221;&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres -]$ pg_basebackup --help&#xD;&#xA;pg_basebackup takes a base backup of a running PostgreSQL server.&#xD;&#xA;&#xD;&#xA;Usage:&#xD;&#xA;pg_basebackup [OPTION]...&#xD;&#xA;&#xD;&#xA;Options controlling the output:&#xD;&#xA;-D, --pgdata=DIRECTORY receive base backup into directory&#xD;&#xA;-F, --format=p|t output format (plain (default), tar)&#xD;&#xA;-i, --incremental=OLDMANIFEST&#xD;&#xA;take incremental backup&#xD;&#xA;-r, --max-rate=RATE maximum transfer rate to transfer data directory&#xD;&#xA;(in kB/s, or use suffix &amp;quot;k&amp;quot; or &amp;quot;M&amp;quot;)&#xD;&#xA;&#xD;&#xA;.... &lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Depuis la &lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-13-les-nouveautes-interessantes/&#34;&gt;version 13&lt;/a&gt; de PostgreSQL, nous disposons pour chaque sauvegarde, d&amp;#8217;un fichier nommé &amp;#8220;backup_manifest&amp;#8221;. Il s&amp;#8217;agit d&amp;#8217;un fichier json qui recense entièrement les objets bases de données sauvegardés avec leur emplacement, leur taille, leur date de modification et leur &amp;#8220;checksum&amp;#8221;.&lt;/p&gt;&#xA;&lt;p&gt;Celui ci est essentiel pour vérifier l&amp;#8217;intégrité de notre sauvegarde avec &amp;#8220;&lt;strong&gt;pg_verifybackup&lt;/strong&gt;&amp;#8220;.&lt;/p&gt;&#xA;&lt;p&gt;Nous pouvons à présent faire une première sauvegarde FULL de notre instance PG17.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres -]$ pg_basebackup -D /data/postgres/backup/pg_basebackup/PG17 -F p -l &amp;quot;Full Backup PG17&amp;quot; -P -v&#xD;&#xA;pg_basebackup: initiating base backup, waiting for checkpoint to complete&#xD;&#xA;pg_basebackup: checkpoint completed&#xD;&#xA;pg_basebackup: write-ahead log start point: 1/AD000028 on timeline 1&#xD;&#xA;pg_basebackup: starting background WAL receiver&#xD;&#xA;pg_basebackup: created temporary replication slot &amp;quot;pg_basebackup_8048&amp;quot;&#xD;&#xA;3097788/3097788 kB (100%), 1/1 tablespace&#xD;&#xA;pg_basebackup: write-ahead log end point: 1/AD000158&#xD;&#xA;pg_basebackup: waiting for background process to finish streaming ...&#xD;&#xA;pg_basebackup: syncing data to disk ...&#xD;&#xA;pg_basebackup: renaming backup_manifest.tmp to backup_manifest&#xD;&#xA;pg_basebackup: base backup completed&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Puis on effectue quelques transactions : création d&amp;#8217;une table et insertions de données sur cette table de test&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;(postgres@[local]:5437) [manu] $ &amp;gt; create table backup (nom varchar(20), type varchar(20), date_backup date);&#xD;&#xA;CREATE TABLE&#xD;&#xA;Time: 3.344 ms&#xD;&#xA;&#xD;&#xA;(postgres@[local]:5437) [manu] $ &amp;gt; insert into backup values (&#39;sauvegarde&#39;,&#39;FULL&#39;,&#39;2024-07-08 12:00:00&#39;);&#xD;&#xA;INSERT 0 1&#xD;&#xA;Time: 3.612 ms&#xD;&#xA;(postgres@[local]:5437) [manu] $ &amp;gt; insert into backup values (&#39;sauvegarde&#39;,&#39;incremental&#39;,&#39;2024-07-08 13:00:00&#39;);&#xD;&#xA;INSERT 0 1&#xD;&#xA;Time: 1.461 ms&#xD;&#xA;&#xD;&#xA;(postgres@[local]:5437) [manu] $ &amp;gt; select * from backup;&#xD;&#xA;nom | type | date_backup&#xD;&#xA;------------+-------------+-------------&#xD;&#xA;sauvegarde | FULL | 2024-07-08&#xD;&#xA;sauvegarde | incremental | 2024-07-08&#xD;&#xA;(2 rows)&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Repérer le fichier &amp;#8220;backup_manifest&amp;#8221; de la sauvegarde FULL réalisée dans le dossier &amp;#8220;&lt;strong&gt;/data/postgres/backup/pg_basebackup/PG17&lt;/strong&gt;&amp;#8221;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres PG17]$ ls -lrt backup*&#xD;&#xA;-rw-------. 1 postgres postgres 218 Jul 8 09:19 backup_label&#xD;&#xA;-rw-------. 1 postgres postgres 433295 Jul 8 09:20 backup_manifest&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;h3&gt;Effectuer une sauvegarde incrémentale&lt;/h3&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;A partir de là, lancer une sauvegarde incrémentale. Nous utilisons l&amp;#8217;option &amp;#8220;&lt;strong&gt;-i&lt;/strong&gt;&amp;#8221; pour indiquer à &lt;strong&gt;pg_basebackup&lt;/strong&gt; ou est situé le &amp;#8220;backup_manifest&amp;#8221; de la dernière sauvegarde FULL.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres - ]$ pg_basebackup -D /data/postgres/backup/pg_basebackup/PG17_incr -l &amp;quot;Incremental Backup PG17&amp;quot; -P -v -i /data/postgres/backup/pg_basebackup/PG17/backup_manifest&#xD;&#xA;pg_basebackup: initiating base backup, waiting for checkpoint to complete&#xD;&#xA;pg_basebackup: checkpoint completed&#xD;&#xA;pg_basebackup: write-ahead log start point: 1/AF000028 on timeline 1&#xD;&#xA;pg_basebackup: starting background WAL receiver&#xD;&#xA;pg_basebackup: created temporary replication slot &amp;quot;pg_basebackup_8139&amp;quot;&#xD;&#xA;12485/3097787 kB (100%), 1/1 tablespace&#xD;&#xA;pg_basebackup: write-ahead log end point: 1/AF000120&#xD;&#xA;pg_basebackup: waiting for background process to finish streaming ...&#xD;&#xA;pg_basebackup: syncing data to disk ...&#xD;&#xA;pg_basebackup: renaming backup_manifest.tmp to backup_manifest&#xD;&#xA;pg_basebackup: base backup completed&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;S&amp;#8217;il l&amp;#8217;on compare les deux répertoires de sauvegardes &amp;#8220;&lt;strong&gt;/data/postgres/backup/pg_basebackup/PG17&lt;/strong&gt;&amp;#8221; et &amp;#8220;&lt;strong&gt;/data/postgres/backup/pg_basebackup/PG17_incr&lt;/strong&gt;&amp;#8220;, nous voyons que les tailles sont bien différentes&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres - ]$ du -h /data/postgres/backup/pg_basebackup/PG17&#xD;&#xA;......&#xD;&#xA;3.0G /data/postgres/backup/pg_basebackup/PG17&#xD;&#xA;&#xD;&#xA;[postgres - ]$ du -h /data/postgres/backup/pg_basebackup/PG17_incr&#xD;&#xA;......&#xD;&#xA;35M /data/postgres/backup/pg_basebackup/PG17_incr&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Un volume de 3Go pour la sauvegarde FULL de l&amp;#8217;instance contre 35Mo pour l&amp;#8217;incrémentale.&lt;br /&gt;&#xA;La taille occupée par les objets dans chacune des bases est bien plus faible dans la sauvegarde incrémentale.&lt;/p&gt;&#xA;&lt;p&gt;Nous continuons à insérer des données :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt; [postgres - ]$ psql -d manu&#xD;&#xA;&#xD;&#xA;(postgres@[local]:5437) [manu] $ &amp;gt; select * from backup;&#xD;&#xA;nom | type | date_backup&#xD;&#xA;------------+-------------+-------------&#xD;&#xA;sauvegarde | FULL | 2024-07-08&#xD;&#xA;sauvegarde | incremental | 2024-07-08&#xD;&#xA;(2 rows)&#xD;&#xA;&#xD;&#xA;Time: 0.614 ms&#xD;&#xA;(postgres@[local]:5437) [manu] $ &amp;gt; insert into backup values (&#39;sauvegarde&#39;,&#39;incremental 2&#39;,&#39;2024-07-08 14:00:00&#39;);&#xD;&#xA;INSERT 0 1&#xD;&#xA;Time: 1.436 ms&#xD;&#xA;(postgres@[local]:5437) [manu] $ &amp;gt; select * from backup;&#xD;&#xA;nom | type | date_backup&#xD;&#xA;------------+---------------+-------------&#xD;&#xA;sauvegarde | FULL | 2024-07-08&#xD;&#xA;sauvegarde | incremental | 2024-07-08&#xD;&#xA;sauvegarde | incremental 2 | 2024-07-08&#xD;&#xA;(3 rows)&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Puis on lance une seconde sauvegarde incrémentale :&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres - ]$ pg_basebackup -D /data/postgres/backup/pg_basebackup/PG17_incr_2 -l &amp;quot;Incremental 2 Backup PG17&amp;quot; -P -v -i /data/postgres/backup/pg_basebackup/PG17_incr/backup_manifest&#xD;&#xA;pg_basebackup: initiating base backup, waiting for checkpoint to complete&#xD;&#xA;pg_basebackup: checkpoint completed&#xD;&#xA;pg_basebackup: write-ahead log start point: 1/B1000028 on timeline 1&#xD;&#xA;pg_basebackup: starting background WAL receiver&#xD;&#xA;pg_basebackup: created temporary replication slot &amp;quot;pg_basebackup_8313&amp;quot;&#xD;&#xA;12260/3097787 kB (100%), 1/1 tablespace&#xD;&#xA;pg_basebackup: write-ahead log end point: 1/B1000120&#xD;&#xA;pg_basebackup: waiting for background process to finish streaming ...&#xD;&#xA;pg_basebackup: syncing data to disk ...&#xD;&#xA;pg_basebackup: renaming backup_manifest.tmp to backup_manifest&#xD;&#xA;pg_basebackup: base backup completed&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Nous remarquons l&amp;#8217;appel au &amp;#8220;backup manifest&amp;#8221; de la dernière sauvegarde incrémentale présente dans le répertoire &amp;#8220;&lt;strong&gt;/data/postgres/backup/pg_basebackup/PG17_incr&lt;/strong&gt;&amp;#8221;&lt;/p&gt;&#xA;&lt;p&gt;Si l&amp;#8217;on regarde la taille de ce nouveau backup&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres pg_basebackup]$ du -h PG17_incr_2&#xD;&#xA;.......&#xD;&#xA;35M PG17_incr_2&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;A nouveau 35 Mo, mais vu le peu de modifications effectuées, la taille n&amp;#8217;est pas très représentative.&lt;/p&gt;&#xA;&lt;p&gt;Ce qu&amp;#8217;il faut retenir, c&amp;#8217;est qu&amp;#8217;en fonction du fichier &amp;#8220;backup manifest&amp;#8221; pris lors de l&amp;#8217;appel à &lt;strong&gt;pg_basebackup&lt;/strong&gt;, vous pourrez faire soit&lt;br /&gt;&#xA;&amp;#8211; une sauvegarde incrémentale qui prendra les dernières modifications depuis la dernière sauvegarde incrémentale effectuée.&lt;br /&gt;&#xA;&amp;#8211; une sauvegarde différentielle qui prendra les modifications faites depuis la dernière sauvegarde FULL si vous vous appuyez toujours sur le &amp;#8220;backup manifest&amp;#8221; de votre sauvegarde FULL.&lt;/p&gt;&#xA;&lt;p&gt;C&amp;#8217;est donc ce fichier json &amp;#8220;backup manifest&amp;#8221; qui a un rôle essentiel dans l&amp;#8217;élaboration de votre stratégie de sauvegarde au fur et à mesure du temps.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;h2&gt;Et la restauration , comment ca se passe ?&lt;/h2&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Si l&amp;#8217;on souhaite restaurer tous ces jeux de sauvegardes, nous utilisons un nouvel outil qui est &amp;#8220;&lt;strong&gt;pg_combinebackup&lt;/strong&gt;&amp;#8220;.&lt;br /&gt;&#xA;Cet outil permet de &amp;#8220;merger&amp;#8221; les différentes sauvegardes dans un et un seul dossier que l&amp;#8217;on restaurera par la suite.&lt;/p&gt;&#xA;&lt;p&gt;Dans notre exemple, nous avons fait 1 sauvegarde FULL puis 2 incrémentales.&lt;br /&gt;&#xA;Nous allons donc restaurer ces 3 jeux de sauvegardes afin de retrouver les données. A noter qu&amp;#8217;il existe une option &amp;#8220;&amp;#8211;dry-run&amp;#8221; pour tester la commande&lt;/p&gt;&#xA;&lt;p&gt;Exécuter la commande en prenant en paramètre les dossiers de sauvegardes dans l&amp;#8217;ordre chronologique.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres - ]$ pg_combinebackup -n -o /data/postgres/backup/pg_basebackup/PG17_ALL /data/postgres/backup/pg_basebackup/PG17 /data/postgres/backup/pg_basebackup/PG17_incr /data/postgres/backup/pg_basebackup/PG17_incr_2 &lt;/pre&gt;&#xA;&lt;p&gt;Si aucune erreur en sortie, on exécute sans l&amp;#8217;option &amp;#8220;dry run&amp;#8221;.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt; [postgres - ]$ pg_combinebackup -o /data/postgres/backup/pg_basebackup/PG17_ALL /data/postgres/backup/pg_basebackup/PG17 /data/postgres/backup/pg_basebackup/PG17_incr /data/postgres/backup/pg_basebackup/PG17_incr_2 &lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Le répertoire &amp;#8220;&lt;strong&gt;/data/postgres/backup/pg_basebackup/PG17_ALL&lt;/strong&gt;&amp;#8221; ainsi généré, doit avoir une taille très légèrement supérieure au dossier de la sauvegarde FULL.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres - ]$ du -h PG17_ALL&#xD;&#xA;....&#xD;&#xA;3.0G PG17_ALL&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Dernière étape, nous passons à la restauration des données.&lt;/p&gt;&#xA;&lt;p&gt;Nous arrêtons l&amp;#8217;instance PG17&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres - ]$ pg_ctl -D /data/postgres/17/pg_data/ stop&#xD;&#xA;waiting for server to shut down.... done&#xD;&#xA;server stopped&lt;/pre&gt;&#xA;&lt;p&gt;Nous supprimons les données dans $PGDATA&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres - ]$ rm -rf /data/postgres/17/pg_data/* &lt;/pre&gt;&#xA;&lt;p&gt;Puis nous restaurons ce jeu complet de données avec une simple copie.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres - ]$ cp -r /data/postgres/backup/pg_basebackup/PG17_ALL/* /data/postgres/17/pg_data/ &lt;/pre&gt;&#xA;&lt;p&gt;Enfin redémarrons l&amp;#8217;instance&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres - ]$ pg_ctl -D /data/postgres/17/pg_data/ start&#xD;&#xA;waiting for server to start....2024-07-08 10:51:45.671 UTC [8909] LOG: redirecting log output to logging collector process&#xD;&#xA;2024-07-08 10:51:45.671 UTC [8909] HINT: Future log output will appear in directory &amp;quot;log&amp;quot;.&#xD;&#xA;done&#xD;&#xA;server started&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Puis contrôler que nous récupérons bien toutes les lignes de notre table &amp;#8220;backup&amp;#8221;.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres@ip-172-44-2-96 pg_basebackup]$ psql -d manu&#xD;&#xA;(postgres@[local]:5437) [manu] primaire $ &amp;gt; select * from backup;&#xD;&#xA;nom | type | date_backup&#xD;&#xA;------------+---------------+-------------&#xD;&#xA;sauvegarde | FULL | 2024-07-08&#xD;&#xA;sauvegarde | incremental | 2024-07-08&#xD;&#xA;sauvegarde | incremental 2 | 2024-07-08&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;h3&gt;&lt;/h3&gt;&#xA;&lt;h3&gt;&lt;/h3&gt;&#xA;&lt;h3&gt;Remarques&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Attention, toujours vérifier les sauvegardes à chaque étape avec l&amp;#8217;outil &lt;strong&gt;pg_verifybackup &lt;/strong&gt;car rien ne garantit qu&amp;#8217;au moment de l&amp;#8217;appel à &lt;strong&gt;pg_combinebackup&lt;/strong&gt; les différents jeux de sauvegardes FULL et/ou incrémentales ne soient pas corrompus.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Assurez vous d&amp;#8217;être en mode &amp;#8220;data_checksum&amp;#8221; activé et ne pas changer de mode entre les jeux de backup. Le &amp;#8220;backup manifest&amp;#8221; s&amp;#8217;appuie sur ce paramétrage pour valider les checksums de chaque fichier.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Le mode TAR pour &lt;strong&gt;pg_basebackup&lt;/strong&gt; n&amp;#8217;est pas compatible pour les sauvegardes full et incrémentales même si celui ci est possible. Mais c&amp;#8217;est à vous de détarer les fichiers &amp;#8220;&lt;strong&gt;base.tar.gz&lt;/strong&gt;&amp;#8221; Et au moment de la restauration  avec &amp;#8220;&lt;strong&gt;pg_combinebackup&lt;/strong&gt;&amp;#8220;, une possible corruption est rencontrée.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres - ]$ pg_combinebackup -o /data/postgres/backup/pg_basebackup/PG17_all_tar /data/postgres/backup/pg_basebackup/PG17_TAR /data/postgres/backup/pg_basebackup/PG17_incr_TAR&#xD;&#xA;pg_combinebackup: error: could not write to file &amp;quot;/data/postgres/backup/pg_basebackup/PG17_all_tar/base/25284/25332&amp;quot;, offset 122470400: wrote 380928 of 409600&#xD;&#xA;pg_combinebackup: removing output directory &amp;quot;/data/postgres/backup/pg_basebackup/PG17_all_tar&amp;quot; &lt;/pre&gt;&#xA;&lt;p&gt;La compression a potentiellement ajoutée une corruption ne rendant pas possible l&amp;#8217;opération de &amp;#8220;merge&amp;#8221; des données.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;La restauration PITR est possible bien entendu. N&amp;#8217;oubliez pas de créer le &amp;#8220;&lt;strong&gt;recovery.signal&lt;/strong&gt;&amp;#8221; dans $PGDATA et de définir dans le fichier &amp;#8220;postgresql.conf&amp;#8221; les quelques paramètres suivants&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;span style=&#34;color: #3366ff;&#34;&gt;recovery_target_name &lt;/span&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;span style=&#34;color: #3366ff;&#34;&gt;recovery_target_time &lt;/span&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;span style=&#34;color: #3366ff;&#34;&gt;recovery_target_xid &lt;/span&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;span style=&#34;color: #3366ff;&#34;&gt;recovery_target_lsn &lt;/span&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;span style=&#34;color: #808000;&#34;&gt;recovery_target_inclusive = off ou on&lt;/span&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;span style=&#34;color: #808000;&#34;&gt;recovery_target_timeline = &amp;#8216;latest&amp;#8217; &lt;/span&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;span style=&#34;color: #808000;&#34;&gt;recovery_target_action = &amp;#8216;pause&amp;#8217; &lt;/span&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://s.w.org/images/core/emoji/15.0.3/72x72/1f642.png&#34; alt=&#34;🙂&#34; class=&#34;wp-smiley&#34; style=&#34;height: 1em; max-height: 1em;&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;strong&gt;Continuez votre lecture sur le blog :&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul class=&#34;similar-posts&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-la-streaming-replication-en-12/&#34; rel=&#34;bookmark&#34; title=&#34;19 novembre 2019&#34;&gt;PostgreSQL : la streaming replication en 12.&lt;/a&gt; (Emmanuel RAMI) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-13-les-nouveautes-interessantes/&#34; rel=&#34;bookmark&#34; title=&#34;30 octobre 2020&#34;&gt;PostgreSQL 13 : présentation&lt;/a&gt; (Emmanuel RAMI) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/oracle-rds-effectuer-des-backup-rman-en-mode-paas/&#34; rel=&#34;bookmark&#34; title=&#34;25 juin 2019&#34;&gt;Oracle RDS : effectuer des backup RMAN en mode PaaS.&lt;/a&gt; (Emmanuel RAMI) [AWSNon classéOracle]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-comparatif-entre-barman-et-pgbackrest/&#34; rel=&#34;bookmark&#34; title=&#34;4 février 2020&#34;&gt;PostgreSQL : Comparatif entre Barman et pgBackRest&lt;/a&gt; (Capdata team) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/haute-disponibilite-de-postgresql-avec-patroni/&#34; rel=&#34;bookmark&#34; title=&#34;2 février 2022&#34;&gt;Haute disponibilité de PostgreSQL avec Patroni&lt;/a&gt; (Ludovic AUGEREAU) [PostgreSQL]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;!-- Similar Posts took 3.074 ms --&gt;&lt;/p&gt;&#xA;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10584&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10584&amp;#038;title=PostgreSQL%2017%20%3A%20des%20sauvegardes%20incr%C3%A9mentales%20avec%20pg_basebackup&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=PostgreSQL%2017%20%3A%20des%20sauvegardes%20incr%C3%A9mentales%20avec%20pg_basebackup&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10584&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/postgresql-17-sauvegardes-incrementales/&#34;&gt;PostgreSQL 17 : des sauvegardes incrémentales avec pg_basebackup&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.capdata.fr/index.php/postgresql-17-sauvegardes-incrementales/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&amp;#160; Bonjour Les 11 et 12 juin derniers, nous étions aux journées PGDAY à Lille pour découvrir les nouveautés autour de PostgreSQL. Cette conférence regroupe différents professionnels, de la communauté francophone, qui agissent en contribuant sur des sujets techniques mais&amp;#8230; &lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-17-sauvegardes-incrementales/&#34; class=&#34;more-link&#34;&gt;Continuer la lecture &lt;span class=&#34;meta-nav&#34;&gt;&amp;#8594;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/postgresql-17-sauvegardes-incrementales/&#34;&gt;PostgreSQL 17 : des sauvegardes incrémentales avec pg_basebackup&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Emmanuel RAMI</name>
    </author>
  </entry>
  <entry>
    <title>PGO : la suite</title>
    <updated>2024-05-29T08:58:17Z</updated>
    <id>tag:blog.capdata.fr,2024-05-29:/index.php/pgo-la-suite/</id>
    <content type="html">&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10562&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10562&amp;#038;title=PGO%20%3A%20la%20suite&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=PGO%20%3A%20la%20suite&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10562&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;La gestion efficace des clusters PostgreSQL dans un environnement Kubernetes est un défi complexe auquel sont confrontées de nombreuses entreprises aujourd&amp;#8217;hui. PGO offre une solution déclarative qui automatise la gestion des clusters PostgreSQL, simplifiant ainsi le déploiement, la mise à l&amp;#8217;échelle et la gestion des bases de données PostgreSQL dans un environnement Kubernetes.&lt;/p&gt;&#xA;&lt;p&gt;Pour faire suite à l&amp;#8217;article de David sur PGO et à la demande d&amp;#8217;un de nos clients, j&amp;#8217;ai réalisé une étude approfondie de plusieurs fonctionnalités de PGO.&lt;br /&gt;&#xA;Cet article va faire un petit tour d&amp;#8217;horizon des outils principaux inclus dans l&amp;#8217;implémentation de PGO. Que ce soit pour la sauvegarde avec pgbackrest, pour la balance des connexion avec pgbouncer ou pour le monitoring avec prometheus, PGO ne manque pas d&amp;#8217;utilitaire dont l&amp;#8217;utilisation est facilitée par la solution tout embarqué.&lt;/p&gt;&#xA;&lt;h3&gt;Pgbackrest :&lt;/h3&gt;&#xA;&lt;h4&gt;Utilité :&lt;/h4&gt;&#xA;&lt;p&gt;PgBackRest est une solution de sauvegarde et de restauration pour les bases de données PostgreSQL qui propose plusieurs fonctionnalités, telles que la sauvegarde et la restauration parallèles, la compression, les sauvegardes complètes, différentielles et incrémentielles, la rotation des sauvegardes et l&amp;#8217;expiration des archives, l&amp;#8217;intégrité des sauvegardes, etc. Il prend en charge plusieurs référentiels, qui peuvent être situés localement ou à distance via TLS/SSH, ou être des stockages fournis par le cloud comme S3/GCS/Azure.&lt;br /&gt;&#xA;L&amp;#8217;architecture de pgbackrest pour PGO est la suivante :&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.capdata.fr/wp-content/uploads/2024/05/Image1.png&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;alignnone size-medium wp-image-10564&#34; src=&#34;https://blog.capdata.fr/wp-content/uploads/2024/05/Image1-300x168.png&#34; alt=&#34;&#34; width=&#34;300&#34; height=&#34;168&#34; srcset=&#34;https://blog.capdata.fr/wp-content/uploads/2024/05/Image1-300x168.png 300w, https://blog.capdata.fr/wp-content/uploads/2024/05/Image1.png 605w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h4&gt;Mise en place :&lt;/h4&gt;&#xA;&lt;p&gt;On peut imaginer plusieurs moyens de mettre en place le pgbackrest. Dans un premier temps, nous avons la sauvegarde classique en système de fichier, comme dans notre exemple sur le blog :&lt;/p&gt;&#xA;&lt;h5&gt;1) La sauvegarde sur volume persistant Kubernetes :&lt;/h5&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;- name: repo1&#xD;&#xA;  volume:&#xD;&#xA;    volumeClaimSpec:&#xD;&#xA;      accessModes:&#xD;&#xA;      - &amp;quot;ReadWriteOnce&amp;quot;&#xD;&#xA;      resources:&#xD;&#xA;        requests:&#xD;&#xA;          storage: 1Gi&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Ce type de sauvegarde utilise un volume persistant de Kubernetes pour recueillir nos sauvegardes et les garder.&lt;br /&gt;&#xA;Une PersistentVolumeClaim (PVC) est une demande de stockage faite par un utilisateur. Elle est similaire à un Pod. Les Pods consomment des ressources de nœud et les PVC consomment des ressources de PV (PersistentVolume). Les Pods peuvent demander des niveaux spécifiques de ressources (CPU et mémoire). Les revendications peuvent demander une taille spécifique et des modes d&amp;#8217;accès spécifiques (par exemple, elles peuvent être montées en ReadWriteOnce, ReadOnlyMany, ReadWriteMany, ou ReadWriteOncePod, voir AccessModes).&lt;/p&gt;&#xA;&lt;h5&gt;2) Le stockage pour S3 :&lt;/h5&gt;&#xA;&lt;p&gt;Pour pouvoir faire du stockage dans S3, il faut rajouter un fichier de configuration dans notre dossier de déploiement. Le fichier doit s’appeler s3.conf. Ce fichier contient les crédential de connexion à un AWS S3 :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;repo1-s3-key=$YOUR_AWS_S3_KEY&#xD;&#xA;repo1-s3-key-secret=$YOUR_AWS_S3_KEY_SECRET&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Une fois que c’est configuré dans votre fichier, il ne reste plus qu’à modifier le postgresql.yaml, et configurer dans la partie backup :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;backups:&#xD;&#xA;    pgbackrest:&#xD;&#xA;      image: registry.developers.crunchydata.com/crunchydata/crunchy-pgbackrest:ubi8-2.49-0&#xD;&#xA;      configuration:&#xD;&#xA;      - secret:&#xD;&#xA;          name: pgo-s3-creds&#xD;&#xA;      global:&#xD;&#xA;        repo1-path: /pgbackrest/postgres-operator/pgcluster1/repo1&#xD;&#xA;      repos:&#xD;&#xA;      - name: repo1&#xD;&#xA;        s3:&#xD;&#xA;          bucket: &amp;quot;&amp;lt;YOUR_AWS_S3_BUCKET_NAME&amp;gt;&amp;quot;&#xD;&#xA;          endpoint: &amp;quot;&amp;lt;YOUR_AWS_S3_ENDPOINT&amp;gt;&amp;quot;&#xD;&#xA;          region: &amp;quot;&amp;lt;YOUR_AWS_S3_REGION&amp;gt;&amp;quot;&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Une fois configuré, et le job mis dans le cron, vous devriez voir apparaitre les sauvegardes sur le volume S3.&lt;/p&gt;&#xA;&lt;h5&gt;3) Le stockage GCS :&lt;/h5&gt;&#xA;&lt;p&gt;Comme pour Amazon S3 on peut sauvegarder nos backups dans Google Cloud Storage. Pour pouvoir le faire fonctionner il vous faut copier votre GCS key secret (qui est un fichier JSON) dans un gcs.conf que vous allez placer dans votre dossier Kustomize.&lt;br /&gt;&#xA;Il vous suffit ensuite de modifier votre fichier postgres.yaml pour ajouter dans la partie backup la configuration pour une sauvegarde gcs :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;backups:&#xD;&#xA;    pgbackrest:&#xD;&#xA;      image: registry.developers.crunchydata.com/crunchydata/crunchy-pgbackrest:ubi8-2.49-0&#xD;&#xA;      configuration:&#xD;&#xA;      - secret:&#xD;&#xA;          name: pgo-gcs-creds&#xD;&#xA;      global:&#xD;&#xA;        repo1-path: /pgbackrest/postgres-operator/pgcluster1/repo1&#xD;&#xA;      repos:&#xD;&#xA;      - name: repo1&#xD;&#xA;        gcs:&#xD;&#xA;          bucket: &amp;quot;&amp;lt;YOUR_GCS_BUCKET_NAME&amp;gt;&amp;quot;&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Il ne vous reste plus qu’à regénérer vos pods, et votre sauvegarde arrivera directement dans votre Google Cloud Service.&lt;/p&gt;&#xA;&lt;h5&gt;4) Le stockage Azur Blob Storage :&lt;/h5&gt;&#xA;&lt;p&gt;Comme pour les deux points précédents, vous pouvez également stocker vos sauvegardes sur le blob storage d’Azure. Pour cela il vous faut créer un fichier dans votre kustomize, avec à l’intérieur la configuration pour votre point de sauvegarde Azure. Il vous faut l’appeler azure.conf et il devra contenir les lignes suivantes :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;repo1-azure-account=$YOUR_AZURE_ACCOUNT&#xD;&#xA;repo1-azure-key=$YOUR_AZURE_KEY&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Il faut ensuite intégrer ces modifications dans votre fichier postgres.yaml :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;backups:&#xD;&#xA;    pgbackrest:&#xD;&#xA;      image: registry.developers.crunchydata.com/crunchydata/crunchy-pgbackrest:ubi8-2.49-0&#xD;&#xA;      configuration:&#xD;&#xA;      - secret:&#xD;&#xA;          name: pgo-azure-creds&#xD;&#xA;      global:&#xD;&#xA;        repo1-path: /pgbackrest/postgres-operator/pgcluster/repo1&#xD;&#xA;      repos:&#xD;&#xA;      - name: repo1&#xD;&#xA;        azure:&#xD;&#xA;          container: &amp;quot;&amp;lt;YOUR_AZURE_CONTAINER&amp;gt;&amp;quot;&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Bien sur rien ne vous interdit, et c’est même conseillé, de joindre plusieurs moyens de sauvegarde. Cela permet notamment de s’assurer une plus grande fiabilité du système de sauvegarde, en s’assurant qu’elles sont disponibles à plusieurs endroits.&lt;br /&gt;&#xA;Une fois que vous avez décidé d’où vous allez stocker vos sauvegardes, et que vous l’avez configuré, il faut maintenant décider des différents paramètres de ces sauvegardes : la programmation, la rétention…&lt;/p&gt;&#xA;&lt;h5&gt;5) La programmation des sauvegardes :&lt;/h5&gt;&#xA;&lt;p&gt;Il faut savoir que par défaut, PGO sauvegarde automatiquement les WAL dans la méthode de sauvegarde que vous lui avez configuré. C’est donc une forme de sauvegarde en soit.&lt;br /&gt;&#xA;Mais dans le cadre d’une récupération après incident majeur, il peut aussi être utilise d’avoir des sauvegardes full programmées. Pgbackrest, qui est l’outil utilisé par PGO permet de mettre en place trois types de sauvegarde : les incrémentales, les différentielles et les fulls.&lt;br /&gt;&#xA;Chaque type de sauvegarde peut être programmée en suivant une notation identique à celle des crontab. Par exemple :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;backups:&#xD;&#xA;    pgbackrest:&#xD;&#xA;      repos:&#xD;&#xA;      - name: repo1&#xD;&#xA;        schedules:&#xD;&#xA;          full: &amp;quot;0 1 * * 0&amp;quot;&#xD;&#xA;          differential: &amp;quot;0 1 * * 1-6&amp;quot;&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Le fait d’implémenter ces planifications créera des CronJobs dans Kubernetes.&lt;/p&gt;&#xA;&lt;h5&gt;6) La rétention des backups :&lt;/h5&gt;&#xA;&lt;p&gt;Vous pouvez définir une rétention maximum pour vos backups sur le support de backup de votre choix. Une fois que cette rétention sera atteinte, pgbackrest fera le ménage tout seul des sauvegardes et des WAL qui lui sont reliées.&lt;br /&gt;&#xA;Il y a deux types de rétentions que l’on peut définir : les rétentions « count » basées sur le nombre de backup que l’on souhaite garder et les rétentions « time » basées sur le nombre de jours ou vous souhaitez garder votre sauvegarde.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;backups:&#xD;&#xA;    pgbackrest:&#xD;&#xA;      global:&#xD;&#xA;        repo1-retention-full: &amp;quot;14&amp;quot;&#xD;&#xA;        repo1-retention-full-type: time&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;h5&gt;7) La sauvegarde unique :&lt;/h5&gt;&#xA;&lt;p&gt;Si dans le cadre d’un besoin particuliers, une grosse modification ou une migration par exemple, vous avez besoin de prendre une sauvegarde immédiate sans forcément attendre que le cron n’arrive, vous pouvez le faire.&lt;br /&gt;&#xA;Pour la configuration de cette sauvegarde, il faudra l’annoter comme « manuelle » :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;  backups:&#xD;&#xA;    pgbackrest:&#xD;&#xA;      manual:&#xD;&#xA;        repoName: repo1&#xD;&#xA;        options:&#xD;&#xA;         - --type=full&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Il vous faudra ensuite déclencher cette sauvegarde avec une commande manuelle. Dans le cadre de notre cluster exemple pgcluster1 :&lt;br /&gt;&#xA;kubectl annotate -n postgres-operator postgrescluster pgcluster1 \ postgres-operator.crunchydata.com/pgbackrest-backup=&amp;#8221;$(date)&amp;#8221;&lt;/p&gt;&#xA;&lt;h5&gt;8) Faire un clone à partir d’un repo :&lt;/h5&gt;&#xA;&lt;p&gt;Quand on a configuré un repo sur notre instance primaire, on peut facilement créer un clone de notre instance à l’aide de notre sauvegarde. Ainsi, on créer un tout nouveau Pods à partir des informations stockées à propos du pod que l’on possède déjà. Ici, nous allons créer un nouveau pod à partir de notre pod pgcluster1 :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;apiVersion: postgres-operator.crunchydata.com/v1beta1&#xD;&#xA;kind: PostgresCluster&#xD;&#xA;metadata:&#xD;&#xA;  name: pgcluster2&#xD;&#xA;spec:&#xD;&#xA;  dataSource:&#xD;&#xA;    postgresCluster:&#xD;&#xA;      clusterName: pgcluster1&#xD;&#xA;      repoName: repo1&#xD;&#xA;  image: registry.developers.crunchydata.com/crunchydata/crunchy-postgres:ubi8-16.2-0&#xD;&#xA;  postgresVersion: 16&#xD;&#xA;  instances:&#xD;&#xA;    - dataVolumeClaimSpec:&#xD;&#xA;        accessModes:&#xD;&#xA;        - &amp;quot;ReadWriteOnce&amp;quot;&#xD;&#xA;        resources:&#xD;&#xA;          requests:&#xD;&#xA;            storage: 1Gi&#xD;&#xA;  backups:&#xD;&#xA;    pgbackrest:&#xD;&#xA;      image: registry.developers.crunchydata.com/crunchydata/crunchy-pgbackrest:ubi8-2.49-0&#xD;&#xA;      repos:&#xD;&#xA;      - name: repo1&#xD;&#xA;        volume:&#xD;&#xA;          volumeClaimSpec:&#xD;&#xA;            accessModes:&#xD;&#xA;            - &amp;quot;ReadWriteOnce&amp;quot;&#xD;&#xA;            resources:&#xD;&#xA;              requests:&#xD;&#xA;                storage: 1Gi&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Ici on peut noter entre autres la partie spec de la configuration, qui est le morceau de yaml nous permettant de dire qu’on s’appuie sur le cluster existant pour créer un clone indépendant :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;spec:&#xD;&#xA;  dataSource:&#xD;&#xA;    postgresCluster:&#xD;&#xA;      clusterName: pgcluster1&#xD;&#xA;      repoName: repo1&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;h5&gt;9) Point in Time Recovery :&lt;/h5&gt;&#xA;&lt;p&gt;De la même façon, si l’on veut faire une restauration PITR, nous allons remplir la balise spec de notre yaml. Attention cependant, pour faire une restauration PITR, nous avons besoin de posséder encore la sauvegarde. On ne peut pas faire une restauration PITR sur une sauvegarde lointaine qu’on ne possèderait plus. Imaginons que je souhaite repartir d’une sauvegarde datant d’hier soir à 20h30 de mon instance pgcluster1 sur mon instance pgcluster2, la configuration serait la suivante :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;apiVersion: postgres-operator.crunchydata.com/v1beta1&#xD;&#xA;kind: PostgresCluster&#xD;&#xA;metadata:&#xD;&#xA;  name: pgcluster2&#xD;&#xA;spec:&#xD;&#xA;  dataSource:&#xD;&#xA;    postgresCluster:&#xD;&#xA;      clusterName: pgcluster1&#xD;&#xA;      repoName: repo1&#xD;&#xA;      options:&#xD;&#xA;      - --type=time&#xD;&#xA;      - --target=&amp;quot;2024-04-09 20:30:00-00&amp;quot;&#xD;&#xA;  image: registry.developers.crunchydata.com/crunchydata/crunchy-postgres:ubi8-16.2-0&#xD;&#xA;  postgresVersion: 16&#xD;&#xA;  instances:&#xD;&#xA;    - dataVolumeClaimSpec:&#xD;&#xA;        accessModes:&#xD;&#xA;        - &amp;quot;ReadWriteOnce&amp;quot;&#xD;&#xA;        resources:&#xD;&#xA;          requests:&#xD;&#xA;            storage: 1Gi&#xD;&#xA;  backups:&#xD;&#xA;    pgbackrest:&#xD;&#xA;      image: registry.developers.crunchydata.com/crunchydata/crunchy-pgbackrest:ubi8-2.49-0&#xD;&#xA;      repos:&#xD;&#xA;      - name: repo1&#xD;&#xA;        volume:&#xD;&#xA;          volumeClaimSpec:&#xD;&#xA;            accessModes:&#xD;&#xA;            - &amp;quot;ReadWriteOnce&amp;quot;&#xD;&#xA;            resources:&#xD;&#xA;              requests:&#xD;&#xA;                storage: 1Gi&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;La partie qui nous intéresse ici est la partie spec, ou nous avons rajouter un type de restauration (ici time) et une heure target. Cela indique à pgbackrest qu’il doit aller chercher tous les fichiers de sauvegarde et WAL sur notre point de sauvegarde repo1 venant de l’instance pgcluster1 pour les réappliquer sur notre nouveau cluster pgcluster2.&lt;br /&gt;&#xA;Vous pouvez également vouloir réaliser une restauration In Place, c’est-à-dire écraser l’instance présente pour la remplacer par la restauration. Auquel cas, plutôt que de préciser comment s’appellera notre nouveau cluster, il faut alors passer par la balise restore :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;spec:&#xD;&#xA;  backups:&#xD;&#xA;    pgbackrest:&#xD;&#xA;      restore:&#xD;&#xA;        enabled: true&#xD;&#xA;        repoName: repo1&#xD;&#xA;        options:&#xD;&#xA;        - --type=time&#xD;&#xA;        - --target=&amp;quot;2024-04-09 20:30:00-00&amp;quot;&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Ici, comme précédemment, nous restaurons à l’heure de 20 :30 hier soir, et cela sur notre propre instance. Ne reste plus qu’à lancer la restauration :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;kubectl annotate -n postgres-operator postgrescluster pgcluster1 --overwrite \ postgres-operator.crunchydata.com/pgbackrest-restore=&amp;quot;$(date)&amp;quot;&lt;/pre&gt;&#xA;&lt;p&gt;A noter qu’il ne faut pas oublier de désactiver ensuite le restore en le passant à false si vous ne souhaitez pas qu’il soit de nouveau écrasé au prochain changement de configuration.&lt;/p&gt;&#xA;&lt;h5&gt;10) Restaurer une base de données spécifique :&lt;/h5&gt;&#xA;&lt;p&gt;Si votre besoin est de restaurer une base de données spécifique plutôt que l’intégralité de l’instance, vous pouvez le préciser dans les paramètres de votre restauration.&lt;br /&gt;&#xA;Attention cependant, ce n’est pas une restauration comme le serais un pg_dump. Ici si vous restaurez simplement une seule base de données et pas le reste du cluster, les autres bases que vous n’avez pas choisit de restaurer deviendront inaccessibles.&lt;br /&gt;&#xA;Si nous voulons restaurer une base de données, et uniquement elle, voici la procédure :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;spec:&#xD;&#xA;backups:&#xD;&#xA;  pgbackrest:&#xD;&#xA;    restore:&#xD;&#xA;      enabled: true&#xD;&#xA;      repoName: repo1&#xD;&#xA;      options:&#xD;&#xA;        - --db-include=capdata&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Ici, on ne restaurera que la base de données capdata, et aucunes autres bases à partir de notre repo1.&lt;/p&gt;&#xA;&lt;h3&gt;PgBouncer :&lt;/h3&gt;&#xA;&lt;h4&gt;Utilité :&lt;/h4&gt;&#xA;&lt;p&gt;PgBouncer est un pooler de connexion pour PostgreSQL. Un pooler de connexion permet de maintenir ouvertes des sessions entre lui-même et le serveur, ce qui rend plus rapide l&amp;#8217;ouverture de sessions depuis les clients, une application Web par exemple.&lt;br /&gt;&#xA;PgBouncer permet aussi de mutualiser les sessions dans le serveur, économisant ainsi des ressources. PgBouncer propose plusieurs modes de partage : par requête (default), par transaction ou par session.&lt;/p&gt;&#xA;&lt;h4&gt;Mise en place :&lt;/h4&gt;&#xA;&lt;p&gt;Pour ajouter un bouncer à notre configuration c’est une réalité très simple. Il suffit d’ajouter dans notre fichier postgres.yaml la rubrique proxy :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;proxy:&#xD;&#xA;  pgBouncer:&#xD;&#xA;    image: registry.developers.crunchydata.com/crunchydata/crunchy-pgbouncer:ubi8-1.21-3&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Une fois que vous avez rajouté cela dans la configuration, il n’y a plus qu’à appliquer celle-ci :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt; kubectl apply -k kustomize/keycloak &lt;/pre&gt;&#xA;&lt;p&gt;Quand PGO créé un nouveau connexion pooler sur notre instance déployée, il modifier le fichier secrets de l’utilisateur.&lt;br /&gt;&#xA;On voit que plusieurs champs qui concerne pg_bouncer sont apparus. Ils constituent les informations qui vont vous permettre de vous connecter sur votre bouncer nouvellement créé :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;{&#xD;&#xA;    &amp;quot;apiVersion&amp;quot;: &amp;quot;v1&amp;quot;,&#xD;&#xA;    &amp;quot;data&amp;quot;: {&#xD;&#xA;        &amp;quot;dbname&amp;quot;: &amp;quot;cGdjbHVzdGVyMQ==&amp;quot;,&#xD;&#xA;        &amp;quot;host&amp;quot;: &amp;quot;cGdjbHVzdGVyMS1wcmltYXJ5LnBvc3RncmVzLW9wZXJhdG9yLnN2Yw==&amp;quot;,&#xD;&#xA;        &amp;quot;jdbc-uri&amp;quot;: &amp;quot;amRiYzpwb3N0Z3Jlc3FsOi8vcGdjbHVzdGVyMS1wcmltYXJ5LnBvc3RncmVzLW9wZXJhdG9yLnN2Yzo1NDMyL3BnY2x1c3RlcjE/cGFzc3dvcmQ9NXNSaSUzRCU1QmZZbSUzQ2lSSGslMkElNUIlM0VuWGhqaiU3Q1EmdXNlcj1wZ2NsdXN0ZXIx&amp;quot;,&#xD;&#xA;        &amp;quot;password&amp;quot;: &amp;quot;NXNSaT1bZlltPGlSSGsqWz5uWGhqanxR&amp;quot;,&#xD;&#xA;        &amp;quot;pgbouncer-host&amp;quot;: &amp;quot;cGdjbHVzdGVyMS1wZ2JvdW5jZXIucG9zdGdyZXMtb3BlcmF0b3Iuc3Zj&amp;quot;,&#xD;&#xA;        &amp;quot;pgbouncer-jdbc-uri&amp;quot;: &amp;quot;amRiYzpwb3N0Z3Jlc3FsOi8vcGdjbHVzdGVyMS1wZ2JvdW5jZXIucG9zdGdyZXMtb3BlcmF0b3Iuc3ZjOjU0MzIvcGdjbHVzdGVyMT9wYXNzd29yZD01c1JpJTNEJTVCZlltJTNDaVJIayUyQSU1QiUzRW5YaGpqJTdDUSZwcmVwYXJlVGhyZXNob2xkPTAmdXNlcj1wZ2NsdXN0ZXIx&amp;quot;,&#xD;&#xA;        &amp;quot;pgbouncer-port&amp;quot;: &amp;quot;NTQzMg==&amp;quot;,&#xD;&#xA;        &amp;quot;pgbouncer-uri&amp;quot;: &amp;quot;cG9zdGdyZXNxbDovL3BnY2x1c3RlcjE6NXNSaT0lNUJmWW0lM0NpUkhrJTJBJTVCJTNFblhoamolN0NRQHBnY2x1c3RlcjEtcGdib3VuY2VyLnBvc3RncmVzLW9wZXJhdG9yLnN2Yzo1NDMyL3BnY2x1c3RlcjE=&amp;quot;,&#xD;&#xA;        &amp;quot;port&amp;quot;: &amp;quot;NTQzMg==&amp;quot;,&#xD;&#xA;        &amp;quot;uri&amp;quot;: &amp;quot;cG9zdGdyZXNxbDovL3BnY2x1c3RlcjE6NXNSaT0lNUJmWW0lM0NpUkhrJTJBJTVCJTNFblhoamolN0NRQHBnY2x1c3RlcjEtcHJpbWFyeS5wb3N0Z3Jlcy1vcGVyYXRvci5zdmM6NTQzMi9wZ2NsdXN0ZXIx&amp;quot;,&#xD;&#xA;        &amp;quot;user&amp;quot;: &amp;quot;cGdjbHVzdGVyMQ==&amp;quot;,&#xD;&#xA;        &amp;quot;verifier&amp;quot;: &amp;quot;U0NSQU0tU0hBLTI1NiQ0MDk2OlgyQ3NQRU1FZjh3QkVlc05McDFJTkE9PSRKcDhKakl5Q0o1ZEpFRVhia1ptUERTNE5rR3d0V00rczdrMElsQmx0YkpvPTpEaHg3VzNCOE5vNDRYSHJ1Qm1RdENMQW9jNEtnSUZQa2dIeStUMkVWUUowPQ==&amp;quot;&#xD;&#xA;    },&#xD;&#xA;    &amp;quot;kind&amp;quot;: &amp;quot;Secret&amp;quot;,&#xD;&#xA;    &amp;quot;metadata&amp;quot;: {&#xD;&#xA;        &amp;quot;creationTimestamp&amp;quot;: &amp;quot;2024-04-09T16:37:36Z&amp;quot;,&#xD;&#xA;        &amp;quot;labels&amp;quot;: {&#xD;&#xA;            &amp;quot;postgres-operator.crunchydata.com/cluster&amp;quot;: &amp;quot;pgcluster1&amp;quot;,&#xD;&#xA;            &amp;quot;postgres-operator.crunchydata.com/pguser&amp;quot;: &amp;quot;pgcluster1&amp;quot;,&#xD;&#xA;            &amp;quot;postgres-operator.crunchydata.com/role&amp;quot;: &amp;quot;pguser&amp;quot;&#xD;&#xA;        },&#xD;&#xA;        &amp;quot;name&amp;quot;: &amp;quot;pgcluster1-pguser-pgcluster1&amp;quot;,&#xD;&#xA;        &amp;quot;namespace&amp;quot;: &amp;quot;postgres-operator&amp;quot;,&#xD;&#xA;        &amp;quot;ownerReferences&amp;quot;: [&#xD;&#xA;            {&#xD;&#xA;                &amp;quot;apiVersion&amp;quot;: &amp;quot;postgres-operator.crunchydata.com/v1beta1&amp;quot;,&#xD;&#xA;                &amp;quot;blockOwnerDeletion&amp;quot;: true,&#xD;&#xA;                &amp;quot;controller&amp;quot;: true,&#xD;&#xA;                &amp;quot;kind&amp;quot;: &amp;quot;PostgresCluster&amp;quot;,&#xD;&#xA;                &amp;quot;name&amp;quot;: &amp;quot;pgcluster1&amp;quot;,&#xD;&#xA;                &amp;quot;uid&amp;quot;: &amp;quot;7260b882-116f-4b02-b51a-18d4fe3a8038&amp;quot;&#xD;&#xA;            }&#xD;&#xA;        ],&#xD;&#xA;        &amp;quot;resourceVersion&amp;quot;: &amp;quot;9495&amp;quot;,&#xD;&#xA;        &amp;quot;uid&amp;quot;: &amp;quot;1fbdf1d2-48ea-4a45-b7d6-01248317dbee&amp;quot;&#xD;&#xA;    },&#xD;&#xA;    &amp;quot;type&amp;quot;: &amp;quot;Opaque&amp;quot;&#xD;&#xA;}&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Pour se connecter à notre pgbouncer, il suffit d’utiliser les informations fournies par le fichier de secret à la place de nos infos de connexion habituelles, et cela nous permet d’accéder directement au bouncer et non plus à l’instance elle-même.&lt;/p&gt;&#xA;&lt;p&gt;Cette connexion peut être facilement modifiée en utilisant la documentation de pgbouncer afin de pouvoir configurer à notre guise notre pgbouncer. Un exemple de configuration qu’on pourrais rencontrer serait :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;  proxy:&#xD;&#xA;    pgBouncer:&#xD;&#xA;      image: {{.Values.image.pgBouncer }}&#xD;&#xA;      config:&#xD;&#xA;        global:&#xD;&#xA;          default_pool_size: &amp;quot;100&amp;quot;&#xD;&#xA;          max_client_conn: &amp;quot;10000&amp;quot;&#xD;&#xA;          pool_mode: transaction&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Pour cet exemple on voit qu’on a définit un nombre de client maximum, la taille du pool à 100 et un mode transaction pour notre pool.&lt;/p&gt;&#xA;&lt;h3&gt;PGO et Prometheus&lt;/h3&gt;&#xA;&lt;h4&gt;Utilité :&lt;/h4&gt;&#xA;&lt;p&gt;Prometheus est une trousse à outils de surveillance et d&amp;#8217;alerte des systèmes en open source.&lt;br /&gt;&#xA;Prometheus collecte et stocke ses métriques sous forme de données de séries temporelles, c&amp;#8217;est-à-dire que les informations de métriques sont stockées avec le timestamp auquel elles ont été enregistrées, aux côtés de paires clé-valeur optionnelles appelées labels.&lt;br /&gt;&#xA;&amp;#8211; Un modèle de données multidimensionnel avec des données de séries temporelles identifiées par le nom de la métrique et des paires clé-valeur&lt;br /&gt;&#xA;&amp;#8211; PromQL, un langage de requête flexible pour exploiter cette dimensionnalité&lt;br /&gt;&#xA;&amp;#8211; Aucune dépendance sur le stockage distribué ; les nœuds de serveur individuels sont autonomes&lt;br /&gt;&#xA;&amp;#8211; La collecte de séries temporelles se fait via un modèle de tirage sur HTTP&lt;br /&gt;&#xA;&amp;#8211; La poussée de séries temporelles est prise en charge via une passerelle intermédiaire&lt;br /&gt;&#xA;&amp;#8211; Les cibles sont découvertes via la découverte de service ou la configuration statique&lt;br /&gt;&#xA;&amp;#8211; Prise en charge de plusieurs modes de graphiques et de tableaux de bord&lt;/p&gt;&#xA;&lt;h4&gt;Mise en place :&lt;/h4&gt;&#xA;&lt;p&gt;Pour pouvoir mettre en place une surveillance pour notre cluster, il est plus simple de télécharger et compléter le modèle fournit dans les exemples de pgo.&lt;br /&gt;&#xA;Ainsi, on peut récupérer les exemples à l’aide de git :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;YOUR_GITHUB_UN=&amp;quot;$YOUR_GITHUB_USERNAME&amp;quot;&#xD;&#xA;git clone --depth 1 &amp;quot;git@github.com:${YOUR_GITHUB_UN}/postgres-operator-examples.git&amp;quot;&#xD;&#xA;cd postgres-operator-examples&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Les différentes configurations se trouvent dans le dossier kustomize/monitoring.&lt;br /&gt;&#xA;Pour activer le monitoring de notre instance, il faut ajouter la balise monitoring à notre fichier postgres.yaml :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;monitoring:&#xD;&#xA;  pgmonitor:&#xD;&#xA;    exporter:&#xD;&#xA;      image: registry.developers.crunchydata.com/crunchydata/crunchy-postgres-exporter:ubi8-5.5.1-0&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Une fois notre configuration modifiée, on l’applique afin que PGO détecte les changements et configure tout seul l’exporter pour qu’il puisse se connecter à nos bases de données et récupérer les métriques.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;kubectl apply -k kustomize/postgres&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Il faut ensuite appliquer la configuration de base de pgmonitor pour qu’il créé lui-même les fichiers de configuration pour prometheus (il le fera en même temps pour Grafana et Alertmanager qui sont deux autres outils de surveillance). Pour cela on applique le kustomize présent dans le dossier monitoring :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$kubectl apply -k kustomize\postgres&#xD;&#xA;postgrescluster.postgres-operator.crunchydata.com/pgcluster1 configured&#xD;&#xA;$kubectl apply -k kustomize\monitoring&#xD;&#xA;serviceaccount/alertmanager created&#xD;&#xA;serviceaccount/grafana created&#xD;&#xA;serviceaccount/prometheus created&#xD;&#xA;clusterrole.rbac.authorization.k8s.io/prometheus created&#xD;&#xA;clusterrolebinding.rbac.authorization.k8s.io/prometheus created&#xD;&#xA;configmap/alert-rules-config created&#xD;&#xA;configmap/alertmanager-config created&#xD;&#xA;configmap/crunchy-prometheus created&#xD;&#xA;configmap/grafana-dashboards created&#xD;&#xA;configmap/grafana-datasources created&#xD;&#xA;secret/grafana-admin created&#xD;&#xA;service/crunchy-alertmanager created&#xD;&#xA;service/crunchy-grafana created&#xD;&#xA;service/crunchy-prometheus created&#xD;&#xA;persistentvolumeclaim/alertmanagerdata created&#xD;&#xA;persistentvolumeclaim/grafanadata created&#xD;&#xA;persistentvolumeclaim/prometheusdata created&#xD;&#xA;deployment.apps/crunchy-alertmanager created&#xD;&#xA;deployment.apps/crunchy-grafana created&#xD;&#xA;deployment.apps/crunchy-prometheus created&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Nos services ont été correctement déployés, il ne nous reste plus qu’à utiliser celui qui nous intéresse, ici service/crunchy-prometheus et lui indiquer de commencer à envoyer les informations sur notre prometheus :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$kubectl -n postgres-operator port-forward service/crunchy-prometheus 9090:9090&#xD;&#xA;Forwarding from 127.0.0.1:9090 -&amp;gt; 9090&#xD;&#xA;Forwarding from [::1]:9090 -&amp;gt; 9090&#xD;&#xA;Handling connection for 9090&#xD;&#xA;Handling connection for 9090&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Afin d’accéder à notre service prometheus, il ne nous reste plus qu’à se connecter avec l’adresse de notre machine, sur le port 9090 préalablement ouvert, pour voir apparaitre le dashboard de prometheus :&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.capdata.fr/wp-content/uploads/2024/05/Image2.jpg&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;alignnone size-medium wp-image-10567&#34; src=&#34;https://blog.capdata.fr/wp-content/uploads/2024/05/Image2-300x66.jpg&#34; alt=&#34;&#34; width=&#34;300&#34; height=&#34;66&#34; srcset=&#34;https://blog.capdata.fr/wp-content/uploads/2024/05/Image2-300x66.jpg 300w, https://blog.capdata.fr/wp-content/uploads/2024/05/Image2-1024x226.jpg 1024w, https://blog.capdata.fr/wp-content/uploads/2024/05/Image2-768x170.jpg 768w, https://blog.capdata.fr/wp-content/uploads/2024/05/Image2.jpg 1386w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3&gt;PGO Client :&lt;/h3&gt;&#xA;&lt;h4&gt;Utilité :&lt;/h4&gt;&#xA;&lt;p&gt;Pour pouvoir gérer plus facilement le cluster créé par PGO, CrunchyData à développé une surcouche à kubectl qui permet de faciliter les commandes que nous pouvons réaliser sur le cluster.&lt;br /&gt;&#xA;Cela permet de ne pas avoir à taper les longues lignes de commandes qui permettent par exemple de démarrer les sauvegardes unitaires.&lt;/p&gt;&#xA;&lt;h4&gt;Mise en place :&lt;/h4&gt;&#xA;&lt;p&gt;Pour pouvoir installer cette surcouche, il faut télécharger la version qui correspond au système d’exploitation à partir du GIT de pgo client :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;# wget https://github.com/CrunchyData/postgres-operator-client/releases/download/v0.4.1/kubectl-pgo-linux-arm64&#xD;&#xA;--2024-04-11 12:07:45--  https://github.com/CrunchyData/postgres-operator-client/releases/download/v0.4.1/kubectl-pgo-linux-arm64&#xD;&#xA;Resolving github.com (github.com)... 140.82.121.4&#xD;&#xA;Connecting to github.com (github.com)|140.82.121.4|:443... connected.&#xD;&#xA;HTTP request sent, awaiting response... 302 Found&#xD;&#xA;Resolving objects.githubusercontent.com (objects.githubusercontent.com)... 185.199.109.133, 185.199.111.133, 185.199.110.133, ...&#xD;&#xA;Connecting to objects.githubusercontent.com (objects.githubusercontent.com)|185.199.109.133|:443... connected.&#xD;&#xA;HTTP request sent, awaiting response... 200 OK&#xD;&#xA;Length: 47895849 (46M) [application/octet-stream]&#xD;&#xA;Saving to: ‘kubectl-pgo-linux-arm64’&#xD;&#xA;&#xD;&#xA;kubectl-pgo-linux-arm64                                     100%[========================================================================================================================================&amp;gt;]  45.68M  --.-KB/s    in 0.1s&#xD;&#xA;&#xD;&#xA;2024-04-11 12:07:45 (373 MB/s) - ‘kubectl-pgo-linux-arm64’ saved [47895849/47895849]&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;On renome le fichier téléchargé en kubectl-pgo et on le déplace dans nos bin pour pouvoir les utiliser :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;# mv kubectl-pgo-linux-arm64 kubectl-pgo&#xD;&#xA;# sudo mv kubectl-pgo /usr/local/bin/kubectl-pgo&#xD;&#xA;# sudo chmod +x /usr/local/bin/kubectl-pgo&#xD;&#xA;Une fois que ces actions sont réalisées, on peut tester le fonctionnement :&#xD;&#xA;# kubectl pgo version&#xD;&#xA;Client Version: v0.4.1&#xD;&#xA;Operator Version: v5.5.1&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Les commandes disponibles avec cette extension sont les suivantes :&lt;br /&gt;&#xA;&amp;#8211; backup : Backup cluster&lt;br /&gt;&#xA;&amp;#8211; create : Create a resource&lt;br /&gt;&#xA;&amp;#8211; delete : Delete a resource&lt;br /&gt;&#xA;&amp;#8211; help : Help about any command&lt;br /&gt;&#xA;&amp;#8211; restore : Restore cluster&lt;br /&gt;&#xA;&amp;#8211; show Show : PostgresCluster details&lt;br /&gt;&#xA;&amp;#8211; start : Start cluster&lt;br /&gt;&#xA;&amp;#8211; stop : Stop cluster&lt;br /&gt;&#xA;&amp;#8211; support : Crunchy Support commands for PGO&lt;br /&gt;&#xA;&amp;#8211; version : PGO client&lt;strong&gt;Continuez votre lecture sur le blog :&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul class=&#34;similar-posts&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/pgo-operateurs-kubernetes-pour-postgresql-la-suite/&#34; rel=&#34;bookmark&#34; title=&#34;6 juin 2023&#34;&gt;PGO : opérateurs kubernetes pour PostgreSQL, la suite !&lt;/a&gt; (David Baffaleuf) [ContainerDevopsPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/kubegres-loperateur-kubernetes-cle-en-main-pour-postgresql/&#34; rel=&#34;bookmark&#34; title=&#34;26 avril 2023&#34;&gt;Kubegres : l&amp;#8217;opérateur Kubernetes clé en main pour PostgreSQL&lt;/a&gt; (David Baffaleuf) [ContainerDevopsPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-sur-la-solution-kubernetes-locale-minikube/&#34; rel=&#34;bookmark&#34; title=&#34;29 mars 2023&#34;&gt;PostgreSQL sur la solution Kubernetes locale Minikube&lt;/a&gt; (Emmanuel RAMI) [ContainerPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-comparatif-entre-barman-et-pgbackrest/&#34; rel=&#34;bookmark&#34; title=&#34;4 février 2020&#34;&gt;PostgreSQL : Comparatif entre Barman et pgBackRest&lt;/a&gt; (Capdata team) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/sauvegardes-sql-server-dans-un-azure-blob-storage/&#34; rel=&#34;bookmark&#34; title=&#34;21 août 2018&#34;&gt;Sauvegardes SQL Server dans un Azure Blob Storage&lt;/a&gt; (Capdata team) [AzureSQL Server]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;!-- Similar Posts took 4.168 ms --&gt;&lt;/p&gt;&#xA;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10562&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10562&amp;#038;title=PGO%20%3A%20la%20suite&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=PGO%20%3A%20la%20suite&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10562&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/pgo-la-suite/&#34;&gt;PGO : la suite&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.capdata.fr/index.php/pgo-la-suite/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;La gestion efficace des clusters PostgreSQL dans un environnement Kubernetes est un défi complexe auquel sont confrontées de nombreuses entreprises aujourd&amp;#8217;hui. PGO offre une solution déclarative qui automatise la gestion des clusters PostgreSQL, simplifiant ainsi le déploiement, la mise à&amp;#8230; &lt;a href=&#34;https://blog.capdata.fr/index.php/pgo-la-suite/&#34; class=&#34;more-link&#34;&gt;Continuer la lecture &lt;span class=&#34;meta-nav&#34;&gt;&amp;#8594;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/pgo-la-suite/&#34;&gt;PGO : la suite&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Emmanuel RAMI</name>
    </author>
  </entry>
  <entry>
    <title>pg_recursively_delete : Simplifier les suppressions récursives</title>
    <updated>2024-04-03T13:11:08Z</updated>
    <id>tag:blog.capdata.fr,2024-04-03:/index.php/pg_recursively_delete-simplifier-les-suppressions-recursives/</id>
    <content type="html">&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10505&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10505&amp;#038;title=pg_recursively_delete%20%3A%20Simplifier%20les%20suppressions%20r%C3%A9cursives&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=pg_recursively_delete%20%3A%20Simplifier%20les%20suppressions%20r%C3%A9cursives&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10505&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;Si vous avez été amené au fil de votre carrière à manipuler de gros volumes de données contenus dans plusieurs tables possédant des références croisées entre elles, dépendantes d&amp;#8217;autres tables, qui elles-mêmes dépendent d&amp;#8217;autres tables, vous savez à quel point il peut être compliqué de remonter l&amp;#8217;intégralité de l&amp;#8217;arbre de dépendance pour supprimer la moindre ligne. Cela peut être long et fastidieux.&lt;/p&gt;&#xA;&lt;p&gt;Vous ne savez pas vraiment ce que vous supprimez, dans quelles tables, et quels impacts cela peut avoir sur votre base de données. Si les dépendances sont nombreuses, il est d&amp;#8217;autant plus compliqué de tout retracer et d&amp;#8217;être sûr à 100 % de ce que votre DELETE va entraîner.&lt;/p&gt;&#xA;&lt;p&gt;Dans cet article, je vais vous présenter rapidement un petit outil sous la forme d&amp;#8217;une extension que je trouve pratique à utiliser dans ce cas de figure. L&amp;#8217;outil s&amp;#8217;appelle pg_recursively_delete, et il permet de tracer avant d&amp;#8217;exécuter l&amp;#8217;ordre de suppression de votre ligne, et d&amp;#8217;avoir une arborescence des différentes données que vous allez impacter.&lt;/p&gt;&#xA;&lt;h2&gt;Installation d&amp;#8217;un moteur et de l&amp;#8217;extension :&lt;/h2&gt;&#xA;&lt;p&gt;Pour cet article, j&amp;#8217;ai choisi d&amp;#8217;utiliser PostgreSQL en version 16 pour tester si l&amp;#8217;extension fonctionnait toujours.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root:~#sudo apt update &amp;amp;amp;&amp;amp;amp; sudo apt upgrade&#xD;&#xA;root:~#sudo sh -c &#39;echo &amp;quot;deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main&amp;quot; &amp;amp;gt; /etc/apt/sources.list.d/pgdg.list&#39;&#xD;&#xA;root:~#wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -&#xD;&#xA;root:~#sudo apt -y update&#xD;&#xA;root:~#sudo apt -y install postgresql-16&lt;/pre&gt;&#xA;&lt;p&gt;Notre moteur de base de données est installé, à présent il nous faut télécharger les sources de l&amp;#8217;extension, et l&amp;#8217;installer.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root:~# git clone https://github.com/trlorenz/PG-recursively_delete.git&#xD;&#xA;Cloning into &#39;PG-recursively_delete&#39;...&#xD;&#xA;remote: Enumerating objects: 155, done.&#xD;&#xA;remote: Counting objects: 100% (95/95), done.&#xD;&#xA;remote: Compressing objects: 100% (62/62), done.&#xD;&#xA;remote: Total 155 (delta 41), reused 74 (delta 29), pack-reused 60&#xD;&#xA;Receiving objects: 100% (155/155), 38.55 KiB | 3.21 MiB/s, done.&#xD;&#xA;Resolving deltas: 100% (70/70), done.&#xD;&#xA;root:~# cd PG-recursively_delete/&#xD;&#xA;root:~/PG-recursively_delete# make&#xD;&#xA;cp sql/recursively_delete.sql sql/recursively_delete--0.1.5.sql&#xD;&#xA;root:~/PG-recursively_delete# sudo make install&#xD;&#xA;/bin/mkdir -p &#39;/usr/share/postgresql/16/extension&#39;&#xD;&#xA;/bin/mkdir -p &#39;/usr/share/postgresql/16/extension&#39;&#xD;&#xA;/bin/mkdir -p &#39;/usr/share/doc/postgresql-doc-16/extension&#39;&#xD;&#xA;/usr/bin/install -c -m 644 .//recursively_delete.control &#39;/usr/share/postgresql/16/extension/&#39;&#xD;&#xA;/usr/bin/install -c -m 644 .//sql/recursively_delete--0.1.5.sql  &#39;/usr/share/postgresql/16/extension/&#39;&#xD;&#xA;/usr/bin/install -c -m 644 .//doc/changelog.md &#39;/usr/share/doc/postgresql-doc-16/extension/&#39;&lt;/pre&gt;&#xA;&lt;h2&gt;Mise en place de l&amp;#8217;environnement&lt;/h2&gt;&#xA;&lt;p&gt;Pour illustrer le fonctionnement de l&amp;#8217;extension, je vais utiliser la base de données de démonstration dvdrental. Nous allons donc la télécharger et la charger dans une toute nouvelle base de données que nous aurons créée sur notre instance fraîchement créée :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt; postgres:~$ wget https://www.postgresqltutorial.com/wp-content/uploads/2019/05/dvdrental.zip&#xD;&#xA;--2024-03-11 08:34:54--  https://www.postgresqltutorial.com/wp-content/uploads/2019/05/dvdrental.zip&#xD;&#xA;Resolving www.postgresqltutorial.com (www.postgresqltutorial.com)... 104.21.2.174, 172.67.129.129, 2606:4700:3037::6815:2ae, ...&#xD;&#xA;Connecting to www.postgresqltutorial.com (www.postgresqltutorial.com)|104.21.2.174|:443... connected.&#xD;&#xA;HTTP request sent, awaiting response... 200 OK&#xD;&#xA;Length: 550906 (538K) [application/zip]&#xD;&#xA;Saving to: ‘dvdrental.zip’&#xD;&#xA;&#xD;&#xA;dvdrental.zip                                               100%[========================================================================================================================================&amp;gt;] 537.99K  --.-KB/s    in 0.01s&#xD;&#xA;&#xD;&#xA;2024-03-11 08:34:54 (46.0 MB/s) - ‘dvdrental.zip’ saved [550906/550906]  &lt;/pre&gt;&#xA;&lt;p&gt;Une fois téléchargée, on la dezippe :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres:~$ ls -l&#xD;&#xA;total 544&#xD;&#xA;drwxr-xr-x 3 postgres postgres   4096 Mar 11 08:30 16&#xD;&#xA;-rw-rw-r-- 1 postgres postgres 550906 May 12  2019 dvdrental.zip&#xD;&#xA;postgres:~$ unzip dvdrental.zip&#xD;&#xA;Archive:  dvdrental.zip&#xD;&#xA;  inflating: dvdrental.tar&#xD;&#xA;postgres:~$ ls -l&#xD;&#xA;total 3316&#xD;&#xA;drwxr-xr-x 3 postgres postgres    4096 Mar 11 08:30 16&#xD;&#xA;-rw-rw-r-- 1 postgres postgres 2835456 May 12  2019 dvdrental.tar&#xD;&#xA;-rw-rw-r-- 1 postgres postgres  550906 May 12  2019 dvdrental.zip&lt;/pre&gt;&#xA;&lt;p&gt;On créé la base de données pour accueillir nos données, et on charge le fichier de sauvegarde :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres:~$ psql&#xD;&#xA;psql (16.2 (Ubuntu 16.2-1.pgdg22.04+1))&#xD;&#xA;Type &amp;quot;help&amp;quot; for help. &lt;/pre&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;postgres=# create database dvdrental;&#xD;&#xA;CREATE DATABASE&#xD;&#xA;postgres=# \l&#xD;&#xA;                                                   List of databases&#xD;&#xA;   Name    |  Owner   | Encoding | Locale Provider | Collate |  Ctype  | ICU Locale | ICU Rules |   Access privileges&#xD;&#xA;-----------+----------+----------+-----------------+---------+---------+------------+-----------+-----------------------&#xD;&#xA; dvdrental | postgres | UTF8     | libc            | C.UTF-8 | C.UTF-8 |            |           |&#xD;&#xA; postgres  | postgres | UTF8     | libc            | C.UTF-8 | C.UTF-8 |            |           |&#xD;&#xA; template0 | postgres | UTF8     | libc            | C.UTF-8 | C.UTF-8 |            |           | =c/postgres          +&#xD;&#xA;           |          |          |                 |         |         |            |           | postgres=CTc/postgres&#xD;&#xA; template1 | postgres | UTF8     | libc            | C.UTF-8 | C.UTF-8 |            |           | =c/postgres          +&#xD;&#xA;           |          |          |                 |         |         |            |           | postgres=CTc/postgres&#xD;&#xA;(4 rows)&lt;/pre&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres:~$ pg_restore -U postgres -d dvdrental dvdrental.tar&lt;/pre&gt;&#xA;&lt;p&gt;Une fois que c&amp;#8217;est fait, on peut se connecter pour vérifier que tout a bien été chargé :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres:~$ psql&#xD;&#xA;psql (16.2 (Ubuntu 16.2-1.pgdg22.04+1))&#xD;&#xA;Type &amp;quot;help&amp;quot; for help.&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;postgres=# \c dvdrental&#xD;&#xA;You are now connected to database &amp;quot;dvdrental&amp;quot; as user &amp;quot;postgres&amp;quot;.&#xD;&#xA;dvdrental=# \dt&#xD;&#xA;             List of relations&#xD;&#xA; Schema |     Name      | Type  |  Owner&#xD;&#xA;--------+---------------+-------+----------&#xD;&#xA; public | actor         | table | postgres&#xD;&#xA; public | address       | table | postgres&#xD;&#xA; public | category      | table | postgres&#xD;&#xA; public | city          | table | postgres&#xD;&#xA; public | country       | table | postgres&#xD;&#xA; public | customer      | table | postgres&#xD;&#xA; public | film          | table | postgres&#xD;&#xA; public | film_actor    | table | postgres&#xD;&#xA; public | film_category | table | postgres&#xD;&#xA; public | inventory     | table | postgres&#xD;&#xA; public | language      | table | postgres&#xD;&#xA; public | payment       | table | postgres&#xD;&#xA; public | rental        | table | postgres&#xD;&#xA; public | staff         | table | postgres&#xD;&#xA; public | store         | table | postgres&#xD;&#xA;(15 rows)&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;h2&gt;L&amp;#8217;extension :&lt;/h2&gt;&#xA;&lt;p&gt;Pour tester l&amp;#8217;extension, nous allons essayer de supprimer un client de la liste des clients.&lt;br /&gt;&#xA;Le schéma de la base de données dvdrental est le suivant :&lt;br /&gt;&#xA;&lt;a href=&#34;https://blog.capdata.fr/wp-content/uploads/2024/03/dvd-rental-sample-database-diagram.png&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;alignnone wp-image-10507&#34; src=&#34;https://blog.capdata.fr/wp-content/uploads/2024/03/dvd-rental-sample-database-diagram-238x300.png&#34; alt=&#34;&#34; width=&#34;336&#34; height=&#34;424&#34; srcset=&#34;https://blog.capdata.fr/wp-content/uploads/2024/03/dvd-rental-sample-database-diagram-238x300.png 238w, https://blog.capdata.fr/wp-content/uploads/2024/03/dvd-rental-sample-database-diagram.png 730w&#34; sizes=&#34;(max-width: 336px) 100vw, 336px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Si l&amp;#8217;on observe attentivement le schéma ci-dessus, en voulant supprimer une donnée de la table customer, cela devrait avoir un impact sur les tables rental et payment qui sont directement liées à la table customer. De plus, ces deux tables sont également liées entre elles, ce qui signifie que supprimer une donnée dans la table rental modifiera nécessairement la table payment.&lt;/p&gt;&#xA;&lt;p&gt;Prenons l&amp;#8217;exemple de la suppression du client numéro 1. Si nous recherchons les dépendances de ce client dans la table rental, nous obtenons 32 lignes associées au customer_id 1 :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt; dvdrental=# select count(*) from rental where customer_id = 1;&#xD;&#xA; count&#xD;&#xA;-------&#xD;&#xA;    32&#xD;&#xA;(1 row)&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Et si nous allons maintenant chercher toutes les occurrences de ce même client dans la table des paiements, nous obtenons :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select count(*) from payment where customer_id = 1;&#xD;&#xA; count&#xD;&#xA;-------&#xD;&#xA;    30&#xD;&#xA;(1 row) &lt;/pre&gt;&#xA;&lt;p&gt;À présent, avec l&amp;#8217;extension recursive_delete, nous allons chercher à obtenir le schéma de suppression pour vérifier si les résultats que nous avons trouvés sont corrects :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# create extension recursively_delete;&#xD;&#xA;CREATE EXTENSION&#xD;&#xA;dvdrental=# \set VERBOSITY terse&#xD;&#xA;dvdrental=# select recursively_delete(&#39;customer&#39;, 1);&#xD;&#xA;INFO:  DAMAGE PREVIEW (recursively_delete v0.1.5)&#xD;&#xA;INFO:&#xD;&#xA;INFO:          1     customer&#xD;&#xA;INFO:         30 r   | payment.[&amp;quot;customer_id&amp;quot;]&#xD;&#xA;INFO:         32 r   | rental.[&amp;quot;customer_id&amp;quot;]&#xD;&#xA;INFO:          ~ n   | | payment.[&amp;quot;rental_id&amp;quot;]&#xD;&#xA;INFO:&#xD;&#xA; recursively_delete&#xD;&#xA;--------------------&#xD;&#xA;                  0&#xD;&#xA;(1 row) &lt;/pre&gt;&#xA;&lt;p&gt;La fonction de suppression de l&amp;#8217;extension fonctionne avec les paramètres suivants :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Le nom de la table en premier paramètre&lt;/li&gt;&#xA;&lt;li&gt;La clause WHERE du DELETE en second paramètre, qui peut être de multiples types (des entiers, des chaînes de caractères, des listes, des UUID&amp;#8230;)&lt;/li&gt;&#xA;&lt;li&gt;Le mode de fonctionnement de l&amp;#8217;extension, par défaut à false, qui indique au programme de ne pas effectuer les suppressions, mais simplement de dresser le schéma. Le passer à true entraînerait les suppressions.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Pour interpréter le schéma, voici la composition de chaque nœud :&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;La première colonne correspond au nombre de lignes&lt;/li&gt;&#xA;&lt;li&gt;Le type de contraintes qui expliquent l&amp;#8217;implication de la table dans le schéma : &amp;#8216;a&amp;#8217;, &amp;#8216;r&amp;#8217;, &amp;#8216;c&amp;#8217;, &amp;#8216;n&amp;#8217;, ou &amp;#8216;d&amp;#8217; (&amp;#8216;no action&amp;#8217;, &amp;#8216;restrict&amp;#8217;, &amp;#8216;cascade&amp;#8217;, &amp;#8216;set null&amp;#8217;, ou &amp;#8216;set default&amp;#8217;)&lt;/li&gt;&#xA;&lt;li&gt;Un indicateur de si oui ou non le champ en question participe à une référence circulaire.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;En examinant le résultat renvoyé par notre extension, nous constatons que nous obtenons les mêmes résultats : 30 lignes pour payment et 32 lignes pour rental. Nous obtenons également une dernière ligne qui nous indique que payment possède une référence à rental dans sa structure, et qu&amp;#8217;il va lui aussi procéder à des suppressions en fonction du rental_id. Cela pourrait être par exemple le cas où une location effectuée par un client serait payée par un autre.&lt;/p&gt;&#xA;&lt;p&gt;Pour effectuer la suppression, il suffit simplement de préciser true en troisième paramètre.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select recursively_delete(&#39;customer&#39;, 1, true);&#xD;&#xA; recursively_delete&#xD;&#xA;--------------------&#xD;&#xA;                  1&#xD;&#xA;(1 row)&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Et à présent, si nous consultons notre table customer, la ligne 1 a disparu, ainsi que toutes les lignes qui la concernent dans d&amp;#8217;autres tables également.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;&#xD;&#xA;dvdrental=# select count(*) from customer where customer_id = 1;&#xD;&#xA; count&#xD;&#xA;-------&#xD;&#xA;     0&#xD;&#xA;(1 row)&#xD;&#xA;&#xD;&#xA;dvdrental=# select count(*) from rental where customer_id = 1;&#xD;&#xA; count&#xD;&#xA;-------&#xD;&#xA;     0&#xD;&#xA;(1 row)&#xD;&#xA;&#xD;&#xA;dvdrental=# select count(*) from payment where customer_id = 1;&#xD;&#xA; count&#xD;&#xA;-------&#xD;&#xA;     0&#xD;&#xA;(1 row)&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Nos lignes ont bel et bien disparu.&lt;/p&gt;&#xA;&lt;p&gt;Cette extension fonctionne également avec les clés primaires composites. Il suffit de préciser entre crochets les deux valeurs de notre clé primaire, et le tour est joué.&lt;/p&gt;&#xA;&lt;p&gt;Pour illustrer davantage le fonctionnement, je vais réaliser une suppression sur la table film. Cette table possède quelques dépendances.&lt;br /&gt;&#xA;Disons que nous souhaitons supprimer les 10 premiers films de notre liste, car ils ne sont plus loués étant trop anciens (plus personne n&amp;#8217;a de magnétoscope pour regarder de bonnes vieilles cassettes !).&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select recursively_delete(&#39;film&#39;, (SELECT array_agg(film_id) FROM film  WHERE film_id between 1 and 10));&#xD;&#xA;INFO:  DAMAGE PREVIEW (recursively_delete v0.1.5)&#xD;&#xA;INFO:&#xD;&#xA;INFO:         10     film&#xD;&#xA;INFO:         62 r   | film_actor.[&amp;quot;film_id&amp;quot;]&#xD;&#xA;INFO:         10 r   | film_category.[&amp;quot;film_id&amp;quot;]&#xD;&#xA;INFO:         52 r   | inventory.[&amp;quot;film_id&amp;quot;]&#xD;&#xA;INFO:        165 r   | | rental.[&amp;quot;inventory_id&amp;quot;]&#xD;&#xA;INFO:          ~ n   | | | payment.[&amp;quot;rental_id&amp;quot;]&#xD;&#xA;INFO:&#xD;&#xA; recursively_delete&#xD;&#xA;--------------------&#xD;&#xA;                  0&#xD;&#xA;(1 row)&lt;/pre&gt;&#xA;&lt;p&gt;Nous observons donc que notre suppression de 10 films (dans un array) entraîne la suppression d&amp;#8217;acteurs, de catégories, d&amp;#8217;inventaires, et par extension, de locations et de paiements&lt;/p&gt;&#xA;&lt;h2&gt;Conclusion :&lt;/h2&gt;&#xA;&lt;p&gt;En conclusion, l&amp;#8217;extension pg_recursively_delete offre une solution pratique pour supprimer récursivement des données dans PostgreSQL, simplifiant ainsi les tâches de maintenance et de nettoyage des bases de données. Cependant, malgré ses avantages, cette extension présente certaines limites en termes de performances.&lt;/p&gt;&#xA;&lt;p&gt;L&amp;#8217;une des principales limitations réside dans le fait que la suppression récursive peut entraîner des opérations coûteuses en termes de temps d&amp;#8217;exécution, surtout lorsque les données concernées sont fortement imbriquées ou que la base de données est volumineuse. Les performances peuvent également être affectées lorsque les tables impliquées dans la suppression ont des index complexes ou des contraintes de clés étrangères.&lt;/p&gt;&#xA;&lt;p&gt;De plus, il est crucial de reconnaître les risques associés à la suppression de données ayant de nombreuses dépendances dans une base de données. La suppression inconsidérée de telles données peut entraîner des incohérences dans la base de données, des erreurs d&amp;#8217;intégrité référentielle et même des pertes de données importantes. Il est donc essentiel de procéder avec prudence et de prendre en compte toutes les implications potentielles avant d&amp;#8217;utiliser cette extension.&lt;/p&gt;&#xA;&lt;p&gt;En résumé, bien que l&amp;#8217;extension pg_recursively_delete offre une fonctionnalité utile pour gérer les opérations de suppression récursive dans PostgreSQL, il est essentiel pour les utilisateurs de comprendre ses limites en termes de performances et les risques potentiels associés à la suppression de données avec de nombreuses dépendances. Une utilisation judicieuse et une évaluation minutieuse des scénarios d&amp;#8217;utilisation sont indispensables pour garantir l&amp;#8217;intégrité et la performance de la base de données.&lt;strong&gt;Continuez votre lecture sur le blog :&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul class=&#34;similar-posts&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/pg_dirtyread-ou-comment-reparer-facilement-un-delete-sauvage/&#34; rel=&#34;bookmark&#34; title=&#34;27 mars 2024&#34;&gt;pg_dirtyread où comment réparer facilement un delete sauvage&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/pyrseas-et-postgresql-comparer-facilement-des-schema-de-base-de-donnees/&#34; rel=&#34;bookmark&#34; title=&#34;3 janvier 2023&#34;&gt;Pyrseas et Postgresql : Comparer facilement des schémas de base de données&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-planifier-une-tache-avec-pg_cron/&#34; rel=&#34;bookmark&#34; title=&#34;24 septembre 2019&#34;&gt;PostgreSQL : planifier une tâche avec pg_cron&lt;/a&gt; (Emmanuel RAMI) [Non classéPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-anonymizer/&#34; rel=&#34;bookmark&#34; title=&#34;7 juillet 2022&#34;&gt;PostgreSQL Anonymizer&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/pseudonymisation-postgresql/&#34; rel=&#34;bookmark&#34; title=&#34;30 janvier 2024&#34;&gt;Pseudonymiser vos bases PostgreSQL&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;!-- Similar Posts took 1.979 ms --&gt;&lt;/p&gt;&#xA;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10505&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10505&amp;#038;title=pg_recursively_delete%20%3A%20Simplifier%20les%20suppressions%20r%C3%A9cursives&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=pg_recursively_delete%20%3A%20Simplifier%20les%20suppressions%20r%C3%A9cursives&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10505&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/pg_recursively_delete-simplifier-les-suppressions-recursives/&#34;&gt;pg_recursively_delete : Simplifier les suppressions récursives&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.capdata.fr/index.php/pg_recursively_delete-simplifier-les-suppressions-recursives/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Si vous avez été amené au fil de votre carrière à manipuler de gros volumes de données contenus dans plusieurs tables possédant des références croisées entre elles, dépendantes d&amp;#8217;autres tables, qui elles-mêmes dépendent d&amp;#8217;autres tables, vous savez à quel point&amp;#8230; &lt;a href=&#34;https://blog.capdata.fr/index.php/pg_recursively_delete-simplifier-les-suppressions-recursives/&#34; class=&#34;more-link&#34;&gt;Continuer la lecture &lt;span class=&#34;meta-nav&#34;&gt;&amp;#8594;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/pg_recursively_delete-simplifier-les-suppressions-recursives/&#34;&gt;pg_recursively_delete : Simplifier les suppressions récursives&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Emmanuel RAMI</name>
    </author>
  </entry>
  <entry>
    <title>pg_dirtyread où comment réparer facilement un delete sauvage</title>
    <updated>2024-03-27T14:24:14Z</updated>
    <id>tag:blog.capdata.fr,2024-03-27:/index.php/pg_dirtyread-ou-comment-reparer-facilement-un-delete-sauvage/</id>
    <content type="html">&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10494&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10494&amp;#038;title=pg_dirtyread%20o%C3%B9%20comment%20r%C3%A9parer%20facilement%20un%20delete%20sauvage&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=pg_dirtyread%20o%C3%B9%20comment%20r%C3%A9parer%20facilement%20un%20delete%20sauvage&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10494&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;Imaginez le scénario : nous sommes vendredi soir, en fin de journée, et pour une raison quelconque, un développeur qui a eu une semaine fatiguante se dit qu&amp;#8217;il serait bien de supprimer les lignes qu&amp;#8217;il a modifiées dans la base de données de développement, afin que lundi il puisse reprendre le travail à zéro. Il se connecte donc et, à l&amp;#8217;aide d&amp;#8217;une commande de suppression sur la table concernée, il efface ses quelques lignes&amp;#8230; Avant de se rendre compte qu&amp;#8217;il vient de le faire en production. &lt;/p&gt;&#xA;&lt;p&gt;Cela nous est arrivé à tous, au moins une fois dans notre carrière. Un manque d&amp;#8217;attention, une absence de sécurisation, une erreur est si vite arrivée. Oui, mais voilà. La solution pour pallier à ce genre de problèmes, c&amp;#8217;est généralement de recharger une sauvegarde de la base de données, pour ne surtout pas perdre cette ligne essentielle des paiements enregistrés&amp;#8230; C&amp;#8217;est long. La base est volumineuse&amp;#8230; Et puis, nous n&amp;#8217;avons pas un plan de sauvegarde fiable&amp;#8230; Au secours !&lt;/p&gt;&#xA;&lt;p&gt;Avant de céder à la panique, peut-être existe-t-il une autre solution à votre problème.&lt;/p&gt;&#xA;&lt;p&gt;L&amp;#8217;extension pg_dirtyread pourrait être une idée. Cette extension permet aux utilisateurs de lire des données supprimées dans les tables, ce qui est normalement impossible en temps normal. Cette extension est disponible gratuitement sur GIT, et elle peut vous sauver la vie dans le scénario évoqué juste avant. Nous allons voir ensemble comment l&amp;#8217;utiliser :&lt;/p&gt;&#xA;&lt;h2&gt;Installer PostgreSQL et pg_dirtyread :&lt;/h2&gt;&#xA;&lt;p&gt;C&amp;#8217;est assez rare pour le souligner, mais pg_dirtyread possède son propre package Ubuntu tout inclus. Ce package, si vous pouvez vous en servir, contient l&amp;#8217;installation du moteur, l&amp;#8217;installation des dépendances de développement de PostgreSQL, le client, et l&amp;#8217;extension elle-même. Cela simplifie grandement le travail. Vous n&amp;#8217;avez qu&amp;#8217;à télécharger le package dans la version qui vous intéresse. Pour cet article, j&amp;#8217;ai choisi de télécharger et installer la dernière version de PostgreSQL ainsi que la dernière version de l&amp;#8217;extension.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt; root:~/pg_dirtyread# sudo apt -y install postgresql-16-dirtyread&#xD;&#xA;Reading package lists... Done&#xD;&#xA;Building dependency tree... Done&#xD;&#xA;Reading state information... Done&#xD;&#xA;The following additional packages will be installed:&#xD;&#xA;  libcommon-sense-perl libjson-perl libjson-xs-perl libpq5 libsensors-config libsensors5 libtypes-serialiser-perl postgresql-16 postgresql-client-16 postgresql-client-common postgresql-common ssl-cert sysstat&#xD;&#xA;Suggested packages:&#xD;&#xA;  lm-sensors postgresql-doc-16 isag&#xD;&#xA;The following NEW packages will be installed:&#xD;&#xA;  libcommon-sense-perl libjson-perl libjson-xs-perl libpq5 libsensors-config libsensors5 libtypes-serialiser-perl postgresql-16 postgresql-16-dirtyread postgresql-client-16 postgresql-client-common postgresql-common ssl-cert sysstat&#xD;&#xA;0 upgraded, 14 newly installed, 0 to remove and 0 not upgraded.&#xD;&#xA;Need to get 21.3 MB of archives.&#xD;&#xA;...&#xD;&#xA;Running kernel seems to be up-to-date.&#xD;&#xA;&#xD;&#xA;No services need to be restarted.&#xD;&#xA;&#xD;&#xA;No containers need to be restarted.&#xD;&#xA;&#xD;&#xA;No user sessions are running outdated binaries.&#xD;&#xA;&#xD;&#xA;No VM guests are running outdated hypervisor (qemu) binaries on this host.&lt;/pre&gt;&#xA;&lt;p&gt;Il existe une autre méthode d&amp;#8217;installation, la plus classique. Il suffit de télécharger les sources depuis le dépôt GIT et de les compiler sur votre machine en utilisant les commandes &amp;#8216;make&amp;#8217; et &amp;#8216;make install&amp;#8217;.&lt;/p&gt;&#xA;&lt;h2&gt;Mise en place d&amp;#8217;un environnement :&lt;/h2&gt;&#xA;&lt;p&gt;Pour notre test, j&amp;#8217;ai choisit de me servir encore une fois de la base de données dvdrental, accessible à tous. Il me faut donc la télécharger :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt; postgres:~$ wget https://www.postgresqltutorial.com/wp-content/uploads/2019/05/dvdrental.zip&#xD;&#xA;--2024-03-11 08:34:54--  https://www.postgresqltutorial.com/wp-content/uploads/2019/05/dvdrental.zip&#xD;&#xA;Resolving www.postgresqltutorial.com (www.postgresqltutorial.com)... 104.21.2.174, 172.67.129.129, 2606:4700:3037::6815:2ae, ...&#xD;&#xA;Connecting to www.postgresqltutorial.com (www.postgresqltutorial.com)|104.21.2.174|:443... connected.&#xD;&#xA;HTTP request sent, awaiting response... 200 OK&#xD;&#xA;Length: 550906 (538K) [application/zip]&#xD;&#xA;Saving to: ‘dvdrental.zip’&#xD;&#xA;&#xD;&#xA;dvdrental.zip                                               100%[========================================================================================================================================&amp;gt;] 537.99K  --.-KB/s    in 0.01s&#xD;&#xA;&#xD;&#xA;2024-03-11 08:34:54 (46.0 MB/s) - ‘dvdrental.zip’ saved [550906/550906]  &lt;/pre&gt;&#xA;&lt;p&gt;Une fois téléchargée, on la dezippe :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres:~$ ls -l&#xD;&#xA;total 544&#xD;&#xA;drwxr-xr-x 3 postgres postgres   4096 Mar 11 08:30 16&#xD;&#xA;-rw-rw-r-- 1 postgres postgres 550906 May 12  2019 dvdrental.zip&#xD;&#xA;postgres:~$ unzip dvdrental.zip&#xD;&#xA;Archive:  dvdrental.zip&#xD;&#xA;  inflating: dvdrental.tar&#xD;&#xA;postgres:~$ ls -l&#xD;&#xA;total 3316&#xD;&#xA;drwxr-xr-x 3 postgres postgres    4096 Mar 11 08:30 16&#xD;&#xA;-rw-rw-r-- 1 postgres postgres 2835456 May 12  2019 dvdrental.tar&#xD;&#xA;-rw-rw-r-- 1 postgres postgres  550906 May 12  2019 dvdrental.zip&lt;/pre&gt;&#xA;&lt;p&gt;On créé la base de données pour accueillir nos données, et on charge le fichier de sauvegarde :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres:~$ psql&#xD;&#xA;psql (16.2 (Ubuntu 16.2-1.pgdg22.04+1))&#xD;&#xA;Type &amp;quot;help&amp;quot; for help. &lt;/pre&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;postgres=# create database dvdrental;&#xD;&#xA;CREATE DATABASE&#xD;&#xA;postgres=# \l&#xD;&#xA;                                                   List of databases&#xD;&#xA;   Name    |  Owner   | Encoding | Locale Provider | Collate |  Ctype  | ICU Locale | ICU Rules |   Access privileges&#xD;&#xA;-----------+----------+----------+-----------------+---------+---------+------------+-----------+-----------------------&#xD;&#xA; dvdrental | postgres | UTF8     | libc            | C.UTF-8 | C.UTF-8 |            |           |&#xD;&#xA; postgres  | postgres | UTF8     | libc            | C.UTF-8 | C.UTF-8 |            |           |&#xD;&#xA; template0 | postgres | UTF8     | libc            | C.UTF-8 | C.UTF-8 |            |           | =c/postgres          +&#xD;&#xA;           |          |          |                 |         |         |            |           | postgres=CTc/postgres&#xD;&#xA; template1 | postgres | UTF8     | libc            | C.UTF-8 | C.UTF-8 |            |           | =c/postgres          +&#xD;&#xA;           |          |          |                 |         |         |            |           | postgres=CTc/postgres&#xD;&#xA;(4 rows)&lt;/pre&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres:~$ pg_restore -U postgres -d dvdrental dvdrental.tar&lt;/pre&gt;&#xA;&lt;p&gt;Une fois que c&amp;#8217;est fait, on peut se connecter pour vérifier que tout a bien été chargé :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres:~$ psql&#xD;&#xA;psql (16.2 (Ubuntu 16.2-1.pgdg22.04+1))&#xD;&#xA;Type &amp;quot;help&amp;quot; for help.&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;postgres=# \c dvdrental&#xD;&#xA;You are now connected to database &amp;quot;dvdrental&amp;quot; as user &amp;quot;postgres&amp;quot;.&#xD;&#xA;dvdrental=# \dt&#xD;&#xA;             List of relations&#xD;&#xA; Schema |     Name      | Type  |  Owner&#xD;&#xA;--------+---------------+-------+----------&#xD;&#xA; public | actor         | table | postgres&#xD;&#xA; public | address       | table | postgres&#xD;&#xA; public | category      | table | postgres&#xD;&#xA; public | city          | table | postgres&#xD;&#xA; public | country       | table | postgres&#xD;&#xA; public | customer      | table | postgres&#xD;&#xA; public | film          | table | postgres&#xD;&#xA; public | film_actor    | table | postgres&#xD;&#xA; public | film_category | table | postgres&#xD;&#xA; public | inventory     | table | postgres&#xD;&#xA; public | language      | table | postgres&#xD;&#xA; public | payment       | table | postgres&#xD;&#xA; public | rental        | table | postgres&#xD;&#xA; public | staff         | table | postgres&#xD;&#xA; public | store         | table | postgres&#xD;&#xA;(15 rows)&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;h2&gt;Premier scénario : Suppression de lignes dans une table&lt;/h2&gt;&#xA;&lt;p&gt;Prenons ici le cas de la situation décrite dans l&amp;#8217;introduction. Une ou plusieurs lignes ont été supprimées d&amp;#8217;une ou plusieurs tables. Recharger l&amp;#8217;intégralité d&amp;#8217;une base de données juste pour ces quelques lignes, aussi essentielles soient-elles, demande un investissement énorme.&lt;/p&gt;&#xA;&lt;p&gt;Pour notre exemple, je vais supprimer un certain nombre de lignes de la table &amp;#8216;payment&amp;#8217;.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select * from payment limit 10;&#xD;&#xA; payment_id | customer_id | staff_id | rental_id | amount |        payment_date&#xD;&#xA;------------+-------------+----------+-----------+--------+----------------------------&#xD;&#xA;      17503 |         341 |        2 |      1520 |   7.99 | 2007-02-15 22:25:46.996577&#xD;&#xA;      17504 |         341 |        1 |      1778 |   1.99 | 2007-02-16 17:23:14.996577&#xD;&#xA;      17505 |         341 |        1 |      1849 |   7.99 | 2007-02-16 22:41:45.996577&#xD;&#xA;      17506 |         341 |        2 |      2829 |   2.99 | 2007-02-19 19:39:56.996577&#xD;&#xA;      17507 |         341 |        2 |      3130 |   7.99 | 2007-02-20 17:31:48.996577&#xD;&#xA;      17508 |         341 |        1 |      3382 |   5.99 | 2007-02-21 12:33:49.996577&#xD;&#xA;      17509 |         342 |        2 |      2190 |   5.99 | 2007-02-17 23:58:17.996577&#xD;&#xA;      17510 |         342 |        1 |      2914 |   5.99 | 2007-02-20 02:11:44.996577&#xD;&#xA;      17511 |         342 |        1 |      3081 |   2.99 | 2007-02-20 13:57:39.996577&#xD;&#xA;      17512 |         343 |        2 |      1547 |   4.99 | 2007-02-16 00:10:50.996577&#xD;&#xA;(10 rows)&#xD;&#xA;&#xD;&#xA;dvdrental=# delete from payment where payment_id between 17523 and 17532;&#xD;&#xA;DELETE 10&lt;/pre&gt;&#xA;&lt;div class=&#34;flex-1 overflow-hidden&#34;&gt;&#xA;&lt;div class=&#34;react-scroll-to-bottom--css-toqmf-79elbk h-full&#34;&gt;&#xA;&lt;div class=&#34;react-scroll-to-bottom--css-toqmf-1n7m0yu&#34;&gt;&#xA;&lt;div class=&#34;flex flex-col text-sm pb-9&#34;&gt;&#xA;&lt;div class=&#34;w-full text-token-text-primary&#34; data-testid=&#34;conversation-turn-17&#34;&gt;&#xA;&lt;div class=&#34;px-4 py-2 justify-center text-base md:gap-6 m-auto&#34;&gt;&#xA;&lt;div class=&#34;flex flex-1 text-base mx-auto gap-3 md:px-5 lg:px-1 xl:px-5 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem] group final-completion&#34;&gt;&#xA;&lt;div class=&#34;relative flex w-full flex-col agent-turn&#34;&gt;&#xA;&lt;div class=&#34;flex-col gap-1 md:gap-3&#34;&gt;&#xA;&lt;div class=&#34;flex flex-grow flex-col max-w-full&#34;&gt;&#xA;&lt;div class=&#34;min-h-[20px] text-message flex flex-col items-start gap-3 whitespace-pre-wrap break-words [.text-message+&amp;amp;]:mt-5 overflow-x-auto&#34; data-message-author-role=&#34;assistant&#34; data-message-id=&#34;107c8c40-0671-4f34-88f1-895d9fe2648b&#34;&gt;&#xA;&lt;div class=&#34;markdown prose w-full break-words dark:prose-invert light&#34;&gt;&#xA;&lt;p&gt;La bêtise est faite, les données ont disparu. Lorsque j&amp;#8217;essaie de les requêter pour voir si elles sont encore là, je me heurte à la réalité : elles ont été supprimées.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select * from payment where payment_id between 17523 and 17532;&#xD;&#xA; payment_id | customer_id | staff_id | rental_id | amount | payment_date&#xD;&#xA;------------+-------------+----------+-----------+--------+--------------&#xD;&#xA;(0 rows)&lt;/pre&gt;&#xA;&lt;p&gt;La première chose à faire, en toute urgence, c&amp;#8217;est de désactiver l&amp;#8217;auto-vacuum. C&amp;#8217;est votre pire ennemi dans notre scénario. C&amp;#8217;est même la première chose à faire lorsque vous vous rendez compte que l&amp;#8217;erreur a été commise :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# alter table payment set (autovacuum_enabled=false);&lt;/pre&gt;&#xA;&lt;p&gt;Si l&amp;#8217;auto-vacuum est passé sur la table avant que vous n&amp;#8217;ayez eu le temps de le désactiver, malheureusement, pg_dirtyread ne vous servira plus à rien. Une fois cela fait, on initialise l&amp;#8217;extension :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# CREATE EXTENSION pg_dirtyread;&#xD;&#xA;CREATE EXTENSION&lt;/pre&gt;&#xA;&lt;p&gt;L&amp;#8217;extension étant maintenant créée, on peut requêter les données perdues. La syntaxe d&amp;#8217;utilisation exige que vous rappeliez le schéma de la table en question au moment de requêter les lignes supprimées. Vous pouvez choisir de ne pas inclure toutes les colonnes, ou même d&amp;#8217;en ajouter, comme nous le verrons à la fin de l&amp;#8217;article. Dans notre exemple, la requête pour consulter les données effacées sera la suivante :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select * from pg_dirtyread(&#39;payment&#39;) AS t(payment_id integer, customer_id smallint, staff_id smallint, rental_id integer, amount numeric(5,2), payment_date timestamp without time zone);&#xD;&#xA; payment_id | customer_id | staff_id | rental_id | amount |        payment_date&#xD;&#xA;------------+-------------+----------+-----------+--------+----------------------------&#xD;&#xA;      17523 |         345 |        1 |      1457 |   4.99 | 2007-02-15 18:34:15.996577&#xD;&#xA;      17524 |         345 |        2 |      1550 |   0.99 | 2007-02-16 00:27:01.996577&#xD;&#xA;      17525 |         345 |        2 |      2766 |   4.99 | 2007-02-19 16:13:41.996577&#xD;&#xA;      17526 |         346 |        1 |      1994 |   5.99 | 2007-02-17 09:35:32.996577&#xD;&#xA;      17527 |         346 |        2 |      3372 |   2.99 | 2007-02-21 12:02:45.996577&#xD;&#xA;      17528 |         346 |        1 |      3421 |   2.99 | 2007-02-21 15:51:24.996577&#xD;&#xA;      17529 |         347 |        2 |      1711 |   8.99 | 2007-02-16 12:40:18.996577&#xD;&#xA;      17530 |         347 |        2 |      2274 |   0.99 | 2007-02-18 04:59:41.996577&#xD;&#xA;      17531 |         347 |        1 |      3026 |   4.99 | 2007-02-20 10:16:26.996577&#xD;&#xA;      17532 |         347 |        1 |      3092 |   8.99 | 2007-02-20 14:33:08.996577&#xD;&#xA;      17533 |         347 |        1 |      3326 |   7.99 | 2007-02-21 07:33:16.996577&#xD;&#xA;      17534 |         348 |        1 |      1654 |   2.99 | 2007-02-16 08:11:14.996577&#xD;&#xA;      17535 |         348 |        1 |      2041 |   8.99 | 2007-02-17 12:47:26.996577&#xD;&#xA;      17536 |         348 |        2 |      2499 |   0.99 | 2007-02-18 21:30:02.996577&lt;/pre&gt;&#xA;&lt;p&gt;On voit bien apparaître en début de liste nos lignes qui sont censées ne plus exister. Cela nous permet éventuellement d&amp;#8217;extraire les données qu&amp;#8217;elles contiennent pour pouvoir les réinjecter ensuite avec un INSERT. On peut également filtrer les données pour ne rechercher que celles que l&amp;#8217;on a supprimées :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select * from pg_dirtyread(&#39;payment&#39;) payment(payment_id integer, customer_id smallint, staff_id smallint, rental_id integer, amount numeric(5,2), dropped_6 timestamp without time zone) where payment_id = 17523;&#xD;&#xA; payment_id | customer_id | staff_id | rental_id | amount |         dropped_6&#xD;&#xA;------------+-------------+----------+-----------+--------+----------------------------&#xD;&#xA;      17523 |         345 |        1 |      1457 |   4.99 | 2007-02-15 18:34:15.996577&#xD;&#xA;(1 row)&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;h2&gt;Deuxième scénario : On a supprimé une colonne entière&lt;/h2&gt;&#xA;&lt;p&gt;Deuxième cas typique, sûrement plus rare, celui où une colonne entière est supprimée. Pour notre exemple, je vais supprimer la colonne contenant la date de paiement :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# alter table payment drop column payment_date;&#xD;&#xA;ALTER TABLE&lt;/pre&gt;&#xA;&lt;p&gt;pg_dirtyread nous permet de retrouver les informations de cette colonne à condition qu&amp;#8217;aucun VACUUM FULL ou CLUSTER n&amp;#8217;ait été exécuté. Pour ce faire, il faut connaître la position de la colonne dans l&amp;#8217;ordre des colonnes de la table. Pour notre exemple, la colonne de date est la dernière colonne de la table, donc en position 6. Pour retrouver nos données, on peut donc exécuter la commande suivante :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select * from pg_dirtyread(&#39;payment&#39;) payment(payment_id integer, customer_id smallint, staff_id smallint, rental_id integer, amount numeric(5,2), dropped_6 timestamp without time zone);&#xD;&#xA; payment_id | customer_id | staff_id | rental_id | amount |         dropped_6&#xD;&#xA;------------+-------------+----------+-----------+--------+----------------------------&#xD;&#xA;      17523 |         345 |        1 |      1457 |   4.99 | 2007-02-15 18:34:15.996577&#xD;&#xA;      17524 |         345 |        2 |      1550 |   0.99 | 2007-02-16 00:27:01.996577&#xD;&#xA;      17525 |         345 |        2 |      2766 |   4.99 | 2007-02-19 16:13:41.996577&#xD;&#xA;      17526 |         346 |        1 |      1994 |   5.99 | 2007-02-17 09:35:32.996577&#xD;&#xA;      17527 |         346 |        2 |      3372 |   2.99 | 2007-02-21 12:02:45.996577&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Le cas d&amp;#8217;une restauration d&amp;#8217;une colonne entière supprimée est compliqué à gérer. Il faudrait la recréer, puis modifier toutes les lignes une à une pour réajouter les valeurs de cette fameuse colonne. Cela peut s&amp;#8217;avérer un peu complexe à réaliser. Cependant, si vous ne disposez pas d&amp;#8217;une sauvegarde pg_dump, vous n&amp;#8217;aurez peut-être pas d&amp;#8217;autres alternatives que cela, à part recharger entièrement la base.&lt;/p&gt;&#xA;&lt;h2&gt;Bonus : Récupérer les informations système des lignes supprimées&lt;/h2&gt;&#xA;&lt;p&gt;Avec pg_dirtyread, il est possible de récupérer les informations système des lignes qui ont été supprimées. Pour ce faire, rien de plus simple : il suffit d&amp;#8217;indiquer dans la requête les informations que vous souhaitez récupérer. De plus, il existe une colonne qui indique si la ligne est supposément supprimée ou non, ce qui pourrait être pratique pour trier les différentes lignes selon leur état :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=#  SELECT * FROM pg_dirtyread(&#39;payment&#39;) AS t(tableoid oid, ctid tid, xmin xid, xmax xid, cmin cid, cmax cid, dead boolean);&#xD;&#xA; tableoid |   ctid    | xmin | xmax | cmin | cmax | dead&#xD;&#xA;----------+-----------+------+------+------+------+------&#xD;&#xA;    16505 | (0,21)    |  835 |  941 |    0 |    0 | f&#xD;&#xA;    16505 | (0,22)    |  835 |  941 |    0 |    0 | f&#xD;&#xA;    16505 | (0,23)    |  835 |  941 |    0 |    0 | f&#xD;&#xA;    16505 | (0,24)    |  835 |  941 |    0 |    0 | f&#xD;&#xA;    16505 | (0,25)    |  835 |  941 |    0 |    0 | f&#xD;&#xA;    16505 | (0,26)    |  835 |  941 |    0 |    0 | f&#xD;&#xA;    16505 | (0,27)    |  835 |  941 |    0 |    0 | f&#xD;&#xA;    16505 | (0,28)    |  835 |  941 |    0 |    0 | f&#xD;&#xA;    16505 | (0,29)    |  835 |  941 |    0 |    0 | f&#xD;&#xA;    16505 | (0,30)    |  835 |  941 |    0 |    0 | f&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;h2&gt;Conclusion :&lt;/h2&gt;&#xA;&lt;p&gt;En conclusion, l&amp;#8217;extension pg_dirtyread offre une solution précieuse pour accéder aux données supprimées dans une base de données PostgreSQL. Son utilisation peut être cruciale dans des cas d&amp;#8217;incidents critiques tels que la récupération de données perdues accidentellement ou la résolution d&amp;#8217;incohérences de données. Cependant, il est essentiel de rappeler que son application reste extrêmement situationnelle et que pour qu&amp;#8217;elle puisse être efficace, l&amp;#8217;autovacuum doit être désactivé, ce qui n&amp;#8217;est pas forcément recommandé.&lt;strong&gt;Continuez votre lecture sur le blog :&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul class=&#34;similar-posts&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/pg_recursively_delete-simplifier-les-suppressions-recursives/&#34; rel=&#34;bookmark&#34; title=&#34;3 avril 2024&#34;&gt;pg_recursively_delete : Simplifier les suppressions récursives&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/pyrseas-et-postgresql-comparer-facilement-des-schema-de-base-de-donnees/&#34; rel=&#34;bookmark&#34; title=&#34;3 janvier 2023&#34;&gt;Pyrseas et Postgresql : Comparer facilement des schémas de base de données&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-planifier-une-tache-avec-pg_cron/&#34; rel=&#34;bookmark&#34; title=&#34;24 septembre 2019&#34;&gt;PostgreSQL : planifier une tâche avec pg_cron&lt;/a&gt; (Emmanuel RAMI) [Non classéPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/aws-rds-les-extensions-postgresql/&#34; rel=&#34;bookmark&#34; title=&#34;21 janvier 2020&#34;&gt;AWS RDS : les extensions PostgreSQL&lt;/a&gt; (Emmanuel RAMI) [AWSPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/pseudonymisation-postgresql/&#34; rel=&#34;bookmark&#34; title=&#34;30 janvier 2024&#34;&gt;Pseudonymiser vos bases PostgreSQL&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;!-- Similar Posts took 3.907 ms --&gt;&lt;/p&gt;&#xA;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10494&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10494&amp;#038;title=pg_dirtyread%20o%C3%B9%20comment%20r%C3%A9parer%20facilement%20un%20delete%20sauvage&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=pg_dirtyread%20o%C3%B9%20comment%20r%C3%A9parer%20facilement%20un%20delete%20sauvage&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10494&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/pg_dirtyread-ou-comment-reparer-facilement-un-delete-sauvage/&#34;&gt;pg_dirtyread où comment réparer facilement un delete sauvage&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.capdata.fr/index.php/pg_dirtyread-ou-comment-reparer-facilement-un-delete-sauvage/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Imaginez le scénario : nous sommes vendredi soir, en fin de journée, et pour une raison quelconque, un développeur qui a eu une semaine fatiguante se dit qu&amp;#8217;il serait bien de supprimer les lignes qu&amp;#8217;il a modifiées dans la base&amp;#8230; &lt;a href=&#34;https://blog.capdata.fr/index.php/pg_dirtyread-ou-comment-reparer-facilement-un-delete-sauvage/&#34; class=&#34;more-link&#34;&gt;Continuer la lecture &lt;span class=&#34;meta-nav&#34;&gt;&amp;#8594;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/pg_dirtyread-ou-comment-reparer-facilement-un-delete-sauvage/&#34;&gt;pg_dirtyread où comment réparer facilement un delete sauvage&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Emmanuel RAMI</name>
    </author>
  </entry>
  <entry>
    <title>Pseudonymiser vos bases PostgreSQL</title>
    <updated>2024-01-30T17:54:28Z</updated>
    <id>tag:blog.capdata.fr,2024-01-30:/index.php/pseudonymisation-postgresql/</id>
    <content type="html">&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10377&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10377&amp;#038;title=Pseudonymiser%20vos%20bases%20PostgreSQL&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=Pseudonymiser%20vos%20bases%20PostgreSQL&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10377&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;Dans l&amp;#8217;ère numérique actuelle, où la sécurité des données occupe une place centrale, la pseudonymisation émerge comme une stratégie cruciale pour renforcer la confidentialité des informations stockées dans les bases de données. Cette approche, bien que semblable à l&amp;#8217;anonymisation, se distingue par son objectif spécifique de préserver l&amp;#8217;utilité des données tout en masquant l&amp;#8217;identité réelle des individus. Dans le contexte de PostgreSQL, la pseudonymisation offre un équilibre délicat entre protection des renseignements sensibles et préservation de la fonctionnalité des données.&lt;/p&gt;&#xA;&lt;h2&gt;Principe de la Pseudonymisation :&lt;/h2&gt;&#xA;&lt;p&gt;La pseudonymisation implique la substitution des données réelles par des données fictives, mais conservant leur structure originale. Contrairement à l&amp;#8217;anonymisation, qui supprime complètement toute référence à l&amp;#8217;identité d&amp;#8217;un individu, la pseudonymisation permet la réversibilité du processus. Ainsi, les données restent utilisables à des fins légitimes : l&amp;#8217;analyse statistique, ou la réalisation de tests, tout en garantissant la protection des informations confidentielles.&lt;/p&gt;&#xA;&lt;p&gt;L&amp;#8217;utilité fondamentale de la pseudonymisation réside dans sa capacité à concilier deux impératifs apparemment contradictoires : la protection de la vie privée des individus et la nécessité d&amp;#8217;accéder et de traiter des données. Dans un paysage où les fuites de données et les violations de la vie privée sont de plus en plus fréquentes, la pseudonymisation devient une réponse pragmatique aux exigences de conformité réglementaire tout en préservant la valeur analytique des données.&lt;/p&gt;&#xA;&lt;p&gt;Souvent confondue avec la pseudonymisation, l&amp;#8217;anonymisation diffère par son caractère irréversible. Alors que l&amp;#8217;anonymisation supprime toute possibilité de relier des données à une identité spécifique, la pseudonymisation offre une réversibilité calculée, permettant une utilisation future des données tout en maintenant un niveau élevé de sécurité. Cette distinction cruciale souligne l&amp;#8217;importance de choisir la méthode la plus appropriée en fonction des besoins spécifiques de sécurité et des objectifs opérationnels.&lt;/p&gt;&#xA;&lt;h1&gt;Etat de la pseudonymisation actuellement sur PostgreSQL :&lt;/h1&gt;&#xA;&lt;p&gt;Le seul outil actuellement disponible sur le marché permettant de réaliser une pseudonymisation sur PostgreSQL est une extension. Nous l&amp;#8217;avions déjà évoquée lors d&amp;#8217;un précédent article : PostgreSQL Anonymizer. Pour rappel, cette extension est développée par Dalibo, et contient également de nombreuses options d&amp;#8217;anonymisation.&lt;/p&gt;&#xA;&lt;p&gt;Dans cet article, nous allons rappeler l&amp;#8217;installation de cette extension puis nous la verrons à l&amp;#8217;œuvre dans quelques exemples de pseudonymisation de données.&lt;/p&gt;&#xA;&lt;h3&gt;Etape 1 : Installation&lt;/h3&gt;&#xA;&lt;p&gt;La machine choisie pour mon test est une Ubuntu. Il n&amp;#8217;y a pas de package prêt à l&amp;#8217;emploi sur ce système d&amp;#8217;exploitation. Nous devons donc réaliser nous même la compilation de l&amp;#8217;extension pour qu&amp;#8217;elle puisse fonctionner. Nous avons au préalable installé une version 15 de PostgreSQL sur notre machine.&lt;/p&gt;&#xA;&lt;p&gt;Nous commençons par installer les outils de développement de PostgreSQL :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@sarah:~# sudo apt-get install postgresql-server-dev-15&#xD;&#xA;Reading package lists... Done&#xD;&#xA;Building dependency tree&#xD;&#xA;Reading state information... Done&#xD;&#xA;...&#xD;&#xA;Setting up postgresql-server-dev-15 (13.7-1.pgdg18.04+1) ...&#xD;&#xA;Processing triggers for man-db (2.8.3-2ubuntu0.1) ...&#xD;&#xA;Processing triggers for mime-support (3.60ubuntu1) ...&#xD;&#xA;Processing triggers for ureadahead (0.100.0-21) ...&#xD;&#xA;Processing triggers for install-info (6.5.0.dfsg.1-2) ...&#xD;&#xA;Processing triggers for libc-bin (2.27-3ubuntu1.5) ...&#xD;&#xA;Processing triggers for systemd (237-3ubuntu10.53)&lt;/pre&gt;&#xA;&lt;p&gt;Puis on récupère depuis le git de Dalibo les sources à la dernière version disponible :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@sarah:~# git clone &amp;lt;a href=&amp;quot;https://gitlab.com/dalibo/postgresql_anonymizer.git&amp;quot;&amp;gt;https://gitlab.com/dalibo/postgresql_anonymizer.git&amp;lt;/a&amp;gt;&#xD;&#xA;Cloning into &#39;postgresql_anonymizer&#39;...&#xD;&#xA;remote: Enumerating objects: 5145, done.&#xD;&#xA;remote: Counting objects: 100% (487/487), done.&#xD;&#xA;remote: Compressing objects: 100% (271/271), done.&#xD;&#xA;remote: Total 5145 (delta 327), reused 277 (delta 216), pack-reused 4658&#xD;&#xA;Receiving objects: 100% (5145/5145), 25.71 MiB | 19.23 MiB/s, done.&#xD;&#xA;Resolving deltas: 100% (3304/3304), done. &lt;/pre&gt;&#xA;&lt;p&gt;Une fois les sources récupérées, on se positionne dans le répertoire créé par Git ou les sources ont été déposées et on fait un make extension :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@sarah:~/postgresql_anonymizer# make extension &#xD;&#xA;mkdir -p anon&#xD;&#xA;cp anon.sql anon/anon--1.1.0.sql&#xD;&#xA;cp data/*.csv anon/&#xD;&#xA;cp python/populate.py anon/ &lt;/pre&gt;&#xA;&lt;p&gt;Et enfin un Make install pour installer le tout. Il est important de préciser qu&amp;#8217;il est nécessaire que vous ayez installé gcc pour pouvoir compiler les sources de l&amp;#8217;extension (apt install gcc) :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@sarah:~/postgresql_anonymizer# sudo make install &#xD;&#xA;cp anon.sql anon/anon--1.1.0.sql&#xD;&#xA;cp data/*.csv anon/&#xD;&#xA;cp python/populate.py anon/&#xD;&#xA;gcc -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Werror=vla -Wendif-labels -Wmissing- format-attribute -Wimplicit-fallthrough=3 -Wformat-security -fno-strict-aliasing -fwrapv -fexcess-precision=standard -Wno- format-truncation -g -g -O2 -fstack-protector-strong -Wformat -Werror= format-security -fno-omit-frame-pointer -fPIC -Wno-unused-variable -I. -I./ -I/usr/include/postgresql/13/server -I/usr/include/postgresql/internal    -Wdate- time -D_FORTIFY_SOURCE=2 -D_GNU_SOURCE -I/usr/include/libxml2     -c -o anon.o anon.c&#xD;&#xA;gcc -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Werror=vla -Wendif-labels -Wmissing- format-attribute -Wimplicit-fallthrough=3 -Wformat-security -fno-strict-aliasing -fwrapv -fexcess-precision=standard -Wno- format-truncation -g -g -O2 -fstack-protector-strong -Wformat -Werror= format-security -fno-omit-frame-pointer -fPIC -Wno-unused-variable anon.o -L/usr/lib/x86_64-linux-gnu -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now -L/usr/lib/llvm-6.0/lib    -Wl,--as-needed  -shared -o anon.so&#xD;&#xA;/usr/bin/clang-6.0 -Wno-ignored-attributes -fno-strict-aliasing -fwrapv -Wno-unused- command-line-argument -O2  -I. -I./ -I/usr/include/postgresql/13/server -I/usr/include/postgresql/internal    -Wdate- time -D_FORTIFY_SOURCE=2 -D_GNU_SOURCE -I/usr/include/libxml2    -flto=thin -emit-llvm -c -o anon. bc anon.c&#xD;&#xA;/bin/mkdir -p  &#39;/usr/share/postgresql/15/extension&#39;&#xD;&#xA;/bin/mkdir -p  &#39;/usr/share/postgresql/15/extension/anon&#39;&#xD;&#xA;/bin/mkdir -p  &#39;/usr/lib/postgresql/15/lib&#39;&#xD;&#xA;install -d /usr/lib/postgresql/15/bin&#xD;&#xA;install -m 0755 bin/pg_dump_anon.sh /usr/lib/postgresql/15/bin&#xD;&#xA;/usr/bin/install -c -m 644 .//anon.control  &#39;/usr/share/postgresql/15/extension/&#39;&#xD;&#xA;/usr/bin/install -c -m 644 .//anon/*   &#39;/usr/share/postgresql/15/extension/anon/&#39;&#xD;&#xA;/usr/bin/install -c -m 755  anon.so  &#39;/usr/lib/postgresql/15/lib/&#39;&#xD;&#xA;/bin/mkdir -p  &#39;/usr/lib/postgresql/15/lib/bitcode/anon&#39;&#xD;&#xA;/bin/mkdir -p  &#39;/usr/lib/postgresql/15/lib/bitcode&#39;/anon/&#xD;&#xA;/usr/bin/install -c -m 644 anon. bc &#39;/usr/lib/postgresql/15/lib/bitcode&#39;/anon/./&#xD;&#xA;cd &#39;/usr/lib/postgresql/15/lib/bitcode&#39; &amp;amp;&amp;amp; /usr/lib/llvm-6.0/bin/llvm-lto -thinlto -thinlto-action=thinlink -o anon.index. bc anon/anon. bc&lt;/pre&gt;&#xA;&lt;p&gt;Pour ce test, j&amp;#8217;ai importé la base de données exemple dvdrental de PostgreSQL. Elle me permettra d&amp;#8217;illustrer la pseudonymisation facilement et sur une quantité respectable de données. Pour importer cette base de données, rien de plus simple :&lt;/p&gt;&#xA;&lt;p&gt;On la récupère en la téléchargeant sur le site d&amp;#8217;hébergement :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres@sarah:~$ wget https://www.postgresqltutorial.com/wp-content/uploads/2019/05/dvdrental.zip&#xD;&#xA;&#xD;&#xA;--2023-11-29 13:42:52-- https://www.postgresqltutorial.com/wp-content/uploads/2019/05/dvdrental.zip&#xD;&#xA;Resolving www.postgresqltutorial.com (www.postgresqltutorial.com)... 104.21.2.174, 172.67.129.129, 2606:4700:3037::6815:2ae, ...&#xD;&#xA;Connecting to www.postgresqltutorial.com (www.postgresqltutorial.com)|104.21.2.174|:443... connected.&#xD;&#xA;HTTP request sent, awaiting response... 200 OK&#xD;&#xA;Length: 550906 (538K) [application/zip]&#xD;&#xA;Saving to: ‘dvdrental.zip’&#xD;&#xA;&#xD;&#xA;dvdrental.zip 100%[========================================================================================================================================&amp;gt;] 537.99K --.-KB/s in 0.01s&#xD;&#xA;&#xD;&#xA;2023-11-29 13:42:52 (45.5 MB/s) - ‘dvdrental.zip’ saved [550906/550906] &lt;/pre&gt;&#xA;&lt;p&gt;On la dézippe ensuite :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres@sarah:~$ unzip dvdrental.zip&#xD;&#xA;Archive: dvdrental.zip&#xD;&#xA;inflating: dvdrental.tar&lt;/pre&gt;&#xA;&lt;p&gt;On obtient ainsi une archive qu&amp;#8217;on peut utiliser avec un pg_restore pour charger la base de données. Je me suis d&amp;#8217;abbord connectée sur l&amp;#8217;instance pour créer une base de données que j&amp;#8217;ai appelé dvdrental:&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres@ip-172-44-2-72:~$ psql&#xD;&#xA;psql (15.5 (Ubuntu 15.5-1.pgdg22.04+1))&#xD;&#xA;Type &amp;quot;help&amp;quot; for help.&lt;/pre&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;postgres=# create database dvdrental;&#xD;&#xA;CREATE DATABASE&lt;/pre&gt;&#xA;&lt;p&gt;Puis j&amp;#8217;ai restauré la base :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres@ip-172-44-2-72:~$ pg_restore -U postgres -d dvdrental dvdrental.tar&lt;/pre&gt;&#xA;&lt;p&gt;Nous sommes donc prêts à commencer.&lt;/p&gt;&#xA;&lt;p&gt;Il existe un petit nombre de fonctions de pseudonymisation dans PostgreSQL anonymiser. Elles fonctionnent comme les fonctions d&amp;#8217;anonymisation et peuvent être utilisée en masquage statique ou en masquage dynamique.&lt;/p&gt;&#xA;&lt;p&gt;Les fonctions disponibles sont les suivantes :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;anon.pseudo_first_name(&#39;seed&#39;,&#39;salt&#39;)&lt;/code&gt;qui retourne un prénom générique&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;anon.pseudo_last_name(&#39;seed&#39;,&#39;salt&#39;)&lt;/code&gt; qui retourne un nom de famille générique&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;anon.pseudo_email(&#39;seed&#39;,&#39;salt&#39;)&lt;/code&gt; qui retourne une adresse email générique et existante&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;anon.pseudo_city(&#39;seed&#39;,&#39;salt&#39;)&lt;/code&gt; qui retourne le nom d&amp;#8217;une ville existante&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;anon.pseudo_country(&#39;seed&#39;,&#39;salt&#39;)&lt;/code&gt; qui retourne un pays existant&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;anon.pseudo_company(&#39;seed&#39;,&#39;salt&#39;)&lt;/code&gt; qui retourne un nom de société générique&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;anon.pseudo_iban(&#39;seed&#39;,&#39;salt&#39;)&lt;/code&gt; qui retourne un IBAN valide&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;anon.pseudo_siret(&#39;seed&#39;,&#39;salt&#39;) qui retourne un SIRET valide&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Il est important de définir un &lt;em&gt;salt&lt;/em&gt; différent pour chaque base de données. Si un utilisateur quelconque trouve le &lt;em&gt;salt&lt;/em&gt; de votre base de données, il sera ensuite capable de procéder à une attaque par force brute sur toutes les autres données afin de les révéler.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# alter database dvdrental set anon.salt = &#39;This_is_a_salt&#39;;&lt;/pre&gt;&#xA;&lt;p&gt;Pour prendre un exemple, nous pouvons tenter de pseudonymiser les données des clients de notre base dvdrental :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select * from customer limit 5;&#xD;&#xA;customer_id | store_id | first_name | last_name | email | address_id | activebool | create_date | last_update | active&#xD;&#xA;-------------+----------+------------+-----------+-------------------------------------+------------+------------+-------------+-------------------------+--------&#xD;&#xA;524 | 1 | Jared | Ely | jared.ely@sakilacustomer.org | 530 | t | 2006-02-14 | 2013-05-26 14:49:45.738 | 1&#xD;&#xA;1 | 1 | Mary | Smith | mary.smith@sakilacustomer.org | 5 | t | 2006-02-14 | 2013-05-26 14:49:45.738 | 1&#xD;&#xA;2 | 1 | Patricia | Johnson | patricia.johnson@sakilacustomer.org | 6 | t | 2006-02-14 | 2013-05-26 14:49:45.738 | 1&#xD;&#xA;3 | 1 | Linda | Williams | linda.williams@sakilacustomer.org | 7 | t | 2006-02-14 | 2013-05-26 14:49:45.738 | 1&#xD;&#xA;4 | 2 | Barbara | Jones | barbara.jones@sakilacustomer.org | 8 | t | 2006-02-14 | 2013-05-26 14:49:45.738 | 1&#xD;&#xA;(5 rows)&lt;/pre&gt;&#xA;&lt;p&gt;Lors d&amp;#8217;un premier essai, en suivant la documentation officielle disponible &lt;a href=&#34;https://postgresql-anonymizer.readthedocs.io/en/stable/&#34;&gt;ici&lt;/a&gt;, j&amp;#8217;ai utilisé la fonction suivante :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# SECURITY LABEL FOR anon ON COLUMN customer.first_name is &#39;MASKED WITH FUNCTION anon.pseudo_first_name(&#39;seed&#39;, &#39;salt&#39;)&#39;;&#xD;&#xA;SECURITY LABEL&lt;/pre&gt;&#xA;&lt;p&gt;Au moment d&amp;#8217;utiliser le masquage pour pseudonymiser mes données, je suis tombée sur l&amp;#8217;erreur suivante :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# SECURITY LABEL FOR anon ON COLUMN customer.first_name IS &#39;MASKED WITH FUNCTION anon.pseudo_first_name(&#39;seed&#39;,&#39;salt&#39;)&#39;;&#xD;&#xA;ERROR: syntax error at or near &amp;quot;seed&amp;quot; LINE 2: IS &#39;MASKED WITH FUNCTION anon.pseudo_first_name(&#39;seed&#39;,&#39;salt...&lt;/pre&gt;&#xA;&lt;p&gt;Il faut le savoir, car ce n&amp;#8217;est pas forcément bien explicité dans la documentation : le simple guillemet ne permet pas d&amp;#8217;échapper correctement les caractères. Il est donc nécessaire d&amp;#8217;ajouter d&amp;#8217;autres caractères d&amp;#8217;échappement. Dans ce cas, j&amp;#8217;ai choisi d&amp;#8217;utiliser le symbole &amp;#8220;$&amp;#8221;.&lt;br /&gt;&#xA;Ainsi, au deuxième essai, cela m&amp;#8217;a donné :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# SECURITY LABEL FOR anon ON COLUMN customer.first_name is &#39;MASKED WITH FUNCTION anon.pseudo_first_name($$seed$$, $$salt$$)&#39;;&#xD;&#xA;SECURITY LABEL&lt;/pre&gt;&#xA;&lt;p&gt;Ca avait l&amp;#8217;air de fonctionner, j&amp;#8217;ai donc lancé mon anonymisation pour vérifier :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# SELECT anon.anonymize_database();&#xD;&#xA;DEBUG: Anonymize table public.customer with first_name = anon.pseudo_first_name($$seed$$)&#xD;&#xA;ERROR: could not determine polymorphic type because input has type unknown&#xD;&#xA;CONTEXT: SQL statement &amp;quot;UPDATE public.customer SET first_name = anon.pseudo_first_name($$seed$$)&amp;quot;&#xD;&#xA;PL/pgSQL function anon.anonymize_table(regclass) line 38 at EXECUTE&#xD;&#xA;SQL function &amp;quot;anonymize_database&amp;quot; statement 1 &lt;/pre&gt;&#xA;&lt;p&gt;Il s&amp;#8217;avère que la documentation ne précise pas qu&amp;#8217;il faut typer les deux champs qu&amp;#8217;on utilise pour notre fonction, sinon PostgreSQL ne sait pas quoi en faire. Cela donne donc :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# SECURITY LABEL FOR anon ON COLUMN customer.first_name is &#39;MASKED WITH FUNCTION anon.pseudo_first_name(CAST($$seed$$ as text), cast($$salt$$ as text))&#39;;&#xD;&#xA;SECURITY LABEL&lt;/pre&gt;&#xA;&lt;p&gt;Et on applique ensuite les différentes fonctions :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# SELECT anon.anonymize_database();&#xD;&#xA;DEBUG: Anonymize table public.customer with first_name = anon.pseudo_first_name(CAST($$seed$$ as text), cast($$salt$$ as text))&#xD;&#xA;anonymize_database&#xD;&#xA;--------------------&#xD;&#xA;t&#xD;&#xA;(1 row)&lt;/pre&gt;&#xA;&lt;p&gt;On va ensuite vérifier nos données dans la table pour voir si cela a été appliqué :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select * from customer limit 5;&#xD;&#xA;customer_id | store_id | first_name | last_name | email | address_id | activebool | create_date | last_update | active&#xD;&#xA;-------------+----------+------------+-----------+-----------------------------------+------------+------------+-------------+----------------------------+--------&#xD;&#xA;524 | 1 | Taniya | Ely | jared.ely@sakilacustomer.org | 530 | t | 2006-02-14 | 2024-01-29 09:26:48.268084 | 1&#xD;&#xA;15 | 1 | Taniya | Harris | helen.harris@sakilacustomer.org | 19 | t | 2006-02-14 | 2024-01-29 09:26:48.268084 | 1&#xD;&#xA;16 | 2 | Taniya | Martin | sandra.martin@sakilacustomer.org | 20 | t | 2006-02-14 | 2024-01-29 09:26:48.268084 | 0&#xD;&#xA;17 | 1 | Taniya | Thompson | donna.thompson@sakilacustomer.org | 21 | t | 2006-02-14 | 2024-01-29 09:26:48.268084 | 1&#xD;&#xA;18 | 2 | Taniya | Garcia | carol.garcia@sakilacustomer.org | 22 | t | 2006-02-14 | 2024-01-29 09:26:48.268084 | 1&#xD;&#xA;(5 rows)&lt;/pre&gt;&#xA;&lt;p&gt;On se rend alors compte que toutes les données pseudonymisées l&amp;#8217;ont été avec le même résultat.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select distinct first_name from customer;&#xD;&#xA;first_name&#xD;&#xA;------------&#xD;&#xA;Taniya&#xD;&#xA;(1 row)&lt;/pre&gt;&#xA;&lt;p&gt;Il est en effet précisé dans la documentation que si on voulait obtenir des pseudo différents pour chaque ligne, il fallait ajouter un custom dataset d&amp;#8217;un nombre supérieur de ligne au nombres d&amp;#8217;entrées dans notre table.&lt;/p&gt;&#xA;&lt;p&gt;Il existe un dataset fournit par dalibo (en français uniquement), disponible à l&amp;#8217;adresse &lt;a href=&#34;https://gitlab.com/dalibo/postgresql_anonymizer/-/packages&#34;&gt;suivante &lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Pour pouvoir l&amp;#8217;intégrer dans votre extension, il vous faut le télécharger sur votre serveur, le placer dans le dossier de votre choix, et utiliser la commande :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=#SELECT anon.init(&#39;/path/to/custom_csv_files/&#39;)&lt;/pre&gt;&#xA;&lt;p&gt;Vous pouvez également créer votre propre dataset sous la forme d&amp;#8217;un fichier csv avec un script par exemple, pour peupler vos exemples avec vos propres données personnalisées.&lt;/p&gt;&#xA;&lt;p&gt;On peut tenter de réaliser la même opération mais pour une autre donnée. On voit en effet que notre adresse email contient toujours les noms de familles des personnes, ils n&amp;#8217;ont pas été pseudonymisés. On va donc changer cela :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# security label for anon on column customer.email is &#39;MASKED WITH FUNCTION anon.pseudo_email(CAST($$seed$$ as text), cast($$salt$$ as text))&#39;;&#xD;&#xA;SECURITY LABEL &lt;/pre&gt;&#xA;&lt;p&gt;Et une fois appliqué on obtient les données suivantes :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select * from customer limit 5;&#xD;&#xA;customer_id | store_id | first_name | last_name | email | address_id | activebool | create_date | last_update | active&#xD;&#xA;-------------+----------+------------+-----------+----------------------------+------------+------------+-------------+----------------------------+--------&#xD;&#xA;524 | 1 | Taniya | Ely | rowesally@kelly-dorsey.com | 530 | t | 2006-02-14 | 2024-01-29 09:42:03.560633 | 1&#xD;&#xA;235 | 1 | Taniya | Lynch | rowesally@kelly-dorsey.com | 239 | t | 2006-02-14 | 2024-01-29 09:42:03.560633 | 1&#xD;&#xA;15 | 1 | Taniya | Harris | rowesally@kelly-dorsey.com | 19 | t | 2006-02-14 | 2024-01-29 09:42:03.560633 | 1&#xD;&#xA;16 | 2 | Taniya | Martin | rowesally@kelly-dorsey.com | 20 | t | 2006-02-14 | 2024-01-29 09:42:03.560633 | 0&#xD;&#xA;17 | 1 | Taniya | Thompson | rowesally@kelly-dorsey.com | 21 | t | 2006-02-14 | 2024-01-29 09:42:03.560633 | 1&#xD;&#xA;(5 rows)&lt;/pre&gt;&#xA;&lt;h2&gt;Les limites de la pseudonymisation Postgres :&lt;/h2&gt;&#xA;&lt;p&gt;Actuellement il n&amp;#8217;existe qu&amp;#8217;une seule extension permettant de faire de la pseudonymisation sur PostgreSQL. Et elle présente plusieurs limites :&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Les fonctions de pseudonymisation de postgresql anonymizer sont déterministes. C&amp;#8217;est à dire que pour deux valeurs identiques, elles donneront toujours le même résultat.&lt;/li&gt;&#xA;&lt;li&gt;Les données pseudonymisée restent des données personnes ! Le &lt;strong&gt;RGPD&lt;/strong&gt; précise très clairement que : « les données à caractère personnel qui ont fait l’objet d’une pseudonymisation […] devraient être considérées comme des informations concernant une personne physique identifiable. »&lt;/li&gt;&#xA;&lt;li&gt;Les coûts en performance, comme évoqué dans mon précédent article pour cette même extension, sont élevés. C&amp;#8217;est quelque chose à considérer quand on veut utiliser cette méthode.&lt;/li&gt;&#xA;&lt;li&gt;Il faut pouvoir gérer correctement les clés qu&amp;#8217;on utilises pour la pseudonymisation, c&amp;#8217;est une charge supplémentaire.&lt;/li&gt;&#xA;&lt;li&gt;La documentation n&amp;#8217;est pas forcément tout à fait bien mise à jour, et certaines choses ne sont pas évidentes à appréhender.&lt;/li&gt;&#xA;&lt;li&gt;L&amp;#8217;extension est toujours en développement et en changements constants, nous ne sommes pas à l&amp;#8217;abris de rencontrer des bugs au fil des versions. Pour écrire cet article, j&amp;#8217;ai du contacter directement le développeur car au début de sa rédaction, les fonctions de pseudonymisation ne fonctionnaient pas.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2&gt;Conclusion :&lt;/h2&gt;&#xA;&lt;p&gt;En conclusion, la pseudonymisation des données dans PostgreSQL se révèle être une stratégie de protection de la vie privée et de conformité réglementaire particulièrement robuste. En adoptant cette approche, les entreprises peuvent tirer parti des avantages significatifs tels que la préservation de la confidentialité des données tout en permettant l&amp;#8217;analyse et le traitement des informations sensibles.&lt;/p&gt;&#xA;&lt;p&gt;D&amp;#8217;un côté, la pseudonymisation offre une solution efficace pour équilibrer la nécessité d&amp;#8217;accéder aux données avec le respect des réglementations de confidentialité. Les données pseudonymisées demeurent utiles pour les analyses internes tout en limitant le risque d&amp;#8217;exploitation malveillante.&lt;/p&gt;&#xA;&lt;p&gt;Cependant, il est crucial de reconnaître que la pseudonymisation n&amp;#8217;est pas une panacée. Elle peut présenter des défis en termes de gestion des clés de pseudonymisation, de complexité accrue dans la maintenance des bases de données, et de potentielles vulnérabilités si elle est mal mise en œuvre.&lt;/p&gt;&#xA;&lt;p&gt;Dans une perspective plus large, il est également pertinent de considérer l&amp;#8217;anonymisation des données comme une alternative. Bien que l&amp;#8217;anonymisation puisse offrir un niveau supérieur de protection, elle peut également rendre les données moins utiles pour certaines applications, limitant ainsi leur valeur pour les analyses internes.&lt;/p&gt;&#xA;&lt;p&gt;En définitive, le choix entre la pseudonymisation et l&amp;#8217;anonymisation dépend des besoins spécifiques de chaque organisation, du contexte réglementaire et des compromis acceptables entre la protection de la vie privée et l&amp;#8217;utilité des données. En élaborant une stratégie de gestion des données judicieuse, les entreprises peuvent naviguer avec succès dans le paysage complexe de la confidentialité des données dans PostgreSQL.&lt;strong&gt;Continuez votre lecture sur le blog :&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul class=&#34;similar-posts&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-anonymizer/&#34; rel=&#34;bookmark&#34; title=&#34;7 juillet 2022&#34;&gt;PostgreSQL Anonymizer&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/pg_recursively_delete-simplifier-les-suppressions-recursives/&#34; rel=&#34;bookmark&#34; title=&#34;3 avril 2024&#34;&gt;pg_recursively_delete : Simplifier les suppressions récursives&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/pg_dirtyread-ou-comment-reparer-facilement-un-delete-sauvage/&#34; rel=&#34;bookmark&#34; title=&#34;27 mars 2024&#34;&gt;pg_dirtyread où comment réparer facilement un delete sauvage&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-planifier-une-tache-avec-pg_cron/&#34; rel=&#34;bookmark&#34; title=&#34;24 septembre 2019&#34;&gt;PostgreSQL : planifier une tâche avec pg_cron&lt;/a&gt; (Emmanuel RAMI) [Non classéPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/hypopg-et-les-index-hypothetiques/&#34; rel=&#34;bookmark&#34; title=&#34;5 août 2022&#34;&gt;HypoPG et les index hypothétiques&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;!-- Similar Posts took 2.531 ms --&gt;&lt;/p&gt;&#xA;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10377&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10377&amp;#038;title=Pseudonymiser%20vos%20bases%20PostgreSQL&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=Pseudonymiser%20vos%20bases%20PostgreSQL&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10377&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/pseudonymisation-postgresql/&#34;&gt;Pseudonymiser vos bases PostgreSQL&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.capdata.fr/index.php/pseudonymisation-postgresql/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dans l&amp;#8217;ère numérique actuelle, où la sécurité des données occupe une place centrale, la pseudonymisation émerge comme une stratégie cruciale pour renforcer la confidentialité des informations stockées dans les bases de données. Cette approche, bien que semblable à l&amp;#8217;anonymisation, se&amp;#8230; &lt;a href=&#34;https://blog.capdata.fr/index.php/pseudonymisation-postgresql/&#34; class=&#34;more-link&#34;&gt;Continuer la lecture &lt;span class=&#34;meta-nav&#34;&gt;&amp;#8594;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/pseudonymisation-postgresql/&#34;&gt;Pseudonymiser vos bases PostgreSQL&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Emmanuel RAMI</name>
    </author>
  </entry>
  <entry>
    <title>OrioleDB : la promesse d’un No-Vacuum</title>
    <updated>2023-10-11T10:27:27Z</updated>
    <id>tag:blog.capdata.fr,2023-10-11:/index.php/orioledb-la-promesse-dun-no-vacuum/</id>
    <content type="html">&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10248&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10248&amp;#038;title=OrioleDB%20%3A%20la%20promesse%20d%E2%80%99un%20No-Vacuum&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=OrioleDB%20%3A%20la%20promesse%20d%E2%80%99un%20No-Vacuum&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10248&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;La gestion efficace de l&amp;#8217;espace disque dans PostgreSQL est une préoccupation constante pour les administrateurs de bases de données. C&amp;#8217;est là qu&amp;#8217;intervient le processus de &amp;#8220;vacuum&amp;#8221;, une fonctionnalité puissante et complexe qui peut jouer un rôle déterminant dans la performance et la stabilité de votre base de données PostgreSQL. Cependant, comme toute arme à double tranchant, le vacuum apporte à la fois des avantages considérables et des défis potentiels.&lt;/p&gt;&#xA;&lt;p&gt;Le principal reproche que l&amp;#8217;on peut adresser au système de vacuum (et à l&amp;#8217;auto-vacuum par extension) est sa consommation importante de ressources. C&amp;#8217;est l&amp;#8217;une des raisons majeures évoquées par les grandes entreprises qui optent pour un autre SGBD, &lt;a href=&#34;https://www.uber.com/blog/postgres-to-mysql-migration/&#34;&gt;comme Uber, qui a migré vers MySQL pour remplacer PostgreSQL&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/orioledb/orioledb&#34;&gt;OrioleDB &lt;/a&gt;nous propose une approche novatrice de la gestion de la fragmentation (bloat) et de l&amp;#8217;espace disque de vos tables PostgreSQL. La principale promesse de ce nouveau moteur développé par la société Oriole est d&amp;#8217;éliminer le besoin de vacuum régulier et de longues périodes de maintenance pour nos bases de données.&lt;/p&gt;&#xA;&lt;p&gt;Cette innovation s&amp;#8217;articule autour de journaux d&amp;#8217;annulation au niveau de la ligne et du bloc, ainsi que de la fusion automatique des pages. Les journaux d&amp;#8217;annulation au niveau des lignes et des blocs offrent un contrôle plus précis, permettant une gestion plus efficace des modifications de données. La fonction de fusion automatique des pages travaille en arrière-plan pour regrouper les données fragmentées, améliorant ainsi encore davantage l&amp;#8217;efficacité du système. Le moteur est actuellement disponible en version bêta sur le site d&amp;#8217;OrioleDB.&lt;/p&gt;&#xA;&lt;p&gt;Dans cet article, je vais vous montrer comment installer OrioleDB et réaliser un test comparatif entre une instance classique et une instance OrioleDB en termes d&amp;#8217;espace disque occupé. Je vais utiliser &lt;a href=&#34;https://capdata.fr/dbadistance&#34;&gt;notre agent AllDB de supervision des bases de données &lt;/a&gt;pour générer des graphiques de la consommation d&amp;#8217;espace disque.&lt;/p&gt;&#xA;&lt;h2&gt;Installation d&amp;#8217;OrioleDB :&lt;/h2&gt;&#xA;&lt;p&gt;Pour pouvoir tester le nouveau moteur, il nous faut l&amp;#8217;installer. Pour cela, deux solutions s&amp;#8217;offrent à nous. On peut choisir de le compiler nous-mêmes à partir du code source fourni par Oriole, ou on peut choisir d&amp;#8217;utiliser le conteneur Docker mis à notre disposition.&lt;/p&gt;&#xA;&lt;p&gt;Pour des raisons de rapidité de mise en place, j&amp;#8217;ai choisi d&amp;#8217;utiliser le conteneur fourni.&lt;/p&gt;&#xA;&lt;p&gt;Pour commencer, j&amp;#8217;installe Docker sur ma machine.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@ip-172-44-2-190:~$ sudo apt-get update&#xD;&#xA;(...)&#xD;&#xA;Reading package lists... Done&#xD;&#xA;root@ip-172-44-2-190:~$ sudo apt-get install ca-certificates curl gnupg&#xD;&#xA;Reading package lists... Done&#xD;&#xA;(...)&#xD;&#xA;No VM guests are running outdated hypervisor (qemu) binaries on this host.&#xD;&#xA;root@ip-172-44-2-190:~$ sudo install -m 0755 -d /etc/apt/keyrings&#xD;&#xA;root@ip-172-44-2-190:~$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg&#xD;&#xA;root@ip-172-44-2-190:~$ sudo chmod a+r /etc/apt/keyrings/docker.gpg&#xD;&#xA;root@ip-172-44-2-190:~$ echo \&#xD;&#xA;&amp;quot;deb [arch=&amp;quot;$(dpkg --print-architecture)&amp;quot; signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \&#xD;&#xA;&amp;quot;$(. /etc/os-release &amp;amp;amp;&amp;amp;amp; echo &amp;quot;$VERSION_CODENAME&amp;quot;)&amp;quot; stable&amp;quot; | \&#xD;&#xA;sudo tee /etc/apt/sources.list.d/docker.list &amp;amp;gt; /dev/null&#xD;&#xA;sudo apt-get update&#xD;&#xA;Hit:1 http://eu-west-3.ec2.archive.ubuntu.com/ubuntu jammy InRelease&#xD;&#xA;Hit:2 http://eu-west-3.ec2.archive.ubuntu.com/ubuntu jammy-updates InRelease&#xD;&#xA;(...)&#xD;&#xA;No VM guests are running outdated hypervisor (qemu) binaries on this host.&lt;/pre&gt;&#xA;&lt;p&gt;Pour tester que mon installation fonctionne correctement, je peux démarrer l&amp;#8217;image hello-world par défaut de Docker.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@ip-172-44-2-190:~$ sudo docker run hello-world&#xD;&#xA;Unable to find image &#39;hello-world:latest&#39; locally&#xD;&#xA;latest: Pulling from library/hello-world&#xD;&#xA;719385e32844: Pull complete&#xD;&#xA;Digest: sha256:4f53e2564790c8e7856ec08e384732aa38dc43c52f02952483e3f003afbf23db&#xD;&#xA;Status: Downloaded newer image for hello-world:latest&#xD;&#xA;&#xD;&#xA;Hello from Docker!&#xD;&#xA;This message shows that your installation appears to be working correctly.&#xD;&#xA;&#xD;&#xA;To generate this message, Docker took the following steps:&#xD;&#xA;1. The Docker client contacted the Docker daemon.&#xD;&#xA;2. The Docker daemon pulled the &amp;quot;hello-world&amp;quot; image from the Docker Hub.&#xD;&#xA;(amd64)&#xD;&#xA;3. The Docker daemon created a new container from that image which runs the&#xD;&#xA;executable that produces the output you are currently reading.&#xD;&#xA;4. The Docker daemon streamed that output to the Docker client, which sent it&#xD;&#xA;to your terminal.&#xD;&#xA;&#xD;&#xA;To try something more ambitious, you can run an Ubuntu container with:&#xD;&#xA;$ docker run -it ubuntu bash&#xD;&#xA;&#xD;&#xA;Share images, automate workflows, and more with a free Docker ID:&#xD;&#xA;https://hub.docker.com/&#xD;&#xA;&#xD;&#xA;For more examples and ideas, visit:&#xD;&#xA;https://docs.docker.com/get-started/&lt;/pre&gt;&#xA;&lt;p&gt;Docker est correctement installé, nous pouvons à présent aller récupérer l&amp;#8217;image Oriole depuis les dépôts (repositories). J&amp;#8217;ai choisi de récupérer l&amp;#8217;image &amp;#8220;latest&amp;#8221; de la version 14, avec laquelle je vais effectuer mes tests.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@ip-172-44-2-190:~# docker pull orioledb/orioledb:latest-pg14&#xD;&#xA;latest-pg14: Pulling from orioledb/orioledb&#xD;&#xA;7264a8db6415: Pull complete&#xD;&#xA;4e0888d8a332: Pull complete&#xD;&#xA;4b0510894ae7: Pull complete&#xD;&#xA;dc5da57566a1: Pull complete&#xD;&#xA;9611602787a1: Pull complete&#xD;&#xA;8f68f9452236: Pull complete&#xD;&#xA;5c92ed25d025: Pull complete&#xD;&#xA;11bb162cfe7a: Pull complete&#xD;&#xA;6f375d990892: Pull complete&#xD;&#xA;6ac166496e68: Pull complete&#xD;&#xA;Digest: sha256:4d408916e929ff0bcea11fee91ca5e69b0929be1afa58b5dbbcddcce340089ef&#xD;&#xA;Status: Downloaded newer image for orioledb/orioledb:latest-pg14&#xD;&#xA;docker.io/orioledb/orioledb:latest-pg14&lt;/pre&gt;&#xA;&lt;p&gt;On vérifie que notre image est bien présente, et on l&amp;#8217;éxecute :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@ip-172-44-2-190:~# docker image ls --all&#xD;&#xA;REPOSITORY TAG IMAGE ID CREATED SIZE&#xD;&#xA;orioledb/orioledb latest-pg14 cd7f629f705e 10 days ago 270MB&#xD;&#xA;hello-world latest 9c7a54a9a43c 4 months ago 13.3kB &lt;/pre&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@ip-172-44-2-190:~# docker run -e POSTGRES_PASSWORD=password cd7f629f705e&#xD;&#xA;The files belonging to this database system will be owned by user &amp;quot;postgres&amp;quot;.&#xD;&#xA;This user must also own the server process.&#xD;&#xA;&#xD;&#xA;The database cluster will be initialized with locale &amp;quot;en_US.utf8&amp;quot;.&#xD;&#xA;The default database encoding has accordingly been set to &amp;quot;UTF8&amp;quot;.&#xD;&#xA;The default text search configuration will be set to &amp;quot;english&amp;quot;.&#xD;&#xA;&#xD;&#xA;Data page checksums are disabled.&#xD;&#xA;&#xD;&#xA;fixing permissions on existing directory /var/lib/postgresql/data ... ok&#xD;&#xA;creating subdirectories ... ok&#xD;&#xA;selecting dynamic shared memory implementation ... posix&#xD;&#xA;selecting default max_connections ... 100&#xD;&#xA;selecting default shared_buffers ... 128MB&#xD;&#xA;selecting default time zone ... UTC&#xD;&#xA;creating configuration files ... ok&#xD;&#xA;running bootstrap script ... ok&#xD;&#xA;performing post-bootstrap initialization ... sh: locale: not found&#xD;&#xA;2023-09-21 09:51:08.177 UTC [30] WARNING: no usable system locales were found&#xD;&#xA;ok&#xD;&#xA;syncing data to disk ... ok&#xD;&#xA;&#xD;&#xA;Success. You can now start the database server using:&#xD;&#xA;&#xD;&#xA;pg_ctl -D /var/lib/postgresql/data -l logfile start&#xD;&#xA;&#xD;&#xA;initdb: warning: enabling &amp;quot;trust&amp;quot; authentication for local connections&#xD;&#xA;You can change this by editing pg_hba.conf or using the option -A, or&#xD;&#xA;--auth-local and --auth-host, the next time you run initdb.&#xD;&#xA;waiting for server to start....2023-09-21 09:51:09.294 UTC [36] LOG: OrioleDB public beta 2 started&#xD;&#xA;2023-09-21 09:51:09.295 UTC [36] LOG: starting PostgreSQL 14.9 OrioleDB public beta 2 PGTAG=patches14_16 alpine:3.18+clang-15 build:2023-09-10T16:41:50+00:00 on x86_64-pc-linux-musl, compiled by Alpine clang version 15.0.7, 64-bit&#xD;&#xA;2023-09-21 09:51:09.300 UTC [36] LOG: listening on Unix socket &amp;quot;/var/run/postgresql/.s.PGSQL.5432&amp;quot;&#xD;&#xA;2023-09-21 09:51:09.316 UTC [37] LOG: database system was shut down at 2023-09-21 09:51:08 UTC&#xD;&#xA;2023-09-21 09:51:09.316 UTC [38] LOG: orioledb background writer started&#xD;&#xA;2023-09-21 09:51:09.323 UTC [36] LOG: database system is ready to accept connections&#xD;&#xA;done&#xD;&#xA;server started&#xD;&#xA;&#xD;&#xA;/usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/*&#xD;&#xA;&#xD;&#xA;waiting for server to shut down...2023-09-21 09:51:09.350 UTC [36] LOG: received fast shutdown request&#xD;&#xA;.2023-09-21 09:51:09.353 UTC [36] LOG: aborting any active transactions&#xD;&#xA;2023-09-21 09:51:09.354 UTC [38] LOG: orioledb bgwriter is shut down&#xD;&#xA;2023-09-21 09:51:09.357 UTC [36] LOG: background worker &amp;quot;logical replication launcher&amp;quot; (PID 44) exited with exit code 1&#xD;&#xA;2023-09-21 09:51:09.357 UTC [39] LOG: shutting down&#xD;&#xA;2023-09-21 09:51:09.360 UTC [39] LOG: orioledb checkpoint 1 started&#xD;&#xA;2023-09-21 09:51:09.601 UTC [39] LOG: orioledb checkpoint 1 complete&#xD;&#xA;2023-09-21 09:51:09.631 UTC [36] LOG: database system is shut down&#xD;&#xA;done&#xD;&#xA;server stopped&#xD;&#xA;&#xD;&#xA;PostgreSQL init process complete; ready for start up.&#xD;&#xA;&#xD;&#xA;2023-09-21 09:51:09.712 UTC [1] LOG: OrioleDB public beta 2 started&#xD;&#xA;2023-09-21 09:51:09.764 UTC [1] LOG: starting PostgreSQL 14.9 OrioleDB public beta 2 PGTAG=patches14_16 alpine:3.18+clang-15 build:2023-09-10T16:41:50+00:00 on x86_64-pc-linux-musl, compiled by Alpine clang version 15.0.7, 64-bit&#xD;&#xA;2023-09-21 09:51:09.764 UTC [1] LOG: listening on IPv4 address &amp;quot;0.0.0.0&amp;quot;, port 5432&#xD;&#xA;2023-09-21 09:51:09.764 UTC [1] LOG: listening on IPv6 address &amp;quot;::&amp;quot;, port 5432&#xD;&#xA;2023-09-21 09:51:09.770 UTC [1] LOG: listening on Unix socket &amp;quot;/var/run/postgresql/.s.PGSQL.5432&amp;quot;&#xD;&#xA;2023-09-21 09:51:09.778 UTC [49] LOG: database system was shut down at 2023-09-21 09:51:09 UTC&#xD;&#xA;2023-09-21 09:51:09.778 UTC [50] LOG: orioledb background writer started&#xD;&#xA;2023-09-21 09:51:09.785 UTC [1] LOG: database system is ready to accept connections&#xD;&#xA;2023-09-21 09:54:23.633 UTC [68] FATAL: role &amp;quot;root&amp;quot; does not exist&#xD;&#xA;2023-09-21 09:56:09.884 UTC [51] LOG: orioledb checkpoint 2 started&#xD;&#xA;2023-09-21 09:56:10.100 UTC [51] LOG: orioledb checkpoint 2 complete &lt;/pre&gt;&#xA;&lt;p&gt;Notre serveur est correctement démarré. Nous pouvons maintenant nous y connecter à partir d&amp;#8217;un autre terminal et préparer le cas de test. Pour ce faire, nous allons créer une nouvelle base de données sur laquelle nous effectuerons un test de charge avec pg_bench.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@ip-172-44-2-190:~# docker ps&#xD;&#xA;CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES&#xD;&#xA;11c0860b7abc cd7f629f705e &amp;quot;docker-entrypoint.s…&amp;quot; 2 minutes ago Up 2 minutes 5432/tcp funny_hellman&#xD;&#xA;root@ip-172-44-2-190:~# docker exec -it 11c0860b7abc bash&#xD;&#xA;11c0860b7abc:/# su - postgres&#xD;&#xA;11c0860b7abc:~$ psql&#xD;&#xA;psql (14.9 OrioleDB public beta 2 PGTAG=patches14_16 alpine:3.18+clang-15 build:2023-09-10T16:41:50+00:00)&#xD;&#xA;Type &amp;quot;help&amp;quot; for help.&lt;/pre&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;postgres=# create database pg_bench;&#xD;&#xA;CREATE DATABASE&#xD;&#xA;postgres=# \c pg_bench&#xD;&#xA;You are now connected to database &amp;quot;pg_bench&amp;quot; as user &amp;quot;postgres&amp;quot;.&#xD;&#xA;pg_bench=# CREATE TABLE test (&#xD;&#xA;pg_bench(# id integer primary key,&#xD;&#xA;pg_bench(# value1 float8 not null,&#xD;&#xA;pg_bench(# value2 float8 not null,&#xD;&#xA;pg_bench(# value3 float8 not null,&#xD;&#xA;pg_bench(# value4 float8 not null,&#xD;&#xA;pg_bench(# ts timestamp not null&#xD;&#xA;pg_bench(# );&#xD;&#xA;CREATE TABLE&#xD;&#xA;pg_bench=# CREATE INDEX test_value1_idx ON test (value1);&#xD;&#xA;CREATE INDEX&#xD;&#xA;pg_bench=# CREATE INDEX test_value2_idx ON test (value2);&#xD;&#xA;CREATE INDEX&#xD;&#xA;pg_bench=# CREATE INDEX test_value3_idx ON test (value3);&#xD;&#xA;CREATE INDEX&#xD;&#xA;pg_bench=# CREATE INDEX test_value4_idx ON test (value4);&#xD;&#xA;CREATE INDEX&#xD;&#xA;pg_bench=# CREATE INDEX test_ts_idx ON test (ts);&#xD;&#xA;CREATE INDEX &lt;/pre&gt;&#xA;&lt;p&gt;Notre environnement de test est prêt. Afin de pouvoir comparer les performances avec une instance PostgreSQL plus traditionnelle, j&amp;#8217;ai également installé une version legacy en local sur la machine que j&amp;#8217;utilise. J&amp;#8217;ai créé la même table et les mêmes index que dans mon conteneur Docker. Pour réaliser ce test, j&amp;#8217;ai repris le script pg_bench de test fourni par Oriole.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;11c0860b7abc:~$ cat test.sql&#xD;&#xA;\set id random(1, 10000000)&#xD;&#xA;INSERT INTO test VALUES(:id, random(), random(), random(), random(), now() - random() * random() * 1800 * interval &#39;1 second&#39;)&#xD;&#xA;ON CONFLICT (id) DO UPDATE SET ts = now();&lt;/pre&gt;&#xA;&lt;p&gt;Ce petit script de test permet de lancer des insertions successives de données dans notre table de test. Il est conçu pour maximiser les chances de fragmentation à mesure que nous insérons des données dans notre table, car les doublons de clé primaire entraînent la mise à jour d&amp;#8217;anciennes lignes. Cela devrait donc nous permettre de constater la différence d&amp;#8217;espace disque entre une version standard de PostgreSQL et la version du moteur développée par Oriole.&lt;/p&gt;&#xA;&lt;h2&gt;Résultats des test :&lt;/h2&gt;&#xA;&lt;p&gt;Mes tests sont réalisés sur une machine Amazon EC2 de type &amp;#8220;large&amp;#8221;, équipée de 7 gigaoctets de RAM et de 2 unités de traitement central (CPU).&lt;/p&gt;&#xA;&lt;p&gt;Voici la capture d&amp;#8217;écran de l&amp;#8217;occupation de l&amp;#8217;espace disque pour le premier test, celui concernant l&amp;#8217;instance OrioleDB :&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.capdata.fr/wp-content/uploads/2023/10/OrioleDB.png&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; src=&#34;https://blog.capdata.fr/wp-content/uploads/2023/10/OrioleDB.png&#34; alt=&#34;&#34; width=&#34;1261&#34; height=&#34;345&#34; class=&#34;aligncenter size-full wp-image-10306&#34; srcset=&#34;https://blog.capdata.fr/wp-content/uploads/2023/10/OrioleDB.png 1261w, https://blog.capdata.fr/wp-content/uploads/2023/10/OrioleDB-300x82.png 300w, https://blog.capdata.fr/wp-content/uploads/2023/10/OrioleDB-1024x280.png 1024w, https://blog.capdata.fr/wp-content/uploads/2023/10/OrioleDB-768x210.png 768w&#34; sizes=&#34;(max-width: 1261px) 100vw, 1261px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;On peut observer que la progression de la taille de l&amp;#8217;instance est régulière et très modérée. Pendant le test, j&amp;#8217;ai surveillé l&amp;#8217;utilisation de la RAM de la machine, qui atteignait un pic à 95 % et demeurait relativement stable pendant toute la durée du test. Conformément à la promesse du moteur, aucun processus d&amp;#8217;autovacuum n&amp;#8217;a été constaté pendant le processus.&lt;/p&gt;&#xA;&lt;p&gt;En comparaison, le graphique de la base de données non Oriole présente une nette différence :&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.capdata.fr/wp-content/uploads/2023/10/nonOrioleDB.png&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; src=&#34;https://blog.capdata.fr/wp-content/uploads/2023/10/nonOrioleDB.png&#34; alt=&#34;&#34; width=&#34;1268&#34; height=&#34;345&#34; class=&#34;aligncenter size-full wp-image-10308&#34; srcset=&#34;https://blog.capdata.fr/wp-content/uploads/2023/10/nonOrioleDB.png 1268w, https://blog.capdata.fr/wp-content/uploads/2023/10/nonOrioleDB-300x82.png 300w, https://blog.capdata.fr/wp-content/uploads/2023/10/nonOrioleDB-1024x279.png 1024w, https://blog.capdata.fr/wp-content/uploads/2023/10/nonOrioleDB-768x209.png 768w&#34; sizes=&#34;(max-width: 1268px) 100vw, 1268px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;On observe notamment de nombreux pics et chutes fréquents dus aux vacuums organisés régulièrement. Le tracé n&amp;#8217;est pas linéaire.&lt;/p&gt;&#xA;&lt;p&gt;De plus, en surveillant les valeurs d&amp;#8217;utilisation CPU, à la différence d&amp;#8217;Oriole où les valeurs étaient constantes car il était toujours en train d&amp;#8217;ajouter des données, les moments de vacuum de la base provoquent d&amp;#8217;importantes montées de charge, suivies de chutes lorsque ces processus sont terminés sur notre instance de base.&lt;/p&gt;&#xA;&lt;h2&gt;Conclusion :&lt;/h2&gt;&#xA;&lt;p&gt;Sur le blog d&amp;#8217;OrioleDB, les graphiques affichés sont le résultat de l&amp;#8217;injection de 80 gigaoctets de données dans leur base de données à l&amp;#8217;aide de pg_bench. Cependant, lorsque l&amp;#8217;on examine les spécifications de la machine qu&amp;#8217;ils ont utilisée pour leurs tests, on se rend compte qu&amp;#8217;elle n&amp;#8217;est pas à la portée de toutes les bourses. La machine utilisée comprend en effet 72 CPU et dispose d&amp;#8217;un total de 144 Go de RAM, une configuration que très peu de personnes, principalement en raison du coût élevé de ce type de matériel, pourraient envisager pour leur infrastructure.&lt;/p&gt;&#xA;&lt;p&gt;Oriole fonctionne, comme nous l&amp;#8217;avons vu sur les graphiques que j&amp;#8217;ai commentés précédemment. Cependant, il s&amp;#8217;agit d&amp;#8217;un outil conçu pour les architectures de très grande envergure et les besoins importants en termes d&amp;#8217;entrées/sorties de données. Les gains ne sont pas aussi significatifs sur des machines de plus petite taille, qui correspondent davantage à la réalité de nombreuses entreprises actuelles.&lt;strong&gt;Continuez votre lecture sur le blog :&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul class=&#34;similar-posts&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/containeriser-une-base-de-donnees-postgresql-avec-docker/&#34; rel=&#34;bookmark&#34; title=&#34;23 septembre 2021&#34;&gt;Containeriser PostgreSQL avec Docker !&lt;/a&gt; (Emmanuel RAMI) [ContainerPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/pyrseas-et-postgresql-comparer-facilement-des-schema-de-base-de-donnees/&#34; rel=&#34;bookmark&#34; title=&#34;3 janvier 2023&#34;&gt;Pyrseas et Postgresql : Comparer facilement des schémas de base de données&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/cybertec-migrator-une-alternative-a-ora2pg/&#34; rel=&#34;bookmark&#34; title=&#34;10 mai 2023&#34;&gt;Cybertec Migrator : une alternative à ora2pg ?&lt;/a&gt; (Sarah FAVEERE) [OraclePostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/pg_recursively_delete-simplifier-les-suppressions-recursives/&#34; rel=&#34;bookmark&#34; title=&#34;3 avril 2024&#34;&gt;pg_recursively_delete : Simplifier les suppressions récursives&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/comparatif-des-gestionnaires-de-vip-dans-un-cluster-patroni-episode-1-keepalived/&#34; rel=&#34;bookmark&#34; title=&#34;6 mars 2022&#34;&gt;Comparatif des gestionnaires de VIP dans un cluster Patroni : épisode 1 (KEEPALIVED)&lt;/a&gt; (David Baffaleuf) [ContainerPostgreSQL]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;!-- Similar Posts took 2.137 ms --&gt;&lt;/p&gt;&#xA;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10248&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10248&amp;#038;title=OrioleDB%20%3A%20la%20promesse%20d%E2%80%99un%20No-Vacuum&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=OrioleDB%20%3A%20la%20promesse%20d%E2%80%99un%20No-Vacuum&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10248&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/orioledb-la-promesse-dun-no-vacuum/&#34;&gt;OrioleDB : la promesse d&amp;#8217;un No-Vacuum&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.capdata.fr/index.php/orioledb-la-promesse-dun-no-vacuum/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;La gestion efficace de l&amp;#8217;espace disque dans PostgreSQL est une préoccupation constante pour les administrateurs de bases de données. C&amp;#8217;est là qu&amp;#8217;intervient le processus de &amp;#8220;vacuum&amp;#8221;, une fonctionnalité puissante et complexe qui peut jouer un rôle déterminant dans la performance&amp;#8230; &lt;a href=&#34;https://blog.capdata.fr/index.php/orioledb-la-promesse-dun-no-vacuum/&#34; class=&#34;more-link&#34;&gt;Continuer la lecture &lt;span class=&#34;meta-nav&#34;&gt;&amp;#8594;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/orioledb-la-promesse-dun-no-vacuum/&#34;&gt;OrioleDB : la promesse d&amp;#8217;un No-Vacuum&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Emmanuel RAMI</name>
    </author>
  </entry>
  <entry>
    <title>On analyse la nouvelle collation de PostgreSQL 17</title>
    <updated>2024-06-07T11:40:12Z</updated>
    <id>tag:blog-postgresql.verite.pro,2024-06-07:/2024/06/07/pg17-utf8-collation.html</id>
    <link href="https://blog-postgresql.verite.pro/2024/06/07/pg17-utf8-collation.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PostgreSQL 17 est sorti en version bêta le 23 mai dernier, et dans ce billet on&#xA;va détailler une de ses nouveautés: une collation interne gérant l’UTF-8 avec des&#xA;comparaisons de texte en binaire.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Les rapports de bugs de Postgres en 2023</title>
    <updated>2024-01-24T10:23:10Z</updated>
    <id>tag:blog-postgresql.verite.pro,2024-01-24:/2024/01/24/pgsql-bugs-annee-2023.html</id>
    <link href="https://blog-postgresql.verite.pro/2024/01/24/pgsql-bugs-annee-2023.html" rel="alternate"></link>
    <summary type="html">Une revue quantitative des rapports de bugs de Postgres en 2023</summary>
  </entry>
  <entry>
    <title>Classification des caractères avec ICU</title>
    <updated>2023-06-11T14:32:00Z</updated>
    <id>tag:blog-postgresql.verite.pro,2023-06-11:/2023/06/11/caracteres-icu.html</id>
    <link href="https://blog-postgresql.verite.pro/2023/06/11/caracteres-icu.html" rel="alternate"></link>
    <summary type="html">Avec PostgreSQL 16 où ICU devient le fournisseur de collations par défaut, il y a quelques différences sémantiques à anticiper dans la classification des caractères. Cet article en détaille quelques-unes.</summary>
  </entry>
  <entry>
    <title>Isolation Repeatable Read avec PostgreSQL versus MySQL</title>
    <updated>2020-02-10T17:50:00Z</updated>
    <id>tag:blog-postgresql.verite.pro,2020-02-10:/2020/02/10/isolation-postgresql-vs-mysql.html</id>
    <link href="https://blog-postgresql.verite.pro/2020/02/10/isolation-postgresql-vs-mysql.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Les moteurs SQL permettent aux transactions concurrentes d’être&#xA;isolées les unes des autres pour éviter les interférences.&#xA;Cette propriété d’isolation correspond à la lettre I de l’acronyme&#xA;bien connu &lt;a href=&#34;https://fr.wikipedia.org/wiki/Propri%C3%A9t%C3%A9s_ACID&#34;&gt;“ACID”&lt;/a&gt;,&#xA;les autres propriétés étant Atomicité, Cohérence&#xA;(&lt;em&gt;Consistency&lt;/em&gt; en anglais) et Durabilité.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Recherche et remplacement multiple avec plperl</title>
    <updated>2020-01-22T09:05:14Z</updated>
    <id>tag:blog-postgresql.verite.pro,2020-01-22:/2020/01/22/multi-replace.html</id>
    <link href="https://blog-postgresql.verite.pro/2020/01/22/multi-replace.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Remplacer une chaîne par une autre dans une chaîne plus large est simple&#xA;en SQL, avec la fonction &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;replace&lt;/code&gt;:&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Les collations non déterministes</title>
    <updated>2019-10-16T16:32:15Z</updated>
    <id>tag:blog-postgresql.verite.pro,2019-10-16:/2019/10/16/collations-non-deterministes.html</id>
    <link href="https://blog-postgresql.verite.pro/2019/10/16/collations-non-deterministes.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Depuis la version 12, les collations de PostgreSQL peuvent être créées&#xA;avec un paramètre nommé &lt;strong&gt;deterministic&lt;/strong&gt;, qui peut être vrai&#xA;ou faux, si bien que les collations  sont maintenant&#xA;soit &lt;strong&gt;déterministes&lt;/strong&gt; (ce qu’elles sont par défaut), soit&#xA;&lt;strong&gt;non déterministes&lt;/strong&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Monitorer PostgreSQL avec Prometheus et Grafana</title>
    <updated>2024-05-21T19:35:50Z</updated>
    <id>tag:blog.arthurbazin.com,2024-05-21:/it/monitorer-postgresql-avec-prometheus-et-grafana</id>
    <content type="html">&#xA;&lt;p&gt;Plus une instance PostgreSQL est utilisée et plus il devient crucial de la monitorer. De nombreuses solutions existent, je vais vous en présenter une que j&amp;rsquo;utilise régulièrement et qui repose sur Prometheus et Grafana et qui permet de faire de beaux tableaux de bord.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-large is-resized&#34;&gt;&lt;img fetchpriority=&#34;high&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;542&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/grafana_dashboard-1-1024x542.png&#34; alt=&#34;&#34; class=&#34;wp-image-3303&#34; style=&#34;width:768px;height:auto&#34; srcset=&#34;https://blog.arthurbazin.com/wp-content/uploads/grafana_dashboard-1-1024x542.png 1024w, https://blog.arthurbazin.com/wp-content/uploads/grafana_dashboard-1-300x159.png 300w, https://blog.arthurbazin.com/wp-content/uploads/grafana_dashboard-1-768x407.png 768w, https://blog.arthurbazin.com/wp-content/uploads/grafana_dashboard-1-1536x813.png 1536w, https://blog.arthurbazin.com/wp-content/uploads/grafana_dashboard-1.png 1611w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; /&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Voila un très beau tableau de bord &lt;img src=&#34;https://s.w.org/images/core/emoji/15.0.3/72x72/1f609.png&#34; alt=&#34;😉&#34; class=&#34;wp-smiley&#34; style=&#34;height: 1em; max-height: 1em;&#34; /&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Pourquoi cette solution ? Car il est possible de monitorer d&amp;rsquo;autres programmes ainsi que des serveurs. Il s&amp;rsquo;agit donc d&amp;rsquo;une solution très modulaire.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Grafana&lt;/strong&gt; est un logiciel libre de visualisation de données. Il permet notamment la réalisation de tableaux de bord et s&amp;rsquo;interface parfaitement avec Prometheus.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Prometheus &lt;/strong&gt;est un logiciel libre d’enregistrement de métriques en temps réel. Il permet l&amp;rsquo;interrogation des données à l&amp;rsquo;aide d&amp;rsquo;un langage simple (PromQL) et de générer des alertes si besoin.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Exporters&lt;/strong&gt; : il s&amp;rsquo;agit de petits logiciels qui permettent de récupérer des données en temps réel dans un format compréhensible par Prometheus. Il en existe de toutes sortes dont celui pour PostgreSQL : &lt;strong&gt;Postgres Exporter&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Exporters&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Postgres Exporter&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Postgres Exporter est l&amp;rsquo;outil qui va interroger votre instance PostgreSQL est récupérer les métriques nécessaires. Il est en général installé sur le serveur sur lequel se trouve l&amp;rsquo;instance PostgreSQL mais il peut être installer ailleurs, il doit simplement pouvoir accéder à la base de données.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que Postgres Exporter gère le multi-instance mais ce n&amp;rsquo;est pour l&amp;rsquo;instant pas recommandé de l&amp;rsquo;utiliser. Il faudra donc autant de processus que d&amp;rsquo;instance PostgreSQL (pour rappel, une instance de PostgreSQL peut posséder plusieurs bases de données).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Attention, il n&amp;rsquo;est pas possible de sécuriser l&amp;rsquo;accès aux données exportées par Postgres Exporter directement. L&amp;rsquo;outil ne gère pas l&amp;rsquo;authentification, il faut donc utiliser des règle de pare-feu ou un serveur web frontal pour éviter que n&amp;rsquo;importe qui puisse voir les données.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Installation sur Windows&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Commencez par télécharger le logiciel depuis &lt;a href=&#34;https://github.com/prometheus-community/postgres_exporter&#34; data-type=&#34;link&#34; data-id=&#34;https://github.com/prometheus-community/postgres_exporter&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;le projet GitHub&lt;/a&gt; (dans les Releases).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il suffit ensuite de le dézipper puis de la placer là où vous le souhaitez.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Créez ensuite un fichier &lt;code&gt;start_127.0.0.1_5432.bat&lt;/code&gt; dans le répertoire de Postgres Exporter avec le contenu suivant (en remplaçant l&amp;rsquo;url d&amp;rsquo;accès à votre base de données dans le fichier et dans son nom) :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;bat&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;@echo off&#xA;&#xA;REM Déclaration d&#39;une variable pour identifier la source de données&#xA;set DATA_SOURCE_NAME=postgresql://postgres:postgres@127.0.0.1:5432/postgres?sslmode=disable&#xA;&#xA;REM Lancement du processus postgres_exporter.exe avec différentes options&#xA;postgres_exporter.exe ^&#xA;  --web.listen-address=:9187 \&#xA;  --collector.database_wraparound ^&#xA;  --collector.locks ^&#xA;  --collector.long_running_transactions ^&#xA;  --collector.postmaster ^&#xA;  --collector.stat_activity_autovacuum ^&#xA;  --collector.stat_bgwriter ^&#xA;  --collector.stat_database ^&#xA;  --collector.stat_statements ^&#xA;  --collector.stat_user_tables ^&#xA;  --collector.statio_user_indexes ^&#xA;  --collector.statio_user_tables ^&#xA;  --collector.wal&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ce script permet deux choses :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;de gérer la variable &lt;code&gt;DATA_SOURCE_NAME&lt;/code&gt; qui permet de déclarer la base de données à surveiller.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;de déclarer et éventuellement modifier facilement les options de surveillance (&lt;a href=&#34;https://github.com/prometheus-community/postgres_exporter?tab=readme-ov-file#flags&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;détaillées ici&lt;/a&gt;).&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;L&amp;rsquo;une des options est &lt;code&gt;web.listen-adress=:9187&lt;/code&gt;, il s&amp;rsquo;agit du port sur lequel les données pourront être récupérées via HTTP.&lt;br&gt;9187 est le port par défaut mais vous pouvez en attribuer un autre si celui-ci est déjà utilisé ou si vous avez plusieurs instances à surveiller.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La surveillance peut ensuite démarrer en lançant le fichier &lt;code&gt;bat&lt;/code&gt;. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez tester le fonctionnement en récupérant les données collectées en vous rendant à l&amp;rsquo;adresse suivante : &lt;code&gt;http://serveur:9187&lt;/code&gt;, vous devriez récupérer quelques chose qui ressemble à ceci :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;raw&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;# HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles.&#xA;# TYPE go_gc_duration_seconds summary&#xA;go_gc_duration_seconds{quantile=&#34;0&#34;} 0&#xA;go_gc_duration_seconds{quantile=&#34;0.25&#34;} 0&#xA;go_gc_duration_seconds{quantile=&#34;0.5&#34;} 0&#xA;go_gc_duration_seconds{quantile=&#34;0.75&#34;} 0.0005124&#xA;go_gc_duration_seconds{quantile=&#34;1&#34;} 0.00158&#xA;go_gc_duration_seconds_sum 8.0821208&#xA;go_gc_duration_seconds_count 30800&#xA;# HELP go_goroutines Number of goroutines that currently exist.&#xA;# TYPE go_goroutines gauge&#xA;go_goroutines 16&#xA;# HELP go_info Information about the Go environment.&#xA;# TYPE go_info gauge&#xA;go_info{version=&#34;go1.21.3&#34;} 1&#xA;...&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Un service peut ainsi être créé pour automatiser le processus. Pour cela vous aurez besoin du logiciel gratuit &lt;a href=&#34;http://nssm.cc/download&#34; data-type=&#34;link&#34; data-id=&#34;http://nssm.cc/download&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;NSSM&lt;/a&gt; qui permet de créer des service Windows pour tout et n&amp;rsquo;importe quoi. Notez que Grafana embarque NSSM, si vous avez prévu d&amp;rsquo;installer Grafana, vous pouvez attendre de l&amp;rsquo;avoir fait plutôt que de télécharger NSSM.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Une fois récupérer, vous pourrez créer un service avec la ligne de commande suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;bat&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;&#34;C:\emplacement\nssm.exe&#34; install &#34;Prometheus - Postgres Exporter - 127.0.0.1:5432&#34; &#34;C:\chemin\vers\start_127.0.0.1_5432.bat&#34; Start Automatic&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pourrez supprimer le service avec la ligne de commande suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;bat&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;&#34;C:\emplacement\nssm.exe&#34; remove &#34;Prometheus - Postgres Exporter - 127.0.0.1:5432&#34; confirm&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Installation sur Linux&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;installation sous Linux (Ubuntu/Debian) démarre avec les commandes suivantes :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;shell&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;# Création d&#39;un utilisateur dédié (si vous avez déjà PostgreSQL installé il est probable que l&#39;utilisateur existe déjà)&#xA;sudo useradd postgres --shell /bin/bash&#xA;&#xA;# Création d&#39;un répertoire dédié&#xA;sudo mkdir /opt/postgres_exporter&#xA;&#xA;# Téléchargement de Postgres_exporter&#xA;# Attention à la verion, dans le doute RDV sur le projet GitHub : https://github.com/prometheus-community/postgres_exporter&#xA;sudo wget -P /opt/postgres_exporter https://github.com/prometheus-community/postgres_exporter/releases/download/v0.15.0/postgres_exporter-0.15.0.linux-amd64.tar.gz&#xA;&#xA;# Décrompression&#xA;sudo tar xvzf /opt/postgres_exporter/postgres_exporter-0.15.0.linux-amd64.tar.gz -C /opt/postgres_exporter&#xA;&#xA;# Nettoyage&#xA;sudo rm /opt/postgres_exporter/postgres_exporter-0.15.0.linux-amd64.tar.gz&#xA;&#xA;# Retrait du numero de version dans le nom du répertoire&#xA;sudo mv /opt/postgres_exporter/postgres_exporter-0.15.0.linux-amd64 /opt/postgres_exporter/postgres_exporter&#xA;&#xA;# Gestion du propriétaire des fichiers&#xA;sudo chown postgres:postgres -R /opt/postgres_exporter&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Créons le fichier de configuration des variables d&amp;rsquo;environnement :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;shell&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;sudo nano /opt/postgres_exporter/postgres_exporter_127.0.0.1_5432.env&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ajoutez alors la configuration suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;shell&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;# BDD à monitorer&#xA;DATA_SOURCE_NAME=&#34;postgresql://postgres:postgres@127.0.0.1:5432/?sslmode=disable&#34;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il faut maintenant mettre en place le service qui gèrera Postgres Exporter. Ajoutez une information sur l&amp;rsquo;instance monitorée car postgres_exporter ne gère pas correctement le multi-instance.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;shell&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;sudo nano /etc/systemd/system/postgres_exporter_127.0.0.1_5432.service&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Puis renseignez les éléments suivants :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;shell&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;[Unit] &#xA;Description=Prometheus exporter for Postgresql&#xA;Wants=network-online.target &#xA;After=network-online.target &#xA;&#xA;[Service] &#xA;User=postgres&#xA;Group=postgres&#xA;Type=simple&#xA;Restart=always&#xA;RestartSec=1&#xA;&#xA;WorkingDirectory=/opt/postgres_exporter&#xA;EnvironmentFile=/opt/postgres_exporter/postgres_exporter_127.0.0.1_5432.env&#xA;ExecStart=/opt/postgres_exporter/postgres_exporter/postgres_exporter \&#xA;    --web.listen-address=:9187 \&#xA;    --collector.database_wraparound \&#xA;    --collector.locks \&#xA;    --collector.long_running_transactions \&#xA;    --collector.postmaster \&#xA;    --collector.stat_activity_autovacuum \&#xA;    --collector.stat_bgwriter \&#xA;    --collector.stat_database \&#xA;    --collector.stat_statements \&#xA;    --collector.stat_user_tables \&#xA;    --collector.statio_user_indexes \&#xA;    --collector.statio_user_tables \&#xA;    --collector.wal&#xA;&#xA;&#xA;[Install]&#xA;WantedBy=multi-user.target&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous intégrons dans la ligne de commande différentes options de surveillance (&lt;a href=&#34;https://github.com/prometheus-community/postgres_exporter?tab=readme-ov-file#flags&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;détaillées ici&lt;/a&gt;).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34; id=&#34;block-013a31d6-fbb5-4dd0-8c9a-f05ee7df2cad&#34;&gt;&#xA;&lt;li&gt;L&amp;rsquo;une des options est &lt;code&gt;web.listen-adress=:9187&lt;/code&gt;, il s&amp;rsquo;agit du port sur lequel les données pourront être récupérées via HTTP.&lt;br&gt;9187 est le port par défaut mais vous pouvez en attribuer un autre si celui-ci est déjà utilisé ou si vous avez plusieurs instances à surveiller.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Utilisez les commandes suivantes pour créer et lancer le service :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;shell&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;# Recharger les paramètres des services&#xA;sudo systemctl daemon-reload&#xA;&#xA;# Activer le service au démarrage&#xA;sudo systemctl enable postgres_exporter_127.0.0.1_5432.service&#xA;&#xA;# Démarrer le service&#xA;sudo systemctl start postgres_exporter_127.0.0.1_5432&#xA;&#xA;# Tester le démarrage du service&#xA;sudo systemctl status postgres_exporter_127.0.0.1_5432&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour voir les logs, vous pouvez utiliser la commande suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;shell&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;sudo journalctl -u postgres_exporter_127.0.0.1_5432.service -f&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez tester le fonctionnement en récupérant les données collectées en vous rendant à l&amp;rsquo;adresse suivante : &lt;code&gt;http://serveur:9187&lt;/code&gt;. Vous devriez récupérer quelques chose qui ressemble à ceci :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;raw&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;# HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles.&#xA;# TYPE go_gc_duration_seconds summary&#xA;go_gc_duration_seconds{quantile=&#34;0&#34;} 0&#xA;go_gc_duration_seconds{quantile=&#34;0.25&#34;} 0&#xA;go_gc_duration_seconds{quantile=&#34;0.5&#34;} 0&#xA;go_gc_duration_seconds{quantile=&#34;0.75&#34;} 0.0005124&#xA;go_gc_duration_seconds{quantile=&#34;1&#34;} 0.00158&#xA;go_gc_duration_seconds_sum 8.0821208&#xA;go_gc_duration_seconds_count 30800&#xA;# HELP go_goroutines Number of goroutines that currently exist.&#xA;# TYPE go_goroutines gauge&#xA;go_goroutines 16&#xA;# HELP go_info Information about the Go environment.&#xA;# TYPE go_info gauge&#xA;go_info{version=&#34;go1.21.3&#34;} 1&#xA;...&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Node Exporter&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Node Exporter est l&amp;rsquo;outil qui va collecter les métriques du système Linux.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Attention, il n&amp;rsquo;est pas possible de sécuriser l&amp;rsquo;accès aux données exportées par Node Exporter directement. L&amp;rsquo;outil ne gère pas l&amp;rsquo;authentification, il faut donc utiliser des règle de pare-feu ou un serveur web frontal pour éviter que n&amp;rsquo;importe qui puisse voir les données.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;installation sous Linux (Ubuntu/Debian) démarre avec les commandes suivantes :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;shell&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;# Création d&#39;un utilisateur dédié&#xA;sudo useradd node_exporter --shell /bin/bash&#xA;&#xA;# Création d&#39;un répertoire dédié&#xA;sudo mkdir /opt/node_exporter&#xA;&#xA;# Téléchargement de Node_exporter&#xA;# Attention à la verion, dans le doute RDV sur le site de Prometheus : https://prometheus.io/download/#node_exporter&#xA;sudo wget -P /opt/node_exporter https://github.com/prometheus/node_exporter/releases/download/v1.8.1/node_exporter-1.8.1.linux-amd64.tar.gz&#xA;&#xA;# Décrompression&#xA;sudo tar xvzf /opt/node_exporter/node_exporter-1.8.1.linux-amd64.tar.gz -C /opt/node_exporter&#xA;&#xA;# Nettoyage&#xA;sudo rm /opt/node_exporter/node_exporter-1.8.1.linux-amd64.tar.gz&#xA;&#xA;# Retrait du numero de version dans le nom du répertoire&#xA;sudo mv /opt/node_exporter/node_exporter-1.8.1.linux-amd64 /opt/node_exporter/node_exporter&#xA;&#xA;# Gestion du propriétaire des fichiers&#xA;sudo chown node_exporter:node_exporter -R /opt/node_exporter&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il faut maintenant mettre en place le service qui gèrera Node Exporter. Ajoutez une information sur l&amp;rsquo;instance monitorée car postgres_exporter ne gère pas correctement le multi-instance.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;shell&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;sudo nano /etc/systemd/system/node_exporter.service&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Puis renseignez les éléments suivants :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;shell&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;[Unit] &#xA;Description=Prometheus exporter for Linux&#xA;Wants=network-online.target &#xA;After=network-online.target &#xA;&#xA;[Service] &#xA;User=node_exporter&#xA;Group=node_exporter&#xA;Type=simple&#xA;Restart=always&#xA;RestartSec=1&#xA;&#xA;WorkingDirectory=/opt/node_exporter&#xA;ExecStart=/opt/node_exporter/node_exporter/node_exporter \&#xA;    --web.listen-address=:9100 &#xA;&#xA;&#xA;[Install]&#xA;WantedBy=multi-user.target&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous pouvons intégrer dans la ligne de commande différentes options de surveillance (&lt;a href=&#34;https://github.com/prometheus/node_exporter&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;détaillées ici&lt;/a&gt;).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34; id=&#34;block-013a31d6-fbb5-4dd0-8c9a-f05ee7df2cad&#34;&gt;&#xA;&lt;li&gt;L&amp;rsquo;une des options est &lt;code&gt;web.listen-adress=:9100&lt;/code&gt;, il s&amp;rsquo;agit du port sur lequel les données pourront être récupérées via HTTP.&lt;br&gt;9100 est le port par défaut mais vous pouvez en attribuer un autre si celui-ci est déjà utilisé.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Utilisez les commandes suivantes pour créer et lancer le service :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;shell&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;# Recharger les paramètres des services&#xA;sudo systemctl daemon-reload&#xA;&#xA;# Activer le service au démarrage&#xA;sudo systemctl enable node_exporter.service&#xA;&#xA;# Démarrer le service&#xA;sudo systemctl start node_exporter&#xA;&#xA;# Tester le démarrage du service&#xA;sudo systemctl status node_exporter&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour voir les logs, vous pouvez utiliser la commande suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;shell&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;sudo journalctl -u node_exporter.service -f&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez tester le fonctionnement en récupérant les données collectées en vous rendant à l&amp;rsquo;adresse suivante : &lt;code&gt;http://serveur:9100&lt;/code&gt;. Vous devriez récupérer quelques chose qui ressemble à ceci :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;raw&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;# HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles.&#xA;# TYPE go_gc_duration_seconds summary&#xA;go_gc_duration_seconds{quantile=&#34;0&#34;} 0&#xA;go_gc_duration_seconds{quantile=&#34;0.25&#34;} 0&#xA;go_gc_duration_seconds{quantile=&#34;0.5&#34;} 0&#xA;go_gc_duration_seconds{quantile=&#34;0.75&#34;} 0&#xA;go_gc_duration_seconds{quantile=&#34;1&#34;} 0&#xA;go_gc_duration_seconds_sum 0&#xA;go_gc_duration_seconds_count 0&#xA;# HELP go_goroutines Number of goroutines that currently exist.&#xA;# TYPE go_goroutines gauge&#xA;go_goroutines 7&#xA;# HELP go_info Information about the Go environment.&#xA;# TYPE go_info gauge&#xA;go_info{version=&#34;go1.22.3&#34;} 1&#xA;...&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Windows Exporter&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Windows Exporter est l&amp;rsquo;outil qui va collecter les métriques du système Windows.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La procédure d&amp;rsquo;installation de cet exporter est bien détaillée sur la page du projet GitHub. Je ne la détaillerai donc pas entièrement ici.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-buttons is-vertical is-content-justification-center is-layout-flex wp-container-core-buttons-is-layout-1 wp-block-buttons-is-layout-flex&#34;&gt;&#xA;&lt;div class=&#34;wp-block-button has-custom-width wp-block-button__width-50&#34;&gt;&lt;a class=&#34;wp-block-button__link wp-element-button&#34; href=&#34;https://github.com/prometheus-community/windows_exporter?tab=readme-ov-file#installation&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Procédure d&amp;rsquo;installation de Windows Exporter&lt;/a&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-button has-custom-width wp-block-button__width-50&#34;&gt;&lt;a class=&#34;wp-block-button__link wp-element-button&#34; href=&#34;https://github.com/prometheus-community/windows_exporter/releases&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Téléchargement de Windows Exporter&lt;/a&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici la ligne de commande utilisée pour installer l&amp;rsquo;exporter :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;generic&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;msiexec /i &#34;C:\chemin_vers\windows_exporter-0.25.1-amd64.msi&#34; LISTEN_PORT=9182 EXTRA_FLAGS=&#34;--config.file=&#34;&#34;C:\Program Files\windows_exporter\config.yml&#34;&#34;&#34;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cela permet de configurer Windows Exporter avec un fichier de configuration afin de pouvoir facilement modifier certains paramètres si besoin (il suffit ensuite de relancer le service pour prendre en compte le nouveau paramétrage).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez tester le fonctionnement en récupérant les données collectées en vous rendant à l&amp;rsquo;adresse suivante : &lt;code&gt;http://serveur:9182&lt;/code&gt;. Vous devriez récupérer quelques chose qui ressemble à ceci :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;raw&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;# HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles.&#xA;# TYPE go_gc_duration_seconds summary&#xA;go_gc_duration_seconds{quantile=&#34;0&#34;} 0&#xA;go_gc_duration_seconds{quantile=&#34;0.25&#34;} 0&#xA;go_gc_duration_seconds{quantile=&#34;0.5&#34;} 0&#xA;go_gc_duration_seconds{quantile=&#34;0.75&#34;} 0.0005129&#xA;go_gc_duration_seconds{quantile=&#34;1&#34;} 0.0005364&#xA;go_gc_duration_seconds_sum 0.0058283&#xA;go_gc_duration_seconds_count 37&#xA;# HELP go_goroutines Number of goroutines that currently exist.&#xA;# TYPE go_goroutines gauge&#xA;go_goroutines 15&#xA;# HELP go_info Information about the Go environment.&#xA;# TYPE go_info gauge&#xA;go_info{version=&#34;go1.21.5&#34;} 1&#xA;...&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Prometheus&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Prometheus est l&amp;rsquo;outil qui va stocker les données récupérées par Postgres Exporter. Pour cela, il doit pouvoir contacter Postgres Exporter via HTTP.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Prometheus gère l&amp;rsquo;authentification basique, il faut pour cela suivre la procédure indiquée sur le site officiel : &lt;a href=&#34;https://prometheus.io/docs/guides/basic-auth&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://prometheus.io/docs/guides/basic-auth&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Installation sur Windows&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Commencez par télécharger le logiciel depuis &lt;a href=&#34;https://prometheus.io/download/&#34; data-type=&#34;link&#34; data-id=&#34;https://github.com/prometheus-community/postgres_exporter&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;le site de Prometheus&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il suffit ensuite de le dézipper puis de la placer là où vous le souhaitez.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La configuration de Prometheus se fait au travers d&amp;rsquo;un fichier YAML. Un fichier de configuration de base est fournit, ouvrez le et complétez le avec les informations suivantes :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;yaml&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;# Configuration globale&#xA;global:&#xA;  # Interval global de récupération (défaut 1 min)&#xA;  scrape_interval: 15s&#xA;  # Interval global d&#39;évaluation des règles (défaut 1 min)&#xA;  evaluation_interval: 15s&#xA;  # Interval global de timeout (défaut 10s)&#xA;  scrape_timeout: 10s&#xA;&#xA;# Gestionnaire d&#39;alertes&#xA;alerting:&#xA;  alertmanagers:&#xA;    - static_configs:&#xA;        - targets:&#xA;          # - alertmanager:9093&#xA;&#xA;# Règles&#xA;rule_files:&#xA;  # - &#34;first_rules.yml&#34;&#xA;  # - &#34;second_rules.yml&#34;&#xA;&#xA;# Configuration des data scraper (récupérateurs de données)&#xA;scrape_configs:&#xA;  # Prometheus lui-même&#xA;  # &#34;job_name&#34; est ajouté à chaque donnée récupérée via cette configuration&#xA;  - job_name: &#34;Prometheus - Local&#34;&#xA;    static_configs:&#xA;      # Cible à atteindre&#xA;      - targets: [&#34;localhost:9090&#34;]&#xA;&#xA;    # Identifiant et mot de passe pour accéder à Prometheus&#xA;    basic_auth:&#xA;      username: identifiant&#xA;      password: mdp&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous allons ensuite sécuriser l&amp;rsquo;accès à Prometheus. Créez un fichier web.yml avec les éléments suivants (pensez à utiliser les mêmes identifiant/mdp dans le fichier précédent : Prometheus doit pouvoir accéder à lui-même pour s&amp;rsquo;auto-monitorer) :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;yaml&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;basic_auth_users:&#xA;  # Utilisateur 1 : identifiant: mdp_encrypté&#xA;  identifiant: $2a$12$P63ADVOo///fo4HiMm4sYuogjceHfzT3vfShmgAYvEw8v28Bt4GBq&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez ajouter autant d&amp;rsquo;utilisateurs que vous le souhaitez. Le mot de passe doit être spécifié de façon crypté avec bcrypt. Vous pouvez utiliser un crypteur sur le web &lt;a href=&#34;https://bcrypt-generator.com/&#34;&gt;comme celui-ci&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Créez ensuite un fichier &lt;code&gt;start.bat&lt;/code&gt; dans le répertoire de Prometheus avec le contenu suivant (en remplaçant l&amp;rsquo;url d&amp;rsquo;accès à votre base de données dans le fichier et dans son nom) :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;bat&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;@echo off&#xA;&#xA;REM Lancement du processus prometheus.exe avec différentes options&#xA;prometheus.exe ^&#xA;  --web.listen-address=:9090 ^&#xA;  --web.config.file=web.yml&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ce script permet de déclarer et éventuellement modifier facilement les options de Prometheus.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;L&amp;rsquo;option &lt;code&gt;web.listen-adress=:9090&lt;/code&gt; permet de définir le port d&amp;rsquo;écoute. &lt;br&gt;La valeur 9090 est la valeur par défaut, cette option n&amp;rsquo;est donc pas indispensable dans notre cas.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;L&amp;rsquo;option &lt;code&gt;web.config.file=web.yml&lt;/code&gt; permet d&amp;rsquo;activer l&amp;rsquo;authentification.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La surveillance peut ensuite démarrer en lançant le fichier &lt;code&gt;bat&lt;/code&gt;. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez tester le fonctionnement en vous rendant sur l&amp;rsquo;interface de Prometheus à l&amp;rsquo;adresse suivante : &lt;code&gt;http://serveur:9090&lt;/code&gt;. Vous devriez obtenir la page suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-large is-resized&#34;&gt;&lt;img decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;440&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/prometheus_accueil-1024x440.png&#34; alt=&#34;&#34; class=&#34;wp-image-3323&#34; style=&#34;width:696px;height:auto&#34; srcset=&#34;https://blog.arthurbazin.com/wp-content/uploads/prometheus_accueil-1024x440.png 1024w, https://blog.arthurbazin.com/wp-content/uploads/prometheus_accueil-300x129.png 300w, https://blog.arthurbazin.com/wp-content/uploads/prometheus_accueil-768x330.png 768w, https://blog.arthurbazin.com/wp-content/uploads/prometheus_accueil.png 1041w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; /&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Un service peut ainsi être créé pour automatiser le processus. Pour cela vous aurez besoin du logiciel gratuit &lt;a href=&#34;http://nssm.cc/download&#34; data-type=&#34;link&#34; data-id=&#34;http://nssm.cc/download&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;NSSM&lt;/a&gt; qui permet de créer des service Windows pour tout et n&amp;rsquo;importe quoi. Notez que Grafana embarque NSSM, si vous avez prévu d&amp;rsquo;installer Grafana, vous pouvez attendre de l&amp;rsquo;avoir fait plutôt que de télécharger NSSM.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Une fois récupérer, vous pourrez créer un service avec la ligne de commande suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;bat&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;&#34;C:\emplacement\nssm.exe&#34; install &#34;Prometheus&#34; &#34;C:\chemin\vers\start.exe&#34; Start Automatic&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pourrez supprimer le service avec la ligne de commande suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;bat&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;&#34;C:\emplacement\nssm.exe&#34; remove &#34;Prometheus&#34; confirm&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Installation sur Linux&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;installation sous Linux (Ubuntu/Debian) démarre avec les commandes suivantes :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;shell&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;# Création d&#39;un utilisateur dédié&#xA;sudo useradd prometheus --shell /bin/bash&#xA;&#xA;# Création d&#39;un répertoire dédié et d&#39;un répertoire pour stocker les données&#xA;sudo mkdir /opt/prometheus&#xA;sudo mkdir /opt/prometheus/data&#xA;&#xA;# Téléchargement de Prometheus&#xA;# Attention à la version qu&#39;il vous faudra adapter&#xA;sudo wget -P /opt/prometheus https://github.com/prometheus/prometheus/releases/download/v2.51.1/prometheus-2.51.1.linux-amd64.tar.gz&#xA;&#xA;# Décrompression&#xA;sudo tar xvzf /opt/prometheus/prometheus-2.51.1.linux-amd64.tar.gz -C /opt/prometheus&#xA;&#xA;# Nettoyage&#xA;sudo rm /opt/prometheus/prometheus-2.51.1.linux-amd64.tar.gz&#xA;&#xA;# Retrait du numero de version dans le nom du répertoire&#xA;sudo mv /opt/prometheus/prometheus-2.51.1.linux-amd64 /opt/prometheus/prometheus&#xA;&#xA;# Gestion du propriétaire des fichiers&#xA;sudo chown prometheus:prometheus -R /opt/prometheus&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La configuration de Prometheus se fait au travers d&amp;rsquo;un fichier YAML. Un fichier de configuration de base est fournit, ouvrez le :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;shell&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;sudo nano /opt/prometheus/prometheus/prometheus.yml&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;yaml&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;# Configuration globale&#xA;global:&#xA;  # Interval global de récupération (défaut 1 min)&#xA;  scrape_interval: 15s&#xA;  # Interval global d&#39;évaluation des règles (défaut 1 min)&#xA;  evaluation_interval: 15s&#xA;  # Interval global de timeout (défaut 10s)&#xA;  scrape_timeout: 10s&#xA;&#xA;# Gestionnaire d&#39;alertes&#xA;alerting:&#xA;  alertmanagers:&#xA;    - static_configs:&#xA;        - targets:&#xA;          # - alertmanager:9093&#xA;&#xA;# Règles&#xA;rule_files:&#xA;  # - &#34;first_rules.yml&#34;&#xA;  # - &#34;second_rules.yml&#34;&#xA;&#xA;# Configuration des data scraper (récupérateurs de données)&#xA;scrape_configs:&#xA;  # Prometheus lui-même&#xA;  # &#34;job_name&#34; est ajouté à chaque donnée récupérée via cette configuration&#xA;  - job_name: &#34;Prometheus - Local&#34;&#xA;    static_configs:&#xA;      # Cible à atteindre&#xA;      - targets: [&#34;localhost:9090&#34;]&#xA;&#xA;    # Identifiant et mot de passe pour accéder à Prometheus&#xA;    basic_auth:&#xA;      username: identifiant&#xA;      password: mdp&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous allons ensuite sécuriser l&amp;rsquo;accès à Prometheus. Créez un fichier web.yml avec les éléments suivants (pensez à utiliser les mêmes identifiant/mdp dans le fichier précédent : Prometheus doit pouvoir accéder à lui-même pour s&amp;rsquo;auto-monitorer) :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;shell&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;sudo nano /opt/prometheus/prometheus/web.yml&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;yaml&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;basic_auth_users:&#xA;  # Utilisateur 1 : identifiant: mdp_encrypté&#xA;  identifiant: $2a$12$P63ADVOo///fo4HiMm4sYuogjceHfzT3vfShmgAYvEw8v28Bt4GBq&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez ajouter autant d&amp;rsquo;utilisateurs que vous le souhaitez. Le mot de passe doit être spécifié de façon crypté avec bcrypt. Vous pouvez utiliser un crypteur sur le web &lt;a href=&#34;https://bcrypt-generator.com/&#34;&gt;comme celui-ci&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La récupération des données peut ensuite démarrer en lançant le programme Prometheus via la commande suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;shell&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;/opt/prometheus/prometheus/prometheus --config.file=prometheus.yml --web.config.file=web.yml&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez tester le fonctionnement en vous rendant sur l&amp;rsquo;interface de Prometheus à l&amp;rsquo;adresse suivante : &lt;code&gt;http://serveur:9090&lt;/code&gt;. Vous devriez obtenir la page suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-large is-resized&#34;&gt;&lt;img decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;440&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/prometheus_accueil-1024x440.png&#34; alt=&#34;&#34; class=&#34;wp-image-3323&#34; style=&#34;width:696px;height:auto&#34; srcset=&#34;https://blog.arthurbazin.com/wp-content/uploads/prometheus_accueil-1024x440.png 1024w, https://blog.arthurbazin.com/wp-content/uploads/prometheus_accueil-300x129.png 300w, https://blog.arthurbazin.com/wp-content/uploads/prometheus_accueil-768x330.png 768w, https://blog.arthurbazin.com/wp-content/uploads/prometheus_accueil.png 1041w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; /&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Notez que le port sur lequel Prometheus est disponible peut être modifier avec l&amp;rsquo;argument &lt;code&gt;--web.listen-address&lt;/code&gt; a ajouter lors du démarrage du programme (comme avec Postgres Exporter).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il faut maintenant mettre en place le service qui gèrera Prometheus.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;shell&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;sudo nano /etc/systemd/system/prometheus.service&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Puis renseignez les éléments suivants :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;shell&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;[Unit] &#xA;Description=Prometheus &#xA;Wants=network-online.target &#xA;After=network-online.target &#xA;&#xA;[Service] &#xA;User=prometheus &#xA;Group=prometheus &#xA;Type=simple&#xA;Restart=always&#xA;RestartSec=1&#xA;ExecStart=/opt/prometheus/prometheus/prometheus \&#xA;    --config.file=/opt/prometheus/prometheus/prometheus.yml \&#xA;    --web.config.file=/opt/prometheus/prometheus/web.yml \&#xA;    --web.listen-address=:9090 \&#xA;    --storage.tsdb.path=/opt/prometheus/data \&#xA;    --storage.tsdb.retention.time=30d&#xA;&#xA;&#xA;[Install]&#xA;WantedBy=multi-user.target&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Utilisez les commandes suivantes pour créer et lancer le service :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;shell&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;# Recharger les paramètres des services&#xA;sudo systemctl daemon-reload&#xA;&#xA;# Activer le service au démarrage&#xA;sudo systemctl enable prometheus.service&#xA;&#xA;# Démarrer le service&#xA;sudo systemctl start prometheus&#xA;&#xA;# Tester le démarrage du service&#xA;sudo systemctl status prometheus&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour voir les logs, vous pouvez utiliser la commande suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;shell&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;sudo journalctl -u prometheus.service -f&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Liaison Prometheus &amp;#8211; Exporter&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour que Prometheus récupère les données d&amp;rsquo;un Exporter que vous avez installé, il vous faut éditer le fichier de configuration YAML.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ajoutez un nouveau « job » dans la partie &lt;code&gt;scrape_configs&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour PostgreSQL :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;yaml&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;  # PostgreSQL Monitoring avec postgres_exporter&#xA;  - job_name: &#39;PostgreSQL Exporter&#39;&#xA;    scrape_interval: 5s&#xA;    static_configs:&#xA;      # Cible à atteindre&#xA;      - targets: [&#39;127.0.0.1:9187&#39;]&#xA;        labels:&#xA;          # &#34;instance&#34; est ajouté à chaque donnée récupérée et prend la valeur du paramètre &amp;lt;targets&gt;, comme on sait qu&#39;il n&#39;y a qu&#39;un PG derrière, on renomme l&#39;instance&#xA;          &#34;instance&#34;: &#34;127.0.0.1:5431&#34;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour Node Exporter :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;yaml&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt; # Linux Monitoring with node_exporter&#xA;  - job_name: &#39;Node Exporter&#39;&#xA;    scrape_interval: 15s&#xA;    static_configs:&#xA;      - targets: [&#39;127.0.0.1:9100&#39;]&#xA;        labels:&#xA;          &#34;instance&#34;: &#34;Mon serveur XYZ&#34;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour Windows Exporter :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;yaml&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt; # Windows Monitoring with windows_exporter&#xA;  - job_name: &#39;Windows Exporter&#39;&#xA;    scrape_interval: 15s&#xA;    static_configs:&#xA;      - targets: [&#39;127.0.0.1:9182&#39;]&#xA;        labels:&#xA;          &#34;instance&#34;: &#34;Mon serveur ABC&#34;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez ajouter autant de job que nécessaire, afin que votre Prometheus récupère des données de divers services.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Redémarrez le service de Prometheus et rendez-vous dans la page « Status » =&amp;gt; « Target » de l&amp;rsquo;interface, vous devriez voir la connexion avec Postgres Exporter et Node Exporter&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-large is-resized&#34;&gt;&lt;img decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;520&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/prometheus_target-1024x520.png&#34; alt=&#34;&#34; class=&#34;wp-image-3324&#34; style=&#34;width:757px;height:auto&#34; srcset=&#34;https://blog.arthurbazin.com/wp-content/uploads/prometheus_target-1024x520.png 1024w, https://blog.arthurbazin.com/wp-content/uploads/prometheus_target-300x152.png 300w, https://blog.arthurbazin.com/wp-content/uploads/prometheus_target-768x390.png 768w, https://blog.arthurbazin.com/wp-content/uploads/prometheus_target.png 1036w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; /&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Grafana&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Installation sur Windows&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Commencez par télécharger le logiciel depuis &lt;a href=&#34;https://grafana.com/grafana/download?platform=windows&#34; data-type=&#34;link&#34; data-id=&#34;https://github.com/prometheus-community/postgres_exporter&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;le site de Grafana&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il suffit ensuite de le dézipper puis de la placer là où vous le souhaitez.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le logiciel se lance simplement en démarrant le programme &lt;code&gt;grafana-server.exe&lt;/code&gt; situé dans le répertoire &lt;code&gt;bin&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez tester le fonctionnement en vous rendant sur l&amp;rsquo;interface de Grafana à l&amp;rsquo;adresse suivante : &lt;code&gt;http://serveur:3000&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que le port sur lequel Grafana est disponible peut être modifier dans le fichier de configuration &lt;code&gt;conf/defaults.ini&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Un service peut ainsi être créé pour automatiser le processus. Pour cela vous aurez besoin du logiciel gratuit &lt;a href=&#34;http://nssm.cc/download&#34; data-type=&#34;link&#34; data-id=&#34;http://nssm.cc/download&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;NSSM&lt;/a&gt; qui permet de créer des service Windows pour tout et n&amp;rsquo;importe quoi. Notez que Grafana embarque NSSM dans le répertoire &lt;code&gt;svc-x&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Une fois récupérer, vous pourrez créer un service avec la ligne de commande suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;generic&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;&#34;C:\emplacement\nssm.exe&#34; install &#34;Grafana&#34; &#34;C:\chemin\vers\grafana-server.exe&#34; Start Automatic&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pourrez supprimer le service avec la ligne de commande suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;generic&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;&#34;C:\emplacement\nssm.exe&#34; remove &#34;Grafana&#34; confirm&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Installation sur Linux&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il existe une multitude de façon d&amp;rsquo;installer Grafana sur Linux (Ubuntu/Debian).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;installation sous Linux démarre avec les commandes suivantes :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;generic&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;# Création d&#39;un utilisateur dédié&#xA;sudo useradd grafana --shell /bin/bash&#xA;&#xA;# Création d&#39;un répertoire dédié&#xA;sudo mkdir /opt/grafana&#xA;&#xA;# Téléchargement de Prometheus&#xA;# Attention à la version qu&#39;il vous faudra adapter&#xA;sudo wget -P /opt/grafana https://dl.grafana.com/enterprise/release/grafana-enterprise-11.0.0.linux-amd64.tar.gz&#xA;&#xA;# Décrompression&#xA;sudo tar xvzf /opt/grafana/grafana-enterprise-11.0.0.linux-amd64.tar.gz -C /opt/grafana&#xA;&#xA;# Nettoyage&#xA;sudo rm /opt/grafana/grafana-enterprise-11.0.0.linux-amd64.tar.gz&#xA;&#xA;# Retrait du numero de version dans le nom du répertoire&#xA;sudo mv /opt/grafana/grafana-v11.0.0 /opt/grafana/grafana&#xA;&#xA;# Gestion du propriétaire des fichiers&#xA;sudo chown grafana:grafana -R /opt/grafana&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le logiciel se lance simplement en démarrant le programme &lt;code&gt;grafana&lt;/code&gt; situé dans le répertoire &lt;code&gt;bin&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;shell&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;grafana server&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez tester le fonctionnement en vous rendant sur l&amp;rsquo;interface de Grafana à l&amp;rsquo;adresse suivante : &lt;code&gt;http://serveur:3000&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que le port sur lequel Grafana est disponible peut être modifier dans le fichier de configuration &lt;code&gt;conf/defaults.ini&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il faut maintenant mettre en place le service qui gèrera Grafana.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;generic&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;sudo nano /etc/systemd/system/grafana.service&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Puis renseignez les éléments suivants :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;shell&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;[Unit] &#xA;Description=Grafana&#xA;Wants=network-online.target &#xA;After=network-online.target &#xA;&#xA;[Service] &#xA;User=grafana&#xA;Group=grafana&#xA;Type=simple&#xA;Restart=always&#xA;RestartSec=1&#xA;WorkingDirectory=/opt/grafana/grafana&#xA;ExecStart=/opt/grafana/grafana/bin/grafana server&#xA;&#xA;&#xA;[Install]&#xA;WantedBy=multi-user.target&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Utilisez les commandes suivantes pour créer et lancer le service :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;generic&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;# Recharger les paramètres des services&#xA;sudo systemctl daemon-reload&#xA;&#xA;# Activer le service au démarrage&#xA;sudo systemctl enable grafana.service&#xA;&#xA;# Démarrer le service&#xA;sudo systemctl start grafana&#xA;&#xA;# Tester le démarrage du service&#xA;sudo systemctl status grafana&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour voir les logs, vous pouvez utiliser la commande suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;generic&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;sudo journalctl -u grafana.service -f&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Paramétrages&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez maintenant accéder à Grafana sur l&amp;rsquo;adresse &lt;code&gt;http://serveur:3000&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le premier écran vous demande de vous connecter, utilisez l&amp;rsquo;identifiant &lt;code&gt;admin&lt;/code&gt; avec &lt;code&gt;admin&lt;/code&gt; pour mot de passe. L&amp;rsquo;écrans suivant vous demandera de définir un nouveau mot de passe.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-large is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;594&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/grafana_sign_in-1024x594.png&#34; alt=&#34;&#34; class=&#34;wp-image-3293&#34; style=&#34;width:604px;height:auto&#34; srcset=&#34;https://blog.arthurbazin.com/wp-content/uploads/grafana_sign_in-1024x594.png 1024w, https://blog.arthurbazin.com/wp-content/uploads/grafana_sign_in-300x174.png 300w, https://blog.arthurbazin.com/wp-content/uploads/grafana_sign_in-768x446.png 768w, https://blog.arthurbazin.com/wp-content/uploads/grafana_sign_in.png 1034w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; /&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Dans l&amp;rsquo;interface suivante, cliquer sur l&amp;rsquo;icone pour ouvrir le menu de gauche puis sur « Add new connection » :&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full is-resized&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;772&#34; height=&#34;462&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/grafana_new_connexion.png&#34; alt=&#34;&#34; class=&#34;wp-image-3294&#34; style=&#34;width:590px;height:auto&#34; srcset=&#34;https://blog.arthurbazin.com/wp-content/uploads/grafana_new_connexion.png 772w, https://blog.arthurbazin.com/wp-content/uploads/grafana_new_connexion-300x180.png 300w, https://blog.arthurbazin.com/wp-content/uploads/grafana_new_connexion-768x460.png 768w&#34; sizes=&#34;(max-width: 772px) 100vw, 772px&#34; /&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez maintenant ajouter une connexion vers Prometheus en renseignant son url d&amp;rsquo;accès &lt;code&gt;http://serveur:9090&lt;/code&gt; puis en choisissant le type d&amp;rsquo;authentification « basique ».&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il ne vous reste plus qu&amp;rsquo;a créer votre tableau de bord ou en récupérer un déjà créé depuis &lt;a href=&#34;https://grafana.com/grafana/dashboards/&#34; data-type=&#34;link&#34; data-id=&#34;https://grafana.com/grafana/dashboards/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;le site de Grafana&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici un exemple de tableau de bord :&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-large&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;542&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/grafana_dashboard-1-1024x542.png&#34; alt=&#34;&#34; class=&#34;wp-image-3303&#34; srcset=&#34;https://blog.arthurbazin.com/wp-content/uploads/grafana_dashboard-1-1024x542.png 1024w, https://blog.arthurbazin.com/wp-content/uploads/grafana_dashboard-1-300x159.png 300w, https://blog.arthurbazin.com/wp-content/uploads/grafana_dashboard-1-768x407.png 768w, https://blog.arthurbazin.com/wp-content/uploads/grafana_dashboard-1-1536x813.png 1536w, https://blog.arthurbazin.com/wp-content/uploads/grafana_dashboard-1.png 1611w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; /&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Voici le code json à télécharger pour importer ce tableau de bord dans votre Grafana : &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-buttons is-content-justification-center is-layout-flex wp-container-core-buttons-is-layout-2 wp-block-buttons-is-layout-flex&#34;&gt;&#xA;&lt;div class=&#34;wp-block-button&#34;&gt;&lt;a class=&#34;wp-block-button__link wp-element-button&#34; href=&#34;https://blog.arthurbazin.com/wp-content/uploads/tdb_postgresql.zip&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Tableau de bord PostgreSQL &amp;#8211; 7ko&lt;/a&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Métriques importantes&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Quelles sont les métriques importantes à surveiller ? &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Tout dépends des usages mais en voici quelques unes que j&amp;rsquo;ai pu choisir pour PostgreSQL :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;pg_up&lt;/code&gt; : l&amp;rsquo;état actif ou non de l&amp;rsquo;instance.&lt;br&gt;C&amp;rsquo;est un peu la base de tout le monitoring&amp;#8230;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;process_start_time_seconds&lt;/code&gt; : le délais d&amp;rsquo;activité (depuis quand la base est-elle démarrée ?)&lt;br&gt;Cela permet de repérer les redémarrages de la base.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;pg_stat_activity_count&lt;/code&gt; et &lt;code&gt;pg_settings_max_connections&lt;/code&gt; : le nombre de connexions par rapport au nombre total de connexions possibles.&lt;br&gt;Pour savoir s&amp;rsquo;il faut augmenter le pool de connexions disponibles.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;pg_database_size_bytes&lt;/code&gt; : la taille totale des bases de l&amp;rsquo;instance&lt;br&gt;Pour identifier celle qui pourrait poser problème et/ou anticiper une augmentation de la capacité du serveur.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;pg_stat_database_xact_commit&lt;/code&gt; et &lt;code&gt;pg_stat_database_xact_rollback&lt;/code&gt; : le taux de COMMIT et de ROLLBACK.&lt;br&gt;S&amp;rsquo;il y a beaucoup de ROLLBACK, il y a peut être un problème avec certaines requêtes.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;process_resident_memory_bytes&lt;/code&gt; et &lt;code&gt;process_cpu_seconds_total&lt;/code&gt; : les consommations RAM et CPU.&lt;br&gt;Il s&amp;rsquo;agit plus de valeur indicatives de la charge de la base, il n&amp;rsquo;y a pas de mise en rapport avec la puissance du serveur et donc pas d&amp;rsquo;information sur l&amp;rsquo;état de charge de la machine.&lt;br&gt;Il faudra plutot surveiller le serveur en lui-même.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;pg_stat_database_tup_fetched&lt;/code&gt; et &lt;code&gt;pg_stat_database_tup_returned&lt;/code&gt; : le rapport entre le nombre de tuples lus directement dans le stockage (returned) par rapport au nombre de tuples réellement nécessaires (fetched). Cela permet de déceler un manque d&amp;rsquo;indexation.&lt;br&gt;Par exemple, sur une table de 1000 lignes sans index, une requête avec une clause ne renvoyant que 100 lignes aura un nombre de tuples « returned » de 1000 et un nombre de tuples « fetched » de 100 car il aura fallu scanner toutes les lignes pour récupérer le résultat. Avec un index, la valeur de returned aurait été bien moindre (probablement légèrement supérieur à 100).&lt;br&gt;Attention, le nombre de tuples « fetched » ne correspond pas forcément au nombre de tuples retournés au clients ce qui est interessant ici c&amp;rsquo;est bien le rapport entre les deux valeurs.&lt;br&gt;Attention, la valeur porte sur la base entière, il conviendra ensuite d&amp;rsquo;auditer les requêtes pour identifier l&amp;rsquo;origine du manque d&amp;rsquo;indexation.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;pg_stat_database_blks_hit&lt;/code&gt; et &lt;code&gt;pg_stat_database_blks_read&lt;/code&gt; : le nombre de blocs lu sur le disque (read) par rapport au nombre de bloc lu dans la mémoire tampon (hit).&lt;br&gt;Cela permet de détecter un éventuel manque de ressources pour la mémoire tampon (paramètre shared buffer).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;pg_stat_user_tables_n_dead_tup&lt;/code&gt; : le nombre de tuples mort (dead tuple).&lt;br&gt;Cela permet de surveiller le bon fonctionnement du processus de VACUUM.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Attention, Postgres Exporter se focalise sur une seule base de données et ne permet donc pas d&amp;rsquo;avoir certaines métriques en « multibase », sur l&amp;rsquo;instance complète (en fait si mais « c&amp;rsquo;est compliqué » et non recommandé). Il faudrait ainsi avoir plusieurs Postgres Exporter en parallèle, un pour chaque base d&amp;rsquo;une instance&amp;#8230; Je complèterai cet article lorsque j&amp;rsquo;aurai identifié une solution (sous peu j&amp;rsquo;espère)&amp;#8230;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;D&amp;rsquo;autres métriques sont intéressantes, notamment si vous avez mis en place de la réplication. Voici quelques ressources utiles :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Une liste détaillée de métriques : &lt;a href=&#34;https://www.datadoghq.com/blog/postgresql-monitoring&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.datadoghq.com/blog/postgresql-monitoring&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Une autre liste de métriques : &lt;a href=&#34;https://sysdig.com/blog/postgresql-monitoring/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://sysdig.com/blog/postgresql-monitoring/&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Des exemples de tableaux de bord : &lt;a href=&#34;https://promcat.io/apps/postgresql/latest&#34;&gt;https://promcat.io/apps/postgresql/latest&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Les tableau de bord préconstruits pour Grafana : &lt;a href=&#34;https://grafana.com/grafana/dashboards/?search=postgresql&#34;&gt;https://grafana.com/grafana/dashboards/?search=postgresql&lt;/a&gt;&lt;br&gt;On y trouve beaucoup d&amp;rsquo;exemples et de bonnes idées.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Retrouvez également quelques éléments dans l&amp;rsquo;article suivant :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-embed is-type-wp-embed is-provider-bazinga-039-s wp-block-embed-bazinga-039-s&#34;&gt;&lt;div class=&#34;wp-block-embed__wrapper&#34;&gt;&#xA;&lt;blockquote class=&#34;wp-embedded-content&#34; data-secret=&#34;2qLbf2cgdB&#34;&gt;&lt;a href=&#34;https://blog.arthurbazin.com/programmation/postgresql-vade-mecum-7&#34;&gt;PostgreSQL &amp;#8211; Vade-mecum SQL &amp;#8211; 7/8 &amp;#8211; Administration serveur&lt;/a&gt;&lt;/blockquote&gt;&lt;iframe loading=&#34;lazy&#34; class=&#34;wp-embedded-content&#34; sandbox=&#34;allow-scripts&#34; security=&#34;restricted&#34;  title=&#34;« PostgreSQL &amp;#8211; Vade-mecum SQL &amp;#8211; 7/8 &amp;#8211; Administration serveur » &amp;#8212; BazinGa&amp;#039;s&#34; src=&#34;https://blog.arthurbazin.com/programmation/postgresql-vade-mecum-7/embed#?secret=hIDLWEJ0Nz#?secret=2qLbf2cgdB&#34; data-secret=&#34;2qLbf2cgdB&#34; width=&#34;600&#34; height=&#34;338&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34;&gt;&lt;/iframe&gt;&#xA;&lt;/div&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour les serveurs Windows et Linux, cela dépendra également ce que vous faites avec ceux-ci. Voici ce que je surveille à minima :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;La charge CPU&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La consommation de mémoire RAM&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La consommation d&amp;rsquo;espace disque&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La quantité d&amp;rsquo;écriture et de lecture sur le disque et leur rapidité (i/o).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Eventuellement le nombre d&amp;rsquo;utilisateur connectés pour un Windows.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</content>
    <link href="https://blog.arthurbazin.com/it/monitorer-postgresql-avec-prometheus-et-grafana" rel="alternate"></link>
    <summary type="html">Monitorez votre instance PostgreSQL avec Postgres Exporter, Prometheus et Grafana.</summary>
    <author>
      <name>Arthur Bazin</name>
    </author>
  </entry>
  <entry>
    <title>Stockage physique, gestion des données et VACUUM</title>
    <updated>2024-02-03T13:32:02Z</updated>
    <id>tag:blog.arthurbazin.com,2024-02-03:/bdd/postgresql/stockage-physique-gestion-des-donnees-et-vacuum</id>
    <content type="html">&#xA;&lt;p&gt;En SIG, on oppose souvent le stockage sous forme de fichiers plats au stockage en base de données. Mais comment fait PostgreSQL pour stocker réellement les données ? Et bien il utilise des fichiers plats&amp;#8230; (le serpent se mort la queue). Nous allons donc démystifier un peu ce fonctionnement.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Autre question que j&amp;rsquo;ai pu avoir en lien avec le stockage : pourquoi après avoir fait du nettoyage dans une base de données, l&amp;rsquo;espace disque n&amp;rsquo;avait pas franchement diminué, y compris après avoir utilisé la commande &lt;code&gt;VACUUM&lt;/code&gt; ? Nous allons voir d&amp;rsquo;où provient ce comportement.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que je prendrais parfois quelques raccourcis pour pour simplifier les explications. Nous ne parlerons également que des tables et non des index.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Fonctions personnalisées&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour nous aider dans notre quête, nous allons avoir besoin d&amp;rsquo;extensions spécifiques et de fonctions créées pour l&amp;rsquo;occasion. Les voici, vous pourrez les décortiquer une fois que vous aurez lu l&amp;rsquo;article :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;extension&#34; data-enlighter-group=&#34;install&#34;&gt;-- Ajout des extensions&#xA;CREATE EXTENSION pgstattuple;&#xA;CREATE EXTENSION pageinspect;&#xA;CREATE EXTENSION pg_freespacemap;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;table_info()&#34; data-enlighter-group=&#34;install&#34;&gt;-- Fonction de récupération des informations sur les pages d&#39;une table&#xA;DROP FUNCTION IF EXISTS public.get_table_info(relname TEXT);&#xA;&#xA;CREATE OR REPLACE FUNCTION public.get_table_info(relname TEXT)&#xA;RETURNS TABLE(&#xA;  &#34;schema&#34; text,&#xA;  &#34;table&#34; text,&#xA;  &#34;tablespace&#34; text,&#xA;  oid_table oid,&#xA;  numero_heap_file oid,&#xA;  heap_file_segment_0_location text,&#xA;  nb_page bigint,&#xA;  tuple_count bigint,&#xA;  dead_tuple_count bigint,&#xA;  table_length bigint,&#xA;  table_length_human text,&#xA;  tuple_length bigint,&#xA;  tuple_percent numeric,&#xA;  dead_tuple_length bigint,&#xA;  dead_tuple_percent numeric,&#xA;  free_space_length bigint,&#xA;  free_space_percent numeric,&#xA;  max_frozen_txid xid,&#xA;  n_tup_ins bigint,&#xA;  n_tup_upd bigint,&#xA;  n_tup_del bigint,&#xA;  n_mod_since_analyze bigint,&#xA;  n_ins_since_vacuum bigint,&#xA;  last_vacuum timestamp with time zone, &#xA;  last_autovacuum timestamp with time zone, &#xA;  last_analyze timestamp with time zone,&#xA;  last_autoanalyze timestamp with time zone,&#xA;  toast_oid oid,&#xA;  toast_table text,&#xA;  toast_heap_file_segment_0_location text,&#xA;  toast_nb_page bigint,&#xA;  toast_nb_tuple bigint,&#xA;  toast_length bigint,&#xA;  toast_length_human text&#xA;)&#xA;AS $function$&#xA;/*&#xA; * FUNCTION table_info(relname TEXT)&#xA; * Renvoi différentes informations sur une table et son stockage&#xA; * &#xA; * PARAMETERS&#xA; *  relname TEXT : objet à analyser au choix :&#xA; *    - &#39;schema.Table&#39; : pour analyser une table en particulier.&#xA; *    - &#39;schema&#39; : pour analyser toutes les tables d&#39;un schéma.&#xA; *    Les noms d&#39;objet n&#39;ont pas besoin d&#39;être quotés.&#xA; * &#xA; */&#xA;DECLARE &#xA;  var_requete TEXT;&#xA;  schemaname TEXT;&#xA;  table_schema record;&#xA;  schema_check boolean DEFAULT FALSE;&#xA;  where_clause TEXT;&#xA;&#xA;BEGIN&#xA;  &#xA;  -- Nettoyage du nom d&#39;objet&#xA;  relname := replace(relname, &#39;&#34;&#39;, &#39;&#39;);&#xA;  &#xA;&#xA;&#xA;  -- L&#39;analyse porte-elle sur un schéma ?&#xA;  var_requete := &#xA;    $a$SELECT &#xA;      TRUE&#xA;    FROM &#xA;      information_schema.schemata&#xA;    WHERE &#xA;      schema_name = $a$ || quote_literal(relname)&#xA;  ;&#xA;&#xA;  EXECUTE &#xA;    var_requete&#xA;  INTO &#xA;    schema_check&#xA;  ;&#xA;  &#xA;&#xA;  &#xA;  -- Action selon si schema/table&#xA;  IF schema_check THEN&#xA;  &#xA;    RAISE NOTICE USING message = &#39;ANALYZE for schema&#39;;&#xA;    &#xA;    -- Clause de récupération des données d&#39;un schéma&#xA;    where_clause := &#xA;      $a$pgc.relnamespace = $a$ || quote_literal(relname) || $a$::regnamespace $a$&#xA;    ;&#xA;  &#xA;    -- Boucle sur toutes les tables d&#39;un schema&#xA;    var_requete := &#xA;      $a$SELECT&#xA;        pgc.relname::TEXT AS &#34;table&#34;&#xA;      FROM&#xA;        pg_class AS pgc&#xA;      WHERE &#xA;        $a$ || where_clause&#xA;    ;&#xA;  &#xA;    --RAISE NOTICE USING MESSAGE = var_requete;&#xA;  &#xA;    FOR table_schema IN EXECUTE var_requete&#xA;        &#xA;    LOOP&#xA;      &#xA;      var_requete := &#xA;        $a$ANALYZE $a$ || quote_ident(relname) || &#39;.&#39; || quote_ident(table_schema.&#34;table&#34;)&#xA;      ;&#xA;      &#xA;      --RAISE NOTICE USING MESSAGE = var_requete;&#xA;&#xA;        -- Analyse de la table&#xA;      EXECUTE &#xA;        var_requete&#xA;      ;&#xA;      &#xA;      &#xA;    END LOOP;&#xA;    &#xA;  &#xA;  ELSE &#xA;  &#xA;    RAISE NOTICE USING message = &#39;ANALYZE for table&#39;;&#xA;  &#xA;    -- Quotation du schema.table&#xA;    relname := &#xA;      quote_ident((regexp_match(relname, &#39;(.*)\..+&#39;))[1]) || &#xA;      &#39;.&#39; || &#xA;      quote_ident((regexp_match(relname, &#39;.*\.(.+)&#39;))[1])&#xA;    ;&#xA;  &#xA;    -- Clause de récuépration d&#39;une table&#xA;    where_clause :=&#xA;      $a$pgc.oid = $a$ || quote_literal(relname) || $a$::regclass $a$&#xA;    ;&#xA;&#xA;    -- Analyse de la table&#xA;    EXECUTE &#xA;      $a$ANALYZE $a$ || relname&#xA;    ;&#xA;  &#xA;  END IF;&#xA;&#xA;&#xA;  &#xA;  -- Renvoi des statistiques&#xA;  var_requete := &#xA;    $a$SELECT &#xA;      pgc.relnamespace::regnamespace::text AS &#34;schema&#34;,&#xA;      pgc.relname::text AS &#34;table&#34;,&#xA;      COALESCE (pgt.spcname, &#39;pg_default&#39;)::TEXT AS &#34;tablespace&#34;,&#xA;      pgc.oid AS oid_table,&#xA;      pg_relation_filenode(pgc.oid) AS numero_heap_file,&#xA;      current_setting(&#39;data_directory&#39;) || &#39;/&#39; || pg_relation_filepath(pgc.oid) AS &#34;heap_file_segment_0_location&#34;,&#xA;      pgc.relpages::int AS nb_page,&#xA;      pst.tuple_count::bigint,&#xA;      pst.dead_tuple_count::bigint,&#xA;      pst.table_len::bigint AS table_length,&#xA;      pg_size_pretty(pst.table_len) AS table_length_human,&#xA;      pst.tuple_len::bigint AS tuple_length,&#xA;      pst.tuple_percent::numeric,&#xA;      pst.dead_tuple_len::bigint AS dead_tuple_length,&#xA;      pst.dead_tuple_percent::numeric,&#xA;      pst.free_space::bigint AS free_space_length,&#xA;      pst.free_percent::NUMERIC AS free_space_percent,&#xA;      pgc.relfrozenxid AS max_frozen_txid,&#xA;      psut.n_tup_ins::bigint,&#xA;      psut.n_tup_upd::bigint,&#xA;      psut.n_tup_del::bigint,&#xA;      psut.n_mod_since_analyze::bigint,&#xA;      psut.n_ins_since_vacuum::bigint,&#xA;      psut.last_vacuum, &#xA;      psut.last_autovacuum, &#xA;      psut.last_analyze,&#xA;      psut.last_autoanalyze,&#xA;      pgc.reltoastrelid AS toast_oid,&#xA;      pgct.relname::text AS toast_table,&#xA;      current_setting(&#39;data_directory&#39;) || &#39;/&#39; || pg_relation_filepath(pgct.oid) AS &#34;toast_heap_file_segment_0_location&#34;,&#xA;      pgct.relpages::int AS toast_nb_page,&#xA;      pgct.reltuples::int AS toast_nb_tuple,&#xA;      pg_relation_size(pgc.reltoastrelid)::bigint AS toast_length,&#xA;      pg_size_pretty(pg_relation_size(pgc.reltoastrelid))::text AS toast_length_human&#xA;    FROM &#xA;      pg_class AS pgc&#xA;    LEFT JOIN &#xA;      pg_tablespace AS pgt &#xA;      ON pgt.oid = pgc.reltablespace &#xA;    LEFT JOIN &#xA;      pg_class AS pgct &#xA;      ON pgct.oid = pgc.reltoastrelid&#xA;    LEFT JOIN&#xA;      pg_stat_user_tables AS psut&#xA;      ON psut.relid = pgc.oid&#xA;    LEFT JOIN LATERAL&#xA;      pgstattuple(pgc.oid::regclass::text) AS pst&#xA;      ON TRUE&#xA;    WHERE &#xA;      $a$ || where_clause&#xA;    ;&#xA;  &#xA;    --RAISE NOTICE USING MESSAGE = var_requete;&#xA;    &#xA;    RETURN QUERY EXECUTE &#xA;      var_requete&#xA;    ;&#xA;&#xA;    RETURN;&#xA;END&#xA;$function$&#xA;LANGUAGE PLPGSQL&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;table_info() (PG &lt; 12)&#34; data-enlighter-group=&#34;install&#34;&gt;-- Fonction de récupération des informations sur les pages d&#39;une table&#xA;DROP FUNCTION IF EXISTS public.get_table_info(relname TEXT);&#xA;&#xA;CREATE OR REPLACE FUNCTION public.get_table_info(relname TEXT)&#xA;RETURNS TABLE(&#xA;  &#34;schema&#34; text,&#xA;  &#34;table&#34; text,&#xA;  &#34;tablespace&#34; text,&#xA;  oid_table oid,&#xA;  numero_heap_file oid,&#xA;  heap_file_segment_0_location text,&#xA;  nb_page bigint,&#xA;  tuple_count bigint,&#xA;  dead_tuple_count bigint,&#xA;  table_length bigint,&#xA;  table_length_human text,&#xA;  tuple_length bigint,&#xA;  tuple_percent numeric,&#xA;  dead_tuple_length bigint,&#xA;  dead_tuple_percent numeric,&#xA;  free_space_length bigint,&#xA;  free_space_percent numeric,&#xA;  max_frozen_txid xid,&#xA;  n_tup_ins bigint,&#xA;  n_tup_upd bigint,&#xA;  n_tup_del bigint,&#xA;  n_mod_since_analyze bigint,&#xA;  last_vacuum timestamp with time zone, &#xA;  last_autovacuum timestamp with time zone, &#xA;  last_analyze timestamp with time zone,&#xA;  last_autoanalyze timestamp with time zone,&#xA;  toast_oid oid,&#xA;  toast_table text,&#xA;  toast_heap_file_segment_0_location text,&#xA;  toast_nb_page bigint,&#xA;  toast_nb_tuple bigint,&#xA;  toast_length bigint,&#xA;  toast_length_human text&#xA;)&#xA;AS $function$&#xA;/*&#xA; * FUNCTION table_info(relname TEXT)&#xA; * Renvoi différentes informations sur une table et son stockage&#xA; * &#xA; * PARAMETERS&#xA; *  relname TEXT : objet à analyser au choix :&#xA; *    - &#39;schema.Table&#39; : pour analyser une table en particulier.&#xA; *    - &#39;schema&#39; : pour analyser toutes les tables d&#39;un schéma.&#xA; *    Les noms d&#39;objet n&#39;ont pas besoin d&#39;être quotés.&#xA; * &#xA; */&#xA;DECLARE &#xA;  var_requete TEXT;&#xA;  schemaname TEXT;&#xA;  table_schema record;&#xA;  schema_check boolean DEFAULT FALSE;&#xA;  where_clause TEXT;&#xA;&#xA;BEGIN&#xA;  &#xA;  -- Nettoyage du nom d&#39;objet&#xA;  relname := replace(relname, &#39;&#34;&#39;, &#39;&#39;);&#xA;  &#xA;&#xA;&#xA;  -- L&#39;analyse porte-elle sur un schéma ?&#xA;  var_requete := &#xA;    $a$SELECT &#xA;      TRUE&#xA;    FROM &#xA;      information_schema.schemata&#xA;    WHERE &#xA;      schema_name = $a$ || quote_literal(relname)&#xA;  ;&#xA;&#xA;  EXECUTE &#xA;    var_requete&#xA;  INTO &#xA;    schema_check&#xA;  ;&#xA;  &#xA;&#xA;  &#xA;  -- Action selon si schema/table&#xA;  IF schema_check THEN&#xA;  &#xA;    RAISE NOTICE USING message = &#39;ANALYZE for schema&#39;;&#xA;    &#xA;    -- Clause de récupération des données d&#39;un schéma&#xA;    where_clause := &#xA;      $a$pgc.relnamespace = $a$ || quote_literal(relname) || $a$::regnamespace $a$&#xA;    ;&#xA;  &#xA;    -- Boucle sur toutes les tables d&#39;un schema&#xA;    var_requete := &#xA;      $a$SELECT&#xA;        pgc.relname::TEXT AS &#34;table&#34;&#xA;      FROM&#xA;        pg_class AS pgc&#xA;      WHERE &#xA;        $a$ || where_clause&#xA;    ;&#xA;  &#xA;    --RAISE NOTICE USING MESSAGE = var_requete;&#xA;  &#xA;    FOR table_schema IN EXECUTE var_requete&#xA;        &#xA;    LOOP&#xA;      &#xA;      var_requete := &#xA;        $a$ANALYZE $a$ || quote_ident(relname) || &#39;.&#39; || quote_ident(table_schema.&#34;table&#34;)&#xA;      ;&#xA;      &#xA;      --RAISE NOTICE USING MESSAGE = var_requete;&#xA;&#xA;        -- Analyse de la table&#xA;      EXECUTE &#xA;        var_requete&#xA;      ;&#xA;      &#xA;      &#xA;    END LOOP;&#xA;    &#xA;  &#xA;  ELSE &#xA;  &#xA;    RAISE NOTICE USING message = &#39;ANALYZE for table&#39;;&#xA;  &#xA;    -- Quotation du schema.table&#xA;    relname := &#xA;      quote_ident((regexp_match(relname, &#39;(.*)\..+&#39;))[1]) || &#xA;      &#39;.&#39; || &#xA;      quote_ident((regexp_match(relname, &#39;.*\.(.+)&#39;))[1])&#xA;    ;&#xA;  &#xA;    -- Clause de récuépration d&#39;une table&#xA;    where_clause :=&#xA;      $a$pgc.oid = $a$ || quote_literal(relname) || $a$::regclass $a$&#xA;    ;&#xA;&#xA;    -- Analyse de la table&#xA;    EXECUTE &#xA;      $a$ANALYZE $a$ || relname&#xA;    ;&#xA;  &#xA;  END IF;&#xA;&#xA;&#xA;  &#xA;  -- Renvoi des statistiques&#xA;  var_requete := &#xA;    $a$SELECT &#xA;      pgc.relnamespace::regnamespace::text AS &#34;schema&#34;,&#xA;      pgc.relname::text AS &#34;table&#34;,&#xA;      COALESCE (pgt.spcname, &#39;pg_default&#39;)::TEXT AS &#34;tablespace&#34;,&#xA;      pgc.oid AS oid_table,&#xA;      pg_relation_filenode(pgc.oid) AS numero_heap_file,&#xA;      current_setting(&#39;data_directory&#39;) || &#39;/&#39; || pg_relation_filepath(pgc.oid) AS &#34;heap_file_segment_0_location&#34;,&#xA;      pgc.relpages::int AS nb_page,&#xA;      pst.tuple_count::bigint,&#xA;      pst.dead_tuple_count::bigint,&#xA;      pst.table_len::bigint AS table_length,&#xA;      pg_size_pretty(pst.table_len) AS table_length_human,&#xA;      pst.tuple_len::bigint AS tuple_length,&#xA;      pst.tuple_percent::numeric,&#xA;      pst.dead_tuple_len::bigint AS dead_tuple_length,&#xA;      pst.dead_tuple_percent::numeric,&#xA;      pst.free_space::bigint AS free_space_length,&#xA;      pst.free_percent::NUMERIC AS free_space_percent,&#xA;      pgc.relfrozenxid AS max_frozen_txid,&#xA;      psut.n_tup_ins::bigint,&#xA;      psut.n_tup_upd::bigint,&#xA;      psut.n_tup_del::bigint,&#xA;      psut.n_mod_since_analyze::bigint,&#xA;      psut.last_vacuum, &#xA;      psut.last_autovacuum, &#xA;      psut.last_analyze,&#xA;      psut.last_autoanalyze,&#xA;      pgc.reltoastrelid AS toast_oid,&#xA;      pgct.relname::text AS toast_table,&#xA;      current_setting(&#39;data_directory&#39;) || &#39;/&#39; || pg_relation_filepath(pgct.oid) AS &#34;toast_heap_file_segment_0_location&#34;,&#xA;      pgct.relpages::int AS toast_nb_page,&#xA;      pgct.reltuples::int AS toast_nb_tuple,&#xA;      pg_relation_size(pgc.reltoastrelid)::bigint AS toast_length,&#xA;      pg_size_pretty(pg_relation_size(pgc.reltoastrelid))::text AS toast_length_human&#xA;    FROM &#xA;      pg_class AS pgc&#xA;    LEFT JOIN &#xA;      pg_tablespace AS pgt &#xA;      ON pgt.oid = pgc.reltablespace &#xA;    LEFT JOIN &#xA;      pg_class AS pgct &#xA;      ON pgct.oid = pgc.reltoastrelid&#xA;    LEFT JOIN&#xA;      pg_stat_user_tables AS psut&#xA;      ON psut.relid = pgc.oid&#xA;    LEFT JOIN LATERAL&#xA;      pgstattuple(pgc.oid::regclass::text) AS pst&#xA;      ON TRUE&#xA;    WHERE &#xA;      $a$ || where_clause&#xA;    ;&#xA;  &#xA;    --RAISE NOTICE USING MESSAGE = var_requete;&#xA;    &#xA;    RETURN QUERY EXECUTE &#xA;      var_requete&#xA;    ;&#xA;&#xA;    RETURN;&#xA;END&#xA;$function$&#xA;LANGUAGE PLPGSQL&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;heap_page_info()&#34; data-enlighter-group=&#34;install&#34;&gt;-- Fonction de récupération des informations sur les pages d&#39;une table&#xA;DROP FUNCTION IF EXISTS public.get_heap_page_info(relname TEXT, page_number INT);&#xA;&#xA;CREATE OR REPLACE FUNCTION public.get_heap_page_info(relname TEXT, page_number INT DEFAULT -1)&#xA;RETURNS TABLE(&#xA;  page_num int,&#xA;  lsn pg_lsn, &#xA;  nb_pointer int,&#xA;  nb_tuple int,&#xA;  nb_tuple_visible int,&#xA;  length_header int,&#xA;  length_pointer int,&#xA;  length_free_space int,&#xA;  length_tuple int,&#xA;  length_meta int,&#xA;  length_data int,&#xA;  length_empty int,&#xA;  length_special int,&#xA;  offset_pointer int,&#xA;  offset_free_space int,&#xA;  offset_data int,&#xA;  offset_special int,&#xA;  offset_page_end int,&#xA;  unused_line_pointer bool,&#xA;  no_free_space bool,&#xA;  all_visible bool&#xA;)&#xA;AS $function$&#xA;/*&#xA; * FUNCTION heap_page_info(relname TEXT, page_number INT)&#xA; * Renvoi différentes informations sur les pages d&#39;une table&#xA; * &#xA; * PARAMETERS&#xA; *  relname TEXT : table à analyser préfixée par son schéma.&#xA; *    Les noms d&#39;objet n&#39;ont pas besoin d&#39;être quotés.&#xA; *  page_number INT : (facultatif) numéro de page à analyser.&#xA; *    Sans ce paramètre, toutes les pages sont remontées&#xA; * &#xA; */&#xA;BEGIN&#xA;  -- Quotation du schema.table&#xA;  relname := replace(relname, &#39;&#34;&#39;, &#39;&#39;);&#xA;  relname := &#xA;    quote_ident((regexp_match(relname, &#39;(.*)\..+&#39;))[1]) || &#xA;    &#39;.&#39; || &#xA;    quote_ident((regexp_match(relname, &#39;.*\.(.+)&#39;))[1])&#xA;  ;&#xA;  &#xA;  &#xA;  -- Analyse de la table&#xA;  EXECUTE &#xA;    $a$ANALYZE $a$ || relname ;&#xA;&#xA;&#xA;  &#xA;  -- Renvoi des statistiques&#xA;  RETURN QUERY EXECUTE &#xA;    $a$SELECT&#xA;      pages.page_num,&#xA;      -- Identifiant xlog de la dernière opération effectuée sur la page.&#xA;      ph.lsn,&#xA;      tm.count_pointer::int AS nb_pointer,&#xA;      tm.count_tuple::int AS nb_tuple,&#xA;      tm.count_tuple_visible::int AS nb_tuple_visible,&#xA;      24::int AS length_header,&#xA;      (ph.lower - 24)::int AS length_pointer,&#xA;      (ph.upper - ph.lower)::int AS length_free_space,&#xA;      (ph.special - ph.upper)::int AS length_tuple,&#xA;      (tm.length_meta)::int,&#xA;      (tm.length_data)::int,&#xA;      (tm.length_empty)::int,&#xA;      (ph.pagesize - ph.special)::int AS length_special,&#xA;      24::int AS offset_pointer,&#xA;      (ph.lower)::int AS offset_free_space,&#xA;      (ph.upper)::int AS offset_data,&#xA;      (ph.special)::int AS offset_special,&#xA;      (ph.pagesize)::int AS offset_page_end,&#xA;      CASE &#xA;        WHEN (ph.flags::int::bit(16) &amp;amp; x&#39;0001&#39;) = (x&#39;0001&#39;)&#xA;          THEN TRUE&#xA;        ELSE FALSE&#xA;      END AS unused_line_pointer,&#xA;      CASE &#xA;        WHEN (ph.flags::int::bit(16) &amp;amp; x&#39;0002&#39;) = (x&#39;0002&#39;)&#xA;          THEN TRUE&#xA;        ELSE FALSE&#xA;      END AS no_free_space,&#xA;      CASE &#xA;        WHEN (ph.flags::int::bit(16) &amp;amp; x&#39;0004&#39;) = (x&#39;0004&#39;)&#xA;          THEN TRUE&#xA;        ELSE FALSE&#xA;      END AS all_visible&#xA;    FROM &#xA;      pg_catalog.pg_class AS pgc&#xA;    LEFT JOIN LATERAL &#xA;        generate_series(0, pgc.relpages - 1) AS pages(page_num)&#xA;        ON TRUE&#xA;    LEFT JOIN LATERAL&#xA;        page_header(&#xA;          get_raw_page(pgc.oid::regclass::text, pages.page_num)&#xA;        ) AS ph&#xA;        ON TRUE&#xA;    LEFT JOIN LATERAL (&#xA;        SELECT&#xA;          -- Nombre de pointeur&#xA;          count(1) AS count_pointer,&#xA;          -- Nombre de tuples&#xA;          count(&#xA;            CASE &#xA;              WHEN hpi.lp_len &gt; 0 THEN 1&#xA;            END&#xA;          ) AS count_tuple,&#xA;          -- Nombre de tuples visibles&#xA;          count(&#xA;            CASE &#xA;              WHEN (t_infomask::int::bit(16) &amp;amp; x&#39;0F00&#39;) = (x&#39;0100&#39;)  &#xA;              OR   (t_infomask::int::bit(16) &amp;amp; x&#39;0F00&#39;) = (x&#39;0100&#39; | x&#39;0800&#39;)&#xA;              OR   (t_infomask::int::bit(16) &amp;amp; x&#39;0F00&#39;) = (x&#39;0100&#39; | x&#39;0200&#39; | x&#39;0800&#39;)&#xA;                THEN 1&#xA;            END&#xA;          ) AS count_tuple_visible,&#xA;          -- Longueur des métadonnées&#xA;          sum(hpi.t_hoff::int) AS length_meta,&#xA;          -- Longueur des données&#xA;          sum((hpi.lp_len - hpi.t_hoff)::int) AS length_data,&#xA;          -- Longueur des espaces vides&#xA;          sum(((ceil((hpi.lp_off + hpi.lp_len)::numeric / 8) * 8) - (hpi.lp_off + hpi.lp_len))::int) AS length_empty&#xA;        FROM&#xA;          heap_page_items(&#xA;            get_raw_page(pgc.oid::regclass::text, pages.page_num)&#xA;          ) AS hpi &#xA;        ) AS tm&#xA;        ON TRUE&#xA;    WHERE &#xA;      pgc.oid = $a$ || quote_literal(relname) || $a$::regclass &#xA;    AND (&#xA;      (&#xA;        $a$ || page_number || $a$ &amp;lt;&gt; -1&#xA;        AND&#xA;        $a$ || page_number || $a$ = pages.page_num&#xA;      )OR &#xA;      $a$ || page_number || $a$ = - 1&#xA;    ) $a$&#xA;    ;&#xA;&#xA;    RETURN;&#xA;END&#xA;$function$&#xA;LANGUAGE PLPGSQL&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;heap_tuple_info()&#34; data-enlighter-group=&#34;install&#34;&gt;-- Fonction de récupération des informations sur les tuples&#xA;DROP FUNCTION IF EXISTS public.get_heap_tuple_info(relname text);&#xA;&#xA;CREATE OR REPLACE FUNCTION public.get_heap_tuple_info(relname TEXT, page_number INT DEFAULT -1)&#xA;RETURNS TABLE(&#xA;  ctid tid, &#xA;  page_num int,&#xA;  page_index int, &#xA;  offset_start int,&#xA;  offset_end int,&#xA;  offset_next int,&#xA;  length_tuple int,&#xA;  length_meta int,&#xA;  length_data int,&#xA;  length_empty int,&#xA;  xmin text, &#xA;  xmax text, &#xA;  state text,&#xA;  visible bool,&#xA;  &#34;update&#34; bool,&#xA;  direction text,&#xA;  hot bool,&#xA;  &#34;delete&#34; bool, &#xA;  &#34;freeze&#34; bool,&#xA;  info text[]&#xA;)&#xA;AS $function$&#xA;/*&#xA; * FUNCTION heap_tuple_info(relname TEXT, page_number INT)&#xA; * Renvoi différentes informations sur les tuples présents dans les pages d&#39;une table&#xA; * &#xA; * PARAMETERS&#xA; *  relname TEXT : table à analyser préfixée par son schéma.&#xA; *    Les noms d&#39;objet n&#39;ont pas besoin d&#39;être quotés.&#xA; *  page_number INT : (facultatif) numéro de page à analyser.&#xA; *    Sans ce paramètre, tous les tuples de toutes les pages sont remontés&#xA; * &#xA; */&#xA;BEGIN&#xA;  -- Quotation du schema.table&#xA;  relname := replace(relname, &#39;&#34;&#39;, &#39;&#39;);&#xA;  relname := &#xA;    quote_ident((regexp_match(relname, &#39;(.*)\..+&#39;))[1]) || &#xA;    &#39;.&#39; || &#xA;    quote_ident((regexp_match(relname, &#39;.*\.(.+)&#39;))[1])&#xA;  ;&#xA;  &#xA;  -- Analyse de la table&#xA;  EXECUTE &#xA;    $a$ANALYZE $a$ || relname ;&#xA;  &#xA;&#xA;  &#xA;  -- Renvoi des statistiques&#xA;  RETURN QUERY EXECUTE &#xA;    $a$SELECT&#xA;      -- Indentifiant du tuple&#xA;      hpi.t_ctid AS ctid,&#xA;      -- Numéro de page&#xA;      pages.page_num,&#xA;      -- Index dans la page&#xA;      hpi.lp::int AS page_index,&#xA;      -- Début du tuple dans la page&#xA;      hpi.lp_off::int AS offset_start,&#xA;      -- Fin du tuple dans la page&#xA;      (hpi.lp_off + hpi.lp_len)::int AS offset_end,&#xA;      -- Début du tuple suivant dans la page&#xA;      (ceil((hpi.lp_off + hpi.lp_len)::numeric / 8) * 8)::int AS offset_next,&#xA;      -- Longueur du tuple&#xA;      hpi.lp_len::int AS length_tuple,&#xA;      -- Longueur des métadonnées&#xA;      hpi.t_hoff::int AS length_meta,&#xA;      -- Longueur des données&#xA;      (hpi.lp_len - hpi.t_hoff)::int AS length_data,&#xA;      -- Longueur de l&#39;espacement avant le tuple suivant&#xA;      ((ceil((hpi.lp_off + hpi.lp_len)::numeric / 8) * 8) - (hpi.lp_off + hpi.lp_len))::int AS length_empty,&#xA;      -- ID de transaction de début de vie&#xA;      --    c : transaction commitée&#xA;      --    a : transaction annulée&#xA;      concat(&#xA;        hpi.t_xmin,&#xA;        CASE &#xA;          WHEN ((t_infomask::int::bit(16) &amp;amp; x&#39;0F00&#39;) &amp;amp; (x&#39;0100&#39; | x&#39;0200&#39;)) = (x&#39;0100&#39; | x&#39;0200&#39;) THEN &#39; - f&#39;&#xA;          WHEN (t_infomask::int::bit(16) &amp;amp; x&#39;0100&#39;) = x&#39;0100&#39; THEN &#39; - c&#39;&#xA;          WHEN (t_infomask::int::bit(16) &amp;amp; x&#39;0200&#39;) = x&#39;0200&#39; THEN &#39; - a&#39;&#xA;        END&#xA;      ) AS xmin,&#xA;      -- ID de transaction de fin de vie&#xA;      --    c : transaction commitée&#xA;      --    a : transaction annulée&#xA;      NULLIF(&#xA;        concat(&#xA;          hpi.t_xmax,&#xA;          CASE &#xA;            WHEN (t_infomask::int::bit(16) &amp;amp; x&#39;0400&#39;) = x&#39;0400&#39; THEN &#39; - c&#39;&#xA;            WHEN (t_infomask::int::bit(16) &amp;amp; x&#39;0800&#39;) = x&#39;0800&#39; THEN &#39; - a&#39;&#xA;          END&#xA;        ),&#xA;        &#39;0 - a&#39;&#xA;      ) AS xmax,&#xA;      -- Etat de la ligne&#xA;      CASE lp_flags&#xA;        WHEN 0 THEN &#39;unused&#39;&#xA;        WHEN 1 THEN &#39;normal&#39;&#xA;        WHEN 2 THEN &#39;redirect to &#39;||lp_off&#xA;        WHEN 3 THEN &#39;dead&#39;&#xA;      END AS state,&#xA;      -- Visibilité actuelle du tuple&#xA;      CASE &#xA;        WHEN (t_infomask::int::bit(16) &amp;amp; x&#39;0F00&#39;) = (x&#39;0100&#39;)  &#xA;        OR   (t_infomask::int::bit(16) &amp;amp; x&#39;0F00&#39;) = (x&#39;0100&#39; | x&#39;0800&#39;)&#xA;          THEN TRUE&#xA;        WHEN (t_infomask::int::bit(16) &amp;amp; x&#39;0F00&#39;) = (x&#39;0200&#39;) &#xA;        OR   (t_infomask::int::bit(16) &amp;amp; x&#39;0F00&#39;) = (x&#39;0100&#39; | x&#39;0200&#39; | x&#39;0800&#39;)  &#xA;        OR   (t_infomask::int::bit(16) &amp;amp; x&#39;0F00&#39;) = (x&#39;0000&#39;) &#xA;        OR   (t_infomask::int::bit(16) &amp;amp; x&#39;0F00&#39;) = (x&#39;0100&#39; | x&#39;0400&#39;) &#xA;          THEN FALSE&#xA;        ELSE FALSE&#xA;      END AS visible,&#xA;      -- Tuple concerné par un UPDATE&#xA;      CASE &#xA;        WHEN (t_infomask::int::bit(16) &amp;amp; x&#39;F000&#39;) = (x&#39;2000&#39;)&#xA;        OR t_infomask IS NULL &#xA;        OR ((t_infomask2::int::bit(16) &amp;amp; x&#39;F000&#39;) &amp;amp; (x&#39;4000&#39;)) = (x&#39;4000&#39;)&#xA;        OR ((t_infomask::int::bit(16) &amp;amp; x&#39;0F00&#39;) = (x&#39;0100&#39; | x&#39;0400&#39;) AND NOT (t_infomask2::int::bit(16) &amp;amp; x&#39;F000&#39;) = (x&#39;2000&#39;))&#xA;          THEN TRUE&#xA;        ELSE FALSE&#xA;      END AS &#34;update&#34;,&#xA;      -- Si concerné par un UPDATE, tuple initial (to) ou final (from)&#xA;      NULLIF(&#xA;        concat_ws(&#xA;          &#39; and &#39;,&#xA;          CASE &#xA;            WHEN (t_infomask::int::bit(16) &amp;amp; x&#39;F000&#39;) = (x&#39;2000&#39;)&#xA;              THEN &#39;from&#39;&#xA;          END,&#xA;          CASE &#xA;            WHEN t_infomask IS NULL &#xA;            OR ((t_infomask2::int::bit(16) &amp;amp; x&#39;F000&#39;) &amp;amp; (x&#39;4000&#39;)) = (x&#39;4000&#39;)&#xA;              THEN &#39;to&#39;&#xA;          END&#xA;        ),&#xA;        &#39;&#39;&#xA;      ) || &#39; another line&#39; AS direction,&#xA;      -- Tuple hot updated &#xA;      --    le tuple actuel et son ancienne version sont sur la même page&#xA;      CASE &#xA;        WHEN (t_infomask2::int::bit(16) &amp;amp; x&#39;F000&#39;) = (x&#39;4000&#39;)&#xA;        OR (t_infomask2::int::bit(16) &amp;amp; x&#39;F000&#39;) = (x&#39;8000&#39;)&#xA;        OR (t_infomask2::int::bit(16) &amp;amp; x&#39;F000&#39;) = (x&#39;4000&#39; | x&#39;8000&#39;)&#xA;          THEN TRUE&#xA;        ELSE FALSE&#xA;      END AS hot,&#xA;      -- Tuple supprimé (ou attribut clé mis à jour)&#xA;      CASE &#xA;        WHEN ((t_infomask2::int::bit(16) &amp;amp; x&#39;F000&#39;) &amp;amp; (x&#39;2000&#39;)) = (x&#39;2000&#39;)&#xA;          THEN TRUE &#xA;        ELSE FALSE&#xA;      END AS &#34;delete&#34;,&#xA;      -- Identifiant de transaction xmin gelé&#xA;      CASE &#xA;        WHEN ((t_infomask::int::bit(16) &amp;amp; x&#39;0F00&#39;) &amp;amp; (x&#39;0100&#39; | x&#39;0200&#39;)) = (x&#39;0100&#39; | x&#39;0200&#39;)&#xA;          THEN TRUE&#xA;        ELSE FALSE &#xA;      END AS &#34;freeze&#34;,&#xA;      -- Drapeaux d&#39;information&#xA;      ARRAY(&#xA;        SELECT&#xA;          array_to_string(&#xA;            regexp_matches(&#xA;              heap_tuple_infomask_flags(t_infomask, t_infomask2)::TEXT,&#xA;              &#39;[A-Za-z0-9_\-]+&#39;,&#xA;              &#39;g&#39;&#xA;            ),&#xA;            &#39;&#39;&#xA;          )&#xA;      )::text[] AS info&#xA;    FROM &#xA;      pg_catalog.pg_class AS pgc,&#xA;      LATERAL &#xA;        generate_series(0, pgc.relpages - 1) AS pages(page_num),&#xA;      LATERAL&#xA;        heap_page_items(&#xA;          get_raw_page(pgc.oid::regclass::text, pages.page_num)&#xA;        ) AS hpi&#xA;    WHERE &#xA;      pgc.oid = $a$ || quote_literal(relname) || $a$::regclass &#xA;    AND (&#xA;      (&#xA;        $a$ || page_number || $a$ &amp;lt;&gt; -1&#xA;        AND&#xA;        $a$ || page_number || $a$ = pages.page_num&#xA;      )OR &#xA;      $a$ || page_number || $a$ = - 1&#xA;    ) $a$&#xA;    ;&#xA;&#xA;    RETURN;&#xA;END&#xA;$function$&#xA;LANGUAGE PLPGSQL&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Stockage physique&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Côté base, les données sont structurées de la façon suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Base de données&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Schéma&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Table&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Ligne&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Attribut&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Mais dans le système de fichiers, les données sont structurées différemment :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Un répertoire racine par tablespace.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Un répertoire par base de données.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Des fichiers spécifiques pour chaque table.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Tablespace&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le lien entre les données et le système de fichier se matérialise en base via le tablespace. Cet objet permet aux administrateurs de définir l&amp;#8217;emplacement des données. Par défaut deux tablespaces existent et pointent vers le répertoire &lt;code&gt;$PGDATA/base&lt;/code&gt; du répertoire (sur Windows, il s&amp;rsquo;agit par défaut de « C:\Program Files\PostgreSQL\16\data\base »). Il s&amp;rsquo;se nomment :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;pg_default&lt;/code&gt; : emplacement de stockage par défaut.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;pg_global&lt;/code&gt; : emplacement de stockage des objets contenant le &lt;a href=&#34;https://www.postgresql.org/docs/current/catalogs.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;catalogue système&lt;/a&gt; (données sur le cluster).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il est possible créer un nouveau tablespace pour stocker des données sur un stockage spécifique (un disque dur plus rapide par exemple) :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;CREATE TABLESPACE pgraster_data&#xA;&#x9;OWNER postgres&#xA;&#x9;LOCATION &#39;C:\mon_repertoire\de_stockage&#39;&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Un tablespace est lié à une instance PostgreSQL et ne peut pas être ouvert par une instance autre que celle qui l&amp;rsquo;a créée.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Un tablespace non trouvable (défaillance du disque dur, déplacement&amp;#8230;) peut empêcher le démarrage de l&amp;rsquo;instance PostgreSQL.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;un tablespace peut être utilisé par n&amp;rsquo;importe qu&amp;rsquo;elle base de donnée de l&amp;rsquo;instance à laquelle il appartient.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;un tablespace ne peut être supprimé tant qu&amp;rsquo;un objet est stocké dedans.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Lorsque vous créez un tablespace, un lien symbolique est créé dans le répertoire &lt;code&gt;$PGDATE/pg_tblspc&lt;/code&gt; et pointe vers le répertoire définit pour stocker les données du tablespace.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez lister les différents tablespaces ainsi que leurs emplacements de stockage grâce à la commande suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT &#xA;  pt.spcname AS nom,&#xA;  pa.rolname AS proprietaire,&#xA;  pg_tablespace_location(pt.oid) AS emplacement,&#xA;  pg_size_pretty(pg_tablespace_size(pt.oid)) AS poids&#xA;FROM &#xA;  pg_tablespace AS pt&#xA;LEFT JOIN&#xA;  pg_authid AS pa&#xA;  ON pa.oid = pt.spcowner&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Fichiers&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Dans le système de fichier, les données sont stockées dans le répertoire du tablespace et s&amp;rsquo;organise assez simplement : &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Un répertoire par base de données, dont le nom correspond à l&amp;rsquo;OID de la base au sein de l&amp;rsquo;instance PostgreSQL.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Un ensemble de fichiers par table.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour chaque table il existe un ou plusieurs fichiers dont le nom débute toujours par un numéro nommé &lt;em&gt;filenode&lt;/em&gt; qui correspond souvent à l&amp;rsquo;OID de la table (mais pas toujours, par exemple lorsqu&amp;rsquo;une table est réécrite, un nouveau fichier est créé avec un nouveau numéro ; voir &lt;a href=&#34;#vacuum&#34;&gt;la partir sur les VACUUM&lt;/a&gt;).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pourrez trouver les fichiers suivants pour chaque table (exemple pour un filenode = 112233 ) : &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Le &lt;strong&gt;heap file&lt;/strong&gt; : ensemble de fichiers contenant les données.&lt;br&gt;Chaque fichier du &lt;em&gt;heap file&lt;/em&gt; est appelé segment et ne peut exéder 1 Go, il y a donc un nombre de segments différent selon la taille de la table.&lt;br&gt;Le premier segment est nommé &lt;code&gt;filenode&lt;/code&gt; sans extension (&lt;code&gt;112233&lt;/code&gt; dans notre exemple), le second se voit ajouter l&amp;rsquo;extension « 1 » (&lt;code&gt;112233.1&lt;/code&gt;), le troisième l&amp;rsquo;extension « 2 » (&lt;code&gt;11223.2&lt;/code&gt;) et ainsi de suite&amp;#8230;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La &lt;strong&gt;free space map&lt;/strong&gt; : liste l&amp;rsquo;espace disponible dans chaque page.&lt;br&gt;Le fichier est nommé  &lt;code&gt;filenode_fsm&lt;/code&gt; (&lt;code&gt;112233_fsm&lt;/code&gt;).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La &lt;strong&gt;visibility map&lt;/strong&gt; : liste indiquant pour chaque page si toutes les lignes sont visibles pour toutes les transactions et si tous les tuples sont gelés. Cela permet au VACUUM de ne pas avoir à scanner ces pages afin d&amp;rsquo;aller plus vite.&lt;br&gt;Le fichier est nommé &lt;code&gt;filenode_vm&lt;/code&gt; (&lt;code&gt;112233_vm&lt;/code&gt;).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Même si c&amp;rsquo;est très rare, les fichiers fsm et vm peuvent se voir attribuer des extensions « 1 », « 2 »&amp;#8230; s&amp;rsquo;ils dépassent 1 Go et que d&amp;rsquo;autres fichiers doivent être créés.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici un graphique pour vous représenter la répartition des données :&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_filesystem.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3002&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Exemple d&amp;rsquo;une carte de visibilité :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Numéro de page&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Only visible&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Only frozen&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La première page ne contient que des tuples visibles, en revanche, les pages d&amp;rsquo;après contiennent des tuples non visibles : il s&amp;rsquo;agit de tuples supprimés qui sont encore présents dans la base et en attente de suppression par le &lt;code&gt;VACUUM&lt;/code&gt;. Ce dernier n&amp;rsquo;a donc pas besoin de travailler sur la première page pour le nettoyage. Nous allons voir dans le paragraphe suivant ce qu&amp;rsquo;est un tuple.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Page&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour faciliter la gestion des données, leur stockage au sein des segments du &lt;em&gt;heap file&lt;/em&gt; se fait sous la forme de paquets de 8 ko de données (paramétrable mais par défaut 8 ko). Un paquet de données est appelé &lt;strong&gt;page&lt;/strong&gt; (ou bloc). Un segment peut donc contenir plusieurs pages.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_page-2.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3007&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Les pages sont toujours structurées de la même façon :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;différentes métadonnées sur la page (24 octets).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Les pointeurs :&lt;/strong&gt; il s&amp;rsquo;agit de données contenant l&amp;#8217;emplacement de chaque tuple stocké dans la page (4 octets chacun).&lt;br&gt;Les index référencent ces pointeurs.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;L&amp;rsquo;espace restant disponible dans la page.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Les tuples :&lt;/strong&gt; un tuple équivaut à une ligne dans la table. &lt;br&gt;Il s&amp;rsquo;agit d&amp;rsquo;un ensemble de métadonnées associées aux valeurs des attributs de la ligne les unes à la suite des autres.&lt;br&gt;Les éléments sont positionnés dans l&amp;rsquo;ordre inverse : du dernier au premier et accolés à la fin de la page.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Des données spécifiques (uniquement pour les table d&amp;rsquo;index).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_page_content-1.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3097&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;La page est considérée comme complète lorsque l&amp;rsquo;espace disponible vient à manquer : au fur et à mesure du remplissage, les pointeurs rejoignent les tuples et l&amp;rsquo;espace entre les deux devient insuffisant pour stocker un nouvel élément.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que les tuples sont toujours placés de façon à être alignés sur des multiples de 8 octets. Ce positionnement entraine la présence d&amp;rsquo;espace entre les tuples lorsque ceux-ci ne possèdent pas une longueur multiple de 8.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Avec une telle structure, vous pouvez donc voir que lorsque PostgreSQL créé une nouvelle page, celle-ci occupe immédiatement 8 ko, même si elle est presque vide car il s&amp;rsquo;agit d&amp;rsquo;un conteneur de taille fixe. Ainsi, une base PostgreSQL grossit par multiple de 8 ko.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour la lecture des données, il y a deux cas :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Le scan séquentiel : lors d&amp;rsquo;un parcours complet de la table, PostgreSQL lit chaque pointeur ce qui lui permet ensuite d&amp;rsquo;aller lire chaque tuple.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Le scan indexé : lors d&amp;rsquo;un parcours via un index, ce dernier contient le numéro de page ainsi que l&amp;#8217;emplacement du pointeur de chaque donnée indexée. &lt;br&gt;PostgreSQL n&amp;rsquo;a plus qu&amp;rsquo;a parcourir les pointeurs pour récupérer la donnée sans avoir à lire tous les tuples (scan séquentiel). &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Tuple&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les données de toutes les colonnes d&amp;rsquo;une ligne sont stockées au sein d&amp;rsquo;un tuple (en français « uplet »). Pour faire simple, il s&amp;rsquo;agit d&amp;rsquo;une liste de données.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les tuples sont organisés de la façon suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Un en-tête contenant l&amp;rsquo;identifiant du tuple (ctid), des données de visibilité de transaction (t_xmin et t_xmax) et d&amp;rsquo;autres éléments que nous verrons plus tard.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Une carte des valeurs &lt;code&gt;NULL&lt;/code&gt; au sein de la ligne. &lt;br&gt;Cette carte n&amp;rsquo;est présente que si la ligne contient des valeurs &lt;code&gt;NULL&lt;/code&gt;.&lt;br&gt;Il s&amp;rsquo;agit d&amp;rsquo;une suite de valeurs booléenne représentant chaque colonne (dans l&amp;rsquo;ordre donc) avec « 1 » indiquant la présence d&amp;rsquo;une valeur &lt;code&gt;NULL&lt;/code&gt;, « 0 » dans le cas contraire.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Les données les unes à la suite des autres.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;en-tête d&amp;rsquo;un tuple mesurant 23 octets, il y a donc 1 octet ajouté pour l&amp;rsquo;alignement si aucune carte de valeurs &lt;code&gt;NULL&lt;/code&gt; n&amp;rsquo;existe : c&amp;rsquo;est la taille minimum d&amp;rsquo;un tuple.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le placement des données au sein du tuple se fait dans l&amp;rsquo;ordre de définition des colonnes en respectant deux règles : &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;L&amp;rsquo;espace occupé dépend du type :&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;L&amp;rsquo;espace peut être fixe (smallint, integer, bigint&amp;#8230;)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;L&amp;rsquo;espace peut être variable et dépend donc de la donnée (varchar, text&amp;#8230;).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;L&amp;#8217;emplacement d&amp;rsquo;une donnée par rapport à la précédente dépend du type :&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;L&amp;#8217;emplacement peut être aligné (smallint, integer, bigint&amp;#8230;) (même principe que l&amp;rsquo;alignement des tuples dans la page sauf qu&amp;rsquo;ici la longueur est variable).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;L&amp;#8217;emplacement peut être non aligné (booléen, varchar&amp;#8230;)&lt;br&gt;Si ce type de donnée est en première position et qu&amp;rsquo;aucune carte de valeurs NULL n&amp;rsquo;est présente, un alignement sur le 24&lt;sup&gt;ème&lt;/sup&gt; octet est tout de même réalisé.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici quelques cas de figure pour les types les plus utilisés :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Booléen :&lt;/strong&gt;&lt;br&gt;Pas d&amp;rsquo;alignement : se place directement après la donnée de la colonne précédente.&lt;br&gt;Espace occupé de 1 octet.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Smallint &amp;#8211; int2 :&lt;/strong&gt; &lt;br&gt;Alignement sur un multiple de 2 octets.&lt;br&gt;Espace occupé de 2 octets.&lt;br&gt;Attention à ne pas confondre l&amp;rsquo;alignement et l&amp;rsquo;espace occupé qui sont les mêmes pour ce type.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Integer &amp;#8211; int4 :&lt;/strong&gt;  &lt;br&gt;Alignement sur un multiple de 4 octets.&lt;br&gt;Espace occupé de 4 octets.&lt;br&gt;Attention à ne pas confondre l&amp;rsquo;alignement et l&amp;rsquo;espace occupé qui sont les mêmes pour ce type.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Biginteger &amp;#8211; int8 :&lt;/strong&gt;&lt;br&gt;Alignement sur un multiple de 8 octets.&lt;br&gt;Espace occupé de 8 octets.&lt;br&gt;Attention à ne pas confondre l&amp;rsquo;alignement et l&amp;rsquo;espace occupé qui sont les mêmes pour ce type.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Text, Varchar :&lt;/strong&gt;&lt;br&gt;Alignement variable : aucun alignement en dessous d&amp;rsquo;une certaine taille ; au dela, les données peuvent être compressée et/ou TOASTées et un header aligné sur un multiple de 4 octets est ajouté.&lt;br&gt;Espace occupé variable : 1 octet de header plus les données en dessous d&amp;rsquo;une certaine taille ; au dela, 4 octets de header plus les données.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici une requête permettant de connaitre la taille fixée pour les types de données (pour les types variables, l&amp;rsquo;alignement se fait pour le header éventuellement présent) :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT &#xA;&#x9;typname AS type,&#xA;&#x9;concat(&#xA;&#x9;&#x9;typcategory,&#xA;&#x9;&#x9;&#39; - &#39; || &#xA;&#x9;&#x9;CASE typcategory&#xA;&#x9;&#x9;&#x9;WHEN &#39;A&#39; THEN &#39;Array types&#39;&#xA;&#x9;&#x9;&#x9;WHEN &#39;B&#39; THEN &#39;Boolean types&#39;&#xA;&#x9;&#x9;&#x9;WHEN &#39;C&#39; THEN &#39;Composite types&#39;&#xA;&#x9;&#x9;&#x9;WHEN &#39;D&#39; THEN &#39;Date/time types&#39;&#xA;&#x9;&#x9;&#x9;WHEN &#39;E&#39; THEN &#39;Enum types&#39;&#xA;&#x9;&#x9;&#x9;WHEN &#39;G&#39; THEN &#39;Geometric types&#39;&#xA;&#x9;&#x9;&#x9;WHEN &#39;I&#39; THEN &#39;Network address types&#39;&#xA;&#x9;&#x9;&#x9;WHEN &#39;N&#39; THEN &#39;Numeric types&#39;&#xA;&#x9;&#x9;&#x9;WHEN &#39;P&#39; THEN &#39;Pseudo-types&#39;&#xA;&#x9;&#x9;&#x9;WHEN &#39;R&#39; THEN &#39;Range types&#39;&#xA;&#x9;&#x9;&#x9;WHEN &#39;S&#39; THEN &#39;String types&#39;&#xA;&#x9;&#x9;&#x9;WHEN &#39;T&#39; THEN &#39;Timespan types&#39;&#xA;&#x9;&#x9;&#x9;WHEN &#39;U&#39; THEN &#39;User-defined types&#39;&#xA;&#x9;&#x9;&#x9;WHEN &#39;V&#39; THEN &#39;Bit-string types&#39;&#xA;&#x9;&#x9;&#x9;WHEN &#39;X&#39; THEN &#39;unknown type&#39;&#xA;&#x9;&#x9;&#x9;WHEN &#39;Z&#39; THEN &#39;Internal-use types&#39;&#xA;&#x9;&#x9;END&#xA;&#x9;) AS category,&#xA;&#x9;CASE &#xA;&#x9;&#x9;WHEN typlen = -1 THEN &#39;variable&#39;&#xA;&#x9;&#x9;ELSE typlen::text&#xA;&#x9;END AS longueur,&#xA;&#x9;concat(&#xA;&#x9;&#x9;typalign,&#xA;&#x9;&#x9;&#39; - &#39; || &#xA;&#x9;&#x9;CASE typalign&#xA;&#x9;&#x9;&#x9;WHEN &#39;c&#39; THEN &#39;char alignment, i.e., no alignment needed&#39;&#xA;&#x9;&#x9;&#x9;WHEN &#39;s&#39; THEN &#39;short alignment (2 bytes on most machines)&#39;&#xA;&#x9;&#x9;&#x9;WHEN &#39;i&#39; THEN &#39;int alignment (4 bytes on most machines)&#39;&#xA;&#x9;&#x9;&#x9;WHEN &#39;d&#39; THEN &#39;double alignment (8 bytes on many machines, but by no means all)&#39;&#xA;&#x9;&#x9;END&#xA;&#x9;) AS alignement,&#xA;&#x9;concat(&#xA;&#x9;&#x9;typstorage,&#xA;&#x9;&#x9;&#39; - &#39; || &#xA;&#x9;&#x9;CASE typstorage&#xA;&#x9;&#x9;&#x9;WHEN &#39;p&#39; THEN &#39;plain: Values must always be stored plain (non-varlena types always use this value)&#39;&#xA;&#x9;&#x9;&#x9;WHEN &#39;e&#39; THEN &#39;external: Values can be stored in a secondary “TOAST” relation&#39;&#xA;&#x9;&#x9;&#x9;WHEN &#39;m&#39; THEN &#39;main: Values can be compressed and stored inline&#39;&#xA;&#x9;&#x9;&#x9;WHEN &#39;x&#39; THEN &#39;extended: Values can be compressed and/or moved to a secondary relation&#39;&#xA;&#x9;&#x9;END&#xA;&#x9;) AS stockage&#xA;FROM &#xA;&#x9;pg_type&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cette valeur d&amp;rsquo;alignement implique donc une potentielle perte d&amp;rsquo;espace entre les valeurs de chaque colonne. Ainsi, l&amp;rsquo;ordre des colonnes a une forte incidence sur le poids d&amp;rsquo;une table. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici un exemple concret pour mieux situer le problème. Voila deux tables avec les mêmes colonnes mais des agencements différents et l&amp;rsquo;impact que cela a :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;CREATE TABLE public.test_non_optimise (&#xA;  a int2,&#xA;  b int8,&#xA;  c int2,&#xA;  d int8&#xA;)&#xA;;&#xA;&#xA;INSERT INTO public.test_non_optimise&#xA;VALUES (1, 1, 1, 1)&#xA;;&#xA;&#xA;SELECT &#xA;  pg_column_size(test_non_optimise.*) &#xA;FROM &#xA;  public.test_non_optimise&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La ligne insérée pèse 56 octets que l&amp;rsquo;on peut décomposer ainsi :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;position &amp;#8211; longueur : commentaire&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;0  - 23 o&lt;/code&gt; : Métadonnées.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;23 -  1 o&lt;/code&gt; : Espacement.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;24 -  2 o&lt;/code&gt; : Données integer (alignée sur un multiple de 2).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;26 -  6 o&lt;/code&gt; : Espacement.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;32 -  8 o&lt;/code&gt; : Données biginteger (alignée sur un multiple de 8).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;40 -  2 o&lt;/code&gt; : Données integer (alignée sur un multiple de 2).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;42 -  6 o&lt;/code&gt; : Espacement.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;48 -  8 o&lt;/code&gt; : Données biginteger (alignée sur un multiple de 8).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;On note beaucoup d&amp;rsquo;octets d&amp;rsquo;espacement.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;CREATE TABLE public.test_optimise (&#xA;  b int8,&#xA;  d int8,&#xA;  a int2,&#xA;  c int2&#xA;)&#xA;;&#xA;&#xA;INSERT INTO public.test_optimise &#xA;VALUES (1, 1, 1, 1)&#xA;;&#xA;&#xA;SELECT &#xA;  pg_column_size(test_optimise.*) &#xA;FROM &#xA;  public.test_optimise&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La ligne insérée pèse 44 octets que l&amp;rsquo;on peut décomposer ainsi :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;position &amp;#8211; longueur : commentaire&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;0  - 23 o&lt;/code&gt; : Métadonnées.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;23 -  1 o&lt;/code&gt; : Espacement.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;24 -  8 o&lt;/code&gt; : Données biginteger (alignée sur un multiple de 8).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;32 -  8 o&lt;/code&gt; : Données biginteger (alignée sur un multiple de 8).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;40 -  2 o&lt;/code&gt; : Données integer (alignée sur un multiple de 2).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;42 -  2 o&lt;/code&gt; : Données integer (alignée sur un multiple de 2).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;optimisation du placement des colonnes permet de gagner 22% d&amp;rsquo;espace disque : c&amp;rsquo;est non négligeable sur des tables de grande taille.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Toast&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les données d&amp;rsquo;un tuple ne peuvent dépasser une page. Ainsi, pour contourner cette limite avec des données lourdes, un mécanisme spécifique appelé TOAST est utilisé.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;TOAST signifie « The Oversized-Attribute Storage Technique » et se déclenche de façon automatisée et totalement transparente pour l&amp;rsquo;utilisateur lorsqu&amp;rsquo;une ligne est trop lourde pour le stockage « standard ».&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le fonctionnement est le suivant : &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Jusqu’à 2 ko (par défaut, définit via la variable &lt;code&gt;TOAST_TUPLE_THRESHOLD&lt;/code&gt;), un tuple est stocké normalement, directement dans la page.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;A partir de 2 ko, le système compresse le tuple, puis deux cas de figures se présentent :&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Le poids du tuple compressé est inférieur à 2 ko (par défaut, définit via la variable &lt;code&gt;TOAST_TUPLE_TARGET&lt;/code&gt;), alors ce dernier est stocké compressé dans la page.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Le poids du tuple compressé est supérieur à 2 ko, alors le système transfert les données colonne par colonne dans une table annexe appelée table TOAST.&lt;br&gt;Le transfert commence par les colonnes les plus lourdes et s&amp;rsquo;arrête lorsque les colonnes restantes peuvent être stockées dans la page (lorsqu&amp;rsquo;il reste moins de 2 ko).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_toast_diagram-2.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3183&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Les tables TOAST sont stockées dans le schéma système &lt;code&gt;pg_toast&lt;/code&gt; et sont nommées d&amp;rsquo;après l&amp;rsquo;OID de la table d&amp;rsquo;origine sous la forme &lt;code&gt;pg_toast_oidorigine&lt;/code&gt;. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il s&amp;rsquo;agit de tables standards (et donc qui peuvent être lues via un simple &lt;code&gt;SELECT&lt;/code&gt;) à la structure suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;chunk_id&lt;/code&gt; : identifiant de bloc (permettant la correspondance avec un tuple spécifique de la table source).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;chunk_seq&lt;/code&gt; : numéro d&amp;rsquo;ordre du bloc (une donnée importante peut être découpée en plusieurs blocs qu&amp;rsquo;il faut pouvoir ordonnancer).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;chunk_data&lt;/code&gt; : donnée au format binaire.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les données y sont stockées à raison d&amp;rsquo;un bloc par ligne, chaque bloc étant un morceau de 2 ko (par défaut, définit via la variable &lt;code&gt;TOAST_MAX_CHUNK_SIZE&lt;/code&gt;) de la donnée d&amp;rsquo;origine qui a donc été découpée.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cette division permet de répartir le poids des données et de les stocker de façon classique (dans un &lt;em&gt;heap file&lt;/em&gt;), sans dépasser la taille limite d’une page. Voici un exemple schématisé du contenu de deux pages d&amp;rsquo;une table TOAST :&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_toast_page.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3186&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Notez que lorsque vous requêtez une table, la récupération des données TOASTées possède un certain coût car PostgreSQL doit lire la table TOAST, récupérer les morceaux de données, les assembler puis retourner la données consolidée. C&amp;rsquo;est une des raisons pour lesquelles le sélecteur &lt;code&gt;*&lt;/code&gt; est souvent déconseillé.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Autre point, depuis PostgreSQL 14, vous pouvez choisir l&amp;rsquo;algorithme de compression via la variable &lt;code&gt;default_toast_compression&lt;/code&gt; qui permet de choisir entre &lt;em&gt;pglz&lt;/em&gt; (format compression par défaut) et &lt;em&gt;lz4 (nouveau format jusqu’à&lt;/em&gt; 80% plus rapide pour un taux de compression similaire).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Quelques requêtes&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici quelques requêtes pour récupérer des informations sur vos tables et mieux appréhender la structure des pages.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Commencez par créer une table :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;CREATE TABLE public.table_test (&#xA;  id int4,&#xA;  commentaire_1 char(1955),&#xA;  commentaire_2 text&#xA;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez maintenant récupérer quelques données grâce à la première fonction &lt;code&gt;get_table_info()&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT * FROM public.get_table_info(&#39;public.table_test&#39;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici les résultats (tronqué, je n&amp;rsquo;ai pas mis toutes les colonnes) avec en gras les valeurs qui m’intéressent :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Paramètre&lt;/th&gt;&lt;th&gt;Valeur&lt;/th&gt;&lt;th&gt;Commentaire&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;schema&lt;/td&gt;&lt;td&gt;public&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;table&lt;/td&gt;&lt;td&gt;table_test&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;tablespace&lt;/td&gt;&lt;td&gt;pg_default&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;oid_table&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;350934&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;numero_heap_file&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;350934&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;Le numéro du fichier peut être différent de l&amp;rsquo;oid de la table&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;heap_file_segment_0_location&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;C:/&amp;#8230;/PG16-data/base/246510/350934&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;nb_page&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;La table vient d&amp;rsquo;être créée et ne contient aucune donnée donc aucune page n&amp;rsquo;a été créée.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;tuple_count&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;Aucune données.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;table_length&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;La table venant d&amp;rsquo;être créée, elle ne pèse encore rien&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;table_length_human&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;0 bytes&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;tuple_length&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;dead_tuple_length&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;free_space_length&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;toast_oid&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;350937&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;La table TOAST est déjà créée dans le SGBD bien qu&amp;rsquo;il n&amp;rsquo;y ait pas encore eu besoin du système TOAST..&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;toast_table&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;pg_toast_350934&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;toast_heap_file_segment_0_location&lt;/td&gt;&lt;td&gt;C:/&amp;#8230;/PG16-data/base/246510/350937&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;toast_nb_page&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;toast_nb_tuple&lt;/td&gt;&lt;td&gt;-1&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;toast_length&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;toast_length_human&lt;/td&gt;&lt;td&gt;0 bytes&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ajoutez une ligne de données puis recalculez les statistiques :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Insertion de la donnée&#xA;INSERT INTO &#xA;  public.table_test (id, commentaire_1, commentaire_2)&#xA;VALUES &#xA;  (1, &#39;A&#39;, &#39;un commentaire&#39;),&#xA;  (2, &#39;B&#39;, &#39;un commentaire vraiment très très très long&#39;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT * FROM public.get_table_info(&#39;public.table_test&#39;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici les résultats (tronqués) :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Paramètre&lt;/th&gt;&lt;th&gt;Valeur&lt;/th&gt;&lt;th&gt;Commentaire&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;nb_page&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;Une page a été créée&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;tuple_count&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;table_length_human&lt;/td&gt;&lt;td&gt;8192 bytes&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;tuple_length&lt;/td&gt;&lt;td&gt;2113&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;free_space_length&lt;/td&gt;&lt;td&gt;6036&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il est intéressant de constater que les données pèsent 2113 octets (tuple_length) et que la page pèse 8,192 ko. En effet, les pages font toujours la même taille.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez voir qu&amp;rsquo;il reste 6036 octets d&amp;rsquo;espace disponible dans la page avant la création d&amp;rsquo;une seconde.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Regardez maintenant un peu plus en détail le stockage des données grâce à cette seconde fonction &lt;code&gt;get_heap_page_info()&lt;/code&gt; qui remonte des statistiques sur le contenu des pages d&amp;rsquo;une table :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT * FROM public.get_heap_page_info(&#39;public.table_test&#39;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici les résultats :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Paramètre&lt;/th&gt;&lt;th&gt;Valeur&lt;/th&gt;&lt;th&gt;Commentaire&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;page_num&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;Numéro de page&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;lsn&lt;/td&gt;&lt;td&gt;4/1D111198&lt;/td&gt;&lt;td&gt;Identifiant xlog de la dernière opération effectuée sur la page.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;nb_pointer&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;Nombre de pointeurs.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;nb_tuple&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;Nombre de tuple.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;nb_tuple_visible&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;Nombre de tuples visibles.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;length_header&lt;/td&gt;&lt;td&gt;24&lt;/td&gt;&lt;td&gt;Taille des métadonnées de la page.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;length_pointer&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;Taille de l&amp;rsquo;ensemble des pointeurs.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;length_free_space&lt;/td&gt;&lt;td&gt;6036&lt;/td&gt;&lt;td&gt;Taille de l&amp;rsquo;espace libre.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;length_tuple&lt;/td&gt;&lt;td&gt;2120&lt;/td&gt;&lt;td&gt;Taille occupée par les tuples.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;length_meta&lt;/td&gt;&lt;td&gt;48&lt;/td&gt;&lt;td&gt;Taille des métadonnées des tuples.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;length_data&lt;/td&gt;&lt;td&gt;2065&lt;/td&gt;&lt;td&gt;Taille des données des tuples.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;length_empty&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;Taille des espaces laissés par l&amp;rsquo;alignement des tuples.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;length_special&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;Taille des données spécifiques.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;offset_pointer&lt;/td&gt;&lt;td&gt;24&lt;/td&gt;&lt;td&gt;Positionnement du début des pointeurs.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;offset_free_space&lt;/td&gt;&lt;td&gt;32&lt;/td&gt;&lt;td&gt;Positionnement du début de l&amp;rsquo;espace disponible.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;offset_data&lt;/td&gt;&lt;td&gt;6072&lt;/td&gt;&lt;td&gt;Positionnement du début des données.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;offset_special&lt;/td&gt;&lt;td&gt;8192&lt;/td&gt;&lt;td&gt;Positionnement du début des données spécifique.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;offset_page_end&lt;/td&gt;&lt;td&gt;8192&lt;/td&gt;&lt;td&gt;Positionnement de la fin de la page.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici un schéma de l&amp;rsquo;état actuel de la page, vous remarquerez qu&amp;rsquo;il n&amp;rsquo;y a pas de bloc spécifique car il s&amp;rsquo;agit d&amp;rsquo;une table classique et non pas d&amp;rsquo;une table d&amp;rsquo;index :&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_page_content_test-1.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3099&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Bon nous voyons déjà pas mal de chose mais nous ne savons pas comment se répartissent les tuples, leurs métadonnées ainsi que les espaces vides. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Allez donc un peu plus loin (puisque vous êtes là pour ça), grâce à une troisième fonction &lt;code&gt;get_heap_tuple_info()&lt;/code&gt; qui permet de récupérer toutes les informations disponibles sur les tuples présents dans la page.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT * FROM public.get_heap_tuple_info(&#39;public.table_test&#39;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici les résultats (attention, j&amp;rsquo;ai plusieurs lignes donc mon tableau est maintenant dans l&amp;rsquo;autre sens).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;ctid&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_num&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_index&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;offset_start&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;offset_end&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;offset_next&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;length_tuple&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;length_meta&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;length_data&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;length_empty&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Identifiant de la ligne : numéro de page, numéro d&amp;rsquo;index dans la page&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Numéro de page&lt;/em&gt;.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Numéro d&amp;rsquo;index du tuple dans la page.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Position du début du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Position de la fin du tuple.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Position du début du tuple précédent.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Longueur du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Longueur des métadonnées du tuple&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Longueur des données en elle-même&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Espace vide&lt;/em&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,1)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6184&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;8186&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;8192&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2002&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;24&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1978&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,2)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6072&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6183&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6184&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;111&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;24&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;87&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici la représentation exacte de la page (avec en jaune l&amp;rsquo;espace perdu à cause de l&amp;rsquo;alignement) :&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_page_content_test_accurate-1.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3101&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez voir que le premier tuple possède un peu moins de 2000 octets de données : c&amp;rsquo;est à cause du champ &lt;code&gt;commentaire_2&lt;/code&gt;. En effet, le type de données &lt;code&gt;char(2000)&lt;/code&gt; limite les données à 2000 caractères maximum. Cependant, ce type de données est en fait le type &lt;code&gt;bpchar(2000)&lt;/code&gt; comme &lt;em&gt;blank padded caractère&lt;/em&gt; : PostgreSQL ajoute des espaces au texte jusqu’à ce qu&amp;rsquo;il atteigne 2000 caractères ce qui force la ligne à prendre plus de place que nécessaire.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Autre élément, le second tuple ne possède que 87 octets de données. C&amp;rsquo;est à cause du système TOAST qui s&amp;rsquo;est déclenché car les données pesaient plus que 2 ko, elles ont donc été compressées. Comme le résultat pèse moins de 2 ko, aucune colonne n&amp;rsquo;a été transférée dans la table TOAST.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez également que les pointeurs renseignent sur l&amp;#8217;emplacement des tuples.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ajoutez encore des données :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;INSERT INTO &#xA;  public.table_test (id, commentaire_1, commentaire_2)&#xA;VALUES &#xA;  (3, &#39;C&#39;, &#39;un commentaire&#39;),&#xA;  (4, &#39;D&#39;, &#39;un commentaire&#39;),&#xA;  (5, &#39;E&#39;, &#39;un commentaire&#39;),&#xA;  (6, &#39;F&#39;, &#39;un commentaire&#39;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Analysez la table :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT * FROM public.get_heap_tuple_info(&#39;public.table_test&#39;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;ctid&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_num&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_index&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;offset_start&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;offset_end&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Identifiant de la ligne : numéro de page, numéro d&amp;rsquo;index dans la page&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Numéro de page&lt;/em&gt;.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Numéro d&amp;rsquo;index du tuple dans la page.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Position du début du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Position de la fin du tuple.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,1)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6184&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;8186&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,2)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6072&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6183&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,3)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4064&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6066&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,4)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2056&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4058&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,5)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;48&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2050&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,1)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6184&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;8186&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Une page supplémentaire a été créée, la table pèse maintenant 2 x 8 ko : 16 ko (vous pouvez le vérifier avec &lt;code&gt;get_table_info()&lt;/code&gt;).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Gestion des données&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Colonnes système&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Des colonnes système sont présentes dans chacune des tables. Il suffit de les spécifier dans vos requêtes pour y accéder, les voici :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;tableoid&lt;/code&gt; : l&amp;rsquo;OID de la table, utilisez &lt;code&gt;tableoid::regclass&lt;/code&gt; pour obtenir le nom de la table.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;ctid&lt;/code&gt; : emplacement physique de la ligne.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;xmin&lt;/code&gt; : identifiant de la transaction d&amp;rsquo;insertion.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;cmin&lt;/code&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/ddl-system-columns.html#DDL-SYSTEM-COLUMNS-CMIN&#34;&gt;&lt;/a&gt; : identifiant de commande au sein de la transaction d&amp;rsquo;insertion.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;xmax&lt;/code&gt; : identifiant de la transaction de supression.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;cmax&lt;/code&gt; : identifiant de commande au sein de la transaction de suppression.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici un exemple avec notre table :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT &#xA;  tableoid::regclass,&#xA;  tableoid,&#xA;  ctid,&#xA;  xmin,&#xA;  xmax,&#xA;  *&#xA;FROM &#xA;  public.table_test&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici le résultat :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;tableoid&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;tableoid&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;ctid&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;xmin&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;xmax&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;id&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;commentaire_1&lt;/th&gt;&lt;th&gt;commentaire_2&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;table_test&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;350934&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,1)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4432&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td&gt;un commentaire&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;table_test&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;350934&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,2)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4432&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td&gt;un commentaire vraiment très très très long&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;table_test&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;350934&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,3)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4435&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td&gt;un commentaire&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;table_test&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;350934&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,4)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4435&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;D&lt;/td&gt;&lt;td&gt;un commentaire&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;table_test&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;350934&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,4)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4435&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;E&lt;/td&gt;&lt;td&gt;un commentaire&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;table_test&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;350934&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,1)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4435&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;F&lt;/td&gt;&lt;td&gt;un commentaire&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Si besoin, n&amp;rsquo;hésitez pas à utiliser cette requête pour voir à quelles lignes correspondent les tuples que nous allons analyser.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Fonctionnement&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Maintenant que nous connaissons un peu mieux la façon dont les données sont stockées physiquement, regardons comment les mouvements sont gérés.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Dans une base PostgreSQL, l&amp;rsquo;accès aux données peut se faire de façon concurrentielle (en même temps) depuis différents clients. Il faut donc gérer correctement l&amp;rsquo;ordonnancement des transactions. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour cela, il existe le MVCC : Multiversion Concurrency Control ou contrôle d&amp;rsquo;accès simultané, il s&amp;rsquo;agit d&amp;rsquo;un système permettant la conservation des différents états de la donnée afin de permettre à chaque transaction de travailler sur un instantané de la base. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le fonctionnement repose sur le principe suivant : chaque transaction possède un identifiant unique et incrémentale, lorsqu&amp;rsquo;elle effectue une opération, les lignes modifiées se voient attribuer son identifiant ce qui permet de ressituer l&amp;rsquo;état des données par rapport à toute autre transaction.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Par exemple :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Horaire&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Transaction 1&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Transaction 2&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10h00&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Démarrage transaction&lt;br&gt;Début UPDATE sur la table X&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10h05&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Démarrage transaction&lt;br&gt;Début INSERT sur la table Y&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10h06&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Fin INSERT sur la table Y&lt;br&gt;Fin transaction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10h08&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Fin UPDATE sur la table X&lt;br&gt;Début UPDATE sur la table Y&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10h09&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Fin UPDATE sur la table Y&lt;br&gt;Fin transaction&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Lorsque la transaction 1 effectue sa seconde opération, l&amp;rsquo;état des données doit être celui qui existait lors du démarrage de la transaction. Cependant, pour éviter de bloquer tous les utilisateurs, PostgreSQL a déjà effectué l&amp;rsquo;INSERT de la transaction 2. Ainsi, pour conserver l&amp;rsquo;isolation de chaque transaction, une version de la table telle qu&amp;rsquo;elle était lors de démarrage de la transaction 1 existe toujours après la finalisation de la transaction 2, le temps que la transaction 1 puisse se terminer.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que si la transaction 2 avait effectué une opération modifiant des données de la table Y concernées par la transaction 1, PostgreSQL aurait attendu la fin de la transaction grâce à un système de verrous placés sur les lignes concernées.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que selon le niveau d&amp;rsquo;isolation, il est possible pour une transaction de « voir » les lignes modifiées par d&amp;rsquo;autres transactions. Il s&amp;rsquo;agit du réglage de la variable &lt;code&gt;default_transaction_isolation&lt;/code&gt; qui peut prendre l&amp;rsquo;une des valeurs suivantes :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;READ COMMITTED&lt;/code&gt; : une requête n&amp;rsquo;a accès qu&amp;rsquo;aux lignes commitées avant qu&amp;rsquo;elle ne commence, c&amp;rsquo;est donc le démarrage de la requête qui fait foi. &lt;br&gt;Ainsi, les dernières requêtes d&amp;rsquo;une transaction peuvent opérer sur des données ayant été modifiées par d&amp;rsquo;autres transactions par rapport aux premières requêtes.&lt;br&gt;Il s&amp;rsquo;agit de la valeur par défaut.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;REPEATABLE READ&lt;/code&gt; : une transaction ne peut voir que les lignes commitées avant que la première requête de la transaction ne soit exécutée.&lt;br&gt;Deux transactions concurrentes peuvent modifier des données différentes mais appartenant à la même table ce qui peut conduire à des données inconsistantes (car calculées sur une base qui n&amp;rsquo;existe plus par exemple).&lt;br&gt;En revanche, si une seconde transaction modifie les mêmes données que la première, une erreur &lt;code&gt;serialization_failure&lt;/code&gt; est remontée.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;SERIALIZABLE&lt;/code&gt; : une transaction ne peut voir que les lignes commitées avant que la première requête de la transaction ne soit exécutée. &lt;br&gt;Si deux transactions concurrentes modifient les mêmes données, la première transaction à commiter « gagne » et la seconde est annulée (&lt;code&gt;ROLLBACK&lt;/code&gt;) et une erreur &lt;code&gt;serialization_failure&lt;/code&gt; est remontée.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Mais comment cela fonctionne en détail ? Pour voir cela, nous allons devoir utiliser un exemple concret.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;INSERT &amp;#8211; UPDATE &amp;#8211; DELETE&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour démarrer nos test, nous allons repartir de la table précédente (disponible dans l&amp;rsquo;onglet « initialisation »).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Démarrez une transaction et affichez son identifiant :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW gestion_data_insert_delete_udpate&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;txid_current()&#34; data-enlighter-group=&#34;gestion_data_insert_delete_udpate&#34;&gt;BEGIN;&#xA;&#xA;SELECT txid_current();&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;Initialisation&#34; data-enlighter-group=&#34;gestion_data_insert_delete_udpate&#34;&gt;-- !!!&#xA;-- Attention à bien exécuter chaque requête dans une transaction spécifique&#xA;-- Ce que permet le COMMIT à la suite de chaque requête si vous lancez tout d&#39;un seul bloc&#xA;-- !!!&#xA;&#xA;-- Création d&#39;une table de test&#xA;CREATE TABLE public.table_test (&#xA;  id int4,&#xA;  commentaire_1 char(1955),&#xA;  commentaire_2 text&#xA;)&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Insertion de données&#xA;INSERT INTO &#xA;  public.table_test (id, commentaire_1, commentaire_2)&#xA;VALUES &#xA;  (1, &#39;A&#39;, &#39;un commentaire&#39;),&#xA;  (2, &#39;B&#39;, &#39;un commentaire vraiment très très très long&#39;)&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Insertion de données&#xA;INSERT INTO &#xA;  public.table_test (id, commentaire_1, commentaire_2)&#xA;VALUES &#xA;  (3, &#39;C&#39;, &#39;un commentaire&#39;),&#xA;  (4, &#39;D&#39;, &#39;un commentaire&#39;),&#xA;  (5, &#39;E&#39;, &#39;un commentaire&#39;),&#xA;  (6, &#39;F&#39;, &#39;un commentaire&#39;)&#xA;;&#xA;COMMIT;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ma transaction porte le numéro d&amp;rsquo;identifiant &lt;strong&gt;4440&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Modifiez des données :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Mise à jour de la ligne 3&#xA;UPDATE public.table_test&#xA;SET commentaire_2 = &#39;Un autre commentaire&#39;&#xA;WHERE id = 3&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Validez la transaction :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;COMMIT;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Tant qu&amp;rsquo;a faire, faites la suppression suivante suivit d&amp;rsquo;une insertion :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;DELETE FROM public.table_test&#xA;WHERE id = 4&#xA;;&#xA;&#xA;-- Ajout d&#39;une ligne&#xA;INSERT INTO &#xA;  public.table_test (id, commentaire_1, commentaire_2)&#xA;VALUES &#xA;  (7, &#39;G&#39;, &#39;un commentaire&#39;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Analysez les données : &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT * FROM public.get_heap_tuple_info(&#39;public.table_test&#39;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;ctid&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_index&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;xmin&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;xmax&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;state&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;visible&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;update&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;direction&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;hot&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;delete&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;freeze&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Identifiant de la ligne : numéro de page, numéro d&amp;rsquo;index dans la page&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Numéro d&amp;rsquo;index du tuple dans la page.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;ID de la transaction à partir de laquelle le tuple est visible&lt;/em&gt;.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;&lt;em&gt;ID de la transaction au delà de laquelle le tuple n&amp;rsquo;est plus visible&lt;/em&gt;.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;État du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Visibilité du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Le tuple a-t-il été mis à jour&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;to : vers un autre tuple.&lt;br&gt;from : depuis unautre tuple&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;HOT UPDATE&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Tuple supprimé&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;xmin gelé&lt;/em&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,1)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4432 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,2)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4432 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;dead&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;to another line&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,4)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4435 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4442 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,5)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4435 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,1)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4435 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,2)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4440 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;from another line&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,3)&lt;br&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4453 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous découvrez les colonnes &lt;code&gt;xmin&lt;/code&gt; et &lt;code&gt;xmax&lt;/code&gt; qui indiquent « à partir de » et « jusqu’à » quelle transaction un tuple est visible. J&amp;rsquo;ai ajouté un petit drapeau à côté de chaque valeur :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;c : la transaction a été validée (&lt;code&gt;COMMIT&lt;/code&gt;).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;a : la transaction a été annulée (&lt;code&gt;ROLLBACK&lt;/code&gt;).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous noterez donc que PostgreSQL garde en mémoire les données qui ont été modifiées lors des transactions abandonnées.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez voir plusieurs éléments :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Les lignes visibles ne possèdent pas de &lt;em&gt;xmax&lt;/em&gt; (en vrai il est égal à 0).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La ligne &lt;code&gt;id = 3&lt;/code&gt; a été mise à jour.&lt;br&gt;Son ancien emplacement avec les données d&amp;rsquo;origine est toujours présent et correspond à la troisième ligne. Elle est identifiée comme « morte » et devra être nettoyée.&lt;br&gt;La nouvelle version est présente à la dernière ligne (&lt;code&gt;ctid = (1,2)&lt;/code&gt;).&lt;br&gt;PostgreSQL a réalisé un &lt;code&gt;INSERT&lt;/code&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La ligne &lt;code&gt;ctid = (0,4)&lt;/code&gt; correspond à la ligne &lt;code&gt;id = 4&lt;/code&gt; que nous avons supprimée.&lt;br&gt;Ici aussi la donnée n&amp;rsquo;est pas supprimée mais simplement « tagguée » comme non visible.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La ligne &lt;code&gt;ctid = (1,3)&lt;/code&gt; correspond à la ligne que nous venons d&amp;rsquo;ajouter : elle est située en dernière position.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Un &lt;code&gt;UPDATE&lt;/code&gt; est en réalité la même opération qu&amp;rsquo;un &lt;code&gt;DELETE&lt;/code&gt; suivi d&amp;rsquo;un &lt;code&gt;INSERT&lt;/code&gt;, d&amp;rsquo;ailleurs son coût est assez similaire.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ce fonctionnement nous montre également pourquoi les lignes peuvent paraitre désordonnées lors d&amp;rsquo;un &lt;code&gt;SELECT&lt;/code&gt;. En effet, PostgreSQL remonte les lignes dans l&amp;rsquo;ordre dans lequel elles sont stockées. Dans notre cas, un simple &lt;code&gt;SELECT&lt;/code&gt; sur la table nous aurait donné :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;initialement 1, 2, 3, 4, 5, 6.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Après l&amp;rsquo;&lt;code&gt;UPDATE&lt;/code&gt; 1, 2, 4, 5, 6, 3.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Après le &lt;code&gt;DELETE&lt;/code&gt; 1, 2, 5, 6, 3.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;HOT UPDATE&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le Heap Only Tuple UPDATE (ou simplement &lt;code&gt;HOT UPDATE&lt;/code&gt;) un processus particulier de PostgreSQL qui se produit lorsqu&amp;rsquo;il reste suffisamment de place dans une page pour que l&amp;rsquo;ancienne et la nouvelle version d&amp;rsquo;un tuple y soient stockées.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Lancez maintenant la requête suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Mise à jour de la ligne 3 (oui encore)&#xA;UPDATE public.table_test&#xA;SET commentaire_2 = &#39;Un commentaire&#39;&#xA;WHERE id = 3&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Analysez les données de la deuxième page :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT * FROM public.get_heap_tuple_info(&#39;public.table_test&#39;, 1);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;ctid&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_index&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;offset_start&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;xmin&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;xmax&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;state&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;visible&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;update&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;direction&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;hot&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;delete&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;freeze&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Identifiant de la ligne : numéro de page, numéro d&amp;rsquo;index dans la page&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Numéro d&amp;rsquo;index du tuple dans la page.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Position du début du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;ID de la transaction à partir de laquelle le tuple est visible&lt;/em&gt;.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;&lt;em&gt;ID de la transaction au delà de laquelle le tuple n&amp;rsquo;est plus visible&lt;/em&gt;.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;État du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Visibilité du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Le tuple a-t-il été mis à jour&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;to : vers un autre tuple.&lt;br&gt;from : depuis unautre tuple&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;HOT UPDATE&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Tuple supprimé&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;xmin gelé&lt;/em&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,1)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6184&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4435 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,4)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4176&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4440 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4454 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;from and to another line&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,3)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2168&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4453 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,4)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;160&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4454 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;from another line&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cette fois-ci vous pouvez voir :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;L&amp;rsquo;&lt;code&gt;INSERT&lt;/code&gt; est fait en fin de données (&lt;code&gt;ctid = (1,2)&lt;/code&gt;).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;L&amp;rsquo;&lt;code&gt;UPDATE&lt;/code&gt; de la ligne &lt;code&gt;id = 3&lt;/code&gt; est ici un &lt;code&gt;HOT UPDATE&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici le processus en image :&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_page_content_hot_1-1.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3104&#34;/&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Voici la table dans son état initial&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_page_content_hot_2.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3106&#34;/&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;br&gt;Première étape du HOT UPDATE&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;La nouvelle version du tuple est insérée en dernière position avec le &lt;code&gt;ctid = (1,4)&lt;/code&gt; et porte de tag « HOT UPDATE ».&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;ancienne version est « désactivée » : son &lt;code&gt;ctid&lt;/code&gt; devient &lt;code&gt;(1,4)&lt;/code&gt; et les tags « HOT UPDATE » et « HEAP ONLY TUPLE » sont ajoutés. Ceci permet à PostgreSQL de comprendre, lors de la lecture du tuple 2, qu&amp;rsquo;il doit aller lire le tuple 4.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le &lt;code&gt;HOT UPDATE&lt;/code&gt; n&amp;rsquo;est en réalité pas terminé, une seconde opération va être menée par la base.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Faites la requête SELECT suivante puis réanalysez la table :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;generic&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- SELECT&#xA;SELECT * FROM public.table_test;&#xA;&#xA;-- Analyse&#xA;SELECT * FROM public.get_heap_tuple_info(&#39;public.table_test&#39;, 1);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici les données de la 2ème page : &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;ctid&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_index&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;offset_start&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;xmin&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;xmax&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;state&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;visible&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;update&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;direction&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;hot&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;delete&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;freeze&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Identifiant de la ligne : numéro de page, numéro d&amp;rsquo;index dans la page&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Numéro d&amp;rsquo;index du tuple dans la page.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Position du début du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;ID de la transaction à partir de laquelle le tuple est visible&lt;/em&gt;.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;&lt;em&gt;ID de la transaction au delà de laquelle le tuple n&amp;rsquo;est plus visible&lt;/em&gt;.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;État du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Visibilité du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Le tuple a-t-il été mis à jour&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;to : vers un autre tuple.&lt;br&gt;from : depuis unautre tuple&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;HOT UPDATE&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Tuple supprimé&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;xmin gelé&lt;/em&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,1)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6184&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4435 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;redirect to 4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;from and to another line&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,3)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4176&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4453 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,4)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2168&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4454 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;from another line&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le tuple 2, qui contient l&amp;rsquo;ancienne version de la ligne &lt;code&gt;id = 3&lt;/code&gt;, a été « nettoyée » et sont pointeur redirige vers le pointeur 4. L&amp;rsquo;offset des tuples a été modifié à cause d&amp;rsquo;une défragmentation de la page : c&amp;rsquo;est la seconde opération du &lt;code&gt;HOT UPDATE&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici le processus imagé :&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_page_content_hot_3-1.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3107&#34;/&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Pruning : mise à jour du pointeur ce qui tue le tuple 2&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Lors de la première requête qui suit l&amp;rsquo;&lt;code&gt;UPDATE&lt;/code&gt; et qui lit les données de la table (un &lt;code&gt;SELECT&lt;/code&gt; par exemple), PostgreSQL opère un processus de pruning :&lt;br&gt;il met à jour le pointeur du tuple 2 et remplace la valeur de position du tuple 2 par celle du pointeur de la nouvelle version (ici le pointeur 4).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ainsi, lors d&amp;rsquo;une lecture de la donnée, c&amp;rsquo;est toujours le pointeur 2 qui sera lu en premier mais PostgreSQL est directement redirigé vers le nouveau pointeur (le 4) qui l&amp;rsquo;envoi ainsi vers le nouveau tuple (le 4 donc). Ceci permet de ne pas avoir à modifier les index dans ce type de situation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que dans le cas d&amp;rsquo;une lecture séquentiel, cette opération (de redirection) est similaire en temps et en coût que de lire directement le pointeur 4.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_page_content_hot_4-1.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3108&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;PostgreSQL effectue ensuite une défragmentation de la page en supprimant physiquement le tuple 2 (ce qui entraine un « décalage » des tuples pour combler l&amp;rsquo;espace vide). Cette défragmentation ne concerne pas les pointeurs, le 2&lt;sup&gt;ème&lt;/sup&gt; reste donc présent, référençant toujours le pointeur 4 (toujours pour ne pas avoir à toucher aux index).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le processus de lecture est donc identique à l&amp;rsquo;étape précédente mais de l&amp;rsquo;espace est rendu disponible.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que si un second &lt;code&gt;HOT UPDATE&lt;/code&gt; est réalisé sur le même tuple et ceci juste après le premier &lt;code&gt;HOT UPDATE&lt;/code&gt;, la nouvelle version est insérée dans l&amp;rsquo;espace qui aurait du être nettoyé par la défragmentation, le pointeur qui redirigeait vers un autre pointeur (pt&lt;sub&gt;1-2&lt;/sub&gt; dans notre exemple) est alors rétabli. La défragmentation nettoiera alors le tuple intermédiaire ainsi que son pointeur (pt&lt;sub&gt;1-4&lt;/sub&gt;, tuple 4).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le &lt;code&gt;HOT UPDATE&lt;/code&gt; est ainsi plus rapide à executer qu&amp;rsquo;un &lt;code&gt;UPDATE&lt;/code&gt; classique et permet de libérer de l&amp;rsquo;espace en évitant de conserver l&amp;rsquo;ancien tuple.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous savez maintenant plus précisément comment fonctionne le stockage physique. Vous voyez ainsi que lorsque beaucoup d&amp;rsquo;opérations sont faites, des lignes mortes ainsi que des pointeurs supplémentaires sont présents dans vos tables ce qui entraine une grande perte d&amp;rsquo;espace.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Heureusement, un outil spécifique existe pour nettoyer tout cela : le &lt;code&gt;VACUUM&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;vacuum&#34;&gt;VACUUM&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Passons l&amp;rsquo;aspirateur ! Ce n&amp;rsquo;est pas pour rien que le mot &lt;em&gt;VACUUM&lt;/em&gt; a été choisi pour cette opération&amp;#8230;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le VACUUM consiste en le nettoyage d&amp;rsquo;une table afin d&amp;rsquo;en retirer tous les éléments qui ne sont plus utiles (lignes mortes) ainsi que de réarranger les éléments pour gagner de la place.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Deux types de VACUUM existent :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Le Plain VACUUM (standard) : nettoyage rapide et défragmentation partielle de la table.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Le VACUUM FULL (complet) : nettoyage et défragmentation complets de la table.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;opération de VACUUM est lancée automatiquement par PostgreSQL via l&amp;rsquo;autovacuum.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;VACUUM standard&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le VACUUM standard (ou VACUUM concurrentiel ou Plain VACUUM) peut être exécuter sans verrouiller la table sur laquelle il porte.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il opère les actions suivantes :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Analyse des pages pour identifier les tuples morts (issus d&amp;rsquo;un &lt;code&gt;UPDATE&lt;/code&gt;, d&amp;rsquo;un &lt;code&gt;DELETE&lt;/code&gt; ou d&amp;rsquo;une transaction abandonnée).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;FREEZE des tuples si nécessaire (voir le chapitre VACUUM FREEZE)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Suppression des entrées des index correspondant à des tuples morts.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Pour chaque page :&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Suppression des tuples morts&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Défragmentation de la page pour récupérer l&amp;rsquo;espace des tuples morts.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Mise à jour de la &lt;em&gt;free space map&lt;/em&gt; et de la &lt;em&gt;visibility map&lt;/em&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Suppression de la dernière page si possible (si aucun tuple vivant dedans).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Mise à jour des statistiques de la table dans les tables système.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;étape 1 commence par un listing des tuples mort, cette lsite est créée en mémoire. C&amp;rsquo;est pour cette étape que la variable de configuration &lt;code&gt;maintenance_work_mem&lt;/code&gt; est importante. En effet, si sa valeur est trop faible, PostgreSQL devra itérer plusieurs fois sur la table jusqu’à ce qu&amp;rsquo;il ne trouve plus de tuple mort.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;étape 2 est un FREEZE des valeurs &lt;em&gt;xmin&lt;/em&gt; des tuples. Cette opération est détaillée dans le chapitre &lt;a href=&#34;#vacuum_freeze&#34;&gt;VACUUM FREEZE&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;étape 4 se déroule de la façon suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_vac_plain_1.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3114&#34;/&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;État initial : un tuple est considéré comme mort&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_vac_plain_2.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3115&#34;/&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Les données sont effacées et le pointeur du tuple est réinitialisé&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_vac_plain_3.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3117&#34;/&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;La défragmentation réorganise les données mais conserve le pointeur 2&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Voici un exemple, repartez de notre table d&amp;rsquo;exemple utilisée précédemment (disponible dans l&amp;rsquo;onglet « initialisation ») puis supprimez quelques lignes et analysezla :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;get_heap_tuple_info()&#34; data-enlighter-group=&#34;start_vacuum_plain&#34;&gt;DELETE FROM public.table_test&#xA;WHERE id IN (6, 3)&#xA;;&#xA;&#xA;SELECT * FROM public.get_heap_tuple_info(&#39;public.table_test&#39;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;Initialisation&#34; data-enlighter-group=&#34;start_vacuum_plain&#34;&gt;-- !!!&#xA;-- Attention à bien exécuter chaque requête dans une transaction spécifique&#xA;-- Ce que permet le COMMIT à la suite de chaque requête si vous lancez tout d&#39;un seul bloc&#xA;-- !!!&#xA;&#xA;-- Création de la table&#xA;CREATE TABLE public.table_test (&#xA;  id int4,&#xA;  commentaire_1 char(1955),&#xA;  commentaire_2 text&#xA;)&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Insertion de données&#xA;INSERT INTO &#xA;  public.table_test (id, commentaire_1, commentaire_2)&#xA;VALUES &#xA;  (1, &#39;A&#39;, &#39;un commentaire&#39;),&#xA;  (2, &#39;B&#39;, &#39;un commentaire vraiment très très très long&#39;)&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Insertion de données&#xA;INSERT INTO &#xA;  public.table_test (id, commentaire_1, commentaire_2)&#xA;VALUES &#xA;  (3, &#39;C&#39;, &#39;un commentaire&#39;),&#xA;  (4, &#39;D&#39;, &#39;un commentaire&#39;),&#xA;  (5, &#39;E&#39;, &#39;un commentaire&#39;),&#xA;  (6, &#39;F&#39;, &#39;un commentaire&#39;)&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Mise à jour de la ligne 2&#xA;UPDATE public.table_test&#xA;SET commentaire_2 = &#39;Un autre commentaire&#39;&#xA;WHERE id = 3&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Suppression de la ligne 4&#xA;DELETE FROM public.table_test&#xA;WHERE id = 4&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Ajout d&#39;une ligne&#xA;INSERT INTO &#xA;  public.table_test (id, commentaire_1, commentaire_2)&#xA;VALUES &#xA;  (7, &#39;G&#39;, &#39;un commentaire&#39;)&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Mise à jour de la ligne 3 (oui encore)&#xA;UPDATE public.table_test&#xA;SET commentaire_2 = &#39;Un commentaire&#39;&#xA;WHERE id = 3&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Sélection des données pour finalisation HOT UPDATE&#xA;SELECT * FROM public.table_test&#xA;;&#xA;COMMIT;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous devriez avoir la structure suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;ctid&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_num&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_index&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;offset_start&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;xmin&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;xmax&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;state&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;visible&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;update&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;delete&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;freeze&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Identifiant de la ligne : numéro de page, numéro d&amp;rsquo;index dans la page&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Numéro de page&lt;/em&gt;.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Numéro d&amp;rsquo;index du tuple dans la page.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Position du début du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;ID de la transaction à partir de laquelle le tuple est visible&lt;/em&gt;.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;&lt;em&gt;ID de la transaction au delà de laquelle le tuple n&amp;rsquo;est plus visible&lt;/em&gt;.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;État du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Visibilité du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Le tuple a-t-il été mis à jour&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Tuple supprimé&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;xmin gelé&lt;/em&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,1)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6184&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4527 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,2)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6072&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4527 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;dead&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,4)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4064&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4528 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4530 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,5)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2056&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4528 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,1)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6184&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4528 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4533 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;redirect to 4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,3)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4176&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4531 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,4)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2168&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4532 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4533 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez la différence entre les tuples non visibles qui ont été mis à jour et les tuples non visibles qui ont été supprimés :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Les premiers ont déjà été nettoyés des tables, leurs pointeurs sont toujours présents mais ne pointent vers rien ou redirigent vers un autre pointeur.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Les seconds en revanche sont toujours présents mais simplement non visibles.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Regardez également le résultat de la requête suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT * FROM public.get_heap_page_info(&#39;public.table_test&#39;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici les résultats :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_num&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;nb_pointer&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;nb_tuple&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;nb_tuple_visible&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;length_pointer&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;length_free_space&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;length_tuple&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Numéro de page&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Nombre de pointeur.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Nombre de tuple.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Nombre de tuples visibles.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Taille de l&amp;rsquo;ensemble des pointeurs.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Taille de l&amp;rsquo;espace libre.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Taille occupée par les tuples.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;20&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2012&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6136&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;16&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2128&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6024&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Lancez un VACUUM puis analysez les données :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;VACUUM public.table_test;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT * FROM public.get_heap_tuple_info(&#39;public.table_test&#39;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici les résultats :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;ctid&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_num&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_index&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;offset_start&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;xmin&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;xmax&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;state&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;visible&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;update&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;delete&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;freeze&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Identifiant de la ligne : numéro de page, numéro d&amp;rsquo;index dans la page&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Numéro de page&lt;/em&gt;.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Numéro d&amp;rsquo;index du tuple dans la page.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Position du début du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;ID de la transaction à partir de laquelle le tuple est visible&lt;/em&gt;.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;&lt;em&gt;ID de la transaction au delà de laquelle le tuple n&amp;rsquo;est plus visible&lt;/em&gt;.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;État du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Visibilité du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Le tuple a-t-il été mis à jour&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Tuple supprimé&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;xmin gelé&lt;/em&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,1)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6184&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4527 &amp;#8211; f&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,2)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6072&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4527 &amp;#8211; f&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;unused&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;unused&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,5)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4064&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4528 &amp;#8211; f&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;unused&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;unused&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,3)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6184&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4531 &amp;#8211; f&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez voir que les tuples vivants ont été réorganisés (modification des offsets), quand aux morts, ils ont été supprimés mais leurs pointeurs sont toujours présents dans un état « inutilisé ».&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Regardez les statistiques au niveau de chaque page :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT * FROM public.get_heap_page_info(&#39;public.table_test&#39;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici les résultats :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_num&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;nb_pointeur&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;nb_tuple&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;nb_tuple_visible&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;length_pointer&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;length_free_space&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;length_tuple&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Numéro de page&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Nombre de pointeur.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Nombre de tuple.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Nombre de tuples visibles.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Taille de l&amp;rsquo;ensemble des pointeurs.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Taille de l&amp;rsquo;espace libre.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Taille occupée par les tuples.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;20&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4020&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4128&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;12&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6148&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2008&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez voir immédiatement que l&amp;rsquo;espace précédemment occupé par les tuples morts a pu être récupéré. Les prochaines insertions se feront alors d&amp;rsquo;abord dans la première page puis dans la seconde avant de créer une éventuelle troisième page.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;En revanche, vous pouvez voir que les pointeurs n&amp;rsquo;ont pas disparus.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez également que les données présentes dans la page 2 pourraient tout à fait être transférées dans la page 1 maintenant qu&amp;rsquo;il y a suffisamment de place., c&amp;rsquo;est le &lt;code&gt;VACUUM FULL&lt;/code&gt; qui permet de faire cela.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;VACUUM FULL&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le VACUUM FULL permet d&amp;rsquo;aller au delà du VACUUM standard. En effet, ce dernier ne permet pas de réduire la taille des tables.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le VACUUM FULL réécrit complètement le &lt;em&gt;heap file&lt;/em&gt; afin de réorganiser les tuples et d&amp;rsquo;éliminer les pages en trop. L&amp;rsquo;avantage est un gain de place qui peut être conséquent.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;inconvénient est que pendant la réécriture, la table n&amp;rsquo;est plus accessible. Un autre inconvénient est que deux versions de la table seront présentes sur le disque lors de la phase de réécriture ce qui peut entrainer des problèmes d&amp;rsquo;espace disque si les données sont très volumineuses.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Reprenez notre exemple (disponible dans l&amp;rsquo;onglet « initialisation ») et analysez la table avec la fonction &lt;code&gt;get_heap_page_info()&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;get_heap_tuple_info()&#34; data-enlighter-group=&#34;start_vacuum_full&#34;&gt;-- Quelques statistiques&#xA;SELECT * FROM public.get_heap_page_info(&#39;public.table_test&#39;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;Initialisation&#34; data-enlighter-group=&#34;start_vacuum_full&#34;&gt;-- !!!&#xA;-- Attention à bien exécuter chaque requête dans une transaction spécifique&#xA;-- Ce que permet le COMMIT à la suite de chaque requête si vous lancez tout d&#39;un seul bloc&#xA;-- !!!&#xA;&#xA;-- Création de la table&#xA;CREATE TABLE public.table_test (&#xA;  id int4,&#xA;  commentaire_1 char(1955),&#xA;  commentaire_2 text&#xA;)&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Insertion de données&#xA;INSERT INTO &#xA;  public.table_test (id, commentaire_1, commentaire_2)&#xA;VALUES &#xA;  (1, &#39;A&#39;, &#39;un commentaire&#39;),&#xA;  (2, &#39;B&#39;, &#39;un commentaire vraiment très très très long&#39;)&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Insertion de données&#xA;INSERT INTO &#xA;  public.table_test (id, commentaire_1, commentaire_2)&#xA;VALUES &#xA;  (3, &#39;C&#39;, &#39;un commentaire&#39;),&#xA;  (4, &#39;D&#39;, &#39;un commentaire&#39;),&#xA;  (5, &#39;E&#39;, &#39;un commentaire&#39;),&#xA;  (6, &#39;F&#39;, &#39;un commentaire&#39;)&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Mise à jour de la ligne 2&#xA;UPDATE public.table_test&#xA;SET commentaire_2 = &#39;Un autre commentaire&#39;&#xA;WHERE id = 3&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Suppression de la ligne 4&#xA;DELETE FROM public.table_test&#xA;WHERE id = 4&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Ajout d&#39;une ligne&#xA;INSERT INTO &#xA;  public.table_test (id, commentaire_1, commentaire_2)&#xA;VALUES &#xA;  (7, &#39;G&#39;, &#39;un commentaire&#39;)&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Mise à jour de la ligne 3 (oui encore)&#xA;UPDATE public.table_test&#xA;SET commentaire_2 = &#39;Un commentaire&#39;&#xA;WHERE id = 3&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Sélection des données pour finalisation HOT UPDATE&#xA;SELECT * FROM public.table_test&#xA;;&#xA;COMMIT;&#xA;&#xA;-- VACUUM Standard&#xA;VACUUM public.table_test&#xA;;&#xA;COMMIT;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici les résultats :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_num&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;nb_pointeur&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;nb_tuple&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;length_free_space&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;unused_line_pointer&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Numéro de page&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Nombre de pointeur.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Nombre de tuple.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Taille de l&amp;rsquo;espace libre.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Présence de pointeurs non utilisés.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4020&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6148&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Maintenant, réalisez un VACUUM FULL :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- VACUUM FULL&#xA;VACUUM FULL public.table_test&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Réanalysons la table :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT * FROM public.get_heap_page_info(&#39;public.table_test&#39;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici le retour :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_num&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;nb_pointeur&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;nb_tuple&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;length_free_space&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;unused_line_pointer&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Numéro de page&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Nombre de pointeur.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Nombre de tuple.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Taille de l&amp;rsquo;espace libre.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Présence de pointeurs non utilisés.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2016&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les tuples ont été réorganisés sur la première page du nouveau fichier. D&amp;rsquo;ailleurs dans l&amp;rsquo;exemple, mon filenode était &lt;strong&gt;350934&lt;/strong&gt; (l&amp;rsquo;OID de la table). Grâce à la fonction &lt;code&gt;get_table_info()&lt;/code&gt; je vois maintenant qu&amp;rsquo;il est égal à &lt;strong&gt;351418&lt;/strong&gt; : le fichier heap a bien été réécrit.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que le VACUUM FULL réécrit également les index, la visibility map ainsi que la free space map.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;vacuum_freeze&#34;&gt;FREEZE des données&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le VACUUM possède une option : &lt;code&gt;FREEZE&lt;/code&gt; qui permet de geler les données. Mais à quoi ça sert ?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h5 class=&#34;wp-block-heading&#34;&gt;ID de transaction&lt;/h5&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Comme vous l&amp;rsquo;avez vu, le système de contrôle d&amp;rsquo;accès simultané (MVCC) utilise l&amp;rsquo;identifiant des transactions pour déterminer la visibilité des tuples. Cet identifiant est nommé &lt;strong&gt;txid&lt;/strong&gt; et est assigné par le gestionnaire de transaction. Il s&amp;rsquo;agit d&amp;rsquo;un nombre entier non signé de 32 bit (soit 2&lt;sup&gt;32&lt;/sup&gt; = 4 294 967 295 valeurs différentes).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ainsi, lorsqu&amp;rsquo;une transaction est en cours, tous les éléments portant un &lt;em&gt;txid&lt;/em&gt; inférieur à celui de la transaction sont considérés comme dans le passé et donc modifiables par la transaction. Tous ceux qui ont un &lt;em&gt;txid&lt;/em&gt; supérieur, sont dans le futur et donc non modifiables par la transaction (cela dépend du mode de transaction utilisé mais ne compliquons pas les choses).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez qu&amp;rsquo;une seule transaction peut contenir plusieurs instructions SQL, chaque instruction se voit alors assigner un identifiant de commande (&lt;strong&gt;cid&lt;/strong&gt;), nombre entier non signé de 32 bits également ; permettant de comparer les résultats des instructions les uns par rapport aux autres, exactement comme avec les &lt;em&gt;txid&lt;/em&gt;, au sein de la transaction. Ceci contraint d&amp;rsquo;ailleurs le système à ne pouvoir exécuter « que » 4,2 milliard d&amp;rsquo;instructions SQL par transaction (on est large&amp;#8230;)&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les &lt;em&gt;txid&lt;/em&gt; suivants sont spéciaux :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;0 : &lt;em&gt;txid&lt;/em&gt; invalide.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;1 : &lt;em&gt;txid&lt;/em&gt; d&amp;rsquo;initialisation du cluster.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;2 : avant PG 9.4, il s&amp;rsquo;agit de la valeur &lt;em&gt;xmin&lt;/em&gt; gelée, maintenant c&amp;rsquo;est un drapeau qui est ajouté au tuple.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;assignement du &lt;em&gt;txid&lt;/em&gt; se produit lorsque la transaction commence à écrire et n&amp;rsquo;indique donc pas l&amp;rsquo;ordre de démarrage des transactions. Ceci implique qu&amp;rsquo;une transaction peut « doubler » une autre. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Par exemple :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Horaire&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Transaction 1&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Transaction 2&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10h00&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Démarrage transaction&lt;br&gt;Début &lt;code&gt;SELECT&lt;/code&gt; sur la table X&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10h05&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Démarrage transaction&lt;br&gt;Début &lt;code&gt;INSERT&lt;/code&gt; sur la table Y&lt;br&gt;&lt;strong&gt;=&amp;gt; Assignation d&amp;rsquo;un txid&lt;/strong&gt; : 1000&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10h06&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Fin &lt;code&gt;INSERT&lt;/code&gt; sur la table Y&lt;br&gt;Fin transaction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10h08&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Fin &lt;code&gt;SELECT&lt;/code&gt; sur la table X&lt;br&gt;Début &lt;code&gt;UPDATE&lt;/code&gt; sur la table Y&lt;br&gt;&lt;strong&gt;=&amp;gt; Assignation d&amp;rsquo;un txid&lt;/strong&gt; : 1001&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10h09&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Fin &lt;code&gt;UPDATE&lt;/code&gt; sur la table Y&lt;br&gt;Fin transaction&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Les actions de la transaction 1 sont considérées comme ayant été réalisées après la transaction 2 bien que cette dernière ait démarrée après&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h5 class=&#34;wp-block-heading&#34;&gt;Bouclage ou wraparound&lt;/h5&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le problème, c&amp;rsquo;est que 4,2 milliards de valeurs ce n&amp;rsquo;est pas forcément assez dans la vie d&amp;rsquo;une base de données. Lorsqu&amp;rsquo;il y a plusieurs milliers de transactions par minutes, le compteur peut être dépassé en moins de 8 ans (ok on est large mais une base avec plusieurs millions de transactions par jour cela peut arriver).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour résoudre ceci, PostgreSQL utilise le bouclage (wraparround) : lorsque les 4,2 milliards de valeurs sont atteintes, le compteur redémarre à 0. Le problème c&amp;rsquo;est qu&amp;rsquo;au moment du bouclage, la transaction portant le &lt;code&gt;txid = 4,1 milliards&lt;/code&gt; qui était dans le passé se retrouve alors dans le futur (le &lt;em&gt;txid&lt;/em&gt; courant étant maintenant inférieur). Pour éviter ce phénomène, PostgreSQL considère que les 2,1 milliards de transactions précédentes sont dans le passé et les 2,1 milliards suivantes dans le futur en tenant compte de ce bouclage.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Par exemple, ma transaction porte le &lt;code&gt;txid = 1000&lt;/code&gt;, la « boucle du temps » serait la suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table is-style-regular&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;txid&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Temporalité&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&amp;lt;- Passé&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;999&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&amp;lt;- Passé&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;mark style=&#34;background-color:rgba(0, 0, 0, 0)&#34; class=&#34;has-inline-color has-bleu-dodger-color&#34;&gt;&lt;strong&gt;1000&lt;/strong&gt;&lt;/mark&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;mark style=&#34;background-color:rgba(0, 0, 0, 0)&#34; class=&#34;has-inline-color has-bleu-dodger-color&#34;&gt;&lt;strong&gt;Présent&lt;/strong&gt;&lt;/mark&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1001&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Futur -&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;sup&gt;31&lt;/sup&gt; + 999&lt;br&gt;2 147 484 647&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Futur -&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;sup&gt;31&lt;/sup&gt; + 1000&lt;br&gt;2 147 484 648&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&amp;lt;- Passé&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;sup&gt;32&lt;/sup&gt;&lt;br&gt;4 294 967 295&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&amp;lt;- Passé&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_freeze_wraparround-2.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3132&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Voici une requête pour connaitre les limites de votre passé et de votre futur :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT &#xA;  txid_current() AS &#34;txid_current&#34;,&#xA;  CASE &#xA;    WHEN txid_current() &amp;lt; 2^31 THEN txid_current() + 2^31 - 1&#xA;    ELSE txid_current() + 2^31 - 2^32 - 1&#xA;  END AS &#34;limite_futur&#34;,&#xA;  CASE &#xA;    WHEN txid_current() &gt; 2^31 THEN txid_current() - 2^31&#xA;    ELSE txid_current() - 2^31 + 2^32&#xA;  END AS &#34;limite_passé&#34;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h5 class=&#34;wp-block-heading&#34;&gt;Gel des données : Freeze&lt;/h5&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le problème qui peut survenir c&amp;rsquo;est que lorsqu&amp;rsquo;il y a eu plus de 2,1 (exactement 2&lt;sup&gt;21&lt;/sup&gt;) milliards de transactions, PostgreSQL va considérer d&amp;rsquo;anciennes transactions comme étant dans le futur. Pas très pratique&amp;#8230;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;C&amp;rsquo;est pour résoudre ce problème que le FREEZE a été inventé. Il permet d&amp;rsquo;ajouter un drapeau sur un tuple indiquant que son &lt;em&gt;xmin &lt;/em&gt;est « gelé », c&amp;rsquo;est à dire que peu importe la valeur du &lt;em&gt;xmin&lt;/em&gt;, il doit être considéré comme inférieur au &lt;em&gt;txid&lt;/em&gt; actuel, même si ce n&amp;rsquo;est pas le cas.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour cela, le VACUUM se charge de geler les lignes adéquates selon les cas suivants :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;VACUUM standard :&lt;/strong&gt; tous les tuples dont le &lt;em&gt;xmin&lt;/em&gt; est inférieur de la valeur à : &lt;code&gt;oldest_current_txid&lt;/code&gt; &amp;#8211; &lt;code&gt;vacuum_freeze_min_age&lt;/code&gt;&lt;br&gt;Le FREEZE n&amp;rsquo;est opéré que sur les pages pour lesquelles le VACUUM opère : les pages contenant des tuples morts. On parle alors de lazy FREEZE (FREEZE paresseux).&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;La valeur de &lt;code&gt;vacuum_freeze_min_age&lt;/code&gt; est définie dans le fichier &lt;em&gt;postgresql.com&lt;/em&gt; et est fixée par défaut fixée à 50 000 000.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;oldest_current_txid&lt;/code&gt; correspond au plus vieux txid des transaction en cours.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;VACUUM FREEZE :&lt;/strong&gt; tous les tuples dont le &lt;em&gt;xmin&lt;/em&gt; est inférieur à &lt;code&gt;oldest_current_txid&lt;/code&gt;.&lt;br&gt;Le FREEZE est opéré sur toutes les pages de la table. On parle de FREEZE aggressif.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;VACUUM FULL :&lt;/strong&gt; équivalent du VACUUM FREEZE, les opérations de nettoyage sont différentes mais les opérations de FREEZE intégrée sont équivalentes.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Si l&amp;rsquo;age de la table (age du plus vieux tuple) dépasse la valeur de la variable &lt;code&gt;vacuum_freeze_table_age&lt;/code&gt; (par défaut 150 000 000) alors le prochain VACUUM lancé s&amp;rsquo;accompagnera d&amp;rsquo;un FREEZE aggressif.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Attention car le gel des tuples d&amp;rsquo;une page implique de réécrire entièrement cette dernière et a donc un coût important. Si le VACUUM prend trop de temps, il est possible de le stopper, le travail déjà accompli en sera pas perdu (notamment sur le gel des données).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A la fin du VACUUM, des statistiques sont calculées et les valeurs suivantes renseignées :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;pg_catalog.pg_class.relfrozenxid&lt;/code&gt; : &lt;em&gt;txid&lt;/em&gt; le plus récent ayant été gelé dans la table.&lt;br&gt;Il s&amp;rsquo;agit de la valeur ayant été utilisée pour geler les tuples (&lt;code&gt;txid&lt;/code&gt; ou &lt;code&gt;txid&lt;/code&gt; &amp;#8211; &lt;code&gt;vacuum_freeze_min_age&lt;/code&gt;), pas forcément du &lt;em&gt;txid&lt;/em&gt; gelé le plus récent ; ce dernier est en effet plus ancien ou égal à cette valeur.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;pg_catalog.pg_database.datfrozenxid&lt;/code&gt; : &lt;em&gt;txid&lt;/em&gt; le plus récent ayant été gelé dans toute la base.&lt;br&gt;Il s&amp;rsquo;agit du &lt;code&gt;pg_catalog.pg_class.relfrozenxid&lt;/code&gt; le plus ancien.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Dans le cas de notre exemple, la colonne &lt;code&gt;max_frozen_txid&lt;/code&gt; de la fonction &lt;code&gt;get_table_info()&lt;/code&gt; vaut &lt;code&gt;pg_catalog.pg_class.relfrozenxid&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;AUTOVACUUM&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote is-layout-flow wp-block-quote-is-layout-flow&#34;&gt;&#xA;&lt;p&gt;Vacuuming is like exercising. If it hurts, you’re not doing it enough!&lt;/p&gt;&#xA;&lt;cite&gt;Robert Haas, PGConf.EU 2023, Prague, 13 décembre 2023&lt;/cite&gt;&lt;/blockquote&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Un VACUUM cela peut être très rapide mais cela peut aussi être très lourd et c&amp;rsquo;est pour cela qu&amp;rsquo;il faut le lancer régulièrement. C&amp;rsquo;est justement le rôle de l&amp;rsquo;autovacuum.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Toutes les minutes (interval paramétrable via le paramètre &lt;code&gt;autovacuum_naptime&lt;/code&gt;), l&amp;rsquo;autovacuum se lance, analyse les données de la vue &lt;code&gt;pg_stat_all_tables&lt;/code&gt; afin de déterminer s&amp;rsquo;il doit lancer un &lt;code&gt;VACUUM&lt;/code&gt; et ou un &lt;code&gt;ANALYSE&lt;/code&gt; sur les différentes tables de la base.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Plusieurs tables peuvent être nettoyées en même temps : un processus de VACUUM sur une table utilise un worker et par défaut jusqu’à trois peuvent être lancés (variable &lt;code&gt;autovacuum_max_workers&lt;/code&gt;).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le déclenchement de l&amp;rsquo;autovacuum sur une table se fait si au moins l&amp;rsquo;une des conditions suivantes est remplie :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt; Le &lt;em&gt;txid&lt;/em&gt; courant est plus récent que :&lt;br&gt;&lt;code&gt;pg_catalog.pg_class.relfrozenxid&lt;/code&gt; + &lt;code&gt;autovacuum_freeze_max_age&lt;/code&gt;&lt;br&gt;Le tuple le plus vieux de la table est plus ancien que la valeur de la variable &lt;code&gt;autovacuum_freeze_max_age&lt;/code&gt; (par défaut 200 000 000).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Le nombre de tuples morts est plus important que :&lt;br&gt;&lt;code&gt;autovacuum_vacuum_threshold&lt;/code&gt; + ( &lt;code&gt;autovacuum_vacuum_scale_factor&lt;/code&gt; × &lt;code&gt;nombre_tuples_relation&lt;/code&gt; )&lt;br&gt;Avec les valeurs par défaut cela correspond à 250 tuples morts pour 1000 tuples dans la table ou 2050 pour 10 000.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Le nombre de tuples insérés est plus important que :&lt;br&gt;&lt;code&gt;autovacuum_vacuum_insert_threshold&lt;/code&gt; + ( &lt;code&gt;autovacuum_vacuum_insert_scale_factor&lt;/code&gt; × &lt;code&gt;nombre_tuples_relation&lt;/code&gt; )&lt;br&gt;Avec les valeurs par défaut cela correspond à 3000 tuples insérés pour 10 000 tuples dans la table.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La valeur par défaut de &lt;code&gt;autovacuum_vacuum_scale_factor&lt;/code&gt; est trop importante pour les grosses tables. Par exemple, une table qui contient 1 000 000 d&amp;rsquo;enregistrements ne se verra nettoyée qu&amp;rsquo;après 200 050 mouvements ce qui est très important. D&amp;rsquo;autant plus que le VACUUM qui sera déclenché risque d&amp;rsquo;être très lourds en raison de la taille importante de la table.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les paramètres suivants sont intéressants :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;maintenance_work_mem&lt;/code&gt; / &lt;code&gt;autovacuum_work_mem&lt;/code&gt; : quantité de mémoire allouée pour les processus de maintenance. N&amp;rsquo;hésitez pas à le pousser jusqu’à 1 Go (au delà, le VACUUM n&amp;rsquo;en a pas l&amp;rsquo;utilité).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;autovacuum_vacuum_scale_factor&lt;/code&gt; : pourcentage de tuples modifiés au delà duquel l&amp;rsquo;autovacuum se lance. Il est intéressant de le définir spécifiquement pour les tables de grande taille.&lt;br&gt;Par exemple pour le passer à 5% : &lt;code&gt;ALTER TABLE table_name SET (autovacuum_vacuum_scale_factor = 0.05);&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;autovacuum_vacuum_insert_scale_factor&lt;/code&gt; : pourcentage de tuples insérés au delà duquel l&amp;rsquo;autovacuum se lance. Il est intéressant de le définir spécifiquement pour les tables de grande taille.&lt;br&gt;Par exemple pour le passer à 5% : &lt;code&gt;ALTER TABLE table_name SET (autovacuum_vacuum_insert_scale_factor = 0.05);&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;autovacuum_max_workers&lt;/code&gt; : nombre de workers pouvant être lancés simultanément durant le processus d&amp;rsquo;autovacuum.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici les statistiques que nous avons actuellement pour la table de notre exemple :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT * FROM public.get_table_info(&#39;public.table_test&#39;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Paramètre&lt;/th&gt;&lt;th&gt;Valeur&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;schema&lt;/td&gt;&lt;td&gt;public&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;table&lt;/td&gt;&lt;td&gt;table_test&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;nb_page&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;tuple_count&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;dead_tuple_count&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;max_frozen_txid&lt;/td&gt;&lt;td&gt;4644&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;n_tup_ins&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;n_tup_upd&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;n_tup_del&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;n_mod_since_analyze&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;n_ins_since_vacuum&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;last_vacuum&lt;/td&gt;&lt;td&gt;2024-01-01 01:01:01.000 +0100&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;last_autovacuum&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;last_analyze&lt;/td&gt;&lt;td&gt;2024-01-01 01:01:01.000 +0100&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;last_autoanalyze&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Pour en savoir plus&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voila un très gros résumé de comment PostgreSQL gère les données physiquement. Vous pouvez pousser le sujet en consultant les ressources suivantes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Sur le stockage physique :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/storage.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.postgresql.org/docs/current/storage.html&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/storage-page-layout.htm&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.postgresql.org/docs/current/storage-page-layout.html&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/pageinspect.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.postgresql.org/docs/current/pageinspect.html&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/pgstattuple.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.postgresql.org/docs/current/pgstattuple.html&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/ddl-system-columns.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.postgresql.org/docs/current/ddl-system-columns.html&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Sur le système de contrôle concurrentiel :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/transaction-id.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.postgresql.org/docs/current/transaction-id.html&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.interdb.jp/pg/pgsql05.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.interdb.jp/pg/pgsql05.html&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.thenile.dev/blog/transaction-isolation-postgres&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.thenile.dev/blog/transaction-isolation-postgres&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://medium.com/quadcode-life/structure-of-heap-table-in-postgresql-d44c94332052&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://medium.com/quadcode-life/structure-of-heap-table-in-postgresql-d44c94332052&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://postgrespro.com/blog/pgsql/5967892&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://postgrespro.com/blog/pgsql/5967892&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://idrawone.github.io/2020/10/09/Heap-Page-in-details/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://idrawone.github.io/2020/10/09/Heap-Page-in-details/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Sur les TOAST :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/storage-toast.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.postgresql.org/docs/current/storage-toast.html&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.anayrat.info/en/2022/02/14/postgresql-toast-compression-and-toast_tuple_target/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://blog.anayrat.info/en/2022/02/14/postgresql-toast-compression-and-toast_tuple_target/&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.fastware.com/blog/what-is-the-new-lz4-toast-compression-in-postgresql-14&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.postgresql.fastware.com/blog/what-is-the-new-lz4-toast-compression-in-postgresql-14&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Sur le VACUUM :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/maintenance.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.postgresql.org/docs/current/maintenance.html&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.interdb.jp/pg/pgsql05/10.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.interdb.jp/pg/pgsql05/10.html&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.interdb.jp/pg/pgsql06.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.interdb.jp/pg/pgsql06.html&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://public.dalibo.com/exports/formation/manuels/modules/m5/m5.handout.html#param%C3%A9trage-de-vacuum-autovacuum&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://public.dalibo.com/exports/formation/manuels/modules/m5/m5.handout.html#param%C3%A9trage-de-vacuum-autovacuum&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://pankajconnect.medium.com/vacuum-and-vacuum-full-postgresql-4c9da30a1500&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://pankajconnect.medium.com/vacuum-and-vacuum-full-postgresql-4c9da30a1500&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</content>
    <link href="https://blog.arthurbazin.com/bdd/postgresql/stockage-physique-gestion-des-donnees-et-vacuum" rel="alternate"></link>
    <summary type="html">Base de données ou fichiers plats ? Saviez-vous que PostgreSQL stockait les données dans des fichiers plats ? Démystifions un peu ce fonctionnement.</summary>
    <author>
      <name>Arthur Bazin</name>
    </author>
  </entry>
  <entry>
    <title>Ouvrez les fenêtres de PostgreSQL – Guide complet sur le fenêtrage</title>
    <updated>2024-01-04T16:39:54Z</updated>
    <id>tag:blog.arthurbazin.com,2024-01-04:/bdd/postgresql/ouvrez-les-fenetres-de-postgresql-guide-complet-sur-le-fenetrage</id>
    <content type="html">&#xA;&lt;p&gt;Sous PostgreSQL, il est possible d&amp;rsquo;effectuer des opérations de statistique (de type agrégat) sur un ensemble de lignes sans avoir à les agréger grâce aux fonctions de fenêtrage. Il devient ainsi possible de calculer des valeurs cumulées ou encore des sommes par unité de temps (dans le cas de données datées)&amp;#8230;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le fenêtrage permet en outre de définir la porté de la fonction, c&amp;rsquo;est à dire de spécifier les limites des regroupements de lignes utilisés dans la fonction.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici un exemple de ce qu&amp;rsquo;il est possible de calculer : les deux dernières colonnes se basent sur des fonctions de fenêtrage.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Identifiant&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Date&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Valeur&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Cumul&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Moyenne par mois&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;01/01/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;9&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10/01/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;7&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;17&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;9&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;20/01/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;27&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;9&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;D&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;01/02/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;20&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;47&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;21&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;E&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10/02/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;23&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;70&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;21&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;F&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;20/02/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;20&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;90&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;21&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;G&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;01/03/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;100&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;11&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;H&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10/03/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;13&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;113&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;11&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;I&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;20/03/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;123&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;11&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Syntaxe&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Clause WINDOW&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La syntaxe est relativement simple : il suffit d&amp;rsquo;utiliser une fonction de fenêtrage dans la clause &lt;code&gt;SELECT&lt;/code&gt; puis définir la fenêtre à utiliser dans la clause &lt;code&gt;WINDOW&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT&#xA;&#x9;colonne_1,&#xA;&#x9;colonne_2,&#xA;&#x9;fonction_fenetre(colonne_3) OVER ma_fenetre&#xA;FROM&#xA;&#x9;mon_schema.ma_table&#xA;WINDOW&#xA;&#x9;ma_fenetre as (&#xA;&#x9;&#x9;--definition&#xA;&#x9;)&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez qu&amp;rsquo;il est possible de définir la fenêtre directement après la fonction de fenêtrage :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT&#xA;&#x9;colonne_1,&#xA;&#x9;colonne_2,&#xA;&#x9;fonction_fenetre(colonne_3) OVER (&#xA;&#x9;&#x9;--definition&#xA;&#x9;)&#xA;FROM&#xA;&#x9;mon_schema.ma_table&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il est tout à fait possible de définir plusieurs fenêtres dans la clause &lt;code&gt;WINDOW&lt;/code&gt; afin d&amp;rsquo;utiliser des portées différentes dans chaque fonction.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Attention les lignes vues par la fenêtre dépendent des clauses présentes dans votre requête :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;La clause &lt;code&gt;WHERE&lt;/code&gt; restreint le nombre de lignes dans le résultat de la requête mais également dans la fenêtre.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Avec la clause &lt;code&gt;GROUP BY&lt;/code&gt;, les lignes vues par la fenêtre sont les lignes regroupées et non les lignes d&amp;rsquo;origines.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La clause &lt;code&gt;HAVING&lt;/code&gt; restreint le nombre de lignes groupées visibles par la fenêtre.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Définition&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La définition d&amp;rsquo;une fenêtre peut faire appel à différents éléments, tous optionnels :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;La clause &lt;code&gt;PARTITION BY&lt;/code&gt; : comment regrouper les lignes ?&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La clause &lt;code&gt;ORDER BY&lt;/code&gt; : comment ordonnancer les lignes ?&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La limite de la fenêtre : quelles lignes du groupe faut-il utiliser ?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;WINDOW&#xA;&#x9;ma_fenetre as (&#xA;&#x9;&#x9;-- Regroupement&#xA;&#x9;&#x9;PARTITION BY &#xA;&#x9;&#x9;&#x9;ma_colonne_1&#xA;&#x9;&#x9;-- Ordonnancement&#xA;&#x9;&#x9;ORDER BY &#xA;&#x9;&#x9;&#x9;ma_colonne_2&#xA;&#x9;&#x9;-- Limites&#xA;&#x9;&#x9;ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING&#xA;&#x9;)&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;PARTITION BY : regroupement&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La clause de regroupement &lt;code&gt;PARTITION BY&lt;/code&gt; permet de grouper les lignes issues de la requêtes en partitions. Chacune de ces partitions est traitée individuellement par la fonction de fenêtrage. Ainsi, chaque ligne se voit attribuer une valeur calculée par la fonction de fenêtrage en fonction de la partition à laquelle elle appartient. Par exemple la somme ou encore la valeur moyenne de toutes les valeurs d&amp;rsquo;une partition.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cette clause attend une expression pouvant contenir une ou plusieurs colonnes ainsi que des expressions SQL (fonction, calcul&amp;#8230;).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Si cette clause n&amp;rsquo;est pas spécifiée alors toutes les lignes de la requête sont considérées comme faisant partie de la même partition.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici deux exemples de regroupement.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Identifiant&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;pays&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Groupe calculé par &lt;code&gt;PARTITION BY&lt;/code&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;France&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Groupe 1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;France&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Groupe 1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Suisse&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Groupe 2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Suisse&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Groupe 2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;france&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Groupe 3&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Regroupement basé sur une colonne : &lt;code&gt;PARTITION BY pays&lt;/code&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Identifiant&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;ma_colonne_date&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Groupe calculé par &lt;code&gt;PARTITION BY&lt;/code&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;01/01/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Groupe 1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;22/03/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Groupe 2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;08/04/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Groupe 3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;14/03/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Groupe 2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;15/01/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Groupe 1&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Regroupement basé sur une expression : &lt;code&gt;PARTITION BY extract(MONTH FROM ma_colonne_date)&lt;/code&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que le regroupement des valeurs entraine un ordonnancement de celles-ci qui influe sur l&amp;rsquo;ordre des lignes dans les résultats de la requête. Il pourra être nécessaire d&amp;rsquo;utiliser la clause &lt;code&gt;ORDER BY&lt;/code&gt; (dans la requête, pas le &lt;code&gt;ORDER BY&lt;/code&gt; de la fenêtre) pour spécifier un ordre particulier des résultats.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;ORDER BY : l&amp;rsquo;ordonnancement&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Selon le calcul réalisé, il peut être intéressant d&amp;rsquo;ordonnancer les valeurs de la fenêtre. Par exemple dans le cas d&amp;rsquo;une somme cumulée (croissante ou décroissante), il est important que les valeurs au sein d&amp;rsquo;une partition soient triées.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cette clause attend une expression permettant d&amp;rsquo;ordonnancer les lignes, cela peut être une ou plusieurs colonnes ainsi que des expressions SQL (fonction, calcul…).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Identifiant&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;ma_colonne_date&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Rang calculé par &lt;code&gt;ORDER BY&lt;/code&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;01/01/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;22/03/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;01/01/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;14/03/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;15/01/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Ordonnancement basé sur une colonne, &lt;code&gt;ma_colonne_date&lt;/code&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les options suivantes peuvent être utilisées :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;ASC&lt;/code&gt; ou &lt;code&gt;DESC&lt;/code&gt; : pour spécifier un tri ascendant ou descendant.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;NULLS { FIRST | LAST }&lt;/code&gt;  pour gérer l&amp;rsquo;ordre des valeurs nulles (en premier ou en dernier).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Lorsque plusieurs fonctions de fenêtrage sont utilisées, les valeurs peuvent être triées plusieurs fois de suites.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Les fenêtre ayant des clauses &lt;code&gt;PARTITION BY&lt;/code&gt; et &lt;code&gt;ORDER BY&lt;/code&gt; équivalente seront évaluées en même temps et auront donc exactement le même ordre de tri (même si &lt;code&gt;ORDER BY&lt;/code&gt; ne définit pas une façon unique de trier les lignes).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Les fenêtres ayant des clauses &lt;code&gt;PARTITION BY&lt;/code&gt; et &lt;code&gt;ORDER BY&lt;/code&gt; différentes seront évaluées séparément. Il en résulte un tri potentiellement différent entre deux fenêtres ayant des partions différentes mais un ordre de tri identique (lorsque &lt;code&gt;ORDER BY&lt;/code&gt; ne définit pas une façon unique de trier les lignes).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que l&amp;rsquo;ordonnancement des valeurs influe sur l&amp;rsquo;ordre des lignes dans les résultats de la requête. Il pourra être nécessaire d&amp;rsquo;utiliser la clause &lt;code&gt;ORDER BY&lt;/code&gt; (dans la requête, pas le &lt;code&gt;ORDER BY&lt;/code&gt; de la fenêtre) pour spécifier un ordre particulier des résultats.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Clause de portée : les limites de la fenêtre&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les fonctions ne portent pas directement sur toutes les ligne de la partition qu&amp;rsquo;elles sont en train de traiter. En fait, leur calcul est dépendant de la ligne en cour de traitement. En effet, chaque fenêtre possède un portée limitée au sein de la partition définie (par &lt;code&gt;PARTITION BY&lt;/code&gt;).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Par défaut, cette limite s&amp;rsquo;étend à toute la partition sauf dans le cas où une clause &lt;code&gt;ORDER BY&lt;/code&gt; est définie pour la fenêtre. Dans ce dernier cas, la limite est comprise entre « toutes les lignes précédentes » et « la ligne actuelle ». Donc la fonction ne « voient » pas les lignes qui « suivent » au sein de la même partition.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les limites se définissent de la façon suivante : &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Le mode de définition&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La limite de début&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La limite de fin&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Les exclusions&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;{ROWS | RANGE | GROUPS}&#xA;BETWEEN&#xA;&#x9;{UNBOUNDED PRECEDING | n PRECEDING | CURRENT ROW | n FOLLOWING | UNBOUNDED FOLLOWING}&#xA;AND&#xA;&#x9;{UNBOUNDED PRECEDING | n PRECEDING | CURRENT ROW | n FOLLOWING | UNBOUNDED FOLLOWING}&#xA;EXCLUDE &#xA;&#x9;{CURRENT ROW | EXCLUDE GROUP | EXCLUDE TIES | EXCLUDE NO OTHERS}&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il existe trois modes de définition des limites :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;ROWS&lt;/code&gt; : que je traduis par ligne.&lt;br&gt;On définit un nombre spécifique de lignes avant ou après la ligne courante.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;GROUPS&lt;/code&gt; : que je traduis par rang.&lt;br&gt;On définit un nombre de rangs séparant la limite de la ligne courante.&lt;br&gt;Le rang de chaque ligne est définit avec la clause &lt;code&gt;ORDER BY&lt;/code&gt;.&lt;br&gt;Plusieurs lignes peuvent avoir le même rang, on parle alors de « groupe de lignes équivalentes » dans le tri ce qui équivaut à « groupe de ligne ayant le même rang » dans le tri.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;RANGE&lt;/code&gt; : (mode par défaut) que je traduis par intervalle.&lt;br&gt;On définit un intervalle d&amp;rsquo;écart entre la ligne courante et la limite&lt;br&gt;L&amp;rsquo;intervalle est calculé sur une colonne unique définie dans la clause &lt;code&gt;ORDER BY&lt;/code&gt;.&lt;br&gt;Le type de l&amp;rsquo;intervalle dépend de la colonne spécifiée (numérique, date&amp;#8230;).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La définition des limites peut utiliser les éléments suivants :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;UNBOUNDED PRECEDING&lt;/code&gt; : toutes les lignes précédentes (limite inférieur par défaut)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;n PRECEDING&lt;/code&gt; : &#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;ROWS&lt;/code&gt; : n = nombre de ligne.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;GROUPS&lt;/code&gt; : n = nombre de rang/groupe.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;RANGE&lt;/code&gt; : n = intervalle avec la ligne actuelle.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;CURRENT ROW&lt;/code&gt; : (limite supérieur par défaut)&lt;br&gt;Équivalent à &lt;code&gt;0 PRECEDING&lt;/code&gt; ou &lt;code&gt;0 FOLLOWING&lt;/code&gt;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;ROWS&lt;/code&gt; : la ligne courante.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;GROUPS&lt;/code&gt; : la ligne courante ainsi que toutes les lignes ayant le même rang selon la clause &lt;code&gt;ORDER BY&lt;/code&gt;.&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;En début de portée, la ligne utilisée sera la première ligne retournée ayant un rang équivalent à la ligne courante.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;En fin de portée, la ligne utilisée sera la dernière ligne retournée ayant un rang équivalent à la ligne courante.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;RANGE&lt;/code&gt; : la ligne courante ainsi que toutes les lignes ayant le même rang selon la clause &lt;code&gt;ORDER BY&lt;/code&gt;.&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;En début de portée, la ligne utilisée sera la première ligne retournée ayant un rang équivalent à la ligne courante.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;En fin de portée, la ligne utilisée sera la dernière ligne retournée ayant un rang équivalent à la ligne courante.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;n FOLLOWING&lt;/code&gt; :&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;ROWS&lt;/code&gt; : n = nombre de ligne.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;GROUPS&lt;/code&gt; : n = nombre de rang/groupe.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;RANGE&lt;/code&gt; : n = intervalle avec la ligne courante.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;UNDOUNDED FOLLOWING&lt;/code&gt; : toutes les lignes suivantes.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Attention aux restrictions suivantes :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;le début de la portée ne peut valoir &lt;code&gt;UNBOUNDED FOLLOWING&lt;/code&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La fin de la portée ne peut valoir &lt;code&gt;UNBOUNDED PRECEDING&lt;/code&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Le début de la portée doit toujours être inférieur à la fin de la portée (&lt;code&gt;ROWS BETWEEN 7 PRECEDING AND 8 PRECEDING&lt;/code&gt; ne donne aucune ligne et &lt;code&gt;RANGE BETWEEN CURRENT ROW AND &lt;em&gt;n&lt;/em&gt; PRECEDING&lt;/code&gt; renvoie une erreur).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que lorsque la clause &lt;code&gt;ORDER BY&lt;/code&gt; n&amp;rsquo;est pas spécifiée, toutes les lignes sont considérées comme ayant le même rang. Ainsi, il est important de tenir compte de cet élément dans les modes &lt;code&gt;GROUPS&lt;/code&gt; et &lt;code&gt;RANGE&lt;/code&gt; et par conséquent avec la limite par défaut qui est la suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;RANGE BETWEEN&#xA;&#x9;UNBOUNDED PRECEDING&#xA;AND&#xA;&#x9;CURRENT ROW&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;En effet, avec la limite par défaut, toutes les lignes entre la première de la partition et la ligne courante incluant les lignes de même rang sont utilisées. Ainsi, deux cas de figure se présentes :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Une clause &lt;code&gt;ORDER BY&lt;/code&gt; est spécifiée : une partie seulement des lignes de la partition est utilisée.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Aucune clause &lt;code&gt;ORDER BY&lt;/code&gt; n&amp;rsquo;est spécifiée : toutes les lignes possèdent le même rang, ainsi elles sont toutes incluses dans la fenêtre.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Dans tous les cas, la distance jusqu&amp;rsquo;à la fin de la portée est limitée par la distance jusqu&amp;rsquo;à la fin de la partition. Si la limite dépasse la fin de la partition, alors la dernière ligne est la dernière de la partition.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il est enfin possible de définir un ensemble de lignes à exclure de la fenêtre avec la clause &lt;code&gt;EXCLUDE&lt;/code&gt; qui peut prendre les valeurs suivantes :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;EXCLUDE NO OTHERS&lt;/code&gt; : ne rien exclure (comportement par défaut).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;CURRENT ROW&lt;/code&gt; : exclure la ligne courante.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;EXCLUDE GROUP&lt;/code&gt; : exclure la ligne courante ainsi que toutes les lignes de même rang selon la clause &lt;code&gt;ORDER BY&lt;/code&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;EXCLUDE TIES&lt;/code&gt; : conserver la ligne courante mais exclure toutes les lignes de même rang selon la clause &lt;code&gt;ORDER BY&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Fenêtres de fenêtre&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Lorsqu&amp;rsquo;une fenêtre est définie sans clause de portée, il est possible d&amp;rsquo;en définir une seconde à partir de celle-ci.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Dans ce cas :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;La seconde reprend le partitionnement de la fenêtre source.&lt;br&gt;Il est impossible de spécifier une clause &lt;code&gt;PARTITION BY&lt;/code&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La seconde reprend l&amp;rsquo;ordonnancement de la fenêtre source si la clause &lt;code&gt;ORDER BY&lt;/code&gt; existe.&lt;br&gt;Dans ce cas, il est impossible de spécifier une clause &lt;code&gt;ORDER BY&lt;/code&gt;.&lt;br&gt;Sinon, la seconde peut se voir définir un clause &lt;code&gt;ORDER BY&lt;/code&gt; qui lui sera spécifique.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La seconde peut avoir ses propres limites de fenêtre via sa propre clause de portée.&lt;br&gt;Si les limites ne sont pas définies, les limites par défaut s&amp;rsquo;appliquent (&lt;code&gt;RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW&lt;/code&gt;).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici un exemple :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;WINDOW&#xA;&#x9;ma_fenetre as (&#xA;&#x9;&#x9;-- Regroupement&#xA;&#x9;&#x9;PARTITION BY &#xA;&#x9;&#x9;&#x9;ma_colonne_1&#xA;&#x9;),&#xA;&#xA;&#x9;ma_seconde_fenetre as (&#xA;&#x9;&#x9;-- Fenêtre source&#xA;&#x9;&#x9;ma_fenetre&#xA;&#x9;&#x9;-- Ordonnancement (car la fenêtre source ne spécifie pas de clause ORDER BY)&#xA;&#x9;&#x9;ORDER BY &#xA;&#x9;&#x9;&#x9;ma_colonne_2&#xA;&#x9;&#x9;-- Limites spécifiques&#xA;&#x9;&#x9;ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING&#xA;&#x9;)&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Les fonctions&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les fonctions de fenêtrage peuvent être utilisées dans les clauses &lt;code&gt;SELECT&lt;/code&gt; et &lt;code&gt;ORDER BY&lt;/code&gt; uniquement.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ces fonctions regroupent à la fois les fonctions spécifiques au fenêtrage (&lt;a href=&#34;https://www.postgresql.org/docs/current/functions-window.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;documentées ici&lt;/a&gt;) ainsi que certaines fonctions d&amp;rsquo;agrégation : celles à but général (&lt;a href=&#34;https://www.postgresql.org/docs/current/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;documentées ici&lt;/a&gt;) et celles à but statistique (&lt;a href=&#34;https://www.postgresql.org/docs/current/functions-aggregate.html#FUNCTIONS-AGGREGATE-STATISTICS-TABLE&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;documentées ici&lt;/a&gt;) mais pas les autres.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La syntaxe est la suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT&#xA;&#x9;fonction_fenetre(colonne) OVER ma_fenetre&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Lors de l&amp;rsquo;utilisation de fonctions d&amp;rsquo;agrégation avec une fenêtre, il n&amp;rsquo;est pas possible d&amp;rsquo;utiliser les clauses &lt;code&gt;DISTINCT&lt;/code&gt; et &lt;code&gt;ORDER BY&lt;/code&gt; dans les arguments de la fonction comme habituellement avec les fonctions d&amp;rsquo;agrégation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;En revanche, ces fonctions d&amp;rsquo;agrégation autorisent le filtrage des lignes utilisées par celles-ci grâce à la clause &lt;code&gt;FILTER&lt;/code&gt; de la façon suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT&#xA;&#x9;fonction_fenetre(colonne) FILTER ( WHERE ma_clause_where ) OVER ma_fenetre&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il est ainsi possible d&amp;rsquo;utiliser n&amp;rsquo;importe quelle condition qui sera testée sur chaque ligne de la fenêtre avant de fournir celles-ci à la fonction. Les lignes ne satisfaisant pas la conditions seront ignorées.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici les principales fonctions de fenêtrage :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table alignwide has-fixed-layout is-style-stripes&#34;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Fonction&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;row_number()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Numéro de ligne&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;rank()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Rang de l&amp;rsquo;objet avec trou. &lt;br&gt;Comme row_number() mais deux objets peuvent avoir le même rang.&lt;br&gt;Par exemple : &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;5&lt;/code&gt;, &lt;code&gt;6&lt;/code&gt;, &lt;code&gt;7&lt;/code&gt;, &lt;code&gt;7&lt;/code&gt;, &lt;code&gt;9&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;dense_rank()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Rang de l&amp;rsquo;objet sans trou. &lt;br&gt;Comme rank() mais si plusieurs objets ont le même rang, l&amp;rsquo;objet d&amp;rsquo;après possède le rang suivant.&lt;br&gt;Par exemple : &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt;, &lt;code&gt;4&lt;/code&gt;, &lt;code&gt;5&lt;/code&gt;, &lt;code&gt;5&lt;/code&gt;, &lt;code&gt;6&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;percent_rank()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Rang en pourcentage (de 0% à 100%) : (rang -1) / (nb_ligne_total &amp;#8211; 1).&lt;br&gt;Par exemple (pour 4 valeurs) : &lt;code&gt;0%&lt;/code&gt;, &lt;code&gt;33%&lt;/code&gt;, &lt;code&gt;66%&lt;/code&gt;, &lt;code&gt;100%&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;cume_dist()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Rang en pourcentage (de n% à 100%) : (nb_lignes_précédentes + nb_ligne_même_rang + 1) / (nb_ligne_total).&lt;br&gt;Par exemple (pour 4 valeurs) : &lt;code&gt;25%&lt;/code&gt;, &lt;code&gt;50%&lt;/code&gt;, &lt;code&gt;75%&lt;/code&gt;, &lt;code&gt;100%&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;first_value(colonne_1)&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Première valeur issue de la fenêtre pour la colonne indiquée.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;last_value(colonne_1)&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Dernière valeur issue de la fenêtre pour la colonne indiquée.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;nth_value(colonne_1,n)&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Valeur &amp;lsquo;n&amp;rsquo; issue de la fenêtre pour la colonne indiquée.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;lag(colonne_1,n,&#39;text&#39;)&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Valeur issue de la fenêtre pour la colonne indiquée située n lignes (defaut = &lt;code&gt;1&lt;/code&gt;) avant la ligne évaluée. &lt;br&gt;Si aucune valeur n&amp;rsquo;existe, &amp;lsquo;text&amp;rsquo; (défaut = &lt;code&gt;NULL&lt;/code&gt;) est renvoyée.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;lead(colonne_1,n,&#39;text&#39;)&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Valeur issue de la fenêtre pour la colonne indiquée située n lignes (defaut = &lt;code&gt;1&lt;/code&gt;) après la ligne évaluée. &lt;br&gt;Si aucune valeur n&amp;rsquo;existe, &amp;lsquo;text&amp;rsquo; (défaut = &lt;code&gt;NULL&lt;/code&gt;) est renvoyée.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Exemples&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Exemple basique&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Données d&amp;rsquo;exemple&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour réaliser nos exemples, nous allons utiliser les données suivantes :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;identifiant&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;groupe&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;ordre&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;valeur&lt;/td&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;11&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;12&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;13&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;20&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;21&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;22&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;23&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;30&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;31&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;32&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;33&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici la requête qui permet de créer une table contenant ces données, notez que les lignes sont dans le désordre (pour mieux apprécier le fonctionnement des fenêtres) :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- DROP TABLE public.test_fenetrage;&#xA;&#xA;CREATE TABLE public.test_fenetrage AS &#xA;SELECT&#xA;&#x9;*&#xA;FROM (&#xA;&#x9;VALUES&#xA;&#x9;&#x9;(&#39;C-3&#39;, &#39;C&#39;, 2, 32),&#xA;&#x9;&#x9;(&#39;A-1&#39;, &#39;A&#39;, 1, 10),&#xA;&#x9;&#x9;(&#39;C-1&#39;, &#39;C&#39;, 4, 30),&#xA;&#x9;&#x9;(&#39;B-4&#39;, &#39;B&#39;, 3, 23),&#xA;&#x9;&#x9;(&#39;B-3&#39;, &#39;B&#39;, 2, 22),&#xA;&#x9;&#x9;(&#39;A-2&#39;, &#39;A&#39;, 2, 11),&#xA;&#x9;&#x9;(&#39;C-4&#39;, &#39;C&#39;, 1, 33),&#xA;&#x9;&#x9;(&#39;B-1&#39;, &#39;B&#39;, 1, 20),&#xA;&#x9;&#x9;(&#39;C-2&#39;, &#39;C&#39;, 3, 31),&#xA;&#x9;&#x9;(&#39;A-3&#39;, &#39;A&#39;, 3, 12),&#xA;&#x9;&#x9;(&#39;A-4&#39;, &#39;A&#39;, 4, 13),&#xA;&#x9;&#x9;(&#39;B-2&#39;, &#39;B&#39;, 2, 21)&#xA;) as t1 (identifiant, groupe, ordre, valeur)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Fenêtre par défaut&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici un premier test avec la fenêtre par défaut :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT&#xA;&#x9;identifiant,&#xA;&#x9;row_number() OVER ma_fenetre,&#xA;&#x9;rank() OVER ma_fenetre,&#xA;&#x9;lag(identifiant, 1) OVER ma_fenetre,&#xA;&#x9;first_value(identifiant) OVER ma_fenetre,&#xA;&#x9;lead(identifiant, 1) OVER ma_fenetre,&#xA;&#x9;last_value(identifiant) OVER ma_fenetre&#xA;FROM &#xA;&#x9;public.test_fenetrage&#xA;WINDOW&#xA;&#x9;ma_fenetre AS (&#xA;&#x9;&#x9;RANGE&#xA;&#x9;&#x9;&#x9;BETWEEN&#xA;&#x9;&#x9;&#x9;&#x9;UNBOUNDED PRECEDING&#xA;&#x9;&#x9;&#x9;AND&#xA;&#x9;&#x9;&#x9;&#x9;CURRENT ROW&#xA;&#x9;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici le résultat :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;identifiant&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;row_number&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;rank&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;lag&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;first_value&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;lead&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;last_value&lt;/td&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;7&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;8&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;9&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;11&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;12&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous avons le numéro de ligne (&lt;code&gt;row_number&lt;/code&gt;) qui correspond au numéro d&amp;rsquo;ordre des lignes dans la fenêtre. Cette dernière n&amp;rsquo;ayant pas de clause &lt;code&gt;ORDER BY&lt;/code&gt;, il s&amp;rsquo;agit du numéro d&amp;rsquo;ordre dans la table (dans le stockage physique).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous pouvons voir que toutes les lignes possèdent le même rang (&lt;code&gt;rank&lt;/code&gt;) car nous n&amp;rsquo;avons pas utilisé la clause &lt;code&gt;ORDER BY&lt;/code&gt; dans la fenêtre. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous avons également une information sur les valeurs immédiatement précédentes (&lt;code&gt;lag&lt;/code&gt;) et suivantes (&lt;code&gt;lead&lt;/code&gt;) de chaque ligne ainsi que la première (&lt;code&gt;first_value&lt;/code&gt;) et la dernière (&lt;code&gt;last_value&lt;/code&gt;) valeur de la partition (et donc de la table).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous allons utiliser la même fenêtre mais avec une clause &lt;code&gt;ORDER BY&lt;/code&gt; au niveau de la requête :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT&#xA;&#x9;identifiant,&#xA;&#x9;row_number() OVER ma_fenetre,&#xA;&#x9;rank() OVER ma_fenetre,&#xA;&#x9;lag(identifiant, 1) OVER ma_fenetre,&#xA;&#x9;first_value(identifiant) OVER ma_fenetre,&#xA;&#x9;lead(identifiant, 1) OVER ma_fenetre,&#xA;&#x9;last_value(identifiant) OVER ma_fenetre&#xA;FROM &#xA;&#x9;public.test_fenetrage&#xA;WINDOW&#xA;&#x9;ma_fenetre AS (&#xA;&#x9;&#x9;RANGE&#xA;&#x9;&#x9;&#x9;BETWEEN&#xA;&#x9;&#x9;&#x9;&#x9;UNBOUNDED PRECEDING&#xA;&#x9;&#x9;&#x9;AND&#xA;&#x9;&#x9;&#x9;&#x9;CURRENT ROW&#xA;&#x9;)&#xA;ORDER BY&#xA;&#x9;identifiant&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous devriez avoir les résultats suivants :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;identifiant&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;row_number&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;rank&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;lag&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;first_value&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;lead&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;last_value&lt;/td&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;11&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;8&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;12&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;9&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;7&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous avons exactement les mêmes données que précédemment mais l&amp;rsquo;ordre des lignes n&amp;rsquo;est pas le même. Ceci démontre que le fenêtrage permet de calculer des données sur des ensembles bien spécifiques avec un ordre bien spécifique.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Fonctionnement du CURRENT ROW&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Testez la requête suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT&#xA;&#x9;identifiant,&#xA;&#x9;row_number() OVER fenetre_range,&#xA;&#x9;rank() OVER fenetre_range,&#xA;&#x9;first_value(identifiant) OVER fenetre_range as first_value_range,&#xA;&#x9;last_value(identifiant) OVER fenetre_range as last_value_range,&#xA;&#x9;first_value(identifiant) OVER fenetre_row as first_value_row,&#xA;&#x9;last_value(identifiant) OVER fenetre_row as last_value_row&#xA;FROM &#xA;&#x9;public.test_fenetrage&#xA;WINDOW&#xA;&#x9;fenetre_range AS (&#xA;&#x9;&#x9;RANGE&#xA;&#x9;&#x9;&#x9;BETWEEN&#xA;&#x9;&#x9;&#x9;&#x9;CURRENT ROW&#xA;&#x9;&#x9;&#x9;AND&#xA;&#x9;&#x9;&#x9;&#x9;CURRENT ROW&#xA;&#x9;),&#xA;&#x9;fenetre_row AS (&#xA;&#x9;&#x9;ROWS&#xA;&#x9;&#x9;&#x9;BETWEEN&#xA;&#x9;&#x9;&#x9;&#x9;CURRENT ROW&#xA;&#x9;&#x9;&#x9;AND&#xA;&#x9;&#x9;&#x9;&#x9;CURRENT ROW&#xA;&#x9;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Elle renvoie ces résultats :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;identifiant&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;row_number&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;rank&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;first_value_range&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;last_value_range&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;first_value_row&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;last_value_row&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;7&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;8&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;9&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;11&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;12&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voyez la différence entre les modes &lt;code&gt;RANGE&lt;/code&gt; (ou &lt;code&gt;GROUPS&lt;/code&gt;) et &lt;code&gt;ROWS&lt;/code&gt;. Avec les deux premiers modes, &lt;code&gt;CURRENT ROW&lt;/code&gt; inclut toutes les lignes de même rang que la ligne courante. La première ligne correspond alors à la première ligne de même rang que la ligne courante remontée par la requête. C&amp;rsquo;est la même chose pour la dernière ligne.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Comme il n&amp;rsquo;y a pas de sous ordre définit au sein d&amp;rsquo;un même rang, c&amp;rsquo;est l&amp;rsquo;ordre de stockage des lignes qui est utilisé. Ainsi, la première ligne d&amp;rsquo;un rang donné correspond à la première ligne de ce rang rencontré lors du parcours de la table.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Fenêtre partitionnée&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Utilisons maintenant les partitions avec &lt;code&gt;PARTITION BY&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT&#xA;&#x9;identifiant,&#xA;&#x9;groupe,&#xA;&#x9;row_number() OVER ma_fenetre,&#xA;&#x9;rank() OVER ma_fenetre,&#xA;&#x9;lag(identifiant, 1) OVER ma_fenetre,&#xA;&#x9;first_value(identifiant) OVER ma_fenetre,&#xA;&#x9;lead(identifiant, 1) OVER ma_fenetre,&#xA;&#x9;last_value(identifiant) OVER ma_fenetre&#xA;FROM &#xA;&#x9;public.test_fenetrage&#xA;WINDOW&#xA;&#x9;ma_fenetre AS (&#xA;&#x9;&#x9;PARTITION BY&#xA;&#x9;&#x9;&#x9;groupe&#xA;&#x9;&#x9;RANGE&#xA;&#x9;&#x9;&#x9;BETWEEN&#xA;&#x9;&#x9;&#x9;&#x9;UNBOUNDED PRECEDING&#xA;&#x9;&#x9;&#x9;AND&#xA;&#x9;&#x9;&#x9;&#x9;CURRENT ROW&#xA;&#x9;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici le résultat :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;identifiant&lt;/td&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;groupe&lt;/th&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;row_number&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;rank&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;lag&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;first_value&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;lead&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;last_value&lt;/td&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les calculs sont maintenant effectués « par partition ».&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il est intéressant de constater que les lignes ont été réordonnées, c&amp;rsquo;est à cause du &lt;code&gt;PARTITION BY&lt;/code&gt; qui implique une réorganisation des lignes lors du calcul. Notez cependant que les lignes conservent leur positionnement d&amp;rsquo;origine au sein de chaque partition (A-4 est avant A-2 qui est avant A-1 qui est avant A-3 comme dans la table d&amp;rsquo;origine).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Fenêtre ordonnancée&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Remplaçons les partitions par &lt;code&gt;ORDER BY&lt;/code&gt; afin d’ordonnancer nos valeurs :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT&#xA;&#x9;identifiant,&#xA;&#x9;ordre,&#xA;&#x9;row_number() OVER ma_fenetre,&#xA;&#x9;rank() OVER ma_fenetre,&#xA;&#x9;dense_rank() OVER ma_fenetre,&#xA;&#x9;lag(identifiant, 1) OVER ma_fenetre,&#xA;&#x9;first_value(identifiant) OVER ma_fenetre,&#xA;&#x9;lead(identifiant, 1) OVER ma_fenetre,&#xA;&#x9;last_value(identifiant) OVER ma_fenetre&#xA;FROM &#xA;&#x9;public.test_fenetrage&#xA;WINDOW&#xA;&#x9;ma_fenetre AS (&#xA;&#x9;&#x9;ORDER BY&#xA;&#x9;&#x9;&#x9;ordre ASC&#xA;&#x9;&#x9;RANGE&#xA;&#x9;&#x9;&#x9;BETWEEN&#xA;&#x9;&#x9;&#x9;&#x9;UNBOUNDED PRECEDING&#xA;&#x9;&#x9;&#x9;AND&#xA;&#x9;&#x9;&#x9;&#x9;CURRENT ROW&#xA;&#x9;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les données suivantes sont renvoyées :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;identifiant&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;ordre&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;row_number&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;rank&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;dense_rank&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;lag&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;first_value&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;lead&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;last_value&lt;/td&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;7&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;8&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;8&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;9&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;8&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;8&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;11&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;11&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;12&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;11&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La partition s&amp;rsquo;étend maintenant à toute la table.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il est intéressant de constater que les lignes ont ici aussi été réordonnées, c&amp;rsquo;est à cause du &lt;code&gt;ORDER BY&lt;/code&gt; qui implique une réorganisation des lignes lors du calcul.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Intéressons nous aux colonnes &lt;code&gt;row_number&lt;/code&gt;, &lt;code&gt;rank&lt;/code&gt; et &lt;code&gt;dense_rank&lt;/code&gt;. Nous pouvons maintenant voir la différence entre ces fonctions :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;row_number&lt;/code&gt; indique le numéro de ligne après le réordonnancement effectué par la fenêtre. &lt;br&gt;A-1, B-1 et C-4 possède le numéro d&amp;rsquo;ordre 1, il est donc logique de les retrouver en 1&lt;sup&gt;ère&lt;/sup&gt;, 2&lt;sup&gt;ème&lt;/sup&gt; et 3&lt;sup&gt;ème&lt;/sup&gt; place.&lt;br&gt;Notez que C-4 est avant A-1 qui est avant B-1 ce qui correspond à leurs positionnements dans la table d&amp;rsquo;origine.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;rank&lt;/code&gt; permet de définir le rang de chaque ligne. &lt;br&gt;A-1, B-1 et C-4 possède le numéro d&amp;rsquo;ordre 1, il possèdent donc tous les trois le rang 1. A-2, B-2, B-3 et C-3 possède la valeur d&amp;rsquo;ordre 2, il sont donc au rang suivant : 4. &lt;br&gt;Le numéro de rang correspond au premier numéro de ligne (&lt;code&gt;row_number&lt;/code&gt;) du groupe de lignes équivalentes.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;dense_rank&lt;/code&gt; permet de définir le rang de chaque ligne mais sans trous.&lt;br&gt;A-1, B-1 et C-4 sont au rang 1 puis A-2, B-2, B-3 et C-3 sont au rang 2.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Fenêtre partitionnée et ordonnancée&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Combinons le &lt;code&gt;PARTITION BY&lt;/code&gt; avec le &lt;code&gt;ORDER BY&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT&#xA;&#x9;identifiant,&#xA;&#x9;groupe,&#xA;&#x9;ordre,&#xA;&#x9;row_number() OVER ma_fenetre,&#xA;&#x9;rank() OVER ma_fenetre,&#xA;&#x9;dense_rank() OVER ma_fenetre,&#xA;&#x9;lag(identifiant, 1) OVER ma_fenetre,&#xA;&#x9;first_value(identifiant) OVER ma_fenetre,&#xA;&#x9;lead(identifiant, 1) OVER ma_fenetre,&#xA;&#x9;last_value(identifiant) OVER ma_fenetre&#xA;FROM &#xA;&#x9;public.test_fenetrage&#xA;WINDOW&#xA;&#x9;ma_fenetre AS (&#xA;&#x9;&#x9;PARTITION BY&#xA;&#x9;&#x9;&#x9;groupe&#xA;&#x9;&#x9;ORDER BY&#xA;&#x9;&#x9;&#x9;ordre ASC&#xA;&#x9;&#x9;RANGE&#xA;&#x9;&#x9;&#x9;BETWEEN&#xA;&#x9;&#x9;&#x9;&#x9;UNBOUNDED PRECEDING&#xA;&#x9;&#x9;&#x9;AND&#xA;&#x9;&#x9;&#x9;&#x9;CURRENT ROW&#xA;&#x9;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici le résultat :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;identifiant&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;groupe&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;ordre&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;row_number&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;rank&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;dense_rank&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;lag&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;first_value&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;lead&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;last_value&lt;/td&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous avons maintenant des données calculées pour chaque partition en utilisant un ordre d&amp;rsquo;affichage spécifique.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Statistiques sur mon dernier voyage&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous allons maintenant voir un cas légèrement plus concret. Il s&amp;rsquo;agit d&amp;rsquo;un petit tour que j&amp;rsquo;ai fait en Europe et dont j&amp;rsquo;aimerais calculer quelques statistiques.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color has-link-color wp-elements-3c6d8cfd14dcc1cdeb3ec9c6ac006d7c&#34;&gt;Notez que vous aurez besoin de PostGIS pour cet exemple.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici les données :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- DROP TABLE public.voyage_fenetrage;&#xA;&#xA;CREATE TABLE public.voyage_fenetrage AS &#xA;SELECT&#xA;  *&#xA;FROM (&#xA;  VALUES&#xA;    (&#39;2023-07-01&#39;::date, &#39;Maison&#39;, &#39;Maison&#39;, &#39;SRID=4326;POINT(6.3183 46.19)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-07-01&#39;::date, &#39;Suisse&#39;, &#39;Genève&#39;, &#39;SRID=4326;POINT(6.14 46.20)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-07-03&#39;::date, &#39;Suisse&#39;, &#39;Berne&#39;, &#39;SRID=4326;POINT(7.44 46.95)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-07-07&#39;::date, &#39;Suisse&#39;, &#39;Zurich&#39;, &#39;SRID=4326;POINT(8.54 47.37)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-07-10&#39;::date, &#39;Autriche&#39;, &#39;Innsbruck&#39;, &#39;SRID=4326;POINT(11.39 47.26)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-07-12&#39;::date, &#39;Allemagne&#39;, &#39;Munich&#39;, &#39;SRID=4326;POINT(11.58 48.14)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-07-17&#39;::date, &#39;Allemagne&#39;, &#39;Francfort&#39;, &#39;SRID=4326;POINT(8.68 50.11)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-07-21&#39;::date, &#39;Allemagne&#39;, &#39;Berlin&#39;, &#39;SRID=4326;POINT(13.41 52.52)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-07-25&#39;::date, &#39;Allemagne&#39;, &#39;Hambourg&#39;, &#39;SRID=4326;POINT(9.99 53.55)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-07-29&#39;::date, &#39;Danemark&#39;, &#39;Copenhague&#39;, &#39;SRID=4326;POINT(12.58 55.68)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-08-01&#39;::date, &#39;Royaume-Uni&#39;, &#39;Édimbourg&#39;, &#39;SRID=4326;POINT(-3.20 55.95)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-08-05&#39;::date, &#39;Royaume-Uni&#39;, &#39;Glasgow&#39;, &#39;SRID=4326;POINT(-4.25 55.86)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-08-09&#39;::date, &#39;Royaume-Uni&#39;, &#39;Manchester&#39;, &#39;SRID=4326;POINT(-2.24 53.48)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-08-13&#39;::date, &#39;Royaume-Uni&#39;, &#39;Londres&#39;, &#39;SRID=4326;POINT(0 51.51)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-08-16&#39;::date, &#39;France&#39;, &#39;Paris&#39;, &#39;SRID=4326;POINT(2.35 48.85)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-08-20&#39;::date, &#39;France&#39;, &#39;Nantes&#39;, &#39;SRID=4326;POINT(-1.55 47.21)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-08-22&#39;::date, &#39;France&#39;, &#39;Toulouse&#39;, &#39;SRID=4326;POINT(1.44 43.60)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-08-25&#39;::date, &#39;France&#39;, &#39;Marseille&#39;, &#39;SRID=4326;POINT(5.37 43.29)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-08-28&#39;::date, &#39;France&#39;, &#39;Annecy&#39;, &#39;SRID=4326;POINT(6.13 45.90)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-08-31&#39;::date, &#39;Maison&#39;, &#39;Maison&#39;, &#39;SRID=4326;POINT(6.3183 46.19)&#39;::geometry(point, 4326))&#xA;) as t1 (date_arrive, pays, ville, geom)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Je considère que la date d&amp;rsquo;arrivée quelque part correspond à la date d&amp;rsquo;arrivée à l&amp;rsquo;étape suivante.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le but est d&amp;rsquo;avoir des informations tout au long du trajet : distance parcourue, pourcentage d&amp;rsquo;avancement, avancement par pays&amp;#8230;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous allons utiliser plusieurs fenêtres en parallèle afin de calculer ce dont nous avons besoin.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT&#xA;  -- Localisation étape&#xA;  concat(ville, &#39; (&#39;, pays, &#39;)&#39;) AS etape,&#xA;  -- Date d&#39;arrivée&#xA;  date_arrive,&#xA;  -- Date de départ : date d&#39;arrivée de la ligne suivante&#xA;  lead(date_arrive, 1) OVER toutes_lignes AS date_depart,&#xA;  -- Durée de l&#39;étape&#xA;  lead(date_arrive, 1) OVER toutes_lignes - date_arrive AS duree_etape,&#xA;  -- Durée totale du voyage trajet depuis la première localisation&#xA;  -- Fonction first_value permettant de récupérer la première ligne de la fenêtre&#xA;  date_arrive - first_value(date_arrive) OVER toutes_lignes AS duree_voyage,&#xA;  -- Distance parcourue depuis la localisation précédente&#xA;  -- Fonction lag permettant de récupérer la ligne précédente&#xA;  -- ST_DistanceSpheroid pour obtenir la distance entre deux coordonnées en WGS84&#xA;  ST_DistanceSpheroid(&#xA;    geom, &#xA;    lag(geom, 1) OVER toutes_lignes,&#xA;    &#39;SPHEROID[&#34;WGS 84&#34;,6378137,298.257223563]&#39;&#xA;  )::integer/1000 AS distance_depuis_loc_precedente,&#xA;  -- Distance totale parcourue depuis la première localisation&#xA;  -- Fonction ST_MakeLine permettant de créer une ligne constituée de l&#39;ensemble des points de la fenêtre&#xA;  -- L&#39;ordre des point est assuré par la fenêtre&#xA;  -- ST_DistanceSpheroid pour obtenir la longueur d&#39;une ligne en WGS84&#xA;  ST_LengthSpheroid(&#xA;    ST_MakeLine(geom) OVER lignes_precedentes,&#xA;    &#39;SPHEROID[&#34;WGS 84&#34;,6378137,298.257223563]&#39;&#xA;  )::integer/1000 AS distance_parcourue,&#xA;  -- Calcul d&#39;un pourcentage de parcours en comparant les valeurs issues de calculs sur deux fenêtres différentes&#xA;  round(&#xA;    ST_LengthSpheroid(&#xA;      ST_MakeLine(geom) OVER lignes_precedentes,&#xA;      &#39;SPHEROID[&#34;WGS 84&#34;,6378137,298.257223563]&#39;&#xA;    )::numeric /&#xA;    ST_LengthSpheroid(&#xA;      ST_MakeLine(geom) OVER toutes_lignes,&#xA;      &#39;SPHEROID[&#34;WGS 84&#34;,6378137,298.257223563]&#39;&#xA;    )::numeric *&#xA;    100,&#xA;    2&#xA;  ) AS pourcentage_trajet,&#xA;  -- Calcul d&#39;un pourcentage de parcours par pays en comparant les valeurs issues de calculs sur deux fenêtres différentes&#xA;  -- La fonction nullif permet d&#39;éliminer les divisions par 0&#xA;  round(&#xA;    ST_LengthSpheroid(&#xA;      ST_MakeLine(geom) OVER lignes_precedentes_pays,&#xA;      &#39;SPHEROID[&#34;WGS 84&#34;,6378137,298.257223563]&#39;&#xA;    )::numeric /&#xA;    nullif(ST_LengthSpheroid(&#xA;      ST_MakeLine(geom) OVER toutes_lignes_pays,&#xA;      &#39;SPHEROID[&#34;WGS 84&#34;,6378137,298.257223563]&#39;&#xA;    )::numeric,0) *&#xA;    100,&#xA;    2&#xA;  ) AS pourcentage_trajet_pays&#xA;FROM &#xA;  public.voyage_fenetrage&#xA;WINDOW&#xA;  toutes_lignes AS (&#xA;    ORDER BY&#xA;      date_arrive&#xA;    ROWS&#xA;      BETWEEN&#xA;        UNBOUNDED PRECEDING&#xA;      AND&#xA;        UNBOUNDED FOLLOWING&#xA;  ),&#xA;  lignes_precedentes AS (&#xA;    ORDER BY&#xA;      date_arrive&#xA;    ROWS&#xA;      BETWEEN&#xA;        UNBOUNDED PRECEDING&#xA;      AND&#xA;        CURRENT ROW&#xA;  ),&#xA;  toutes_lignes_pays AS (&#xA;    PARTITION BY &#xA;      pays&#xA;    ORDER BY&#xA;      date_arrive&#xA;    ROWS&#xA;      BETWEEN&#xA;        UNBOUNDED PRECEDING&#xA;      AND&#xA;        UNBOUNDED FOLLOWING&#xA;  ),&#xA;  lignes_precedentes_pays AS (&#xA;    PARTITION BY &#xA;      pays&#xA;    ORDER BY&#xA;      date_arrive&#xA;    ROWS&#xA;      BETWEEN&#xA;        UNBOUNDED PRECEDING&#xA;      AND&#xA;        CURRENT ROW&#xA;  )&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici le résultat :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;etape&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;date_arrive&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;date_depart&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;duree_etape&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;duree_voyage&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;distance_depuis_loc_precedente&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;distance_parcourue&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;pourcentage_trajet&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;pourcentage_trajet_pays&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Maison (Maison)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-01&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-01&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&amp;nbsp;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Genève (Suisse)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-01&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-03&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;14&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;14&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0,28&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Berne (Suisse)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-03&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-07&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;129&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;144&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2,76&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;57,61&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Zurich (Suisse)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-07&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-10&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;95&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;240&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4,58&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;100&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Innsbruck (Autriche)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-10&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-12&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;9&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;215&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;456&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;8,69&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Munich (Allemagne)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-12&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-17&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;11&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;98&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;554&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10,58&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Francfort (Allemagne)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-17&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-21&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;16&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;304&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;859&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;16,38&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;30,89&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Berlin (Allemagne)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-21&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-25&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;20&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;424&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1 284&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;24,48&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;73,99&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Hambourg (Allemagne)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-25&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-29&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;24&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;256&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1 540&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;29,37&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;100&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Copenhague (Danemark)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-29&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-01&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;28&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;290&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1 830&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;34,9&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Édimbourg (Royaume-Uni)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-01&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-05&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;31&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;987&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2 818&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;53,72&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Glasgow (Royaume-Uni)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-05&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-09&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;35&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;66&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2 884&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;54,99&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10,58&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Manchester (Royaume-Uni)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-09&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-13&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;39&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;294&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3 179&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;60,61&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;57,53&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Londres (Royaume-Uni)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-13&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-16&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;43&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;266&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3 446&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;65,7&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;100&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Paris (France)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-16&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-20&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;46&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;340&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3 786&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;72,18&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Nantes (France)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-20&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-22&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;50&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;343&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4 130&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;78,72&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;24,11&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Toulouse (France)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-22&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-25&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;52&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;464&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4 594&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;87,57&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;56,72&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Marseille (France)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-25&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-28&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;55&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;319&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4 914&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;93,67&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;79,19&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Annecy (France)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-28&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-31&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;58&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;296&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5 210&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;99,32&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;100&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Maison (Maison)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-31&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&amp;nbsp;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&amp;nbsp;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;61&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;35&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5 246&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;100&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous voyez qu&amp;rsquo;avec le fenêtrage il devient simple de réaliser tout un tas de calculs divers et variés sur vos données.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Un excellent exemple est également fournit dans l&amp;rsquo;article suivant où je me sers du fenêtrage pour déterminer le parcours du Père Noël dans la nuit du 24 au 25.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-embed aligncenter is-type-wp-embed is-provider-bazinga-039-s wp-block-embed-bazinga-039-s&#34;&gt;&lt;div class=&#34;wp-block-embed__wrapper&#34;&gt;&#xA;&lt;blockquote class=&#34;wp-embedded-content&#34; data-secret=&#34;1XkVFCGu98&#34;&gt;&lt;a href=&#34;https://blog.arthurbazin.com/bdd/postgresql/suivons-le-pere-noel-avec-postgis&#34;&gt;Suivons le Père Noël avec PostGIS (Nouvelle version)&lt;/a&gt;&lt;/blockquote&gt;&lt;iframe loading=&#34;lazy&#34; class=&#34;wp-embedded-content&#34; sandbox=&#34;allow-scripts&#34; security=&#34;restricted&#34;  title=&#34;« Suivons le Père Noël avec PostGIS (Nouvelle version) » &amp;#8212; BazinGa&amp;#039;s&#34; src=&#34;https://blog.arthurbazin.com/bdd/postgresql/suivons-le-pere-noel-avec-postgis/embed#?secret=31T1XinWsi#?secret=1XkVFCGu98&#34; data-secret=&#34;1XkVFCGu98&#34; width=&#34;600&#34; height=&#34;338&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34;&gt;&lt;/iframe&gt;&#xA;&lt;/div&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Pour aller plus loin&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cet article fait parti du cours sur PostgreSQL, parties 3 et 4 du Vade-mecum.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-buttons is-vertical is-content-justification-center is-layout-flex wp-container-core-buttons-is-layout-3 wp-block-buttons-is-layout-flex&#34;&gt;&#xA;&lt;div class=&#34;wp-block-button has-custom-width wp-block-button__width-50&#34;&gt;&lt;a class=&#34;wp-block-button__link wp-element-button&#34; href=&#34;https://blog.arthurbazin.com/programmation/sql/postgresql-tout-comprendre-1&#34;&gt;Cours sur PostgreSQL&lt;/a&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-button has-custom-width wp-block-button__width-50&#34;&gt;&lt;a class=&#34;wp-block-button__link wp-element-button&#34; href=&#34;https://blog.arthurbazin.com/programmation/sql/postgresql-vade-mecum-3#le_fenetrage&#34;&gt;Vade-mecum &amp;#8211; 3 &amp;#8211; Gérer la donnée&lt;/a&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-button has-custom-width wp-block-button__width-50&#34;&gt;&lt;a class=&#34;wp-block-button__link wp-element-button&#34; href=&#34;https://blog.arthurbazin.com/programmation/postgresql-vade-mecum-4#fonction_de_fenetrage&#34;&gt;Vade-mecum &amp;#8211; 4 &amp;#8211; Fonctions et opérateurs&lt;/a&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;</content>
    <link href="https://blog.arthurbazin.com/bdd/postgresql/ouvrez-les-fenetres-de-postgresql-guide-complet-sur-le-fenetrage" rel="alternate"></link>
    <summary type="html">Voici un guide complet sur l&#39;utilisation du fenêtrage sous PostgreSQL. Ces fonctionnalités sont particulièrement pratique lors de l&#39;analyse de données continues.</summary>
    <author>
      <name>Arthur Bazin</name>
    </author>
  </entry>
  <entry>
    <title>Suivons le Père Noël avec PostGIS (Nouvelle version)</title>
    <updated>2023-12-14T13:23:01Z</updated>
    <id>tag:blog.arthurbazin.com,2023-12-14:/bdd/postgresql/suivons-le-pere-noel-avec-postgis</id>
    <content type="html">&#xA;&lt;p&gt;Cette année pour Noël, j&amp;rsquo;ai eu l&amp;rsquo;idée de monter une application de suivi du Père Noël en temps réel. &lt;a href=&#34;https://santatracker.google.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener nofollow&#34;&gt;Google&lt;/a&gt; le fait déjà et le &lt;a href=&#34;https://www.noradsanta.org/fr/index.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener nofollow&#34;&gt;NORAD&lt;/a&gt; aussi alors pourquoi pas un frenchy ?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Comme j&amp;rsquo;ai « quelques notions » de SQL et que je travaille chez &lt;a href=&#34;https://www.business-geografic.com/fr/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener nofollow&#34;&gt;Business Geografic&lt;/a&gt; (&lt;a href=&#34;https://www.cirilgroup.com/fr/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener nofollow&#34;&gt;Ciril GROUP&lt;/a&gt;) (éditeur français de solutions cartographiques web) qui a accepter de suivre ma démarche, j&amp;rsquo;ai tous les outils nécessaires à une telle application sous la main. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour la suite des explications, c&amp;rsquo;est juste en dessous de l&amp;rsquo;appli (que vous pouvez consulter en plein écran sur &lt;a href=&#34;https://noel.cirilgroup.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;noel.cirilgroup.com&lt;/a&gt;).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;iframe loading=&#34;lazy&#34; id=&#34;iframe_santa_tracker&#34; title=&#34;Le voyage du Père Noël&#34; src=&#34;https://geoservices.business-geografic.com/adws/app/c2d0e97d-6c09-11ed-9a76-19bfa8332a84/&#34; width=&#34;100%&#34; height=&#34;650px&#34;&gt;&#xA;&lt;/iframe&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que cet article s’intéresse surtout à la partie donnée (PostgreSQL + PostGIS) et moins à la partie conception de l&amp;rsquo;application qui repose sur &lt;a href=&#34;https://www.business-geografic.com/fr/geo-software/geo-technologies.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GEO Software de Business Geografic (Ciril GROUP)&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr class=&#34;wp-block-separator has-alpha-channel-opacity is-style-default&#34;/&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour le suivi, j&amp;rsquo;ai un peu étudier la chose et il s&amp;rsquo;avère qu&amp;rsquo;un traineau magique, ça n’apparait pas sur les radars. Il est donc compliqué de suivre le bonhomme. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Malgré mes nombreux courriers, le Père Noël refuse également de m&amp;rsquo;envoyer son itinéraire détaillé, un petit GPX aurait pourtant bien fait mon affaire mais il semble qu&amp;rsquo;il n&amp;rsquo;utilise pas de GPS&amp;#8230;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il faut donc un peu ruser pour suivre Santa à la trace et voici comment j&amp;rsquo;ai procédé.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le principe est de partir d&amp;rsquo;une liste de destinations que le Père Noël va visiter. On calcule ensuite le trajet pour rejoindre toutes ces destinations en tenant compte du fait que le passage doit s&amp;rsquo;effectuer durant la nuit du 24 au 25 décembre et que la terre tourne donc que l&amp;rsquo;heure de passage s&amp;rsquo;étale de GMT+12 à GMT-12 (d&amp;rsquo;est en ouest). Plus facile à dire qu&amp;rsquo;a faire mais essayons.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;application repose sur PostgreSQL 11 + PostGIS 2.5 (je sais, c&amp;rsquo;est oldschool mais ça tourne bien) mais vous pouvez utiliser les requêtes suivantes dans PostgreSQL 15 + PostGIS 3.x.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous serons dans le schéma suivant :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;CREATE SCHEMA IF NOT EXISTS santa_tracker;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Destination&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A priori, le Père Noël visite toutes les maisons du monde. Ceci dit, « toutes les maisons du monde » c&amp;rsquo;est complexe à cartographier : un igloo doit il être considéré comme une maison même s&amp;rsquo;il n&amp;rsquo;a pas de cheminée ? &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Alors simplifions un peu la chose et basons nous sur l&amp;rsquo;ensemble des villes du monde. Bon là aussi c&amp;rsquo;est complexe car il y a vraiment beaucoup de villes et ça risque d&amp;rsquo;être difficile de suivre tous les déplacements. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Simplifions encore et prenons environ 500 destinations parmi les plus connues dans le monde (avec une sur représentation des villes de l’hexagone ;-).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour récupérer ces données, une petite recherche sur internet et nous voila avec &lt;a rel=&#34;noreferrer noopener nofollow&#34; href=&#34;https://public.opendatasoft.com/explore/dataset/geonames-all-cities-with-a-population-1000/&#34; target=&#34;_blank&#34;&gt;un magnifique jeu de données&lt;/a&gt; du monde entier dont la population est supérieure à 1000 habitants.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Quelques traitements plus tard (rien de bien sorcier, juste des formules magiques pour récupérer les villes qui m&amp;rsquo;intéressent) nous voici avec la table suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;CREATE TABLE santa_tracker.destination (&#xA;&#x9;-- Un identifiant numérique&#xA;&#x9;id_destination int8 PRIMARY KEY,&#xA;&#x9;-- La région de la destination&#xA;&#x9;region text,&#xA;&#x9;-- Le nom de la destination&#xA;&#x9;ville text,&#xA;&#x9;-- Le nombre d&#39;habitant dans cette destination&#xA;&#x9;population int8,&#xA;&#x9;-- L&#39;interval de temps entre le fuseau horaire de la destination et GMT&#xA;&#x9;utc_offset interval,&#xA;&#x9;-- L&#39;emplacement de la destination&#xA;&#x9;geom public.geometry(point, 4326)&#xA;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Problème, cette table ne possède pas l&amp;#8217;emplacement du Père Noël&amp;#8230; Nous allons rusé pour cela.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Quelques variables&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour les différents calculs que nous allons mener, je vais avoir besoin de définir certains paramètres. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour cela, nous allons créer une vue dans laquelle nous stockerons des variables que nous pourrons utiliser dans nos différentes requêtes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;DROP VIEW IF EXISTS santa_tracker.v_00_variable CASCADE;&#xA;&#xA;CREATE OR REPLACE VIEW santa_tracker.v_00_variable as (&#xA;&#xA;&#x9;SELECT &#xA;&#x9;&#x9;-- Population&#xA;&#x9;&#x9;-- Le nombre total d&#39;être humain sur Terre&#xA;&#x9;&#x9;8000000000 as pop_total,&#xA;&#x9;&#x9;-- Le pourcentage de personne recevant des cadeaux (oui, certains ont été méchants cette année)&#xA;&#x9;&#x9;0.95 as cadeau_par_pop,&#xA;&#x9;&#x9;-- Le nombre de cadeau par personnes&#xA;&#x9;&#x9;1 as cadeau_par_pers,&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;-- Autres données&#xA;&#x9;&#x9;-- Largeur d&#39;une zone de longitude (ce qui permet de diviser le globe en secteurs de passage)&#xA;&#x9;&#x9;10 as largeur_zone_longitude,&#xA;&#x9;&#x9;-- Le pourcentage de temps total passé à voler de maison en maison (ici 90% de temps de vol donc 10% du temps passé dans les maisons)&#xA;&#x9;&#x9;90::numeric as pourcent_temps_de_vol,&#xA;&#x9;&#x9;-- Les informations sur l&#39;emplacement de la maison du Père Noël&#xA;&#x9;&#x9;jsonb_build_object(&#xA;&#x9;&#x9;&#x9;&#39;id&#39;, 0,&#xA;&#x9;&#x9;&#x9;&#39;region&#39;, &#39;Svalbard&#39;,&#xA;&#x9;&#x9;&#x9;&#39;ville&#39;, &#39;Maison de la famille Noël&#39;,&#xA;&#x9;&#x9;&#x9;&#39;population&#39;, 2,&#xA;&#x9;&#x9;&#x9;&#39;utc_offset&#39;, 1,&#xA;&#x9;&#x9;&#x9;&#39;geom_4326&#39;, &#39;SRID=4326;POINT(24 80)&#39;&#xA;&#x9;&#x9;) as maison_pere_noel,&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;-- Dates et horaire&#xA;&#x9;&#x9;-- Les dates contiennent toujours les heures&#xA;&#x9;&#x9;-- Le temps est exprimé en temps UTC&#xA;&#x9;&#x9;-- L&#39;heure exacte du début de la distribution (le 24 décembre à 19h sur le premier fuseau horaire)&#xA;&#x9;&#x9;(extract(year from now()) || &#39;-12-24 19:00:00 +12&#39;)::timestamp with time zone as debut_distrib,&#xA;&#x9;&#x9;-- L&#39;heure exacte de la fin de la distribution (le 25 décembre à 5h sur le dernier fuseau horaire)&#xA;&#x9;&#x9;(extract(year from now()) || &#39;-12-25 05:00:00 -12&#39;)::timestamp with time zone as fin_distrib,&#xA;&#x9;&#x9;-- Durée du trajet pour rejoindre la première destination depuis la maison du Père Noël&#xA;&#x9;&#x9;-- Durée également pour rejoindre la maison du Père Noël depuis la dernière maison&#xA;&#x9;&#x9;&#39;2 minutes&#39;::interval as delai_dest_santa_house,&#xA;&#xA;&#x9;&#x9;-- Heure du début de la transaction&#xA;&#x9;&#x9;--transaction_timestamp() as &#34;now&#34;&#x9;-- Maintenant&#xA;&#xA;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez l&amp;rsquo;utilisation des heures avec fuseau horaire car il faut tenir compte des différents emplacements sur Terre.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour le calcul des dates, on utilise une extraction de l&amp;rsquo;année depuis la fonction &lt;code&gt;transaction_timestamp()&lt;/code&gt; afin de rendre la vue valide tous les ans.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;On définit également une variable &lt;code&gt;now&lt;/code&gt; que l&amp;rsquo;on utilisera lors des calculs à un instant t car cela permet de faire des tests en fixant cette valeur. Cette dernière peut être modifiée pour vos tests, voila quelques moments possibles :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;generic&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Heure du début de la transaction&#xA;transaction_timestamp() as &#34;now&#34;&#x9;-- Maintenant&#xA;&#39;2023-07-03 08:00:00 +0100&#39;::timestamp WITH time zone as &#34;now&#34; -- Fabrication&#xA;&#39;2023-12-24 07:59:00 +0100&#39;::timestamp WITH time zone as &#34;now&#34; -- Voyage aller&#xA;&#39;2023-12-24 19:00:10 +1200&#39;::timestamp WITH time zone as &#34;now&#34; -- Distribution 1ère destination&#xA;&#39;2023-12-24 19:00:45 +1200&#39;::timestamp WITH time zone as &#34;now&#34; -- Voyage depuis 1ère destination&#xA;&#39;2023-12-25 00:29:25 +0100&#39;::timestamp WITH time zone as &#34;now&#34; -- Distribution à Genève&#xA;&#39;2023-12-25 00:30:00 +0100&#39;::timestamp WITH time zone as &#34;now&#34; -- Voyage depuis Genève&#xA;&#39;2023-12-25 05:01:00 -1200&#39;::timestamp WITH time zone as &#34;now&#34; -- Voyage retour&#xA;&#39;2023-12-27 08:00:00 +0100&#39;::timestamp WITH time zone as &#34;now&#34; -- Repos&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Trajet&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous devons maintenant calculer le trajet.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ce trajet doit répondre au critères suivants :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Passer par toutes les destinations&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Démarrer et finir par la maison du Père Noël&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Chaque destination doit être visitée la nuit&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous allons donc devoir découper la Terre en zones de passage dans lesquelles le Père Noël aura un timing bien spécifique à respecter. Le principe est de déterminer l&amp;rsquo;intervalle de temps pendant lequel le Père Noël effectue sa tournée puis de diviser cet intervalle par le nombre de zones de passage.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Dans la vue &lt;code&gt;v_00_variable&lt;/code&gt; j&amp;rsquo;avais indiqué un découpage en zone de 10 degrés mais notez que si aucune destination n’existe dans une zone, il ne faudra alors pas en tenir compte.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;intervalle est définit par les dates de début et de fin de la tournée spécifiées dans la vue &lt;code&gt;v_00_variable&lt;/code&gt; : du 24 décembre à 19h (+12) jusqu&amp;rsquo;au 25 décembre à 5h (-12) : 1j et 10h soit 34h.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour calculer le trajet et pouvoir relancer le calcul facilement, je vais me baser sur plusieurs vues.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Calcul du rang longitudinal&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le principe est d&amp;rsquo;attribuer à chaque destination un numéro de rang correspondant au numéro d&amp;rsquo;ordre de la zone de longitude à laquelle appartient la destination.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Une zone de longitude est une portion de la surface terrestre comprise entre deux bornes de longitudes. Ces bornes sont définies par rapport à un découpage du globe tous les x degrés ; x étant défini dans la vue &lt;code&gt;v_00_variable&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;DROP VIEW IF EXISTS santa_tracker.v_01_destination_rang_longitudeCASCADE;&#xA;&#xA;CREATE OR REPLACE VIEW santa_tracker.v_01_destination_rang_longitude as (&#xA;&#xA;&#x9;SELECT &#xA;&#x9;&#x9;id_destination,&#xA;&#x9;&#x9;region,&#xA;&#x9;&#x9;ville,&#xA;&#x9;&#x9;population,&#xA;&#x9;&#x9;utc_offset,&#xA;&#x9;&#x9;-- Récupération du rang de chaque zone de longitude (plage de x degré définit dans la vue v_00_variable)&#xA;&#x9;&#x9;-- Le fenêtrage permet d&#39;éliminer les zones sans destination&#xA;&#x9;&#x9;dense_rank() OVER zone_longitude as rang_longitude,&#xA;&#x9;&#x9;geom&#xA;&#x9;FROM &#xA;&#x9;&#x9;santa_tracker.destination &#xA;&#x9;CROSS JOIN &#xA;&#x9;&#x9;santa_tracker.v_00_variable as var&#xA;&#x9;WINDOW &#xA;&#x9;&#x9;zone_longitude AS (&#xA;&#x9;&#x9;&#x9;ORDER BY &#xA;&#x9;&#x9;&#x9;&#x9;floor(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(-ST_X(geom) + 180)::numeric &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/ var.largeur_zone_longitude&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;+ 1&#xA;&#x9;&#x9;&#x9;ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING&#xA;&#x9;&#x9;)&#xA;&#xA;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Ordonnancement par latitude&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Au sein de chaque zone de longitude, les destinations sont ordonnancées afin d&amp;rsquo;avoir un trajet cohérent allant du nord au sud dans une zone puis du sud au nord dans la zone suivante dans un mouvement à l&amp;rsquo;effet « yoyo ».&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;DROP VIEW IF EXISTS santa_tracker.v_02_destination_rang_latitude CASCADE;&#xA;&#xA;CREATE VIEW santa_tracker.v_02_destination_rang_latitude as (&#xA;&#xA;&#x9;SELECT &#xA;&#x9;&#x9;id_destination,&#xA;&#x9;&#x9;region,&#xA;&#x9;&#x9;ville,&#xA;&#x9;&#x9;population,&#xA;&#x9;&#x9;utc_offset,&#xA;&#x9;&#x9;rang_longitude,&#xA;&#x9;&#x9;-- Récupération du rang de chaque destination au sein de sa zone de longitude&#xA;&#x9;&#x9;-- Le rang est déterminé par la latitude de l&#39;objet&#xA;&#x9;&#x9;-- Pour faire un effet &#34;yoyo&#34;, on inverse l&#39;ordonnancement des latitudes une zone de longitude sur deux&#xA;&#x9;&#x9;row_number() OVER zone_latitude as rang_latitude,&#xA;&#x9;&#x9;last_value(rang_longitude) OVER all_zone_longitude as nb_zone_longitude,&#xA;&#x9;&#x9;count(id_destination) OVER part_by_zone_longitude as nb_destination_in_zone,&#xA;&#x9;&#x9;geom&#xA;&#x9;FROM &#xA;&#x9;&#x9;santa_tracker.v_01_destination_rang_longitude&#xA;&#x9;WINDOW &#xA;&#x9;&#x9;zone_latitude AS (&#xA;&#x9;&#x9;&#x9;PARTITION BY &#xA;&#x9;&#x9;&#x9;&#x9;rang_longitude&#xA;&#x9;&#x9;&#x9;ORDER BY &#xA;&#x9;&#x9;&#x9;&#x9;rang_longitude,&#xA;&#x9;&#x9;&#x9;&#x9;CASE &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN rang_longitude % 2 = 0 THEN ST_Y(geom)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE -ST_Y(geom)&#xA;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING&#xA;&#x9;&#x9;),&#xA;&#x9;&#x9;part_by_zone_longitude AS (&#xA;&#x9;&#x9;&#x9;PARTITION BY rang_longitude&#xA;&#x9;&#x9;&#x9;ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING&#xA;&#x9;&#x9;),&#xA;&#x9;&#x9;all_zone_longitude AS (&#xA;&#x9;&#x9;&#x9;ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING&#xA;&#x9;&#x9;)&#xA;&#xA;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Consolidation des destinations&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour chaque destination, on va calculer plusieurs valeurs, notamment des cumuls par rapport aux destination précédentes. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cette vue est une sorte de version améliorée de la table &lt;code&gt;destination&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;DROP VIEW IF EXISTS santa_tracker.v_03_destination CASCADE;&#xA;&#xA;CREATE OR REPLACE VIEW santa_tracker.v_03_destination as (&#xA;&#xA;&#x9;SELECT &#xA;&#x9;&#x9;id_destination,&#xA;&#x9;&#x9;region,&#xA;&#x9;&#x9;ville,&#xA;&#x9;&#x9;-- Le fenêtrage permet de récupérer la prochaine destination&#xA;&#x9;&#x9;first_value(id_destination) OVER next_etape as id_destination_next,&#xA;&#x9;&#x9;first_value(region) OVER next_etape as region_next,&#xA;&#x9;&#x9;first_value(ville) OVER next_etape as ville_next,&#xA;&#x9;&#x9;population,&#xA;&#x9;&#x9;-- Création d&#39;une valeur de population fictive&#xA;&#x9;&#x9;-- pour qu&#39;une fois toutes destination visitées, le Père Noël ait vu toute la population mondiale&#xA;&#x9;&#x9;round( &#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(population / sum(population) OVER ()) &#xA;&#x9;&#x9;&#x9;&#x9;* var.pop_total::NUMERIC&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;0&#xA;&#x9;&#x9;) as pop_fictive,&#xA;&#x9;&#x9;utc_offset,&#xA;&#x9;&#x9;rang_longitude,&#xA;&#x9;&#x9;rang_latitude,&#xA;&#x9;&#x9;-- Rang de l&#39;étape&#xA;&#x9;&#x9;row_number() OVER all_etape as rang_etape,&#xA;&#x9;&#x9;nb_zone_longitude,&#xA;&#x9;&#x9;nb_destination_in_zone,&#xA;&#x9;&#x9;-- Temps de passage dans chaque zone&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;(var.fin_distrib - var.debut_distrib) &#xA;&#x9;&#x9;&#x9;/ nb_zone_longitude &#xA;&#x9;&#x9;) AS duree_zone,&#xA;&#x9;&#x9;-- Temps de passage dans chaque destination (distribution + trajet pour la suivante)&#xA;&#x9;&#x9;-- Durée totale / nb zone longitude = durée par zone&#xA;&#x9;&#x9;-- Durée par zone / nb étape dans zone = temps par étape&#xA;&#x9;&#x9;-- Pour la dernière zone, on retire le temps du dernier trajet (retour à la maison du Père Noël)&#xA;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;WHEN rang_longitude = nb_zone_longitude THEN &#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(var.fin_distrib - var.debut_distrib) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/ nb_zone_longitude &#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;/ (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;((nb_destination_in_zone - 1) * (var.pourcent_temps_de_vol/100))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ (nb_destination_in_zone * ((100 - var.pourcent_temps_de_vol)/100))&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;ELSE &#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(var.fin_distrib - var.debut_distrib) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/ nb_zone_longitude &#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;/ nb_destination_in_zone&#xA;&#x9;&#x9;END as duree_destination,&#xA;&#x9;&#x9;-- On reprojete les données pour travailler en coordonnées projetées&#xA;&#x9;&#x9;ST_Transform(geom, 3857) as geom,&#xA;&#x9;&#x9;-- Le fenêtrage permet de récupérer la géométrie de la prochaine destination&#xA;&#x9;&#x9;ST_Transform(&#xA;&#x9;&#x9;&#x9;first_value(geom) OVER next_etape,&#xA;&#x9;&#x9;&#x9;3857&#xA;&#x9;&#x9;) as geom_next&#xA;&#x9;FROM &#xA;&#x9;&#x9;santa_tracker.v_02_destination_rang_latitude&#xA;&#x9;CROSS JOIN &#xA;&#x9;&#x9;santa_tracker.v_00_variable as var&#xA;&#x9;WINDOW &#xA;&#x9;&#x9;all_etape AS (&#xA;&#x9;&#x9;&#x9;ORDER BY &#xA;&#x9;&#x9;&#x9;&#x9;rang_longitude, &#xA;&#x9;&#x9;&#x9;&#x9;rang_latitude&#xA;&#x9;&#x9;),&#xA;&#x9;&#x9;next_etape AS (&#xA;&#x9;&#x9;&#x9;ORDER BY&#xA;&#x9;&#x9;&#x9;&#x9;rang_longitude, &#xA;&#x9;&#x9;&#x9;&#x9;rang_latitude&#xA;&#x9;&#x9;&#x9;ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING&#xA;&#x9;&#x9;)&#xA;&#xA;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Étapes de distribution&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A partir des données des destination, on génère des étapes de distribution des cadeaux.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pendant ces étapes, le Père Noël s&amp;rsquo;arrête dans la destination et distribue les présents.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;DROP VIEW IF EXISTS santa_tracker.v_04_etape_distribution CASCADE;&#xA;&#xA;CREATE OR REPLACE VIEW santa_tracker.v_04_etape_distribution as (&#xA;&#xA;&#x9;SELECT &#xA;&#x9;&#x9;id_destination,&#xA;&#x9;&#x9;region,&#xA;&#x9;&#x9;ville,&#xA;&#x9;&#x9;-- Le fenêtrage permet de récupérer la prochaine destination&#xA;&#x9;&#x9;-- S&#39;il n&#39;y a pas de prochaine destination, alors on retourne chez le Père Noël&#xA;&#x9;&#x9;COALESCE(&#xA;&#x9;&#x9;&#x9;first_value(id_destination) OVER next_etape,&#xA;&#x9;&#x9;&#x9;(maison_pere_noel -&gt;&gt; &#39;id&#39;)::int&#xA;&#x9;&#x9;) as id_destination_next,&#xA;&#x9;&#x9;COALESCE(&#xA;&#x9;&#x9;&#x9;first_value(region) OVER next_etape,&#xA;&#x9;&#x9;&#x9;var.maison_pere_noel -&gt;&gt; &#39;region&#39;&#xA;&#x9;&#x9;) as region_next,&#xA;&#x9;&#x9;COALESCE(&#xA;&#x9;&#x9;&#x9;first_value(ville) OVER next_etape,&#xA;&#x9;&#x9;&#x9;var.maison_pere_noel -&gt;&gt; &#39;ville&#39;&#xA;&#x9;&#x9;) as ville_next,&#xA;&#x9;&#x9;population,&#xA;&#x9;&#x9;-- Création d&#39;une valeur de population fictive&#xA;&#x9;&#x9;-- pour qu&#39;une fois toutes destination visitées, le Père Noël ait vu toute la population mondiale&#xA;&#x9;&#x9;round( &#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;population * var.pop_total::NUMERIC&#xA;&#x9;&#x9;&#x9;&#x9;/ sum(population) OVER ()&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;0&#xA;&#x9;&#x9;) as pop_fictive,&#xA;&#x9;&#x9;utc_offset,&#xA;&#x9;&#x9;COALESCE(&#xA;&#x9;&#x9;&#x9;first_value(utc_offset) OVER next_etape,&#xA;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;utc_offset&#39;)::interval&#xA;&#x9;&#x9;) as utc_offset_next,&#xA;&#x9;&#x9;rang_longitude,&#xA;&#x9;&#x9;rang_latitude,&#xA;&#x9;&#x9;rang_etape,&#xA;&#x9;&#x9;nb_zone_longitude,&#xA;&#x9;&#x9;nb_destination_in_zone,&#xA;&#x9;&#x9;duree_destination,&#xA;&#x9;&#x9;(1 - (var.pourcent_temps_de_vol / 100)) * (duree_destination) AS duree_etape,&#xA;&#x9;&#x9;-- Le fenêtrage permet de récupérer l&#39;heure de début de l&#39;étape&#xA;&#x9;&#x9;var.debut_distrib + &#xA;&#x9;&#x9;coalesce(&#xA;&#x9;&#x9;&#x9;sum(duree_destination) OVER all_preceding_step,&#xA;&#x9;&#x9;&#x9;&#39;0&#39;::interval&#xA;&#x9;&#x9;)&#xA;&#x9;&#x9;as date_debut,&#xA;&#x9;&#x9;-- Le fenêtrage permet de récupérer l&#39;heure de fin de l&#39;étape&#xA;&#x9;&#x9;var.debut_distrib &#xA;&#x9;&#x9;+ (1 - (var.pourcent_temps_de_vol / 100)) * (duree_destination) &#xA;&#x9;&#x9;+ coalesce(&#xA;&#x9;&#x9;&#x9;sum(duree_destination) OVER all_preceding_step,&#xA;&#x9;&#x9;&#x9;&#39;0&#39;::interval&#xA;&#x9;&#x9;)&#xA;&#x9;&#x9;as date_fin,&#xA;&#x9;&#x9;-- Trajet effectué (ici ce sera un point)&#xA;&#x9;&#x9;-- On utilise une géométrie de type ligne pour homogénéïser les types de géométrie avec les trajets&#xA;&#x9;&#x9;ST_MakeLine(geom, geom) as geom,&#xA;&#x9;&#x9;geom AS geom_etape,&#xA;&#x9;&#x9;-- Le fenêtrage permet de récupérer la géométrie de la prochaine destination&#xA;&#x9;&#x9;-- S&#39;il n&#39;y a pas de prochaine destination, alors on retourne chez le Père Noël&#xA;&#x9;&#x9;ST_Transform(&#xA;&#x9;&#x9;&#x9;COALESCE(&#xA;&#x9;&#x9;&#x9;&#x9;first_value(geom) OVER next_etape,&#xA;&#x9;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;geom_4326&#39;)::geometry(point,4326)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;3857&#xA;&#x9;&#x9;) as geom_etape_next&#xA;&#x9;FROM &#xA;&#x9;&#x9;santa_tracker.v_03_destination&#xA;&#x9;CROSS JOIN &#xA;&#x9;&#x9;santa_tracker.v_00_variable as var&#xA;&#x9;WINDOW &#xA;&#x9;&#x9;next_etape AS (&#xA;&#x9;&#x9;&#x9;ORDER BY rang_etape&#xA;&#x9;&#x9;&#x9;ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING&#xA;&#x9;&#x9;),&#xA;&#x9;&#x9;all_preceding_step AS (&#xA;&#x9;&#x9;&#x9;ORDER BY rang_etape&#xA;&#x9;&#x9;&#x9;ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING&#xA;&#x9;&#x9;)&#xA;&#xA;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Étapes de trajet&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A partir des données des destination, on génère également des étapes de trajet.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pendant ces étapes, le Père Noël vol à bord de son traineau de destination en destination.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;DROP VIEW IF EXISTS santa_tracker.v_05_trajet CASCADE;&#xA;&#xA;CREATE OR REPLACE VIEW santa_tracker.v_05_trajet as (&#xA;&#xA;&#x9;SELECT &#xA;&#x9;&#x9;id_destination,&#xA;&#x9;&#x9;region,&#xA;&#x9;&#x9;ville,&#xA;&#x9;&#x9;id_destination_next,&#xA;&#x9;&#x9;region_next,&#xA;&#x9;&#x9;ville_next,&#xA;&#x9;&#x9;-- Il n&#39;y a aucune population lors du vol&#xA;&#x9;&#x9;0 AS population,&#xA;&#x9;&#x9;0 AS pop_fictive,&#xA;&#x9;&#x9;utc_offset,&#xA;&#x9;&#x9;utc_offset_next,&#xA;&#x9;&#x9;rang_longitude,&#xA;&#x9;&#x9;rang_latitude,&#xA;&#x9;&#x9;rang_etape,&#xA;&#x9;&#x9;nb_zone_longitude,&#xA;&#x9;&#x9;nb_destination_in_zone,&#xA;&#x9;&#x9;duree_destination,&#xA;&#x9;&#x9;-- La durée du trajet est égale à la durée totale de la destination moins la durée de l&#39;étape&#xA;&#x9;&#x9;duree_destination - duree_etape AS duree_trajet,&#xA;&#x9;&#x9;-- La date de début du trajet est identique à la date de fin de l&#39;étape&#xA;&#x9;&#x9;date_fin AS date_debut,&#xA;&#x9;&#x9;-- La date de fin correspond à la date de début de l&#39;étape + la durée sur la destination&#xA;&#x9;&#x9;date_debut + duree_destination AS date_fin,&#xA;&#x9;&#x9;-- Trajet effectué&#xA;&#x9;&#x9;ST_MakeLine(geom_etape, geom_etape_next) as geom&#xA;&#x9;FROM &#xA;&#x9;&#x9;santa_tracker.v_04_etape_distribution&#xA;&#x9;CROSS JOIN &#xA;&#x9;&#x9;santa_tracker.v_00_variable as var&#xA;&#x9;-- On ne calcul pas de trajet pour le retour à la maison du Père Noël&#xA;&#x9;WHERE &#xA;&#x9;&#x9;id_destination_next &amp;lt;&gt; 0&#xA;&#xA;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Construction du voyage&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour créer le voyage, les étapes suivantes sont associées (via des &lt;code&gt;UNION ALL&lt;/code&gt;) :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Le trajet de la maison du Père Noël jusqu&amp;rsquo;à la première destination (créé dans la requête).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Les étapes de distribution des cadeaux.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Les étapes de trajet entre destinations.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Le trajet de dernière destination jusqu&amp;rsquo;à la la maison du Père Noël (créé dans la requête).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les éléments sont ensuite réagencés selon l&amp;rsquo;ordre de passage afin de pouvoir calculer certains cumuls (population visitée, cadeaux distribués, distance parcourue&amp;#8230;)&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;DROP VIEW IF EXISTS santa_tracker.v_06_voyage CASCADE;&#xA;&#xA;CREATE OR REPLACE VIEW santa_tracker.v_06_voyage as (&#xA;&#xA;WITH &#xA;&#x9;all_steps AS (&#xA;&#x9;&#x9;-- Trajet de la maison du Père Noël à la première destination&#xA;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;id&#39;)::int AS id_destination,&#xA;&#x9;&#x9;&#x9;var.maison_pere_noel -&gt;&gt; &#39;region&#39; AS region,&#xA;&#x9;&#x9;&#x9;var.maison_pere_noel -&gt;&gt; &#39;ville&#39; AS ville,&#xA;&#x9;&#x9;&#x9;etp.id_destination AS id_destination_next,&#xA;&#x9;&#x9;&#x9;etp.region AS region_next,&#xA;&#x9;&#x9;&#x9;etp.ville AS ville_next,&#xA;&#x9;&#x9;&#x9;-- Il n&#39;y a aucune population lors du vol&#xA;&#x9;&#x9;&#x9;0 AS population,&#xA;&#x9;&#x9;&#x9;0 AS pop_fictive,&#xA;&#x9;&#x9;&#x9;0 AS cadeau_distribue,&#xA;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;utc_offset&#39;)::interval AS utc_offset,&#xA;&#x9;&#x9;&#x9;etp.utc_offset AS utc_offset_next,&#xA;&#x9;&#x9;&#x9;0 AS rang_longitude,&#xA;&#x9;&#x9;&#x9;0 AS rang_latitude,&#xA;&#x9;&#x9;&#x9;0 AS rang_etape,&#xA;&#x9;&#x9;&#x9;1 AS rang_voyage,&#xA;&#x9;&#x9;&#x9;&#39;Trajet&#39; AS type_etape,&#xA;&#x9;&#x9;&#x9;0 AS nb_zone_longitude,&#xA;&#x9;&#x9;&#x9;0 AS nb_destination_in_zone,&#xA;&#x9;&#x9;&#x9;-- La durée totale pour la destination est uniquement la durée du trajet (pas de distribution)&#xA;&#x9;&#x9;&#x9;var.delai_dest_santa_house AS duree_destination,&#xA;&#x9;&#x9;&#x9;-- La durée du trajet est fixée dans les variables&#xA;&#x9;&#x9;&#x9;var.delai_dest_santa_house AS duree_etape,&#xA;&#x9;&#x9;&#x9;-- La date de début du trajet est calculée par rapport aux variables&#xA;&#x9;&#x9;&#x9;var.debut_distrib - var.delai_dest_santa_house AS date_debut,&#xA;&#x9;&#x9;&#x9;-- La date de fin est fixée dans les variables&#xA;&#x9;&#x9;&#x9;var.debut_distrib AS date_fin,&#xA;&#x9;&#x9;&#x9;-- Trajet effectué&#xA;&#x9;&#x9;&#x9;ST_MakeLine(&#xA;&#x9;&#x9;&#x9;&#x9;ST_Transform(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;geom_4326&#39;)::geometry(point,4326),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;3857&#xA;&#x9;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;&#x9;etp.geom_etape&#xA;&#x9;&#x9;&#x9;) AS geom&#x9;&#xA;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;santa_tracker.v_00_variable AS var&#xA;&#x9;&#x9;LEFT JOIN &#xA;&#x9;&#x9;&#x9;santa_tracker.v_04_etape_distribution AS etp&#xA;&#x9;&#x9;&#x9;ON etp.rang_etape = 1&#xA;&#x9;&#x9;UNION ALL &#xA;&#x9;&#x9;-- Etapes de distribution des cadeaux&#xA;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;id_destination,&#xA;&#x9;&#x9;&#x9;region,&#xA;&#x9;&#x9;&#x9;ville,&#xA;&#x9;&#x9;&#x9;id_destination_next,&#xA;&#x9;&#x9;&#x9;region_next,&#xA;&#x9;&#x9;&#x9;ville_next,&#xA;&#x9;&#x9;&#x9;population,&#xA;&#x9;&#x9;&#x9;pop_fictive,&#xA;&#x9;&#x9;&#x9;-- Nombre de cadeau distribué&#xA;&#x9;&#x9;&#x9;round( var.cadeau_par_pop * pop_fictive::numeric, 0) AS cadeau_distribue,&#xA;&#x9;&#x9;&#x9;utc_offset,&#xA;&#x9;&#x9;&#x9;utc_offset_next,&#xA;&#x9;&#x9;&#x9;rang_longitude,&#xA;&#x9;&#x9;&#x9;rang_latitude,&#xA;&#x9;&#x9;&#x9;rang_etape,&#xA;&#x9;&#x9;&#x9;2 AS rang_voyage,&#xA;&#x9;&#x9;&#x9;&#39;Distribution&#39; AS type_etape,&#xA;&#x9;&#x9;&#x9;nb_zone_longitude,&#xA;&#x9;&#x9;&#x9;nb_destination_in_zone,&#xA;&#x9;&#x9;&#x9;duree_destination,&#xA;&#x9;&#x9;&#x9;duree_etape,&#xA;&#x9;&#x9;&#x9;date_debut,&#xA;&#x9;&#x9;&#x9;date_fin,&#xA;&#x9;&#x9;&#x9;geom&#xA;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;santa_tracker.v_04_etape_distribution&#xA;&#x9;&#x9;CROSS JOIN &#xA;&#x9;&#x9;&#x9;santa_tracker.v_00_variable as var&#xA;&#x9;&#x9;UNION ALL &#xA;&#x9;&#x9;-- Trajets entre les étapes de distribution&#xA;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;id_destination,&#xA;&#x9;&#x9;&#x9;region,&#xA;&#x9;&#x9;&#x9;ville,&#xA;&#x9;&#x9;&#x9;id_destination_next,&#xA;&#x9;&#x9;&#x9;region_next,&#xA;&#x9;&#x9;&#x9;ville_next,&#xA;&#x9;&#x9;&#x9;population,&#xA;&#x9;&#x9;&#x9;pop_fictive,&#xA;&#x9;&#x9;&#x9;0 AS cadeau_distribue,&#xA;&#x9;&#x9;&#x9;utc_offset,&#xA;&#x9;&#x9;&#x9;utc_offset_next,&#xA;&#x9;&#x9;&#x9;rang_longitude,&#xA;&#x9;&#x9;&#x9;rang_latitude,&#xA;&#x9;&#x9;&#x9;rang_etape,&#xA;&#x9;&#x9;&#x9;2 AS rang_voyage,&#xA;&#x9;&#x9;&#x9;&#39;Trajet&#39; AS type_etape,&#xA;&#x9;&#x9;&#x9;nb_zone_longitude,&#xA;&#x9;&#x9;&#x9;nb_destination_in_zone,&#xA;&#x9;&#x9;&#x9;duree_destination,&#xA;&#x9;&#x9;&#x9;duree_trajet AS duree_etape,&#xA;&#x9;&#x9;&#x9;date_debut,&#xA;&#x9;&#x9;&#x9;date_fin,&#xA;&#x9;&#x9;&#x9;geom&#xA;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;santa_tracker.v_05_trajet&#xA;&#x9;&#x9;UNION ALL&#xA;&#x9;&#x9;-- Trajet de la dernière destination à la maison du Père Noël&#xA;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;etp.id_destination AS id_destination,&#xA;&#x9;&#x9;&#x9;etp.region AS region,&#xA;&#x9;&#x9;&#x9;etp.ville AS ville,&#xA;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;id&#39;)::int AS id_destination_next,&#xA;&#x9;&#x9;&#x9;var.maison_pere_noel -&gt;&gt; &#39;region&#39; AS region_next,&#xA;&#x9;&#x9;&#x9;var.maison_pere_noel -&gt;&gt; &#39;ville&#39; AS ville_next,&#xA;&#x9;&#x9;&#x9;-- Il n&#39;y a aucune population lors du vol&#xA;&#x9;&#x9;&#x9;0 AS population,&#xA;&#x9;&#x9;&#x9;0 AS pop_fictive,&#xA;&#x9;&#x9;&#x9;0 AS cadeau_distribue,&#xA;&#x9;&#x9;&#x9;etp.utc_offset AS utc_offset,&#xA;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;utc_offset&#39;)::interval AS utc_offset_next,&#xA;&#x9;&#x9;&#x9;0 AS rang_longitude,&#xA;&#x9;&#x9;&#x9;0 AS rang_latitude,&#xA;&#x9;&#x9;&#x9;0 AS rang_etape,&#xA;&#x9;&#x9;&#x9;3 AS rang_voyage,&#xA;&#x9;&#x9;&#x9;&#39;Trajet&#39; AS type_etape,&#xA;&#x9;&#x9;&#x9;0 AS nb_zone_longitude,&#xA;&#x9;&#x9;&#x9;0 AS nb_destination_in_zone,&#xA;&#x9;&#x9;&#x9;-- La durée totale pour la destination est uniquement la durée du trajet (pas de distribution)&#xA;&#x9;&#x9;&#x9;var.delai_dest_santa_house AS duree_destination,&#xA;&#x9;&#x9;&#x9;-- La durée du trajet est fixée dans les variables&#xA;&#x9;&#x9;&#x9;var.delai_dest_santa_house AS duree_etape,&#xA;&#x9;&#x9;&#x9;-- La date de début du trajet est calculée par rapport aux variables&#xA;&#x9;&#x9;&#x9;var.fin_distrib AS date_debut,&#xA;&#x9;&#x9;&#x9;-- La date de fin est fixée dans les variables&#xA;&#x9;&#x9;&#x9;var.fin_distrib + var.delai_dest_santa_house AS date_fin,&#xA;&#x9;&#x9;&#x9;-- Trajet effectué&#xA;&#x9;&#x9;&#x9;ST_MakeLine(&#xA;&#x9;&#x9;&#x9;&#x9;etp.geom_etape,&#xA;&#x9;&#x9;&#x9;&#x9;ST_Transform(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;geom_4326&#39;)::geometry(point,4326),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;3857&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;) AS geom&#x9;&#xA;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;santa_tracker.v_00_variable AS var&#xA;&#x9;&#x9;LEFT JOIN &#xA;&#x9;&#x9;&#x9;santa_tracker.v_04_etape_distribution AS etp&#xA;&#x9;&#x9;&#x9;ON etp.rang_etape = 440&#xA;&#x9;)&#xA;&#x9;SELECT &#xA;&#x9;&#x9;concat_ws(&#xA;&#x9;&#x9;&#x9;&#39;-&#39;,&#xA;&#x9;&#x9;&#x9;rang_voyage::text,&#xA;&#x9;&#x9;&#x9;rang_longitude::text,&#xA;&#x9;&#x9;&#x9;rang_latitude::text,&#xA;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;WHEN type_etape = &#39;Distribution&#39; THEN &#39;d&#39;&#xA;&#x9;&#x9;&#x9;&#x9;ELSE &#39;t&#39;&#xA;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;) AS id_voyage,&#xA;&#x9;&#x9;id_destination,&#xA;&#x9;&#x9;region,&#xA;&#x9;&#x9;ville,&#xA;&#x9;&#x9;id_destination_next,&#xA;&#x9;&#x9;region_next,&#xA;&#x9;&#x9;ville_next,&#xA;&#x9;&#x9;population,&#xA;&#x9;&#x9;pop_fictive,&#xA;&#x9;&#x9;-- Le fenêtrage permet de récupérer le cumul de population visitée&#xA;&#x9;&#x9;coalesce(&#xA;&#x9;&#x9;&#x9;sum(pop_fictive) OVER all_preceding_step,&#xA;&#x9;&#x9;&#x9;0&#xA;&#x9;&#x9;) as pop_fictive_cumul,&#xA;&#x9;&#x9;cadeau_distribue,&#xA;&#x9;&#x9;-- Le fenêtrage permet de récupérer le cumul de population visitée&#xA;&#x9;&#x9;coalesce(&#xA;&#x9;&#x9;&#x9;sum(cadeau_distribue) OVER all_preceding_step,&#xA;&#x9;&#x9;&#x9;0&#xA;&#x9;&#x9;) as cadeau_distribue_cumul,&#xA;&#x9;&#x9;utc_offset,&#xA;&#x9;&#x9;utc_offset_next,&#xA;&#x9;&#x9;rang_longitude,&#xA;&#x9;&#x9;rang_latitude,&#xA;&#x9;&#x9;rang_etape,&#xA;&#x9;&#x9;rang_voyage,&#xA;&#x9;&#x9;type_etape,&#xA;&#x9;&#x9;nb_zone_longitude,&#xA;&#x9;&#x9;nb_destination_in_zone,&#xA;&#x9;&#x9;duree_destination,&#xA;&#x9;&#x9;duree_etape,&#xA;&#x9;&#x9;-- Le fenêtrage permet de récupérer le cumul de temps de voyage&#xA;&#x9;&#x9;coalesce(&#xA;&#x9;&#x9;&#x9;sum(duree_etape) OVER all_preceding_step,&#xA;&#x9;&#x9;&#x9;&#39;0 second&#39;::interval&#xA;&#x9;&#x9;) as duree_etape_cumul,&#xA;&#x9;&#x9;date_debut,&#xA;&#x9;&#x9;date_fin,&#xA;&#x9;&#x9;-- Distance parcourue durant le trajet&#xA;&#x9;&#x9;round(&#xA;&#x9;&#x9;&#x9;ST_Length(geom)::NUMERIC,&#xA;&#x9;&#x9;&#x9;0&#xA;&#x9;&#x9;) as distance_to_next,&#xA;&#x9;&#x9;-- Le fenêtrage permet de récupérer le cumul de distance parcourue&#xA;&#x9;&#x9;coalesce(&#xA;&#x9;&#x9;&#x9;round(&#xA;&#x9;&#x9;&#x9;&#x9;(sum(ST_Length(geom)) OVER all_preceding_step)::NUMERIC,&#xA;&#x9;&#x9;&#x9;&#x9;0&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;0&#xA;&#x9;&#x9;) as distance_cumul,&#xA;&#x9;&#x9;-- Azimuth du symbole sur la carte&#xA;&#x9;&#x9;Degrees(ST_Azimuth(ST_StartPoint(geom),ST_EndPoint(geom))) as azimuth,&#xA;&#x9;&#x9;-- Orientation du symbole sur la carte&#xA;&#x9;&#x9;CASE &#xA;&#x9;&#x9;&#x9;WHEN Degrees(ST_Azimuth(ST_StartPoint(geom),ST_EndPoint(geom))) &amp;lt; 180 THEN &#39;Est&#39; &#xA;&#x9;&#x9;&#x9;ELSE &#39;Ouest&#39;&#xA;&#x9;&#x9;END as orientation,&#xA;&#x9;&#x9;geom::geometry(linestring,3857)&#xA;&#x9;FROM &#xA;&#x9;&#x9;all_steps&#xA;&#x9;WINDOW &#xA;&#x9;&#x9;all_preceding_step AS (&#xA;&#x9;&#x9;&#x9;ORDER BY &#xA;&#x9;&#x9;&#x9;&#x9;rang_voyage,&#xA;&#x9;&#x9;&#x9;&#x9;rang_etape,&#xA;&#x9;&#x9;&#x9;&#x9;type_etape&#xA;&#x9;&#x9;&#x9;ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING&#xA;&#x9;&#x9;)&#xA;&#xA;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;On fixe ensuite les données du voyage dans une vue matérialisée pour améliorer les performance lors de la consultation :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;DROP MATERIALIZED VIEW IF EXISTS santa_tracker.vm_06_voyage CASCADE;&#xA;&#xA;CREATE MATERIALIZED VIEW santa_tracker.vm_06_voyage as (&#xA;&#x9;SELECT * &#xA;&#x9;FROM santa_tracker.v_06_voyage&#xA;)&#xA;WITH DATA&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;L&#39; »instant t »&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Avoir un trajet c&amp;rsquo;est bien mais connaitre toutes les infos sur le trajet à un « instant t », c&amp;rsquo;est mieux.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Données&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous allons créer une nouvelle vue qui va se baser sur la vue matérialisée &lt;code&gt;vm_06_voyage&lt;/code&gt; pour calculer la position du Père Noël et divers les paramètres au moment de la consultation de cette vue.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cette vue définies trois grands temps dans l&amp;rsquo;année :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Du 1er janvier au 24 décembre : le Père Noël se trouve chez lui et fabrique les cadeaux&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Du 24 au 25 décembre : le Père Noël distribue les cadeaux selon les données présentes dans la vue matérialisée &lt;code&gt;vm_06_voyage&lt;/code&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;A partir du 25 décembre : le Père Noël se repose chez lui après tout ce travail.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;&#xA;&#xA;&#xA;DROP VIEW IF EXISTS santa_tracker.v_instant_t CASCADE;&#xA;&#xA;CREATE OR REPLACE VIEW santa_tracker.v_instant_t as (&#xA;&#xA;WITH &#xA;&#x9;voyage_instant_t as (&#xA;&#x9;&#x9;-- Etape de préparation des cadeaux&#xA;&#x9;&#x9;-- Cette étape sera visible du 1er janvier au début de la tournée&#xA;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#39;Préparatifs&#39; as type_trajet,&#xA;&#x9;&#x9;&#x9;&#39;0-0-0-p&#39; AS id_voyage,&#xA;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;id&#39;)::int AS id_destination,&#xA;&#x9;&#x9;&#x9;NULL AS id_destination_next,&#xA;&#x9;&#x9;&#x9;var.maison_pere_noel -&gt;&gt; &#39;region&#39; AS region,&#xA;&#x9;&#x9;&#x9;NULL as region_next,&#xA;&#x9;&#x9;&#x9;var.maison_pere_noel -&gt;&gt; &#39;ville&#39; AS ville,&#xA;&#x9;&#x9;&#x9;NULL as ville_next,&#xA;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;population&#39;)::integer AS population,&#xA;&#x9;&#x9;&#x9;NULL as pop_fictive,&#xA;&#x9;&#x9;&#x9;NULL as pop_fictive_cumul,&#xA;&#x9;&#x9;&#x9;-- Nombre total de cadeau total à fabriquer&#xA;&#x9;&#x9;&#x9;(var.pop_total * var.cadeau_par_pop) as cadeau_distribue,&#xA;&#x9;&#x9;&#x9;0 as cadeau_distribue_cumul,&#xA;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;utc_offset&#39;)::interval AS utc_offset,&#xA;&#x9;&#x9;&#x9;NULL AS utc_offset_next,&#xA;&#x9;&#x9;&#x9;((extract(year from now()) || &#39;-01-01 00:00:00 +01&#39;)::timestamp with time ZONE - var.debut_distrib)::interval as duree_etape,&#xA;&#x9;&#x9;&#x9;&#39;0 second&#39;::interval as duree_etape_cumul,&#xA;&#x9;&#x9;&#x9;-- Début de fabrication le 1er janvier (fuseau horaire du Père Noël)&#xA;&#x9;&#x9;&#x9;(extract(year from now()) || &#39;-01-01 00:00:00 +01&#39;)::timestamp with time zone as date_debut,&#xA;&#x9;&#x9;&#x9;-- Fin de fabrication lors du début de la distribution&#xA;&#x9;&#x9;&#x9;var.debut_distrib as date_fin,&#xA;&#x9;&#x9;&#x9;-- Calcul du pourcentage d&#39;avancement sur l&#39;étape&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;extract(&#39;epoch&#39; from var.&#34;now&#34;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;- extract(&#39;epoch&#39; from ((extract(year from now()) || &#39;-01-01 00:00:00 +01&#39;)::timestamp with time zone))&#xA;&#x9;&#x9;&#x9;&#x9;) / (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;extract(&#39;epoch&#39; from var.debut_distrib)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;- extract(&#39;epoch&#39; from ((extract(year from now()) || &#39;-01-01 00:00:00 +01&#39;)::timestamp with time zone))&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)::NUMERIC as avancement,&#xA;&#x9;&#x9;&#x9;NULL as distance_to_next,&#xA;&#x9;&#x9;&#x9;NULL as distance_cumul,&#xA;&#x9;&#x9;&#x9;0 AS azimuth,&#xA;&#x9;&#x9;&#x9;NULL AS orientation,&#xA;&#x9;&#x9;&#x9;ST_MakeLine(&#xA;&#x9;&#x9;&#x9;&#x9;ST_Transform(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;geom_4326&#39;)::geometry(point,4326), &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;3857&#xA;&#x9;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;&#x9;ST_Transform(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;geom_4326&#39;)::geometry(point,4326),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;3857&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;) as geom &#xA;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;santa_tracker.v_00_variable as var&#xA;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;var.&#34;now&#34; &amp;lt; (var.debut_distrib - var.delai_dest_santa_house)&#xA;&#x9;&#x9;UNION ALL&#xA;&#x9;&#x9;-- Récupération des étapes du voyage&#xA;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;type_etape,&#xA;&#x9;&#x9;&#x9;id_voyage,&#xA;&#x9;&#x9;&#x9;id_destination,&#xA;&#x9;&#x9;&#x9;id_destination_next,&#xA;&#x9;&#x9;&#x9;region,&#xA;&#x9;&#x9;&#x9;region_next,&#xA;&#x9;&#x9;&#x9;ville,&#xA;&#x9;&#x9;&#x9;ville_next,&#xA;&#x9;&#x9;&#x9;population,&#xA;&#x9;&#x9;&#x9;pop_fictive,&#xA;&#x9;&#x9;&#x9;pop_fictive_cumul,&#xA;&#x9;&#x9;&#x9;cadeau_distribue,&#xA;&#x9;&#x9;&#x9;cadeau_distribue_cumul,&#xA;&#x9;&#x9;&#x9;utc_offset,&#xA;&#x9;&#x9;&#x9;utc_offset_next,&#xA;&#x9;&#x9;&#x9;duree_etape,&#xA;&#x9;&#x9;&#x9;duree_etape_cumul,&#xA;&#x9;&#x9;&#x9;date_debut,&#xA;&#x9;&#x9;&#x9;date_fin,&#xA;&#x9;&#x9;&#x9;-- Calcul du pourcentage d&#39;avancement sur l&#39;étape&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;extract(&#39;epoch&#39; from var.&#34;now&#34;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;- extract(&#39;epoch&#39; from date_debut)&#xA;&#x9;&#x9;&#x9;&#x9;) / (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;extract(&#39;epoch&#39; from date_fin)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;- extract(&#39;epoch&#39; from date_debut)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)::NUMERIC as avancement,&#xA;&#x9;&#x9;&#x9;distance_to_next,&#xA;&#x9;&#x9;&#x9;distance_cumul,&#xA;&#x9;&#x9;&#x9;azimuth,&#xA;&#x9;&#x9;&#x9;orientation,&#xA;&#x9;&#x9;&#x9;geom &#xA;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;santa_tracker.vm_06_voyage as t&#xA;&#x9;&#x9;CROSS JOIN &#xA;&#x9;&#x9;&#x9;santa_tracker.v_00_variable as var&#xA;&#x9;&#x9;WHERE &#xA;&#x9;&#x9;&#x9;var.&#34;now&#34; &gt;= date_debut&#xA;&#x9;&#x9;AND &#xA;&#x9;&#x9;&#x9;var.&#34;now&#34; &amp;lt; date_fin&#xA;&#x9;&#x9;UNION ALL&#xA;&#x9;&#x9;-- Ajout d&#39;une étape de repos&#xA;&#x9;&#x9;-- Cette étape sera visible après la fin de la tournée &#xA;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#39;Repos&#39; as type_trajet,&#xA;&#x9;&#x9;&#x9;&#39;0-0-0-r&#39; AS id_voyage,&#xA;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;id&#39;)::int AS id_destination,&#xA;&#x9;&#x9;&#x9;NULL AS id_destination_next,&#xA;&#x9;&#x9;&#x9;var.maison_pere_noel -&gt;&gt; &#39;region&#39; AS region,&#xA;&#x9;&#x9;&#x9;NULL as region_next,&#xA;&#x9;&#x9;&#x9;var.maison_pere_noel -&gt;&gt; &#39;ville&#39; AS ville,&#xA;&#x9;&#x9;&#x9;NULL as ville_next,&#xA;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;population&#39;)::integer AS population,&#xA;&#x9;&#x9;&#x9;NULL as pop_fictive,&#xA;&#x9;&#x9;&#x9;var.pop_total as pop_fictive_cumul,&#xA;&#x9;&#x9;&#x9;(var.pop_total * var.cadeau_par_pop) as cadeau_distribue,&#xA;&#x9;&#x9;&#x9;(var.pop_total * var.cadeau_par_pop) as cadeau_distribue_cumul,&#xA;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;utc_offset&#39;)::interval AS utc_offset,&#xA;&#x9;&#x9;&#x9;NULL AS utc_offset_next,&#xA;&#x9;&#x9;&#x9;((extract(year from now()) || &#39;-12-31 23:59:59 +01&#39;)::timestamp with time ZONE - var.fin_distrib)::interval as duree_etape,&#xA;&#x9;&#x9;&#x9;&#39;0 second&#39;::interval as duree_etape_cumul,&#xA;&#x9;&#x9;&#x9;-- Début du repos à la fin de la distribution&#xA;&#x9;&#x9;&#x9;var.fin_distrib as date_debut,&#xA;&#x9;&#x9;&#x9;-- Fin du repos le 1er janvier à 00h00 (fuseau horaire du Père Noël)&#xA;&#x9;&#x9;&#x9;((extract(year from now()) + 1)::text || &#39;-01-01 00:00:00 +01&#39;)::timestamp with time zone as date_fin,&#xA;&#x9;&#x9;&#x9;-- Calcul du pourcentage d&#39;avancement sur l&#39;étape&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;extract(&#39;epoch&#39; from var.&#34;now&#34;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;- extract(&#39;epoch&#39; from var.fin_distrib)&#xA;&#x9;&#x9;&#x9;&#x9;) / (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;extract(&#39;epoch&#39; from var.fin_distrib)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;- extract(&#39;epoch&#39; from ((extract(year from now()) || &#39;-01-01 00:00:00 +01&#39;)::timestamp with time zone))&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)::NUMERIC as avancement,&#xA;&#x9;&#x9;&#x9;NULL as distance_to_next,&#xA;&#x9;&#x9;&#x9;NULL as distance_cumul,&#xA;&#x9;&#x9;&#x9;0 AS azimuth,&#xA;&#x9;&#x9;&#x9;NULL AS orientation,&#xA;&#x9;&#x9;&#x9;ST_MakeLine(&#xA;&#x9;&#x9;&#x9;&#x9;ST_Transform(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;geom_4326&#39;)::geometry(point,4326), &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;3857&#xA;&#x9;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;&#x9;ST_Transform(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;geom_4326&#39;)::geometry(point,4326),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;3857&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;) as geom &#xA;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;santa_tracker.v_00_variable as var&#xA;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;var.&#34;now&#34; &gt; (var.fin_distrib + var.delai_dest_santa_house)&#xA;&#x9;)&#xA;SELECT &#xA;&#x9;type_trajet,&#xA;&#x9;id_voyage,&#xA;&#x9;id_destination,&#xA;&#x9;id_destination_next,&#xA;&#x9;region,&#xA;&#x9;region_next,&#xA;&#x9;ville,&#xA;&#x9;ville_next,&#xA;&#x9;population,&#xA;&#x9;pop_fictive,&#xA;&#x9;pop_fictive_cumul,&#xA;&#x9;-- Calcul du nombre de personnes visitées au moment de la visualisation&#xA;&#x9;round(&#xA;&#x9;&#x9;pop_fictive_cumul + &#xA;&#x9;&#x9;(pop_fictive * avancement)::numeric,&#xA;&#x9;&#x9;0&#xA;&#x9;) as pop_fictive_cumul_actuel,&#xA;&#x9;cadeau_distribue,&#xA;&#x9;cadeau_distribue_cumul,&#xA;&#x9;-- Calcul du nombre de cadeau distribué au moment de la visualisation&#xA;&#x9;round(&#xA;&#x9;&#x9;cadeau_distribue_cumul + &#xA;&#x9;&#x9;(cadeau_distribue * avancement)::numeric,&#xA;&#x9;&#x9;0&#xA;&#x9;) as cadeau_cumul_actuel,&#xA;&#x9;utc_offset,&#xA;&#x9;utc_offset_next,&#xA;&#x9;duree_etape,&#xA;&#x9;date_debut,&#xA;&#x9;date_fin,&#xA;&#x9;avancement,&#xA;&#x9;distance_to_next,&#xA;&#x9;distance_cumul,&#xA;&#x9;-- Calcul de la distance parcourue au moment de la visualisation&#xA;&#x9;round(&#xA;&#x9;&#x9;distance_cumul + &#xA;&#x9;&#x9;(distance_to_next * avancement)::numeric,&#xA;&#x9;&#x9;0&#xA;&#x9;) as distance_cumul_actuel,&#xA;&#x9;azimuth,&#xA;&#x9;orientation,&#xA;&#x9;-- Calcul de l&#39;emplacement au moment de la visualisation&#xA;&#x9;ST_LineInterpolatePoint(geom, avancement)::geometry(point,3857) as geom&#xA;FROM &#xA;&#x9;voyage_instant_t&#xA;&#xA;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Affichage&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Selon le moment de l&amp;rsquo;année, nous n&amp;rsquo;allons pas afficher les mêmes données. Dans le cadre de l&amp;rsquo;application, j&amp;rsquo;ai mis en forme les données avec beaucoup de HTML, c&amp;rsquo;est peu lisible et nous allons donc ici générer quelque chose de beaucoup plus simple mais avec les mêmes informations.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Créons une vue qui récupère les données et les mets en forme :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;DROP VIEW IF EXISTS santa_tracker.v_instant_t_affichage CASCADE;&#xA;&#xA;CREATE OR REPLACE VIEW santa_tracker.v_instant_t_affichage as (&#xA;&#xA;SELECT &#xA;&#x9;id_voyage,&#xA;&#x9;type_trajet,&#xA;&#x9;-- On génère des paroles du Père Noël.&#xA;&#x9;-- Le texte varie selon le moment de l&#39;année et change toutes les 10 secondes&#xA;&#x9;jsonb_extract_path_text(&#xA;&#x9;&#x9;$${&#xA;&#x9;&#x9;&#x9;&#34;Préparatifs&#34;:[&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Vive le vent d&#34;,&#34;hiver !&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Et un cadeau de plus !&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Hum ?!&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Quel beau camion !&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Ah, une belle poupée !&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Oh Oh Oh !&#34;&#xA;&#x9;&#x9;&#x9;],&#xA;&#x9;&#x9;&#x9;&#34;Trajet&#34;:[&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Oh Oh Oh !&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Joyeux Noël !&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Mon beau sapin !&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Hue tornade !&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Allez comète !&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Il fait frais cette nuit !&#34;&#xA;&#x9;&#x9;&#x9;],&#xA;&#x9;&#x9;&#x9;&#34;Distribution&#34;:[&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Oh hisse !&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Serrée cette cheminée !&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Et un cadeau de plus !&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Chut, pas un bruit !&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Hum un petit biscuit...&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Oh Oh Oh !&#34;&#xA;&#x9;&#x9;&#x9;],&#xA;&#x9;&#x9;&#x9;&#34;Repos&#34;:[&#xA;&#x9;&#x9;&#x9;&#x9;&#34;ZZZ&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;ZZZ ZZZ&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;ZZZ&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;ZZZ ZZZ&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;ZZZ&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;RONFFFFFFFLE&#34;&#xA;&#x9;&#x9;&#x9;]&#xA;&#x9;&#x9;}$$::jsonb,&#xA;&#x9;&#x9;type_trajet,&#xA;&#x9;&#x9;FLOOR(EXTRACT(second from transaction_timestamp()) / 10)::text&#xA;&#x9;) as parole,&#xA;&#x9;CASE &#xA;&#x9;&#x9;WHEN type_trajet = &#39;Préparatifs&#39; THEN &#39;Le Père Noël prépare les cadeaux&#39;&#xA;&#x9;&#x9;WHEN type_trajet = &#39;Trajet&#39; THEN &#39;Le Père Noël voyage vers un nouveau lieu de distribution&#39;&#xA;&#x9;&#x9;WHEN type_trajet = &#39;Distribution&#39; THEN &#39;Le Père Noël est en cours de distribution&#39;&#xA;&#x9;&#x9;WHEN type_trajet = &#39;Repos&#39; THEN &#39;Le Père Noël a terminé et prend un repos bien mérité&#39;&#xA;&#x9;END AS titre,&#xA;&#x9;ville || &#39; (&#39; || region || &#39;)&#39; AS ville,&#xA;&#x9;ville_next || &#39; (&#39; || region_next || &#39;)&#39; AS ville_next,&#xA;&#x9;concat(&#xA;&#x9;&#x9;NULLIF(extract(day from (date_fin - var.&#34;now&#34;)), 0) || &#39; jours, &#39;,&#xA;&#x9;&#x9;NULLIF(extract(hour from (date_fin - var.&#34;now&#34;)), 0) || &#39; heures, &#39;,&#xA;&#x9;&#x9;NULLIF(extract(minute from (date_fin - var.&#34;now&#34;)), 0) || &#39; minutes et &#39;,&#xA;&#x9;&#x9;NULLIF(round(extract(second from (date_fin - var.&#34;now&#34;))::numeric, 0), 0) || &#39; secondes&#39;&#xA;&#x9;) AS timer,&#xA;&#x9;to_char(date_debut,&#39;DD TMmon YYYY&#39;) AS date_debut,&#xA;&#x9;to_char(date_debut,&#39;HH24:MI:SS&#39;) AS heure_debut,&#xA;&#x9;to_char(date_debut AT TIME ZONE utc_offset,&#39;DD TMmon YYYY&#39;) AS date_debut_local,&#xA;&#x9;to_char(date_debut AT TIME ZONE utc_offset,&#39;HH24:MI:SS&#39;) AS heure_debut_local,&#xA;&#x9;to_char(date_fin,&#39;DD TMmon YYYY&#39;) AS date_fin,&#xA;&#x9;to_char(date_fin,&#39;HH24:MI:SS&#39;) AS heure_fin,&#xA;&#x9;to_char(date_fin AT TIME ZONE utc_offset,&#39;DD TMmon YYYY&#39;) AS date_fin_local,&#xA;&#x9;to_char(date_fin AT TIME ZONE utc_offset,&#39;HH24:MI:SS&#39;) AS heure_fin_local,&#xA;&#x9;trim(to_char(cadeau_cumul_actuel, &#39;999 999 999 999&#39;)) AS cadeau,&#xA;&#x9;trim(to_char(pop_fictive_cumul_actuel, &#39;999 999 999 999&#39;)) AS population,&#xA;&#x9;trim(to_char(distance_cumul_actuel/1000, &#39;999 999 999 999 km&#39;)) AS distance&#xA;FROM&#xA;&#x9;santa_tracker.v_instant_t&#xA;CROSS JOIN&#xA;&#x9;santa_tracker.v_00_variable as var &#xA;&#x9;&#xA;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il est maintenant possible d&amp;rsquo;appeler la vue avec un SELECT qui finalise la mise en forme. N&amp;rsquo;hésitez pas à utiliser du HTML.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT &#xA;&#x9;id_voyage,&#xA;&#x9;CASE &#xA;&#x9;&#x9;WHEN type_trajet = &#39;Préparatifs&#39; THEN &#xA;&#x9;&#x9;&#x9;concat_ws(&#xA;&#x9;&#x9;&#x9;&#x9;chr(10),&#xA;&#x9;&#x9;&#x9;&#x9;titre,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Petit mot du Père Noël : &#39; || parole,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Emplacement actuel : &#39; || ville ,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Départ prévu dans &#39; || timer,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;&#x9;le &#39; || date_fin || &#39; à &#39; || heure_fin,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Cadeaux fabriqués : &#39; || cadeau&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;WHEN type_trajet = &#39;Trajet&#39; THEN&#xA;&#x9;&#x9;&#x9;concat_ws(&#xA;&#x9;&#x9;&#x9;&#x9;chr(10),&#xA;&#x9;&#x9;&#x9;&#x9;titre,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Petit mot du Père Noël : &#39; || parole,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Décollage : &#39; || ville ,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;&#x9;le &#39; || date_debut || &#39; à &#39; || heure_debut,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;&#x9;(&#39; || date_debut_local || &#39; à &#39; || heure_debut_local || &#39; heure locale)&#39;,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Arrivée prévue dans &#39; || timer,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Atterissage : &#39; || ville_next ,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;&#x9;le &#39; || date_fin || &#39; à &#39; || heure_fin,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;&#x9;(&#39; || date_fin_local || &#39; à &#39; || heure_fin_local || &#39; heure locale)&#39;,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Cadeaux distribués : &#39; || cadeau,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Population visitée : &#39; || population,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Distance parcourue : &#39; || distance&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;WHEN type_trajet = &#39;Distribution&#39; THEN&#xA;&#x9;&#x9;&#x9;concat_ws(&#xA;&#x9;&#x9;&#x9;&#x9;chr(10),&#xA;&#x9;&#x9;&#x9;&#x9;titre,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Petit mot du Père Noël : &#39; || parole,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Emplacement actuel : &#39; || ville ,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Arrivé sur place le &#39; || date_debut || &#39; à &#39; || heure_debut,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;&#x9;(&#39; || date_debut_local || &#39; à &#39; || heure_debut_local || &#39; heure locale)&#39;,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Prochain départ le &#39; || date_fin || &#39; à &#39; || heure_fin,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;&#x9;(&#39; || date_fin_local || &#39; à &#39; || heure_fin_local || &#39; heure locale)&#39;,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Dans &#39; || timer,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Prochaine destination : &#39; || ville_next ,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Cadeaux distribués : &#39; || cadeau,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Population visitée : &#39; || population,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Distance parcourue : &#39; || distance&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;WHEN type_trajet = &#39;Repos&#39; THEN&#xA;&#x9;&#x9;&#x9;concat_ws(&#xA;&#x9;&#x9;&#x9;&#x9;chr(10),&#xA;&#x9;&#x9;&#x9;&#x9;titre,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Petit mot du Père Noël : &#39; || parole,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Emplacement actuel : &#39; || ville ,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Prochaine fabrication de cadeau dans &#39; || timer,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Le &#39; || date_fin || &#39; à &#39; || heure_fin,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Cadeaux distribués : &#39; || cadeau,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Population visitée : &#39; || population&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;END as informations&#xA;FROM&#xA;&#x9;santa_tracker.v_instant_t_affichage&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voila un exemple de réponse :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-columns is-layout-flex wp-container-core-columns-is-layout-1 wp-block-columns-is-layout-flex&#34;&gt;&#xA;&lt;div class=&#34;wp-block-column is-layout-flow wp-block-column-is-layout-flow&#34;&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-column is-layout-flow wp-block-column-is-layout-flow&#34;&gt;&#xA;&lt;p class=&#34;has-text-align-center&#34;&gt;&lt;strong&gt;Le Père Noël est en cours de distribution&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Petit mot du Père Noël : Oh hisse !&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Emplacement actuel : Anadyr (Russie)&lt;br&gt;Arrivé sur place le 24 déc. 2023 à 08:00:00&lt;br&gt;(24 déc. 2023 à 19:00:00 heure locale)&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Prochaine destination : Majuro Atoll (Îles Marshall)&lt;br&gt;Départ dans 36 secondes&lt;br&gt;Le 24 déc. 2023 à 08:00:37&lt;br&gt;(24 déc. 2023 à 19:00:37 heure locale)&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cadeaux distribués : 7 222&lt;br&gt;Population visitée : 7 602&lt;br&gt;Distance parcourue : 18 108 km&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-column is-layout-flow wp-block-column-is-layout-flow&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;L&amp;rsquo;état des lieux&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour chaque destination, il est possible de voir en temps réel si le Père Noël est passé ou non. Pour cela nous allons nous appuyer sur la table des destinations ainsi que la vue matérialisée &lt;code&gt;vm_06_voyage&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Vue contenant toutes les destinations&#xA;DROP VIEW IF EXISTS santa_tracker.v_destination CASCADE;&#xA;&#xA;CREATE OR REPLACE VIEW santa_tracker.v_destination AS &#xA;&#xA;WITH &#xA;&#x9;all_destinations AS (&#xA;&#x9;&#x9;-- Récupération de toutes les destinations&#xA;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;id_destination,&#xA;&#x9;&#x9;&#x9;region,&#xA;&#x9;&#x9;&#x9;ville,&#xA;&#x9;&#x9;&#x9;population,&#xA;&#x9;&#x9;&#x9;utc_offset,&#xA;&#x9;&#x9;&#x9;geom&#xA;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;santa_tracker.destination&#xA;&#x9;&#x9;UNION&#xA;&#x9;&#x9;-- Ajout de la maison du Père Noël&#xA;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;(maison_pere_noel -&gt;&gt; &#39;id&#39;)::integer AS id_destination,&#xA;&#x9;&#x9;&#x9;maison_pere_noel -&gt;&gt; &#39;region&#39; AS region,&#xA;&#x9;&#x9;&#x9;maison_pere_noel -&gt;&gt; &#39;ville&#39; AS ville,&#xA;&#x9;&#x9;&#x9;(maison_pere_noel -&gt;&gt; &#39;population&#39;)::integer AS population,&#xA;&#x9;&#x9;&#x9;(maison_pere_noel -&gt;&gt; &#39;utc_offset&#39;)::interval AS utc_offset,&#xA;&#x9;&#x9;&#x9;(maison_pere_noel -&gt;&gt; &#39;geom_4326&#39;)::geometry(Point,4326) AS geom&#xA;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;santa_tracker.v_00_variable&#xA;&#x9;)&#xA;&#x9;SELECT &#xA;&#x9;&#x9;t1.id_destination,&#xA;&#x9;&#x9;t1.region,&#xA;&#x9;&#x9;t1.ville,&#xA;&#x9;&#x9;t1.population,&#xA;&#x9;&#x9;t1.utc_offset,&#xA;&#x9;&#x9;-- Génération d&#39;un message d&#39;information sur l&#39;état de passage&#xA;&#x9;&#x9;CASE &#xA;&#x9;&#x9;&#x9;-- S&#39;il n&#39;y a pas de date de début (pas de distribution) alors il s&#39;agit de la maison du Père Noël&#xA;&#x9;&#x9;&#x9;WHEN voy.date_debut IS NULL THEN &#xA;&#x9;&#x9;&#x9;&#x9;CASE &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN var.&#34;now&#34; &amp;lt; var.debut_distrib THEN &#39;Le Père Noël prépare les cadeaux&#39;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN var.&#34;now&#34; &amp;lt; var.fin_distrib THEN &#39;Le Père Noël est absent&#39;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE &#39;Le Père Noël se repose&#39;&#xA;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;-- Sinon on détermine si la visite est réalisée en fonction de l&#39;heure de passage&#xA;&#x9;&#x9;&#x9;WHEN var.&#34;now&#34; &gt; voy.date_fin  THEN &#39;A reçu la visite du Père Noël&#39;&#xA;&#x9;&#x9;&#x9;WHEN var.&#34;now&#34; &gt; voy.date_debut  THEN &#39;Le Père Noël est ici, Youpi !&#39;&#xA;&#x9;&#x9;&#x9;ELSE &#39;Attend la visite du Père Noël&#39;&#xA;&#x9;&#x9;END AS informations,&#xA;&#x9;&#x9;t1.geom&#xA;&#x9;FROM &#xA;&#x9;&#x9;all_destinations AS t1&#xA;&#x9;CROSS JOIN &#xA;&#x9;&#x9;santa_tracker.v_00_variable AS var&#xA;&#x9;LEFT JOIN &#xA;&#x9;&#x9;santa_tracker.vm_06_voyage as voy&#xA;&#x9;&#x9;ON voy.id_destination = t1.id_destination&#xA;&#x9;&#x9;AND voy.type_etape = &#39;Distribution&#39;&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr class=&#34;wp-block-separator has-alpha-channel-opacity&#34;/&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-text-align-center&#34;&gt;Voila ! J&amp;rsquo;espère que ça vous a plu et n&amp;rsquo;hésitez pas à suivre le Père Noël !!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-text-align-center has-rouge-color has-text-color&#34;&gt;&lt;a href=&#34;https://noel.cirilgroup.com/index.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;strong&gt;noel.cirilgroup.com&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-text-align-center has-rouge-color has-text-color has-large-font-size&#34;&gt;&lt;img src=&#34;https://s.w.org/images/core/emoji/15.0.3/72x72/1f384.png&#34; alt=&#34;🎄&#34; class=&#34;wp-smiley&#34; style=&#34;height: 1em; max-height: 1em;&#34; /&gt; &lt;strong&gt;Joyeux Noël !!&lt;/strong&gt; &lt;img src=&#34;https://s.w.org/images/core/emoji/15.0.3/72x72/1f384.png&#34; alt=&#34;🎄&#34; class=&#34;wp-smiley&#34; style=&#34;height: 1em; max-height: 1em;&#34; /&gt;&lt;/p&gt;&#xA;</content>
    <link href="https://blog.arthurbazin.com/bdd/postgresql/suivons-le-pere-noel-avec-postgis" rel="alternate"></link>
    <summary type="html">Découvrez ce qui se cache derrière une application de suivi du Père Noël. Une liste de destination, quelques requêtes SQL et le tour est joué ? Ce n&#39;est pas aussi simple que ça, vous allez le voir...&#xA;En partenariat avec Ciril GROUP.</summary>
    <author>
      <name>Arthur Bazin</name>
    </author>
  </entry>
  <entry>
    <title>Configurez PostgreSQL</title>
    <updated>2023-10-04T15:09:30Z</updated>
    <id>tag:blog.arthurbazin.com,2023-10-04:/bdd/postgresql/configurez-postgresql</id>
    <content type="html">&#xA;&lt;p&gt;PostgreSQL est conçu pour fonctionner sur un grand nombre de plateformes, y compris celles ayant les performances les plus limitées. Il est donc important de bien le configurer lors de son installation pour que l&amp;rsquo;instance exploite au mieux les capacités de la machine sur laquelle elle se trouve.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour cela, de nombreux paramètres peuvent être modifiés et ce, à différents niveaux. Voici un guide rapide pour s&amp;rsquo;y retrouver.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Surcharge des paramètres&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Lors de la compilation de PostgreSQL (~création du programme) les paramètres de configuration sont initialisés avec une valeur par défaut. Leurs modifications peut se faire à différents niveaux mais respectent toujours l&amp;rsquo;ordre de surcharge suivant :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Valeurs définies lors de la compilation.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Paramètres définis lors de l&amp;rsquo;initialisation d&amp;rsquo;un répertoire de base de données (avec la commande &lt;code&gt;initdb&lt;/code&gt;).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Variables définies dans les variables d&amp;rsquo;environnement (&lt;a href=&#34;https://www.postgresql.org/docs/current/libpq-envars.html&#34; data-type=&#34;link&#34; data-id=&#34;https://www.postgresql.org/docs/current/libpq-envars.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;voir la documentation pour plus d&amp;rsquo;informations&lt;/a&gt;).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Fichier de configuration &lt;em&gt;postgresql.conf&lt;/em&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Commande &lt;code&gt;ALTER SYSTEM SET&lt;/code&gt; (fichier de configuration &lt;em&gt;postgresql.auto.conf&lt;/em&gt;).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Options passées en paramètre de la ligne de commande &lt;code&gt;pg_ctl&lt;/code&gt;, utilisées pour démarrer l&amp;rsquo;instance.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Commande &lt;code&gt;ALTER DATABASE xyz SET&lt;/code&gt; (paramètre spécifié pour une base).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Commande &lt;code&gt;ALTER ROLE abc SET&lt;/code&gt; (paramètre spécifié pour un rôle).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Commande &lt;code&gt;ALTER ROLE abc IN DATABASE xyz SET&lt;/code&gt; (paramètre spécifié pour un rôle pour une base).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Options passées dans la chaine de connexion à l&amp;rsquo;instance par le client.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Commande &lt;code&gt;SET&lt;/code&gt; (paramètre pour une session).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Commande &lt;code&gt;SET LOCAL&lt;/code&gt; (paramètre pour une transaction).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Options définies pour un bloc de fonction.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Récupérer la valeur d&amp;rsquo;un paramètre&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Avec tous ces points d&amp;rsquo;entrée, il peut être difficile de savoir quelle est la valeur d&amp;rsquo;un paramètre. Pour cela, vous pouvez utiliser plusieurs requêtes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Utiliser &lt;code&gt;SHOW&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Visualiser les paramètres du serveur :&#xA;SHOW mon_parametre;&#xA;&#xA;-- Visualiser tous les paramètres :&#xA;SHOW ALL;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Utiliser la fonction &lt;code&gt;current_setting(&#39;mon_parametre&#39;)&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Récupérer les principaux paramètres du serveur.&#xA;SELECT&#xA;&#x9;current_setting(&#39;SERVER_VERSION&#39;) as &#34;SERVER_VERSION&#34;,&#xA;&#x9;current_setting(&#39;SERVER_ENCODING&#39;) as &#34;SERVER_ENCODING&#34;,&#xA;&#x9;current_setting(&#39;LC_COLLATE&#39;) as &#34;LC_COLLATE&#34;,&#xA;&#x9;current_setting(&#39;data_directory&#39;) as &#34;data_directory&#34;,&#xA;&#x9;current_setting(&#39;config_file&#39;) as &#34;config_file&#34;,&#xA;&#x9;current_setting(&#39;hba_file&#39;) as &#34;hba_file&#34;,&#xA;&#x9;current_setting(&#39;listen_addresses&#39;) as &#34;listen_addresses&#34;,&#xA;&#x9;current_setting(&#39;port&#39;) as &#34;port&#34;,&#xA;&#x9;current_setting(&#39;max_connections&#39;) as &#34;max_connections&#34;,&#xA;&#x9;current_setting(&#39;shared_buffers&#39;) as &#34;shared_buffers&#34;,&#xA;&#x9;current_setting(&#39;work_mem&#39;) as &#34;work_mem&#34;,&#xA;&#x9;current_setting(&#39;log_destination&#39;) as &#34;log_destination&#34;,&#xA;&#x9;current_setting(&#39;log_directory&#39;) as &#34;log_directory&#34;,&#xA;&#x9;current_setting(&#39;log_filename&#39;) as &#34;log_filename&#34;,&#xA;&#x9;current_setting(&#39;log_rotation_age&#39;) as &#34;log_rotation_age&#34;,&#xA;&#x9;current_setting(&#39;log_rotation_size&#39;) as &#34;log_rotation_size&#34;,&#xA;&#x9;current_setting(&#39;log_min_messages&#39;) as &#34;log_min_messages&#34;,&#xA;&#x9;current_setting(&#39;search_path&#39;) as &#34;search_path&#34;,&#xA;&#x9;current_setting(&#39;TimeZone&#39;) as &#34;TimeZone&#34;&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez également visualiser la vue pg_settings qui liste l&amp;rsquo;ensemble des paramètres. Cette vue est très intéressante car elle vous indiquera également l&amp;rsquo;origine de la définition du paramètre, les valeurs possibles (ou min/max) des différentes options ainsi que l&amp;rsquo;obligation ou non de redémarrer l&amp;rsquo;instance ou de se reconnecter pour prendre en compte la nouvelle valeur du paramètre.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;generic&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT &#xA;  * &#xA;FROM &#xA;  pg_catalog.pg_settings&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les paramètres utilisables sont ceux qui se trouvent dans le fichier de configuration de PostgreSQL (voir plus bas).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Configuration personnalisée&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Fichiers de configuration&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il existe plusieurs fichiers de configuration :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;em&gt;postgresql.conf&lt;/em&gt; : il s&amp;rsquo;agit du fichier principal qui contient tous les paramètres de&lt;br&gt;l&amp;rsquo;instance.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;postgresql.auto.conf&lt;/em&gt; : ce fichier est géré par l&amp;rsquo;instance qui y stocke les paramètres&lt;br&gt;de configuration modifiés depuis la commande &lt;code&gt;ALTER SYSTEM&lt;/code&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;pg_hba.conf&lt;/em&gt; : ce fichier contient les autorisations d&amp;rsquo;authentification à la base. Il&lt;br&gt;s&amp;rsquo;agit d&amp;rsquo;une sorte de pare-feu listant les hôtes autorisés à contacter l&amp;rsquo;instance et par&lt;br&gt;quel moyen. J&amp;rsquo;ai déjà détaillé son contenu dans &lt;a href=&#34;https://blog.arthurbazin.com/bdd/postgresql/postgresql-tout-comprendre-2#pg_hbaconf&#34; data-type=&#34;link&#34; data-id=&#34;https://blog.arthurbazin.com/bdd/postgresql/postgresql-tout-comprendre-2#pg_hbaconf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;cet article&lt;/a&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;pg_ident.conf&lt;/em&gt; : ce fichier est en lien avec &lt;em&gt;pg_hba.conf&lt;/em&gt; et est utiliser en cas d&amp;rsquo;utilisation&lt;br&gt;d&amp;rsquo;un mécanisme d&amp;rsquo;authentification externe à la base (via un annuaire par&lt;br&gt;exemple). Il contient la correspondance entre les utilisateurs d&amp;rsquo;un ou plusieurs annuaires&lt;br&gt;avec les utilisateurs de l&amp;rsquo;instance PostgreSQL.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le fichier &lt;em&gt;postgresql.conf&lt;/em&gt; se trouve dans le répertoire « data » de PostgreSQL (avec les données, les logs et tout ce qui se rapporte aux bases gérées par l&amp;rsquo;instance) qui peut se trouver à différents endroits selon le système d&amp;rsquo;exploitation. En général :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Windows : &lt;em&gt;C:\Program Files\PostgreSQL\X\data\postgresql.con&lt;/em&gt;f&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Linux (Red Hat, Cent OS) : &lt;em&gt;/var/lib/pgsql/X/data/postgresql.conf&lt;/em&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Linux (Debian, Ubuntu) : &lt;em&gt;/etc/postgresql/X/main/postgresql.conf&lt;/em&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le plus simple pour le trouver est d&amp;rsquo;utiliser la requête suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SHOW config_file;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;raw&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;config_file |&#xA;------------------------------------------------------+&#xA;C:\Program Files\PostgreSQL\13\data\postgresql.conf |&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ce fichier contient un ensemble de paramètres définis de la façon suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;raw&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;#Ligne de commentaire&#xA;parametre = valeur&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il est également possible de scinder le fichier en plusieurs parties puis de les inclure dans le fichier principal avec paramètres suivants :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;include = &#39;mon_fichier.conf&#39;&lt;/code&gt; : récupérer les valeurs de &lt;em&gt;mon_fichier.conf&lt;/em&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;include_if_exists = &#39;mon_fichier&#39;&lt;/code&gt; : récupérer les valeurs de &lt;em&gt;mon_fichier.conf&lt;/em&gt; sauf si le fichier n&amp;rsquo;existe pas.&lt;br&gt;La directive précédente renvoie une erreur si le fichier n&amp;rsquo;existe pas, pas celle-ci.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;include_dir = &#39;mon_repertoire&#39;&lt;/code&gt; : récupérer les valeurs de tous les fichiers « &lt;em&gt;.conf&lt;/em&gt; » dans le répertoire &lt;em&gt;mon_repertoire&lt;/em&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Commandes de configuration&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Plutôt que de modifier le fichier de configuration principal, il est possible d&amp;rsquo;utiliser des requêtes SQL pour paramétrer l&amp;rsquo;instance.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Configurations permanentes&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici la liste des commandes disponibles pour modifier un paramètre de façon permanente.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour toute l&amp;rsquo;instance (dans le fichier &lt;em&gt;postgresql.auto.conf&lt;/em&gt;) :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;ALTER SYSTEM SET parametre = valeur;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour une seule base de données :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;ALTER DATABASE xyz SET parametre = valeur;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour un seul rôle :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;ALTER ROLE abc SET parametre = valeur;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour un seul rôle au sein d&amp;rsquo;une base de données spécifique :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;ALTER ROLE abc IN DATABASE xyz SET parametre = valeur;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Configurations temporaires&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il est aussi possible de modifier un paramètre de façon temporaire :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour une session (le paramètre sera réinitialisé lors de la prochaine connexion) :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SET parametre = valeur;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour une transaction (entre les mots clés BEGIN et END) :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SET LOCAL parametre = valeur;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour une fonction :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;generic&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;CREATE OR REPLACE FUNCTION ma_fonction_test()&#xA;  RETURNS BOOLEAN&#xA;as $$&#xA;BEGIN&#xA;  SELECT 1;&#xA;  RETURN true;&#xA;END;&#xA;$$&#xA;LANGUAGE plpgsql&#xA;SET parametre = valeur&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Paramètres intéressants&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici quelques liens que vous pouvez suivre pour avoir plus d&amp;rsquo;informations sur les paramètres :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;La documentation de PostgreSQL : &lt;a href=&#34;https://www.postgresql.org/docs/current/runtime-config.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.postgresql.org/docs/current/runtime-config.html&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Guide de Dalibo sur le paramétrage de PostgreSQL : &lt;a rel=&#34;noreferrer noopener&#34; href=&#34;https://public.dalibo.com/exports/formation/manuels/modules/m2/m2.handout.html&#34; target=&#34;_blank&#34;&gt;https://public.dalibo.com/exports/formation/manuels/modules/m2/m2.handout.html&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Tous les paramètres de configuration expliqués : &lt;a rel=&#34;noreferrer noopener&#34; href=&#34;https://postgresqlco.nf/doc/fr/param/&#34; target=&#34;_blank&#34;&gt;https://postgresqlco.nf/doc/fr/param/&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Optimisation de PostgreSQL en fonction de la configuration du serveur : &#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a rel=&#34;noreferrer noopener&#34; href=&#34;https://pgtune.leopard.in.ua/#/&#34; data-type=&#34;link&#34; data-id=&#34;https://pgtune.leopard.in.ua/#/&#34; target=&#34;_blank&#34;&gt;https://pgtune.leopard.in.ua/#/&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a rel=&#34;noreferrer noopener&#34; href=&#34;https://pgconfigurator.cybertec-postgresql.com/&#34; target=&#34;_blank&#34;&gt;https://pgconfigurator.cybertec-postgresql.com/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Paramètres à vérifier pour l&amp;rsquo;utilisation de l&amp;rsquo;extension PostGIS :&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;&lt;a rel=&#34;noreferrer noopener&#34; href=&#34;https://postgis.net/docs/postgis_administration.html#database_tuning_configuration&#34; target=&#34;_blank&#34;&gt;https://postgis.net/docs/postgis_administration.html#database_tuning_configuration&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://postgis.net/workshops/postgis-intro/tuning.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://postgis.net/workshops/postgis-intro/tuning.html&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-449dadad-977a-4b7f-bfd1-bc748556a1b8&#34;&gt;Voici également quelques uns des principaux paramètres et certaines valeurs recommandées ou en exemple.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;listen_adresses&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-ddec9871-53cb-4a66-9f83-405e8b169060&#34;&gt;Définit les adresses IP à écouter. Vous pouvez ainsi définir les valeurs suivantes :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34; id=&#34;block-349607a4-e962-472b-b6c8-d09b31850ee9&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;*&lt;/code&gt;&amp;nbsp;: toutes les IP.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;148.3.12.21&lt;/code&gt;&amp;nbsp;: une seule IP.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;148.3.12.21,148.3.12.22&lt;/code&gt;&amp;nbsp;: plusieurs IP.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-ac5df6f8-bb28-431e-bf2f-87fe91c98947&#34;&gt;&lt;strong&gt;Recommandé :&lt;/strong&gt; tout dépend de votre besoin. Pour un maximum de sécurité, ne renseignez que les adresses IP devant contacter le serveur. Sinon vous pouvez autoriser toutes les adresses et gérer la liste dans le fichier &lt;em&gt;pg_hba.conf&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;port&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-6351c7f4-797e-4fd8-9b22-905b6e089f9c&#34;&gt;Définit le port sur lequel PostgreSQL peut être contacté. Vous pouvez indiquer n’importe quel port disponible sur le serveur. Changer le port par défaut apporte un léger gain de sécurité car il faut connaitre le port pour se connecter au serveur.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-e9da9d64-9516-4015-a764-e7b0c2e4d630&#34;&gt;&lt;strong&gt;Défaut&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;port = 5432&lt;/code&gt;&lt;br&gt;&lt;strong&gt;Recommandé :&lt;/strong&gt; un port différent comme 5433 ou 5434 ou un autre.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;max_connections&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-54e4ccaf-cb89-431b-9e37-6e04431c387c&#34;&gt;Définit le nombre connexions simultanées à la base de données. Attention, un client peut utiliser plusieurs connexions simultanées pour accélérer le temps de réponse du serveur.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-716a16ce-530f-4eee-84c2-e699a800c26d&#34;&gt;&lt;strong&gt;Défaut&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;max_connections = 100&lt;/code&gt;&lt;br&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;max_connections = 100&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;superuser_reserved_connections&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-4e227f95-ccd0-4c3e-afd0-99e67b4ed66d&#34;&gt;Définit le nombre de connexions simultanées réservées pour le (ou les) super utilisateur(s).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-aee04b33-df32-4fef-82e6-c3eea1376216&#34;&gt;&lt;strong&gt;Défaut&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;superuser_reserved_connections = 3&lt;/code&gt;&lt;br&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;superuser_reserved_connections = 3&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;shared_buffers&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-d1e3c5aa-e2f7-4866-b58a-7674b5ab618f&#34;&gt;Définit la quantité de mémoire vive allouée à PostgreSQL. N’hésitez pas à augmenter ce paramètre. Comptez environ 75% de la mémoire vive disponible (mémoire vive disponible = mémoire vive total – mémoire vive utilisée par le système – mémoire vive utilisée par les différents logiciels).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-91c5e5da-d3c1-4958-b548-4f7f27b3b2b4&#34;&gt;&lt;strong&gt;Défaut&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;shared_buffers = 128MB&lt;/code&gt;&lt;br&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;shared_buffers = dépend de votre machine&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;work_mem&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-03933552-fa10-4ccb-b587-e55aadd52b73&#34;&gt;Définit la quantité de mémoire vive allouée aux opérations de tri internes (order by, distinct…). Vous pouvez l’augmenter légèrement pour améliorer les performances.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-7de6049f-e3e8-4746-9b4e-9ce8bf474c1f&#34;&gt;&lt;strong&gt;Défaut :&lt;/strong&gt; &lt;code&gt;work_mem = 4MB&lt;/code&gt;&lt;br&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;work_mem = 16MB&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;maintenance_work_mem&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-e70730b3-2e6e-4314-bf8e-5e128ea2210c&#34;&gt;Définit la quantité de mémoire vive allouée aux opérations de maintenance (VACUUM, CREATE INDEX…). Cette valeur peut être largement augmentée car seule une de ces opérations peut être exécutée à la fois dans une session. Attention, les autovacuum utiliseront également cet quantité d’espace et ce, autant de fois que de processus d’autovacuum peuvent être lancés en même temps (voire paramètre autovacuum_max_workers).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-888c8fda-ffe1-4a3e-98cb-aa3da91757d6&#34;&gt;&lt;strong&gt;Défaut :&lt;/strong&gt; &lt;code&gt;maintenance_work_mem = 64MB&lt;/code&gt;&lt;br&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;maintenance_work_mem = 512MB&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;autovacuum_work_mem&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-46486ff6-5721-48e1-9362-1eb4c7dec140&#34;&gt;Définit la quantité de mémoire vive allouée pour chaque processus d’autovacuum. Ceci permet d’avoir une valeur de maintenance_work_mem plus importante sans pour autant allouer trop de ressource aux autovacuum.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-d3977b33-564d-4101-b7d0-ab099c27a6fa&#34;&gt;&lt;strong&gt;Défaut :&lt;/strong&gt; &lt;code&gt;autovacuum_work_mem = -1&lt;/code&gt; (on utilise la valeur de maintenance_work_mem)&lt;br&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;autovacuum_work_mem = 128MB&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;wal_level&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-3189f51c-1a6e-4cee-8a2f-76b1ebd622a9&#34;&gt;Définit la quantité d’information écrite dans les journaux de transaction (wal). Ces journaux permettent de récupérer les données lors d’un crash du serveur PostgreSQL. Plusieurs niveaux existent&amp;nbsp;:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34; id=&#34;block-76ef0618-69df-4aed-ba5c-123d3e094cc8&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;Minimal&lt;/code&gt;&amp;nbsp;: ne conserve que les informations nécessaires pour survivre à un arrêt brutal ou immédiat du serveur.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;Replica&lt;/code&gt;&amp;nbsp;: minimal + quelques enregistrements pour permettre l’archivage des journaux de transactions et l’exécution des requêtes en attente.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;Logical&lt;/code&gt;&amp;nbsp;: &lt;code&gt;replica&lt;/code&gt; + des informations pour extraire les modifications logiques.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;Archive&lt;/code&gt; = &lt;code&gt;replica&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;Hot_standby&lt;/code&gt; = &lt;code&gt;replica&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-f0729142-9e71-4fb9-b653-3232aae0c96b&#34;&gt;&lt;strong&gt;Défaut :&lt;/strong&gt; &lt;code&gt;wal_level = minimal&lt;/code&gt;&lt;br&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;wal_level = replica&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;wal_buffers&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-a06ff162-6676-4c55-9704-a28ee29b8558&#34;&gt;Définit la quantité de mémoire vive utilisée pour les données des journaux de transactions qui n’ont pas été écrites sur le disque.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-87bc1fbb-fd59-4c54-b5f0-3b87bd967b63&#34;&gt;&lt;strong&gt;Défaut :&lt;/strong&gt; &lt;code&gt;wal_buffers = -1&lt;/code&gt; (= 1/32&lt;sup&gt;ème&lt;/sup&gt; de shared_buffers)&lt;br&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;wal_buffers =&lt;/code&gt; au moins &lt;code&gt;2 MB&lt;/code&gt; (si 1/32&lt;sup&gt;ème&lt;/sup&gt; de shared_buffer &amp;lt; 2MB, sinon -1)&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_destination&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-4e6caac1-e38c-48d4-817d-03f70126d4b0&#34;&gt;Destination des fichiers log (format de sortie en quelque sorte). Vous pouvez choisir parmi&amp;nbsp;:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34; id=&#34;block-b790699f-e8d1-433e-81ab-dee354890623&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;stderr&lt;/code&gt;&amp;nbsp;: sortie par défaut (créé un fichier .log)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;csvlog&lt;/code&gt;&amp;nbsp;: sortie au format CSV.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;syslog&lt;/code&gt;&amp;nbsp;: sortie dans les journaux système.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;Eventlog&lt;/code&gt;&amp;nbsp;: (Windows uniquement) sortie dans les journaux d’évènement Windows.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;logging_collector&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-42374291-8670-406b-8f2f-4a07744c63a0&#34;&gt;Active le « collecteur de traces » qui capture toutes les traces envoyées vers &lt;code&gt;stderr&lt;/code&gt; et les envoi dans un fichier. En d&amp;rsquo;autres termes : l&amp;rsquo;activation de cette option permet d&amp;rsquo;avoir des fichiers de log.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_directory&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-09c778e6-8c4c-4df3-b7f0-03f8656813a7&#34;&gt;Répertoire d’enregistrement des logs. Vous pouvez soit utiliser un chemin relatif au répertoire PG_DATA soit un chemin absolut (C:\mon\chemin).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-05ee95cf-41b6-4504-9906-8b31e029bb50&#34;&gt;&lt;strong&gt;Défaut :&lt;/strong&gt; &lt;code&gt;log_directory = &#39;pg_log&#39;&lt;/code&gt;&lt;br&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; L&amp;#8217;emplacement qui vous plait mais la valeur par défaut permet de conserver tous les éléments au même endroit.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_filename&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-8e4e22a4-7b2f-4cf6-815f-d25079af4300&#34;&gt;Nom des fichiers de log. Vous pouvez ajouter la date et l’heure via les paramètres suivants&amp;nbsp;:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34; id=&#34;block-ebdc0423-0e80-4d35-acf5-0440885312b1&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;%H&lt;/code&gt; : heure (au format 24h) &amp;#8211; Exemple : &lt;code&gt;12&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;%M&lt;/code&gt; : minute &amp;#8211; Exemple &amp;nbsp;: &lt;code&gt;24&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;%S&lt;/code&gt; : seconde &amp;#8211; Exemple &amp;nbsp;: &lt;code&gt;46&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;%R&lt;/code&gt; : heure : minute &amp;#8211; Exemple &amp;nbsp;: &lt;code&gt;12 : 24&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;%T&lt;/code&gt; : heure : minute : seconde &amp;#8211; Exemple &amp;nbsp;: &lt;code&gt;12 : 24 : 46&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;%y&lt;/code&gt; : année (4 chiffres) &amp;#8211; Exemple : &lt;code&gt;2016&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;%Y&lt;/code&gt; : année (2 chiffres) &amp;#8211; Exemple &amp;nbsp;: &lt;code&gt;16&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;%m&lt;/code&gt; : mois &amp;#8211; Exemple &amp;nbsp;: &lt;code&gt;07&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;%d&lt;/code&gt; : jour &amp;#8211; Exemple &amp;nbsp;: &lt;code&gt;14&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;%F&lt;/code&gt; : année &amp;#8211; mois &amp;#8211; jour &amp;#8211; Exemple &amp;nbsp;: &lt;code&gt;2016 - 07 - 14&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-d7b94f98-6c44-4914-93ef-ec6a94f40fa2&#34;&gt;Le nom du fichier est un motif strftime. Vous pourrez trouver d’autres échappements «&amp;nbsp;%&amp;nbsp;» dans ceux listés par la spécification de strftime par l&amp;rsquo;Open Group.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-10224242-ffa1-446d-8ecc-0d96a8eee2d2&#34;&gt;Si le format de sortie est le CSV alors le format .csv est automatiquement ajouté au nom du journal.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-b9a329ae-8432-4bcd-8ae0-d9aef0b8b1fa&#34;&gt;&lt;strong&gt;Exemple :&lt;/strong&gt; &lt;code&gt;log_filename = &#39;Postgresql - %Y-%m-%d.log&#39;&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_rotation_age&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-1180cad9-1fab-4a69-b3de-1d1c4792f195&#34;&gt;Détermine la durée de vie maximal (en minutes) d’un fichier de log. Passé ce délai, un nouveau journal (fichier) est créé.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-e55eaeaf-a2b2-45a5-b082-cab9b7c47a4b&#34;&gt;La valeur «&amp;nbsp;0&amp;nbsp;» (zéro) désactive la limite de durée de vie.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-ff81fbc9-22e9-46a1-9709-08677d0bf7da&#34;&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;log_rotation_age = 1d&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_rotation_size&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-4d4f24c9-01bd-4cc8-b1ce-29d287faf976&#34;&gt;Détermine la taille maximal d’un fichier de log. Passé cette taille, un nouveau journal (fichier) est créé.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-3e539be2-bec1-41a9-aac8-c87a4a12ca07&#34;&gt;La valeur «&amp;nbsp;0&amp;nbsp;» (zéro) désactive la limite de taille.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-846144df-239e-47f8-a0d9-3b682a0acde6&#34;&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;log_rotation_size = 3MB&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_truncate_on_rotation&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-6964801f-a399-489b-91e3-216a1faea848&#34;&gt;Active l’écrasement des fichiers de log plutôt que la création d’un nouveau fichier. L’écrasement ne se produit que pour des fichiers dont le nom existe déjà et uniquement lorsqu’il s’agit d’une limite de temps (log_rotation_age).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-f95a4e98-16d6-4152-a3f4-d919d66badf4&#34;&gt;En utilisant le paramètre &lt;code&gt;log_filename = &#39;mon_log_%H.log&#39;&lt;/code&gt; et le paramètre &lt;code&gt;log_truncate_on_rotation = on&lt;/code&gt;, il est possible de créer un fichier de log par heure écrasés toutes les 24 h.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;client_min_messages&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-57538ef8-9ed3-495d-9844-3ac072822302&#34;&gt;Définit le niveau de verbosité du serveur avec les clients (et donc les utilisateurs). De &lt;code&gt;DEBUG5&lt;/code&gt; : une vraie pipelette à &lt;code&gt;ERROR&lt;/code&gt; : extrêmement peu loquace. Ce sont les messages qui seront renvoyés aux utilisateurs dans leur client.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_min_messages&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-6090fedf-6862-48d8-89d0-506bf5a56f68&#34;&gt;Définit le niveau de verbosité du log serveur. De &lt;code&gt;DEBUG5&lt;/code&gt; : une vraie pipelette à &lt;code&gt;PANIC&lt;/code&gt; : extrêmement peu loquace.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_min_error_statement&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-7f5c803d-4767-43a0-a387-4f255b84253f&#34;&gt;Définit à partir de quel niveau le log doit contenir l’instruction SQL à l’origine de la ligne de log. Utilisez &lt;code&gt;PANIC&lt;/code&gt; pour désactiver le traçage des instructions échouées.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_min_duration_statement&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-85ec1683-f157-4bd9-b8ac-12aec052742a&#34;&gt;Définit la durée minimale en milliseconde d’une instruction SQL terminée pour qu’elle soit loguée. Ceci permet de tracer les requêtes non optimisées des applications. Utilisez la valeur &lt;code&gt;0&lt;/code&gt; (zéro) pour tracer toutes les requêtes et &lt;code&gt;-1&lt;/code&gt; pour n’en tracer aucune.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_connections&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-22355492-d0a1-431a-9722-57da857cd46a&#34;&gt;Logue chaque tentative de connexion au serveur.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_disconnections&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-831853c9-c6a5-42cf-84aa-36b09fae30a1&#34;&gt;Logue chaque déconnexion du serveur.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_duration&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-546dbf9b-ab24-4691-9eda-836b49c7c473&#34;&gt;Logue la durée de toute instruction exécutée. Le texte des requêtes ne sera pas logué (sauf si log_min_duration_statement est défini et que sa valeur est dépassée).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_line_prefix&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-ebbe548c-5b6d-4e17-a039-e0df4f885247&#34;&gt;Définit le préfixe utilisé pour chaque ligne de code.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-f8ae48d7-1895-46a0-aff2-0dba9160fda3&#34;&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;log_line_prefix =&amp;nbsp; &#39;%t - bdd=%d user=%u app=%a client=%h - &#39;&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_error_verbosity&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-efd96d03-a832-41c6-9d84-d9f72296ac0e&#34;&gt;Définit la quantité de détails écrit pour chaque ligne de log.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-60be0541-6750-4a83-a90c-54a19ea159cc&#34;&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;log_error_verbosity = verbose&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_statement&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-7c4dab1f-c07a-49a1-b0ef-f4e8671af012&#34;&gt;Définit les instruction SQL à tracer&amp;nbsp;:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34; id=&#34;block-bef26125-89a0-4e0f-a8c6-aa6d45c9eff3&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;none&lt;/code&gt; : aucune&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;ddl&lt;/code&gt; : commande de définition&amp;nbsp;: CREATE, ALTER, DROP&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;mod&lt;/code&gt; : commande de données&amp;nbsp;: INSERT, UPDATE, DELETE, TRUNCATE, COPY FROM&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;all&lt;/code&gt; : toutes les commandes&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-2eaeccd6-4c16-499c-a84b-87656a1a1f48&#34;&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;log_statement = &#39;none&#39;&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;search_path&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-ebb389f3-386b-4a7f-a3a8-6ce5eaabd444&#34;&gt;Spécifie le schéma dans lequel les objets seront recherchés par défaut lorsque aucun préfixe n&amp;rsquo;est spécifié dans la requête. Par défaut, le serveur recherche d&amp;rsquo;abord dans le schéma dont le nom est égal au rôle de connexion utilisé puis dans le schéma « public ».&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;include_dir&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-6bf8a58c-db11-4a1a-8034-2624102e8582&#34;&gt;Permet d’inclure un répertoire de configuration supplémentaire. Tous les fichiers de ce répertoire qui finissent par « .conf » seront ainsi inclus comme s&amp;rsquo;ils faisaient parti du fichier principal.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;include&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-34918c3e-9b59-4112-b380-0576ad3a93d0&#34;&gt;Permet d’inclure un fichier de configuration supplémentaire comme s&amp;rsquo;ils faisait parti du fichier principal.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Paramètres pour PostGIS&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;PostGIS repose sur des librairies (GEOS, GDAL&amp;#8230;) indépendantes. Certains de leurs paramètres peuvent être contrôlés par l&amp;rsquo;intermédiaire de variables spécifiques.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les variables sont les suivantes :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;postgis.backend&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Permet de définir la librairie à utiliser entre GEOS et SFCGAL pour les fonctions portants les mêmes noms entre ces deux librairies. Défaut : GEOS.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;postgis.backend = geos&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;postgis.gdal_datapath&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Permet de spécifier le répertoire data de GDAL. Si non défini, la variable d&amp;rsquo;environnement GDAL_DATA peut être utilisée.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il est recommandé d&amp;rsquo;utiliser le répertoire &lt;em&gt;gdal-data&lt;/em&gt; fourni par PostGIS lors de son installation et situé dans le répertoire de PostgreSQL.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;postgis.gdal_datapath = &#34;chemin\vers\PostgreSQL\xx\gdal-data&#34;&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;postgis.gdal_enabled_drivers&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Permet de définir la liste des pilotes GDAL pouvant être utilisés. Si non défini, la variable d&amp;rsquo;environnement POSTGIS_GDAL_ENABLED_DRIVERS peut être utilisée.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Si vous souhaitez utiliser PostGIS raster et le stockage Out-DB, vous pouvez indiquer la liste des formats spécifiques à utiliser :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Un ou plusieurs formats (« short name », séparés par des espaces) parmi ceux listés &lt;a rel=&#34;noreferrer noopener&#34; href=&#34;https://gdal.org/drivers/raster/index.html&#34; data-type=&#34;link&#34; data-id=&#34;https://gdal.org/drivers/raster/index.html&#34; target=&#34;_blank&#34;&gt;sur cette page&lt;/a&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;DISABLE_ALL&lt;/code&gt; : pour désactiver tous les pilotes.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;ENABLE_ALL&lt;/code&gt; : pour activer tous les pilotes.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;postgis.enable_outdb_rasters&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Permet d&amp;rsquo;activer les rasters avec stockage Out-DB. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;postgis.gdal_config_options&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Permet de spécifier les options de configuration pour GDAL lors de l&amp;rsquo;utilisation des raster avec stockage Out-DB.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Pour aller plus loin&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cet article fait parti du cours sur PostgreSQL, partie 8 du Vade-mecum.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-buttons is-vertical is-content-justification-center is-layout-flex wp-container-core-buttons-is-layout-4 wp-block-buttons-is-layout-flex&#34;&gt;&#xA;&lt;div class=&#34;wp-block-button has-custom-width wp-block-button__width-50&#34;&gt;&lt;a class=&#34;wp-block-button__link wp-element-button&#34; href=&#34;https://blog.arthurbazin.com/programmation/sql/postgresql-tout-comprendre-1&#34;&gt;Cours sur PostgreSQL&lt;/a&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-button has-custom-width wp-block-button__width-50&#34;&gt;&lt;a class=&#34;wp-block-button__link wp-element-button&#34; href=&#34;https://blog.arthurbazin.com/programmation/sql/postgresql-vade-mecum-7&#34;&gt;Vade-mecum &amp;#8211; 7 &amp;#8211; Administration serveur&lt;/a&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;</content>
    <link href="https://blog.arthurbazin.com/bdd/postgresql/configurez-postgresql" rel="alternate"></link>
    <summary type="html">PostgreSQL est conçu pour fonctionner sur un grand nombre de plateformes, y compris celles ayant les performances les plus limitées. Il est donc important de bien le configurer lors de son installation pour que l&amp;#8217;instance exploite au mieux les capacités de la machine sur laquelle elle se trouve. Pour cela, de nombreux paramètres peuvent être [&amp;#8230;]</summary>
    <author>
      <name>Arthur Bazin</name>
    </author>
  </entry>
  <entry>
    <title>Importer des données binaires dans PostgreSQL</title>
    <updated>2022-02-06T20:54:04Z</updated>
    <id>tag:blog.arthurbazin.com,2022-02-06:/programmation/importer-des-donnees-binaires-dans-postgresql</id>
    <content type="html">&#xA;&lt;p&gt;Aujourd&amp;rsquo;hui on va s&amp;rsquo;atteler à une fonctionnalité de PostgreSQL que j&amp;rsquo;ai mis pas mal de temps à comprendre car la documentation n&amp;rsquo;est soit pas très fournit, soit peut compréhensible (pour moi-même).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous allons parler de l&amp;rsquo;import des données binaires. Il s&amp;rsquo;agit de fichiers de données dans divers formats comme des images, des sons, des vidéos, des programmes&amp;#8230; Car oui, PostgreSQL peut stocker tout type de fichiers !&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;stockage&#34;&gt;Stockage&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Avant de parler import, parlons stockage. Bien comprendre le stockage permettra de bien comprendre comment importer des données.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Tout fichier informatique (y compris les programme car ils sont eux-même constitués de fichiers) est composé de données dans différents langages mais dont le support de stockage est le binaire : une suite de &lt;code&gt;0&lt;/code&gt; et de &lt;code&gt;1&lt;/code&gt;. Ainsi, lorsqu&amp;rsquo;un fichier est copié ou déplacé, l&amp;rsquo;opération est effectué sur le code binaire, cette suite de &lt;code&gt;0&lt;/code&gt; et de &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;PostgreSQL, comme d&amp;rsquo;autres SGBD, permet de stocker ce type de données : les données binaires. Pour cela, deux solutions, que l&amp;rsquo;on peut apparenter au type « standard » BLOB (&lt;a href=&#34;https://fr.wikipedia.org/wiki/Binary_large_object&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Binary Large OBject&lt;/a&gt;), sont disponibles : &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Les &lt;code&gt;large objects&lt;/code&gt; (ou objets larges).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Le type de données &lt;code&gt;bytea&lt;/code&gt; associé au système de stockage TOAST.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;large-object&#34;&gt;Large object&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le stockage &lt;code&gt;large object&lt;/code&gt; repose sur l&amp;rsquo;importation des fichiers binaires directement dans les répertoires de la base de données. Chaque fichier est découpé en morceaux (nommés les pages). Coté base, chaque fichier est donc identifié par un oid et est lié à une série de numéro de pages (l&amp;rsquo;ensemble des morceaux du fichier).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les &lt;code&gt;large objects&lt;/code&gt; sont particuliers et ne fonctionnent pas comme les autres objets de la base pour lesquels on définit un schéma, un tablespace, un nom&amp;#8230; Ils sont tous regroupés et stockés au même endroit. Deux tables systèmes sont dédiées au stockage des &lt;code&gt;large objects&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;La table &lt;code&gt;pg_largeobject_metadata&lt;/code&gt; liste chaque &lt;code&gt;large object&lt;/code&gt; ainsi que son propriétaire et les droits d&amp;rsquo;accès associés.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La table &lt;code&gt;pg_largeobject&lt;/code&gt; contient les données découpées en pages : une page par ligne. Chaque ligne contient ainsi l&amp;rsquo;id de l&amp;rsquo;objets correspondant, le numéro de page (en démarrant de 0) et la donnée binaire (d&amp;rsquo;une taille maximale de 2048 octets par défaut).&lt;br&gt;Ceci permet d&amp;rsquo;accéder à des morceaux du fichier sans avoir à récupérer la totalité de la données (par exemple pour ne modifier qu&amp;rsquo;une partie du fichier).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Visualiser la liste des large objects stockés en base&#xA;SELECT &#xA;&#x9;oid,&#xA;&#x9;*&#xA;FROM &#xA;&#x9;pg_largeobject_metadata&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Visualiser les données des large objects stockés en base&#xA;SELECT &#xA;&#x9;*&#xA;FROM &#xA;&#x9;pg_largeobject&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Attention, le stockage de la donnée binaire est effectué dans une colonne de type &lt;code&gt;bytea&lt;/code&gt; mais il n&amp;rsquo;a rien à voir avec le stockage binaire détaillé dans le paragraphe suivant.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les &lt;code&gt;large objects&lt;/code&gt; sont si particuliers qu&amp;rsquo;ils doivent être manipulés à travers une API : des fonctions spécifiques, dédiés à la manipulation des &lt;code&gt;large objects&lt;/code&gt;. Ces fonctions sont appelées via des requêtes SQL mais travaillent sur les &lt;code&gt;large objects&lt;/code&gt; directement, sans SQL. Elles permettent de créer, d&amp;rsquo;écrire, de lire, d&amp;rsquo;importer, d&amp;rsquo;exporter&amp;#8230;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ainsi, l&amp;rsquo;import d&amp;rsquo;un &lt;code&gt;large object&lt;/code&gt; ne se fera pas via un simple &lt;code&gt;INSERT&lt;/code&gt;. Ce qui est intéressant de noter, c&amp;rsquo;est que l&amp;rsquo;import se fait directement via transfert des données binaires brutes. Ce qui permet d&amp;rsquo;être rapide sans trop charger l&amp;rsquo;utilisation du processeur.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;bytea-et-toast&#34;&gt;Bytea et TOAST&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le type de données &lt;code&gt;bytea&lt;/code&gt; est directement accessible en SQL sous PostgreSQL. Il permet de définir une colonne qui contiendra de la donnée au format binaire brute.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;intérêt est la facilité d&amp;rsquo;utilisation, ce type est associé à une colonne standard PostgreSQL : le nom est libre, elle peut faire partie de n&amp;rsquo;importe quelle table (et même plusieurs par table), le tablespace peut être défini&amp;#8230;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;import et l&amp;rsquo;export de données dans ces colonnes se fait au moyen de requêtes SQL standard ce qui impose la conversion de la donnée dans un format textuel pour pouvoir l&amp;rsquo;écrire dans la requête. Plusieurs formats sont disponibles :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Hex : encodage des données binaires sur 2 valeurs hexadécimales par bit (plus d&amp;rsquo;info &lt;a href=&#34;https://www.postgresql.org/docs/current/datatype-binary.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;ici&lt;/a&gt;). Le poids de la données se trouve alourdie d&amp;rsquo;un facteur 2.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Escape : encodage des données binaires sur des caractères ASCII (plus d&amp;rsquo;info &lt;a href=&#34;https://www.postgresql.org/docs/current/datatype-binary.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;ici&lt;/a&gt;). Le poids de la données se trouve alourdie d&amp;rsquo;un facteur 1 à 4.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Base64 : encodage des données binaires sur 64 caractères (plus d&amp;rsquo;info &lt;a href=&#34;https://fr.wikipedia.org/wiki/Base64&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;ici&lt;/a&gt;). Le poids de la données se trouve alourdie d&amp;rsquo;un facteur 4/3 (1/3 de plus) au moins.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La conversion des données d&amp;rsquo;un format textuel comme ceux cités précédemment au format binaire brut implique une consommation de ressource CPU ainsi qu&amp;rsquo;un temps de traitement.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Un exemple :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Valeur textuelle&lt;/th&gt;&lt;th&gt;Encodage &amp;lsquo;Hex&amp;rsquo;&lt;/th&gt;&lt;th&gt;Encodage &amp;lsquo;Escape&amp;rsquo;&lt;/th&gt;&lt;th&gt;Encodage &amp;lsquo;base64&amp;rsquo;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;arthurbazin&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;61727468757262617a696e&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;arthurbazin&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;YXJ0aHVyYmF6aW4=&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Et les &lt;s&gt;biscottes&lt;/s&gt; TOAST dans tout ça ? Il s&amp;rsquo;agit en fait d&amp;rsquo;un fonctionnement interne de PostgreSQL qui permet de stocker de grosses valeurs dans les attributs d&amp;rsquo;une table. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;TOAST = The Oversized-Attribute Storage Technique&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ce type de stockage s&amp;rsquo;applique à certains types de données (numérique, textuel, géométrique et dans notre cas binaire) dont la longueur est variable (un exemple de type à longueur variable : &lt;code&gt;varchar(20)&lt;/code&gt;).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour chaque tuple (= ligne d&amp;rsquo;une table), PostgreSQL stocke la donnée dans ce que l&amp;rsquo;on appelle une « page ». Un tuple ne peut être stocké que dans une seul page maximum mais une page peut contenir plusieurs tuples. Ces pages ne peuvent excéder 8 ko et donc un tuple non plus. Ainsi, lorsqu&amp;rsquo;une donnée excède cette taille, le système TOAST s&amp;rsquo;enclenche pour outrepasser cette limite.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le système TOAST compresse puis divise les données dans plusieurs « sous-tuples » (de nouvelles lignes) ce qui permet de répartir le poids des données et de les stocker de façon classique, sans dépasser la taille limitée d&amp;rsquo;une page. Ces lignes supplémentaires sont créées dans des tables spécifiques nommées &lt;code&gt;pg_toast_xxx&lt;/code&gt; (le &lt;code&gt;xxx&lt;/code&gt; étant remplacé par l&amp;rsquo;oid de la table d&amp;rsquo;origine) et stockées dans le schéma système &lt;code&gt;pg_toast&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ce fonctionnement est entièrement automatisé et totalement transparent pour l&amp;rsquo;utilisateur qui n&amp;rsquo;a rien à gérer. L&amp;rsquo;activation du système est paramétré par la variable de configuration &lt;code&gt;TOAST_TUPLE_THRESHOLD&lt;/code&gt; qui fixe par défaut à 2 ko la limite à partir de laquelle la données est TOASTée.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que la structure des tables &lt;code&gt;pg_toast_xxx&lt;/code&gt; est identique à la structure de la table &lt;code&gt;pg_largeobject&lt;/code&gt; bien que le système de stockage soit différent.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour identifier la table &lt;code&gt;pg_toast_xxx&lt;/code&gt; liée à une table, vous pouvez utiliser la requête suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT&#xA;&#x9;reltoastrelid::regclass as nom_table,&#xA;&#x9;pg_relation_filepath(reltoastrelid) as emplacement_stockage,&#xA;&#x9;pg_size_pretty(pg_relation_size(reltoastrelid)) as taille&#xA;FROM&#xA;&#x9;pg_class&#xA;WHERE&#xA;&#x9;relnamespace = &#39;mon_schema&#39;::regnamespace&#xA;AND &#xA;&#x9;relname = &#39;ma_table&#39;&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;import&#34;&gt;Import&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;import de données binaires se résume donc à un déplacement de données du lieu d&amp;rsquo;origine vers l&amp;rsquo;instance PostgreSQL. Selon le type de stockage utilisé, le traitement sera donc différent :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul class=&#34;wp-block-list&#34;&gt;&#xA;&lt;li&gt;Format &lt;code&gt;large object&lt;/code&gt; : il faut obligatoirement utiliser l&amp;rsquo;API PostgreSQL dédiée.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Type de donnée &lt;code&gt;bytea&lt;/code&gt; : la donnée doit être encodée dans un format binaire textuel puis envoyé au moyen d&amp;rsquo;une requête.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici un exemple, Je souhaite importer une image dans une colonne au format bytea : je dois d&amp;rsquo;abord convertir mon image dans un format binaire textuel comme par exemple le base64 via un outil (par exemple &lt;a href=&#34;https://www.base64encode.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;celui-ci&lt;/a&gt;) puis l&amp;rsquo;importer via la fonction &lt;code&gt;decode()&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Import dans un champ bytea d&#39;une image encodée en base64&#xA;INSERT INTO ma_table (&#xA;&#x9;mon_champ_bytea)&#xA;SELECT&#xA;&#x9;decode(&#39;iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAY[...]3+/wA93TsnnJMLsQAAAABJRU5ErkJggg==&#39;, &#39;base64&#39;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour utiliser une image stockée au format binaire, il est possible de l&amp;rsquo;encoder au format base64 pour l&amp;rsquo;utiliser dans du HTML par exemple.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Création d&#39;une chaine HTML pour afficher une image stockée au format binaire&#xA;SELECT&#xA;&#x9;&#39;&amp;lt;img src=&#34;data:image/png;base64, &#39; || encode(champ_bytea, &#39;base64&#39;) || &#39;&#34; alt=&#34;mon_image&#34; width=&#34;150&#34; height=&#34;150&#34;&gt;&#39;&#xA;FROM&#xA;&#x9;ma_table&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;On le voit donc tout de suite : pour du stockage dans une colonne en &lt;code&gt;bytea&lt;/code&gt;, il faut d&amp;rsquo;abord convertir la donnée d&amp;rsquo;origine avant de pouvoir l&amp;rsquo;inclure dans une requête. Ceci implique donc l&amp;rsquo;utilisation d&amp;rsquo;un logiciel tiers permettant cet encodage&amp;#8230; Pas très simple.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La suite de cet article va donc s&amp;rsquo;intéresser à une méthode d&amp;rsquo;import de données en tant que &lt;code&gt;large object&lt;/code&gt; qui permet ensuite de récupérer ce &lt;code&gt;large object&lt;/code&gt; dans une colonne de type &lt;code&gt;bytea&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le logiciel client utilisé est tout simplement PSQL.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Attention, le programme qui s&amp;rsquo;occupe de l&amp;rsquo;import du fichier (l&amp;rsquo;instance de PostgreSQL ou le logiciel client) doit avoir les autorisations d&amp;rsquo;accès en lecture sur ce fichier.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour rappel, toute requête SQL est envoyée par le logiciel client vers le serveur PostgreSQL qui va exécuter cette requête. Cela veut dire que le serveur ne peut atteindre des fichiers situés sur la machine cliente. C&amp;rsquo;est donc au logiciel client d&amp;rsquo;envoyer ces fichiers binaires au serveur.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A l&amp;rsquo;inverse, le serveur PostgreSQL est capable d&amp;rsquo;atteindre tout fichier présent sur la machine sur laquelle l&amp;rsquo;instance est installée.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;donnees-cote-serveur-server-side&#34;&gt;Données coté serveur : server-side&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Lorsque les données à importées sont stockées dans un répertoire accessible par l&amp;rsquo;instance de PostgreSQL (sur la même machine ou dans un répertoire réseau monté sur la machine), il suffit de faire appel aux fonctions fournies par l&amp;rsquo;API &lt;code&gt;large object&lt;/code&gt; au travers de requêtes SQL.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;importation du fichier utilise la fonction &lt;code&gt;lo_import()&lt;/code&gt; qui renvoie l&amp;rsquo;oid du &lt;code&gt;large object&lt;/code&gt; créé.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Importation d&#39;un fichier situé sur le serveur&#xA;SELECT lo_import(/emplacement/de/mon/fichier.ext);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Un &lt;code&gt;large object&lt;/code&gt; peut être récupéré au format &lt;code&gt;bytea&lt;/code&gt; grâce à la fonction &lt;code&gt;lo_get()&lt;/code&gt; à laquelle on passe l&amp;rsquo;oid du &lt;code&gt;large object&lt;/code&gt; à récupérer.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Récupération d&#39;un large object au format bytea&#xA;SELECT lo_get(123456);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cette fonction peut donc être utilisée dans une requête d&amp;rsquo;&lt;code&gt;UPDATE&lt;/code&gt; pour importer le &lt;code&gt;large object&lt;/code&gt; dans une colonne de type &lt;code&gt;bytea&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Importation d&#39;un large object dans une colonne de type bytea&#xA;UPDATE mon_schema.ma_table&#xA;SET ma_colonne_bytea = lo_get(123456)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La fonction &lt;code&gt;lo_unlink()&lt;/code&gt; permet de supprimer un &lt;code&gt;large object&lt;/code&gt; en indiquant l&amp;rsquo;oid de celui-ci.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Récupération d&#39;un large object au format bytea&#xA;SELECT lo_unlink(123456);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il est possible de grouper les différentes étapes dans une fonction d&amp;rsquo;import de données dans le type &lt;code&gt;bytea&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;CREATE OR REPLACE FUNCTION bytea_import(emplacement_fichier text) &#xA;RETURNS bytea AS&#xA;$corps$&#xA;&#x9;DECLARE&#xA;&#x9;&#x9;-- oid du large object importé&#xA;&#x9;&#x9;v_oid_objet oid;&#xA;&#x9;&#x9;-- Données du fichier au format binaire&#xA;&#x9;&#x9;v_donnees;&#xA;&#x9;BEGIN&#xA;&#x9;&#x9;-- Import du fichier sous forme de large objet&#xA;&#x9;&#x9;SELECT lo_import(emplacement_fichier) INTO v_oid_objet;&#xA;&#x9;&#x9;-- Récupération des données du large objet&#xA;&#x9;&#x9;SELECT lo_get(v_oid_objet) INTO v_donnees;&#xA;&#x9;&#x9;-- Suppression du large objet&#xA;&#x9;&#x9;PERFORM lo_unlink(v_oid_objet);&#xA;&#xA;&#x9;&#x9;-- Renvoi des données&#xA;&#x9;&#x9;RETURN v_donnees;&#xA;&#x9;END;&#xA;$corps$&#xA;LANGUAGE PLPGSQL&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;donnees-cote-client-client-side&#34;&gt;Données coté client : client-side&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Lorsque les données à importées sont stockées dans un répertoire situé sur la machine cliente et donc non accessibles par l&amp;rsquo;instance de PostgreSQL, il faut passer par un logiciel client capable d&amp;rsquo;importer les fichiers. Nous allons ici faire appel à PSQL qui possède la même fonction que l&amp;rsquo;API de PostgreSQL : la méta commande &lt;code&gt;\lo_import&lt;/code&gt;. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;importation du fichier utilise la méta commande &lt;code&gt;\lo_import()&lt;/code&gt; qui renvoie l&amp;rsquo;oid du &lt;code&gt;large object&lt;/code&gt; créé.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Importation d&#39;un fichier situé sur la machine cliente&#xA;\lo_import(/emplacement/de/mon/fichier.ext);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les autres fonctions sont identiques à la version serveur car une fois le fichier importé, il se trouve coté serveur. C&amp;rsquo;est donc via des requêtes SQL que le &lt;code&gt;large object&lt;/code&gt; sera ensuite traité. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Dans ce cas là, il n&amp;rsquo;est pas possible d&amp;rsquo;avoir une fonction qui regroupe les différentes étapes comme dans la partie précédente car la méta commande &lt;code&gt;\lo_import&lt;/code&gt; n&amp;rsquo;est disponible que coté client alors que la fonction sera exécutée cotée serveur.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;import-en-masse&#34;&gt;Import en masse&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;import d&amp;rsquo;objet en masse est un peu différent car il nécessite de faire appel aux fonctions vues précédemment et de les combiner avec d&amp;rsquo;autres mécanismes pour correctement récupérer les données et leurs informations.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;server-side&#34;&gt;Server-side&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Bien que ça ne soit pas obligatoire, nous allons passer par une procédure pour exécuter toutes les requêtes ce qui permettra l&amp;rsquo;utilisation de variables et pour réutiliser le code plus facilement.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;DO&#xA;$fonction$&#xA;DECLARE&#xA;&#xA;&#x9;-- Table d&#39;import&#xA;&#x9;schema_import TEXT := &#39;public&#39;;&#xA;&#x9;table_import TEXT := &#39;import_fichier&#39;;&#xA;&#xA;&#x9;-- Programme à utiliser pour localiser les fichiers à importer (sous Windows)&#xA;&#x9;&#x9;-- Lister tous les fichiers du répertoire tmp&#xA;&#x9;&#x9;-- WHERE &#34;C:\tmp:*&#34;&#xA;&#x9;&#xA;&#x9;&#x9;-- Lister tous les fichiers jpeg et png du répertoire tmp&#xA;&#x9;&#x9;-- WHERE &#34;C:\tmp:*.jpg&#34; &#34;C:\tmp:*.png&#34;&#xA;&#x9;&#xA;&#x9;&#x9;-- Lister tous les fichiers du répertoire tmp et de ses sous-répertoires&#xA;&#x9;&#x9;-- DIR &#34;C:\tmp&#34; /b /S /a-d&#xA;&#x9;liste_fichier TEXT := &#39;WHERE &#34;C:\tmp:*.jpg&#34;&#39;;&#xA;&#xA;&#xA;&#x9;-- Autres variables&#xA;&#x9;-- Date et heure de démarrage&#xA;&#x9;var_timestamp timestamp := now();&#xA;&#xA;&#xA;BEGIN&#xA;&#x9;&#xA;&#x9;-- Création de la table d&#39;import&#xA;&#x9;EXECUTE &#xA;&#x9;&#x9;$a$CREATE TABLE IF NOT EXISTS $a$ || quote_ident(schema_import) || $a$.$a$ || quote_ident(table_import) || $a$ (&#xA;&#x9;&#x9;-- Un identifiant&#xA;&#x9;&#x9;id serial PRIMARY KEY,&#xA;&#x9;&#x9;-- L&#39;emplacement d&#39;origine du fichier&#xA;&#x9;&#x9;emplacement_fichier TEXT,&#xA;&#x9;&#x9;-- Le nom d&#39;origine du fichier&#xA;&#x9;&#x9;nom_fichier TEXT,&#xA;&#x9;&#x9;-- L&#39;extension d&#39;origine du fichier&#xA;&#x9;&#x9;extension_fichier TEXT,&#xA;&#x9;&#x9;-- L&#39;oid du large object créé&#xA;&#x9;&#x9;lo_oid oid,&#xA;&#x9;&#x9;-- Le fichier stocké au format binaire&#xA;&#x9;&#x9;data bytea,&#xA;&#x9;&#x9;-- Le timestamp d&#39;import&#xA;&#x9;&#x9;date_import timestamp&#xA;&#x9;) $a$&#xA;&#x9;;&#xA;&#xA;&#xA;&#xA;&#x9;-- Récupérer la liste des fichiers situés dans un dossier&#xA;&#x9;EXECUTE &#xA;&#x9;&#x9;$a$COPY $a$ || quote_ident(schema_import) || $a$.$a$ || quote_ident(table_import) || $a$ (emplacement_fichier) &#xA;&#x9;&#x9;&#x9;FROM PROGRAM &#39;$a$ || liste_fichier || $a$&#39; &#xA;&#x9;&#x9;&#x9;WITH (format &#39;csv&#39;)$a$ &#xA;&#x9;;&#xA;&#xA;&#xA;&#xA;&#x9;-- Calcul des métadonnées des fichiers&#xA;&#x9;EXECUTE&#xA;&#x9;&#x9;$a$UPDATE $a$ || quote_ident(schema_import) || $a$.$a$ || quote_ident(table_import) || $a$&#xA;&#x9;&#x9;&#x9;SET &#xA;&#x9;&#x9;&#x9;&#x9;-- Récupération du nom du fichier&#xA;&#x9;&#x9;&#x9;&#x9;nom_fichier = (SELECT regexp_matches(emplacement_fichier,&#39;\\([^\\]*)\.(\w+)$&#39;))[1],&#xA;&#x9;&#x9;&#x9;&#x9;-- Récupération de l&#39;extension du fichier&#xA;&#x9;&#x9;&#x9;&#x9;extension_fichier = (SELECT regexp_matches(emplacement_fichier,&#39;\.(\w+)$&#39;))[1],&#xA;&#x9;&#x9;&#x9;&#x9;-- Création d&#39;un timestamp&#xA;&#x9;&#x9;&#x9;&#x9;date_import = $a$ || quote_literal(var_timestamp)&#xA;&#x9;;&#xA;&#xA;&#xA;&#xA;&#x9;-- Import du document et récupération de l&#39;oid&#xA;&#x9;EXECUTE&#xA;&#x9;&#x9;$a$UPDATE $a$ || quote_ident(schema_import) || $a$.$a$ || quote_ident(table_import) || $a$&#xA;&#x9;&#x9;&#x9;SET &#xA;&#x9;&#x9;&#x9;&#x9;lo_oid = lo_import(emplacement_fichier) $a$&#xA;&#x9;;&#xA;&#xA;&#xA;&#xA;&#x9;-- Récupération des large objects dans la colonne de type bytea&#xA;&#x9;EXECUTE&#xA;&#x9;&#x9;$a$UPDATE $a$ || quote_ident(schema_import) || $a$.$a$ || quote_ident(table_import) || $a$&#xA;&#x9;&#x9;&#x9;SET &#xA;&#x9;&#x9;&#x9;&#x9;data = lo_get(lo_oid) $a$&#xA;&#x9;;&#xA;&#xA;&#xA;&#xA;&#x9;-- Suppression des large objects&#xA;&#x9;EXECUTE&#xA;&#x9;&#x9;$a$SELECT &#xA;&#x9;&#x9;&#x9;lo_unlink(lo_oid)&#xA;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;$a$ || quote_ident(schema_import) || $a$.$a$ || quote_ident(table_import) &#xA;&#x9;;&#xA;&#xA;&#xA;END&#xA;$fonction$&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;client-side&#34;&gt;Client-side&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le principe est similaire à la version server-side mais avec quelques subtilités.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Comme nous allons avoir plusieurs fichiers à traiter, l&amp;rsquo;idéal est de passer par un script batch qui va générer un fichier SQL qui sera ensuite exécuté par PSQL.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;shell&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;Script BATCH&#34; data-enlighter-group=&#34;import_masse_client-bat&#34;&gt;@echo off&#xA;setlocal enabledelayedexpansion&#xA;&#xA;:: ======================================&#xA;:: Définition des variables parametrables&#xA;:: ======================================&#xA;&#xA;:: Connexion BDD&#xA;&#x9;SET param.host=127.0.0.1&#xA;&#x9;SET param.port=5432&#xA;&#x9;SET param.bdd=ma_bdd&#xA;&#x9;SET param.user=postgres&#xA;&#x9;SET param.pwd=postgres&#xA;&#xA;:: Table d&#39;import&#xA;&#x9;SET param.schema_import=public&#xA;&#x9;SET param.table_import=import_fichier&#xA;&#xA;:: Programme à utiliser pour localiser les fichiers à importer&#xA;&#x9;:: Lister tous les fichiers du répertoire tmp&#xA;&#x9;:: WHERE &#34;C:\tmp:*&#34;&#xA;&#xA;&#x9;:: Lister tous les fichiers jpeg et png du répertoire tmp&#xA;&#x9;:: WHERE &#34;C:\tmp:*.jpg&#34; &#34;C:\tmp:*.png&#34;&#xA;&#xA;&#x9;:: Lister tous les fichiers du répertoire tmp et de ses sous-répertoires&#xA;&#x9;:: DIR &#34;C:\tmp&#34; /b /S /a-d&#xA;&#xA;&#x9;SET param.liste_fichier=WHERE &#34;C:\tmp:*.jpg&#34;&#xA;&#xA;&#xA;&#xA;:: Autres variables&#xA;&#x9;SET var_dir_install=%~dp0&#xA;&#x9;SET scriptfile=&#34;%var_dir_install%script_import_bytea.sql&#34;&#xA;&#x9;:: Date et heure de démarrage&#xA;&#x9;:: Le timestamp permettra de gérer plusieurs imports en parallèle si besoin&#xA;&#x9;SET var_timestamp=%date:~6,4%-%date:~3,2%-%date:~0,2% %time:~0,2%:%time:~3,2%:%time:~6,5%&#xA;&#x9;SET &#34;var_timestamp=%var_timestamp:,=.%&#34;&#xA;&#xA;&#xA;:: Initialisation du script SQL&#xA;(&#xA;&#x9;echo -- Script d&#39;import SQL&#xA;) &gt; &#34;%scriptfile%&#34;&#xA;&#xA;&#xA;&#xA;:: Création de la table d&#39;import&#xA;(&#xA;&#x9;echo -- Table d&#39;import&#xA;&#x9;echo CREATE TABLE IF NOT EXISTS &#34;%param.schema_import%&#34;.&#34;%param.table_import%&#34; ^(&#xA;&#x9;echo &#x9;-- Un identifiant&#xA;&#x9;echo &#x9;id serial PRIMARY KEY,&#xA;&#x9;echo &#x9;-- L&#39;emplacement d&#39;origine du fichier&#xA;&#x9;echo &#x9;emplacement_fichier TEXT,&#xA;&#x9;echo &#x9;-- Le nom d&#39;origine du fichier&#xA;&#x9;echo &#x9;nom_fichier TEXT,&#xA;&#x9;echo &#x9;-- L&#39;extension d&#39;origine du fichier&#xA;&#x9;echo &#x9;extension_fichier TEXT,&#xA;&#x9;echo &#x9;-- L&#39;oid du large object créé&#xA;&#x9;echo &#x9;lo_oid oid,&#xA;&#x9;echo &#x9;-- Le fichier stocké au format binaire&#xA;&#x9;echo &#x9;data bytea,&#xA;&#x9;echo &#x9;-- Le timestamp d&#39;import&#xA;&#x9;echo &#x9;date_import timestamp&#xA;&#x9;echo ^)&#xA;&#x9;echo ;&#xA;&#x9;echo.&#xA;&#x9;echo.&#xA;&#x9;echo.&#xA;) &gt;&gt; &#34;%scriptfile%&#34;&#xA;&#xA;&#xA;&#xA;:: Boucle pour chaque fichier à importer &#xA;FOR /f &#34;usebackq delims=|&#34; %%a in (`%param.liste_fichier%`) do (&#xA;&#xA;&#x9;SET import_file=%%a&#xA;&#x9;SET &#34;import_file=%import_file:\=/%&#34;&#xA;&#xA;&#xA;&#x9;(&#xA;&#x9;&#x9;echo -- Fichier : %import_file%&#xA;&#x9;&#x9;echo.&#xA;&#x9;) &gt;&gt; &#34;%scriptfile%&#34;&#xA;&#xA;&#x9;:: Insertion de l&#39;emplacement du fichier dans la table d&#39;import&#xA;&#x9;(&#xA;&#x9;&#x9;echo -- Insertion emplacement du fichier&#xA;&#x9;&#x9;echo INSERT INTO &#34;%param.schema_import%&#34;.&#34;%param.table_import%&#34; ^(&#xA;&#x9;&#x9;echo &#x9;emplacement_fichier,&#xA;&#x9;&#x9;echo &#x9;date_import&#xA;&#x9;&#x9;echo ^)&#xA;&#x9;&#x9;echo VALUES &#xA;&#x9;&#x9;echo &#x9;^(&#39;%import_file%&#39;, &#39;%var_timestamp%&#39;^)&#xA;&#x9;&#x9;echo ;&#xA;&#x9;&#x9;echo.&#xA;&#x9;) &gt;&gt; &#34;%scriptfile%&#34;&#xA;&#xA;&#x9;:: Importation du fichier avec la méta commande \lo_import&#xA;&#x9;(&#xA;&#x9;&#x9;echo -- Importation du fichier avec la méta commande \lo_import&#xA;&#x9;&#x9;echo \lo_import &#39;%import_file%&#39;&#xA;&#x9;&#x9;echo.&#xA;&#x9;) &gt;&gt; &#34;%scriptfile%&#34;&#xA;&#xA;&#x9;:: Récupération de l&#39;OID du large object créé&#xA;&#x9;(&#xA;&#x9;&#x9;echo -- Récupération de l&#39;OID du large object créé&#xA;&#x9;&#x9;echo UPDATE &#34;%param.schema_import%&#34;.&#34;%param.table_import%&#34;&#xA;&#x9;&#x9;echo &#x9;SET lo_oid = :LASTOID&#xA;&#x9;&#x9;echo WHERE emplacement_fichier = &#39;%import_file%&#39;&#xA;&#x9;&#x9;echo AND date_import = &#39;%var_timestamp%&#39;&#xA;&#x9;&#x9;echo ;&#xA;&#x9;&#x9;echo.&#xA;&#x9;&#x9;echo.&#xA;&#x9;) &gt;&gt; &#34;%scriptfile%&#34;&#xA;&#xA;)&#xA;&#xA;&#xA;&#xA;:: Calcul des métadonnées des fichiers&#xA;(&#xA;&#x9;echo.&#xA;&#x9;echo.&#xA;&#x9;echo -- Calcul des métadonnées des fichiers&#xA;&#x9;echo UPDATE &#34;%param.schema_import%&#34;.&#34;%param.table_import%&#34;&#xA;&#x9;echo &#x9;SET&#xA;&#x9;echo &#x9;&#x9;-- Récupération du nom du fichier&#xA;&#x9;echo &#x9;&#x9;nom_fichier = ^(SELECT regexp_matches^(emplacement_fichier,&#39;/^([^^/]*^)\.\w+$&#39;^)^)[1],&#xA;&#x9;echo &#x9;&#x9;-- Récupération de l&#39;extension du fichier&#xA;&#x9;echo &#x9;&#x9;extension_fichier = ^(SELECT regexp_matches^(emplacement_fichier,&#39;\.^(\w+^)$&#39;^)^)[1]&#xA;&#x9;echo WHERE&#xA;&#x9;echo &#x9;date_import = &#39;%var_timestamp%&#39;&#xA;&#x9;echo ;&#xA;&#x9;echo.&#xA;) &gt;&gt; &#34;%scriptfile%&#34;&#xA;&#xA;&#xA;&#xA;:: Récupération des large objects dans la colonne de données binaire&#xA;(&#xA;&#x9;echo.&#xA;&#x9;echo.&#xA;&#x9;echo -- Récupération des large objects dans la colonne de données binaire&#xA;&#x9;echo UPDATE &#34;%param.schema_import%&#34;.&#34;%param.table_import%&#34;&#xA;&#x9;echo &#x9;SET&#xA;&#x9;echo &#x9;&#x9;data = lo_get^(lo_oid^)&#xA;&#x9;echo WHERE&#xA;&#x9;echo &#x9;date_import = &#39;%var_timestamp%&#39;&#xA;&#x9;echo ;&#xA;&#x9;echo.&#xA;) &gt;&gt; &#34;%scriptfile%&#34;&#xA;&#xA;&#xA;&#xA;:: Suppression des large objects&#xA;(&#xA;&#x9;echo.&#xA;&#x9;echo.&#xA;&#x9;echo -- Suppression des large objects&#xA;&#x9;echo SELECT &#xA;&#x9;echo &#x9;lo_unlink^(lo_oid^)&#xA;&#x9;echo FROM&#xA;&#x9;echo &#x9;&#34;%param.schema_import%&#34;.&#34;%param.table_import%&#34;&#xA;&#x9;echo WHERE&#xA;&#x9;echo &#x9;date_import = &#39;%var_timestamp%&#39;&#xA;&#x9;echo ;&#xA;&#x9;echo.&#xA;) &gt;&gt; &#34;%scriptfile%&#34;&#xA;&#xA;&#xA;&#xA;:: Execution du script SQL&#xA;psql -d &#34;postgresql://%param.user%:%param.pwd%@%param.host%:%param.port%/%param.bdd%&#34; -f &#34;%scriptfile%&#34;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;Exemple de SQL généré&#34; data-enlighter-group=&#34;import_masse_client-bat&#34;&gt;-- Script d&#39;import SQL&#xA;-- Table d&#39;import&#xA;CREATE TABLE IF NOT EXISTS &#34;public&#34;.&#34;import_fichier&#34; (&#xA;&#x9;-- Un identifiant&#xA;&#x9;id serial PRIMARY KEY,&#xA;&#x9;-- L&#39;emplacement d&#39;origine du fichier&#xA;&#x9;emplacement_fichier TEXT,&#xA;&#x9;-- Le nom d&#39;origine du fichier&#xA;&#x9;nom_fichier TEXT,&#xA;&#x9;-- L&#39;extension d&#39;origine du fichier&#xA;&#x9;extension_fichier TEXT,&#xA;&#x9;-- L&#39;oid du large object créé&#xA;&#x9;lo_oid oid,&#xA;&#x9;-- Le fichier stocké au format binaire&#xA;&#x9;data bytea,&#xA;&#x9;-- Le timestamp d&#39;import&#xA;&#x9;date_import timestamp&#xA;)&#xA;;&#xA;&#xA;&#xA;&#xA;-- Fichier : C:/tmp/mon_image_1.jpg&#xA;&#xA;-- Insertion emplacement du fichier&#xA;INSERT INTO &#34;public&#34;.&#34;import_fichier&#34; (&#xA;&#x9;emplacement_fichier,&#xA;&#x9;date_import&#xA;)&#xA;VALUES &#xA;&#x9;(&#39;C:/tmp/mon_image_1.jpg&#39;, &#39;2022-02-06 21:00:00.00&#39;)&#xA;;&#xA;&#xA;-- Importation du fichier avec la méta commande \lo_import&#xA;\lo_import &#39;C:/tmp/mon_image_1.jpg&#39;&#xA;&#xA;-- Récupération de l&#39;OID du large object créé&#xA;UPDATE &#34;public&#34;.&#34;import_fichier&#34;&#xA;&#x9;SET lo_oid = :LASTOID&#xA;WHERE emplacement_fichier = &#39;C:/tmp/mon_image_1.jpg&#39;&#xA;AND date_import = &#39;2022-02-06 21:00:00.00&#39;&#xA;;&#xA;&#xA;&#xA;-- Fichier : C:/tmp/mon_image_2.jpg&#xA;&#xA;-- Insertion emplacement du fichier&#xA;INSERT INTO &#34;public&#34;.&#34;import_fichier&#34; (&#xA;&#x9;emplacement_fichier,&#xA;&#x9;date_import&#xA;)&#xA;VALUES &#xA;&#x9;(&#39;C:/tmp/mon_image_2.jpg&#39;, &#39;2022-02-06 21:00:00.00&#39;)&#xA;;&#xA;&#xA;-- Importation du fichier avec la méta commande \lo_import&#xA;\lo_import &#39;C:/tmp/mon_image_2.jpg&#39;&#xA;&#xA;-- Récupération de l&#39;OID du large object créé&#xA;UPDATE &#34;public&#34;.&#34;import_fichier&#34;&#xA;&#x9;SET lo_oid = :LASTOID&#xA;WHERE emplacement_fichier = &#39;C:/tmp/mon_image_2.jpg&#39;&#xA;AND date_import = &#39;2022-02-06 21:00:00.00&#39;&#xA;;&#xA;&#xA;&#xA;&#xA;-- Calcul des métadonnées des fichiers&#xA;UPDATE &#34;public&#34;.&#34;import_fichier&#34;&#xA;&#x9;SET&#xA;&#x9;&#x9;-- Récupération du nom du fichier&#xA;&#x9;&#x9;nom_fichier = (SELECT regexp_matches(emplacement_fichier,&#39;/([^/]*)\.\w+$&#39;))[1],&#xA;&#x9;&#x9;-- Récupération de l&#39;extension du fichier&#xA;&#x9;&#x9;extension_fichier = (SELECT regexp_matches(emplacement_fichier,&#39;\.(\w+)$&#39;))[1]&#xA;WHERE&#xA;&#x9;date_import = &#39;2022-02-06 21:00:00.00&#39;&#xA;;&#xA;&#xA;&#xA;&#xA;-- Récupération des large objects dans la colonne de données binaire&#xA;UPDATE &#34;public&#34;.&#34;import_fichier&#34;&#xA;&#x9;SET&#xA;&#x9;&#x9;data = lo_get(lo_oid)&#xA;WHERE&#xA;&#x9;date_import = &#39;2022-02-06 21:00:00.00&#39;&#xA;;&#xA;&#xA;&#xA;&#xA;-- Suppression des large objects&#xA;SELECT &#xA;&#x9;lo_unlink(lo_oid)&#xA;FROM&#xA;&#x9;&#34;public&#34;.&#34;import_fichier&#34;&#xA;WHERE&#xA;&#x9;date_import = &#39;2022-02-06 21:00:00.00&#39;&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;pour-en-savoir-plus&#34;&gt;Pour en savoir plus&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Un comparatif entre les stockages &lt;code&gt;large object&lt;/code&gt; et &lt;code&gt;binary&lt;/code&gt; : &lt;a href=&#34;https://blog-postgresql.verite.pro/2017/11/15/large-objects-bytea.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://blog-postgresql.verite.pro/2017/11/15/large-objects-bytea.html&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Un bel article sur les TOAST : &lt;a href=&#34;https://medium.com/gojekengineering/a-toast-from-postgresql-83b83d0d0683&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://medium.com/gojekengineering/a-toast-from-postgresql-83b83d0d0683&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Un autre article sur les TOAST : &lt;a href=&#34;https://fljd.in/2020/10/12/toast-la-meilleure-chose-depuis-le-pain-en-tranches/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://fljd.in/2020/10/12/toast-la-meilleure-chose-depuis-le-pain-en-tranches/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cet article fait parti du cours sur PostgreSQL, partie 8 du Vade-mecum.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-buttons is-vertical is-content-justification-center is-layout-flex wp-container-core-buttons-is-layout-5 wp-block-buttons-is-layout-flex&#34;&gt;&#xA;&lt;div class=&#34;wp-block-button has-custom-width wp-block-button__width-50&#34;&gt;&lt;a class=&#34;wp-block-button__link wp-element-button&#34; href=&#34;https://blog.arthurbazin.com/programmation/sql/postgresql-tout-comprendre-1&#34;&gt;Cours sur PostgreSQL&lt;/a&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-button has-custom-width wp-block-button__width-50&#34;&gt;&lt;a class=&#34;wp-block-button__link wp-element-button&#34; href=&#34;https://blog.arthurbazin.com/programmation/sql/postgresql-vade-mecum-8#raster2pgsql&#34;&gt;Vade-mecum &amp;#8211; 8 &amp;#8211; Fonctions shell&lt;/a&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;</content>
    <link href="https://blog.arthurbazin.com/programmation/importer-des-donnees-binaires-dans-postgresql" rel="alternate"></link>
    <summary type="html">Voici tous mes conseils sur un sujet qui m&#39;a longtemps tenu en échec : l&#39;import de données binaires en base PostgreSQL</summary>
    <author>
      <name>Arthur Bazin</name>
    </author>
  </entry>
  <entry>
    <title>De retour du pgDay Paris 2024.</title>
    <updated>2024-03-18T09:39:28Z</updated>
    <id>tag:blog.anayrat.info,2024-03-18:/2024/03/18/de-retour-du-pgday-paris-2024./</id>
    <link href="https://blog.anayrat.info/2024/03/18/de-retour-du-pgday-paris-2024./" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Me voilà rentré du pgDay Paris. J’ai beaucoup aimé cette édition. J’étais déjà venu à celle de &lt;a href=&#34;https://www.postgresql.eu/events/pgdayparis2019/schedule/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019&lt;/a&gt; et je dois dire que je n’ai pas été déçu. Pour rappel, le pgDay Paris est une conférence internationale. Les présentations sont en anglais et permettent d’attirer des orateurs et un public plus anglophone.&lt;/p&gt;&#xA;&lt;p&gt;Je vois souvent cette conférence comme un petit &lt;a href=&#34;https://www.postgresql.eu/events/series/pgconfeu-1/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PGConf Europe&lt;/a&gt; : on retrouve un contenu assez riche avec la dimension internationale.&lt;/p&gt;&#xA;&lt;p&gt;On croise des têtes déjà connues : public, orateurs, bénévoles, contributeurs : Tout ce petit monde qui fait vivre la communauté Postgres.&lt;/p&gt;&#xA;&lt;p&gt;Puis, c’est l’occasion de mettre des visages sur des noms que l’on croise en lisant des articles ou les mailing-list Postgres.&lt;/p&gt;&#xA;&lt;p&gt;Voici un petit retour sur les conférences auxquelles j’ai assisté :&lt;/p&gt;&#xA;&lt;h1 id=&#34;elephant-in-a-nutshell---navigating-the-postgres-community-101&#34;&gt;Elephant in a nutshell - Navigating the Postgres community 101&lt;/h1&gt;&#xA;&lt;p&gt;Avec &lt;a href=&#34;https://2024.pgday.paris/organization/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Carole et Stéphanie&lt;/a&gt;, on a pensé que ce serait bien d’avoir cette conférence en introduction.&lt;/p&gt;&#xA;&lt;p&gt;Je l’ai trouvé très complète. Elle parle de Postgres, mais aussi et surtout de sa communauté. C’est ce qui fait sa force.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.postgresql.eu/events/pgdayparis2024/sessions/session/5293/slides/481/pgDay%20Paris_Valeria%27s%20talk%20-%20Elephant%20in%20a%20nutshell.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Les slides sont disponibles.&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;sustainable-database-performance-profiling-in-postgresql&#34;&gt;Sustainable Database Performance profiling in PostgreSQL&lt;/h1&gt;&#xA;&lt;p&gt;Postgres dispose de nombreuses vues statistiques apportant des informations sur son fonctionnement.&lt;/p&gt;&#xA;&lt;p&gt;Elles peuvent être natives (&lt;em&gt;pg_stat_statements&lt;/em&gt; …) ou via des extensions &lt;em&gt;pg_stat_kcache&lt;/em&gt;, &lt;em&gt;pg_wait_sampling&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Cependant, et c’est ce que souligne cette conférence, elles apportent une vue à un instant T.&lt;/p&gt;&#xA;&lt;p&gt;Pour les exploiter, il faut les historiser. L’orateur présente un outil basé sur ce qui se fait sur Oracle : &lt;a href=&#34;https://github.com/zubkov-andrei/pg_profile&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pg_profile&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;En revanche, il le présente comme l’unique outil permettant d’exploiter ces informations. Une personne dans le public lui a fait remarquer qu’il existait un autre projet : &lt;a href=&#34;https://powa.readthedocs.io/en/latest/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PoWA&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Les deux outils ne fournissent pas les mêmes fonctions, &lt;em&gt;pg_profile&lt;/em&gt; génère un rapport HTML. Il est plutôt facile à installer, il ne nécessite pas de librairies externe car il est écrit en pl/pgsql.&lt;/p&gt;&#xA;&lt;p&gt;PoWA apporte des graphes, de la suggestion d’index… mais est plus lourd à installer.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.postgresql.eu/events/pgdayparis2024/sessions/session/5067/slides/482/20240314_dkrautschick_PGdayParis_SustainableDatabasePerformanceProfilingInPostgreSQL.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Les slides sont disponibles&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;postgresql-without-permanent-local-data-storage&#34;&gt;PostgreSQL without permanent local data storage&lt;/h1&gt;&#xA;&lt;p&gt;Là, on rentre dans une conférence très technique. Matthias travaille sur le projet &lt;a href=&#34;https://neon.tech/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Neon&lt;/a&gt; et il participe régulièrement sur les &lt;a href=&#34;https://www.postgresql.org/list/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mailing-list Postgres&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Neon est un fork opensource de Postgres visant à séparer le &lt;em&gt;compute&lt;/em&gt; et le &lt;em&gt;storage&lt;/em&gt;. C’est ce qu’a fait AWS avec le projet Aurora.&lt;/p&gt;&#xA;&lt;p&gt;Heikki Linnakangas, un des co-fondateurs de Neon et committer de Postgres a fait plusieurs présentations :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=rES0yzeERns&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Neon: Serverless PostgreSQL! (Heikki Linnakangas)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://neon.tech/blog/architecture-decisions-in-neon&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Architecture decisions in Neon&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Matthias a présenté les différents problèmes que cela posait de vouloir séparer le stockage du reste du moteur. C’est clairement un projet très ambitieux. Pour le moment, il est difficile de savoir si ce fork perdurera ou non.&lt;/p&gt;&#xA;&lt;p&gt;Cependant, on peut souligner que les personnes travaillant dessus ont une très grande connaissance du moteur. On peut espérer que ça ait des implications positives dans le projet Postgres.&lt;/p&gt;&#xA;&lt;p&gt;Affaire à suivre…&lt;/p&gt;&#xA;&lt;h1 id=&#34;lightning-talks&#34;&gt;Lightning Talks!&lt;/h1&gt;&#xA;&lt;p&gt;Les Lightning Talks sont une bonne occasion de balayer certains sujets un peu plus légers. Ca passe plutôt bien après le repas. C’est assez divertissant. J’ai bien aimé la présentation de Léo Unbekandt sur l’architecture des instances Postgres à Scalingo. Pas de K8S, une architecture simple et éprouvée.&lt;/p&gt;&#xA;&lt;p&gt;J’ai aussi aimé la présentation de Chris Ellis où il fabrique un objet décoratif lumineux avec de l’ESP32 dedans.&lt;/p&gt;&#xA;&lt;h1 id=&#34;multi-tenant-database-the-good-the-bad-the-ugly&#34;&gt;Multi-tenant database: the good, the bad, the ugly.&lt;/h1&gt;&#xA;&lt;p&gt;Après, les Lightning Talks, on retourne dans le vif du sujet avec cette présentation de Pierre Ducroquet.&lt;/p&gt;&#xA;&lt;p&gt;Je connais bien Pierre, la première fois que je l’ai croisé, c’était au pgDay France 2016. Il avait fait une très bonne présentation sur &lt;a href=&#34;https://2016.pgday.fr/programme.html#comprendre-requete-lente&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Comprendre pourquoi une requête est lente, et comment régler le soucis&lt;/a&gt;. Ensuite, ça a été mon collègue de travail pendant quelques années où on a rencontré les problèmes que pouvaient poser les bases de données &lt;em&gt;multi-tenant&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Il présente différentes façons de faire du &lt;em&gt;multi-tenant&lt;/em&gt; avec les contraintes que cela implique. Il donne des chiffres assez impressionnants comme plus de 200 000 tables!&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.pinaraf.info/2024/03/look-ma-i-wrote-a-new-jit-compiler-for-postgresql/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Quelque chose me dit qu’on ne va pas tarder à le revoir&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;beyond-b-trees-looking-at-columnar-storage-and-lsm-trees&#34;&gt;Beyond B-trees looking at Columnar Storage and LSM trees&lt;/h1&gt;&#xA;&lt;p&gt;Une autre conférence assez bas niveau sur le stockage colonne et les LSM Tree.&lt;/p&gt;&#xA;&lt;p&gt;Ce type de stockage peut effectivement faire partie du futur de Postgres. Le moteur commence à être utilisé pour de plus en plus de projets analytiques où on manipule de gros volumes de données.&lt;/p&gt;&#xA;&lt;p&gt;Il faut donc des méthodes de stockage capable d’encaisse des écritures rapides.&lt;/p&gt;&#xA;&lt;h1 id=&#34;postgres-16-highlight-logical-decoding-on-standby&#34;&gt;Postgres 16 highlight: Logical decoding on standby&lt;/h1&gt;&#xA;&lt;p&gt;Une nouveauté assez attendue sur Postgres 16 : La possibilité de faire du décodage logique sur un secondaire.&lt;/p&gt;&#xA;&lt;p&gt;Qui mieux qu’un des auteurs de cette fonctionnalité pour en parler ?&lt;/p&gt;&#xA;&lt;p&gt;Bertrand présente les difficultés pour faire un décodage logique sur un secondaire, et comment elles ont été résolues.&lt;/p&gt;&#xA;&lt;p&gt;Il a aussi fait une démonstration. C’est vraiment impressionnant, car c’est un sujet assez compliqué.&lt;/p&gt;&#xA;&lt;p&gt;Point bonus, il explique aussi une nouveauté de Postres 17 : la synchronisation des slots de réplication.&lt;/p&gt;&#xA;&lt;p&gt;Actuellement, on peut difficilement “raccrocher” une réplication logique en cas de bascule. Il y a un risque de perte de transaction.&lt;/p&gt;&#xA;&lt;p&gt;Postgres 17 devrait permettre de synchroniser un slot de réplication. En cas de bascule, on peut reprendre la réplication.&#xA;On est chanceux, il vient tout juste d’écrire un article sur le sujet : &lt;a href=&#34;https://bdrouvot.github.io/2024/03/16/postgres-17-highlight-logical-replication-slots-synchronization/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Postgres 17 highlight: Logical replication slots synchronization&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.postgresql.eu/events/pgdayparis2024/sessions/session/5122/slides/483/pgdayParis2024.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Les slides sont disponibles&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;closing&#34;&gt;Closing&lt;/h1&gt;&#xA;&lt;p&gt;C’était la dernière conférence de la journée. On a pu se retrouver pour le social event.&lt;/p&gt;&#xA;&lt;p&gt;C’est un moment que j’affectionne particulièrement. Car au-delà des conférences, c’est surtout une occasion d’échanger entre passionnés. De retrouver des connaissances et amis de longue date.&lt;/p&gt;&#xA;&lt;p&gt;J’ai réalisé que j’avais un peu délaissé les conférences, entre le covid, mon passage en freelance etc… A l’avenir, j’essaierai d’être plus présent sur ce genre d’évènement (si je peux prendre le train).&lt;/p&gt;&#xA;&lt;h1 id=&#34;merci&#34;&gt;Merci&lt;/h1&gt;&#xA;&lt;p&gt;J’en profite aussi pour remercier les &lt;a href=&#34;https://2024.pgday.paris/organization/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;organisateurs et bénévoles&lt;/a&gt;. On a du mal à réaliser l’investissement que ça demande. Un grand merci à eux pour cet évènement !&lt;/p&gt;&#xA;&lt;p&gt;On se verra sûrement au pgDay 2025 !&lt;/p&gt;</summary>
    <author>
      <name>blog.anayrat.info</name>
    </author>
  </entry>
  <entry>
    <title>Recommandations de lectures pour améliorer ses connaissances en base de données et PostgreSQL</title>
    <updated>2024-02-12T08:00:00Z</updated>
    <id>tag:blog.anayrat.info,2024-02-12:/2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/</id>
    <link href="https://blog.anayrat.info/2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/" rel="alternate"></link>
    <summary type="html">&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;&#xA;  &lt;summary class=&#34;font-weight-bold&#34;&gt;Table des matières&lt;/summary&gt;&#xA;  &lt;nav id=&#34;TableOfContents&#34;&gt;&#xA;  &lt;ul&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#fondamentaux-des-bases-de-données&#34;&gt;Fondamentaux des bases de données&lt;/a&gt;&#xA;      &lt;ul&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#the-manga-guide-to-databases&#34;&gt;The Manga Guide to Databases&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#database-design-for-mere-mortals&#34;&gt;Database Design for Mere Mortals&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#sql-antipatterns&#34;&gt;SQL Antipatterns&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#sql-for-smarties&#34;&gt;SQL for Smarties&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#the-art-of-sql&#34;&gt;The Art Of SQL&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;/ul&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#performance&#34;&gt;Performance&lt;/a&gt;&#xA;      &lt;ul&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#sql-performance-explained&#34;&gt;SQL Performance Explained&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#indexing-beyond-the-basics&#34;&gt;Indexing Beyond the Basics&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;/ul&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#postgresql&#34;&gt;PostgreSQL&lt;/a&gt;&#xA;      &lt;ul&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#practical-sql&#34;&gt;Practical SQL&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#postgresql---architecture-et-notions-avancées&#34;&gt;PostgreSQL - Architecture et notions avancées&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#learn-postgresql&#34;&gt;Learn PostgreSQL&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#postgresql-14-internals&#34;&gt;PostgreSQL 14 Internals&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;/ul&gt;&#xA;    &lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/nav&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;Je ne vais lister que quelques livres, mais je pourrais en citer pleins d&amp;rsquo;autres &amp;#x1f603; . J&amp;rsquo;espère que ça permettra à plus de développeurs, DBA, DEVOPS, CTO &amp;hellip; de mieux comprendre les bases de données et leurs enjeux.&lt;/p&gt;&#xA;&lt;h1 id=&#34;fondamentaux-des-bases-de-données&#34;&gt;Fondamentaux des bases de données&lt;/h1&gt;&#xA;&lt;h2 id=&#34;the-manga-guide-to-databases&#34;&gt;The Manga Guide to Databases&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;figure  id=&#34;figure-the-manga-guide-to-databases&#34;&gt;&#xA;  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;&#xA;    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;manga&#34; srcset=&#34;&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/manga_hu5aa70ea30ae3275c65d27c3d87d1e70c_108868_79a33cb973abaedb22e66948cdc60d80.webp 400w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/manga_hu5aa70ea30ae3275c65d27c3d87d1e70c_108868_c3accdb2c9ecf2675e6df1dee150cd9e.webp 760w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/manga_hu5aa70ea30ae3275c65d27c3d87d1e70c_108868_1200x1200_fit_q75_h2_lanczos_2.webp 1200w&#34;&#xA;               src=&#34;https://blog.anayrat.info/2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/manga_hu5aa70ea30ae3275c65d27c3d87d1e70c_108868_79a33cb973abaedb22e66948cdc60d80.webp&#34;&#xA;               width=&#34;474&#34;&#xA;               height=&#34;626&#34;&#xA;               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;&#xA;  &lt;/div&gt;&lt;figcaption&gt;&#xA;      The Manga Guide to Databases&#xA;    &lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Niveau : Débutant&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://nostarch.com/mg_databases.htm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Manga Guide to Databases&lt;/a&gt; est celui que je recommande dans la plupart de mes rapports d&amp;rsquo;audit.&lt;/p&gt;&#xA;&lt;p&gt;Il est vraiment génial, facile à lire et pour autant, il ne sacrifie pas le fond à la forme.&lt;/p&gt;&#xA;&lt;p&gt;Il couvre un peu tous les aspects importants :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Modélisation&lt;/li&gt;&#xA;&lt;li&gt;Écriture de requêtes simples&lt;/li&gt;&#xA;&lt;li&gt;Grands principes des bases de données : transaction, isolation&amp;hellip;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;database-design-for-mere-mortals&#34;&gt;Database Design for Mere Mortals&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;figure  id=&#34;figure-database-design-for-mere-mortals&#34;&gt;&#xA;  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;&#xA;    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;design&#34; srcset=&#34;&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/design_hue35134dfe8ede24af1874bb4631ce208_182026_721347960fb63df78ab2314199294f15.webp 400w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/design_hue35134dfe8ede24af1874bb4631ce208_182026_2a81b8ec12f19038971875854feca26c.webp 760w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/design_hue35134dfe8ede24af1874bb4631ce208_182026_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;&#xA;               src=&#34;https://blog.anayrat.info/2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/design_hue35134dfe8ede24af1874bb4631ce208_182026_721347960fb63df78ab2314199294f15.webp&#34;&#xA;               width=&#34;616&#34;&#xA;               height=&#34;760&#34;&#xA;               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;&#xA;  &lt;/div&gt;&lt;figcaption&gt;&#xA;      Database Design for Mere Mortals&#xA;    &lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Niveau : Intermédiaire&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.informit.com/store/database-design-for-mere-mortals-25th-anniversary-edition-9780136788041&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Database Design for Mere Mortals&lt;/a&gt; de &lt;em&gt;Michael J. Hernandez&lt;/em&gt; est, comme son nom l&amp;rsquo;indique, orienté sur la modélisation.&lt;/p&gt;&#xA;&lt;p&gt;C&amp;rsquo;est un gros pavé de plus de 600 pages, mais il ne faut pas se laisser impressionner. Il se lit très bien, c&amp;rsquo;est bien vulgarisé et l&amp;rsquo;auteur a fait attention  à éviter de s&amp;rsquo;embarquer dans la théorie qui peut parfois être indigeste.&lt;/p&gt;&#xA;&lt;p&gt;J&amp;rsquo;ai beaucoup aimé le processus d&amp;rsquo;interviews pour construire le modèle de données, l&amp;rsquo;accent mis sur la documentation du modèle. Il  parle peu des formes normales, c&amp;rsquo;est un parti pris. Cependant, si on suit son processus, le modèle respecte bien les formes normales.&lt;/p&gt;&#xA;&lt;h2 id=&#34;sql-antipatterns&#34;&gt;SQL Antipatterns&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;figure  id=&#34;figure-sql-antipatterns&#34;&gt;&#xA;  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;&#xA;    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;antipatterns&#34; srcset=&#34;&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/antipatterns_hu78d2e974f3c547630262f79e552a0ea6_2096124_c320047c4b1f0cff61ce38e7e7f6d3dc.webp 400w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/antipatterns_hu78d2e974f3c547630262f79e552a0ea6_2096124_0d0faf00cb44ab3739d2b4e20f0b205e.webp 760w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/antipatterns_hu78d2e974f3c547630262f79e552a0ea6_2096124_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;&#xA;               src=&#34;https://blog.anayrat.info/2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/antipatterns_hu78d2e974f3c547630262f79e552a0ea6_2096124_c320047c4b1f0cff61ce38e7e7f6d3dc.webp&#34;&#xA;               width=&#34;633&#34;&#xA;               height=&#34;760&#34;&#xA;               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;&#xA;  &lt;/div&gt;&lt;figcaption&gt;&#xA;      SQL Antipatterns&#xA;    &lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pragprog.com/titles/bksap1/sql-antipatterns-volume-1/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SQL Antipatterns&lt;/a&gt; est un bon livre pour identifier les &lt;em&gt;anti-patterns&lt;/em&gt; et apporte des solutions.&#xA;Je m&amp;rsquo;en sers régulièrement quand j&amp;rsquo;ai besoin d&amp;rsquo;expliquer ce qui ne va pas dans un modèle ou une requête.&lt;/p&gt;&#xA;&lt;h2 id=&#34;sql-for-smarties&#34;&gt;SQL for Smarties&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;figure  id=&#34;figure-sql-for-smarties&#34;&gt;&#xA;  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;&#xA;    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;smarties&#34; srcset=&#34;&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/smarties_hua93406d09d9e5354756184b8dd00daf0_137495_c6c3d9973032c4ac34459909ff559894.webp 400w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/smarties_hua93406d09d9e5354756184b8dd00daf0_137495_ca4d66cca791addd71955b48a3f29c2c.webp 760w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/smarties_hua93406d09d9e5354756184b8dd00daf0_137495_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;&#xA;               src=&#34;https://blog.anayrat.info/2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/smarties_hua93406d09d9e5354756184b8dd00daf0_137495_c6c3d9973032c4ac34459909ff559894.webp&#34;&#xA;               width=&#34;616&#34;&#xA;               height=&#34;760&#34;&#xA;               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;&#xA;  &lt;/div&gt;&lt;figcaption&gt;&#xA;      SQL for Smarties&#xA;    &lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Niveau : Avancé&lt;/p&gt;&#xA;&lt;p&gt;Comment ne pas mentionner les livres de &lt;a href=&#34;https://en.wikipedia.org/wiki/Joe_Celko&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Joe Celko&lt;/a&gt;.&#xA;Il a participé au standard SQL et écrit de &lt;a href=&#34;https://www.oreilly.com/pub/au/1919&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;nombreux livres&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sciencedirect.com/book/9780128007617/joe-celkos-sql-for-smarties&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SQL for Smarties&lt;/a&gt; fait partie&#xA;des références en matière de SQL. La première édition date de 1995&amp;hellip; oui&amp;hellip; presque 30 ans quand j&amp;rsquo;écris ces lignes !&#xA;La cinquième édition date de 2015, malgré ces 10 ans, le contenu est toujours d&amp;rsquo;actualité. On trouve même des ordres assez récents comme &lt;code&gt;LATERAL&lt;/code&gt;, les &lt;em&gt;window functions&lt;/em&gt;, &lt;code&gt;CTE&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;On est aussi sur un gros pavé de plus de 800 pages, le livre est très complet, assez exhaustif. Je dirai réservé à ceux qui veulent vraiment approfondir leurs connaissances en SQL.&lt;/p&gt;&#xA;&lt;p&gt;À noter qu&amp;rsquo;il existe une version en français basé sur la seconde édition qui date de 2000, elle accuse un peu l&amp;rsquo;age : &lt;a href=&#34;https://www.decitre.fr/livres/sql-avance-9782711786367.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SQL Avancé&lt;/a&gt;. On peut le trouver &lt;a href=&#34;https://www.momox-shop.fr/joe-celko-sql-avance-taschenbuch-M02841801411.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;d&amp;rsquo;occasion&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-art-of-sql&#34;&gt;The Art Of SQL&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;figure  id=&#34;figure-the-art-of-sql&#34;&gt;&#xA;  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;&#xA;    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;art&#34; srcset=&#34;&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/art_hu3e5eba633759e8230aa87338f68d1a3b_220155_2bb5db8f1a45e313260bc7467bf92c17.webp 400w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/art_hu3e5eba633759e8230aa87338f68d1a3b_220155_ad989b301e7ba70987c52db0c9c535e3.webp 760w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/art_hu3e5eba633759e8230aa87338f68d1a3b_220155_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;&#xA;               src=&#34;https://blog.anayrat.info/2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/art_hu3e5eba633759e8230aa87338f68d1a3b_220155_2bb5db8f1a45e313260bc7467bf92c17.webp&#34;&#xA;               width=&#34;579&#34;&#xA;               height=&#34;760&#34;&#xA;               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;&#xA;  &lt;/div&gt;&lt;figcaption&gt;&#xA;      The Art Of SQL&#xA;    &lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Niveau : Avancé&lt;/p&gt;&#xA;&lt;p&gt;Avec &lt;a href=&#34;https://www.oreilly.com/library/view/the-art-of/0596008945/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Art of SQL&lt;/a&gt; de &lt;a href=&#34;https://www.oreilly.com/pub/au/2005&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Stephane Faroult&lt;/a&gt;, on change de catégorie. Là, on est sur du SQL plus avancé.&#xA;Le livre va être orienté performances, bonnes pratiques. Malgré ses 18 ans, son contenu est toujours d&amp;rsquo;actualité. C&amp;rsquo;est un livre très puissant, il vous faudra du temps pour le lire et assimiler chaque page.&lt;/p&gt;&#xA;&lt;h1 id=&#34;performance&#34;&gt;Performance&lt;/h1&gt;&#xA;&lt;h2 id=&#34;sql-performance-explained&#34;&gt;SQL Performance Explained&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;figure  id=&#34;figure-sql-performance-explained&#34;&gt;&#xA;  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;&#xA;    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;luke&#34; srcset=&#34;&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/luke_hu753ac19229e8013f92d2513650643829_89166_d25868af42f9fe155d70736822260a43.webp 400w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/luke_hu753ac19229e8013f92d2513650643829_89166_c361959935046d9adedd33681287b70f.webp 760w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/luke_hu753ac19229e8013f92d2513650643829_89166_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;&#xA;               src=&#34;https://blog.anayrat.info/2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/luke_hu753ac19229e8013f92d2513650643829_89166_d25868af42f9fe155d70736822260a43.webp&#34;&#xA;               width=&#34;480&#34;&#xA;               height=&#34;737&#34;&#xA;               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;&#xA;  &lt;/div&gt;&lt;figcaption&gt;&#xA;      SQL Performance Explained&#xA;    &lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Niveau : Intermédiaire&lt;/p&gt;&#xA;&lt;p&gt;Impossible de ne pas mentionner l&amp;rsquo;excellent livre de &lt;a href=&#34;https://winand.at/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Markus Winand&lt;/a&gt;, &lt;a href=&#34;https://sql-performance-explained.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SQL Performance Explained&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Comme son titre l&amp;rsquo;indique, on va parler performance, indexation, écriture de requêtes. À noter qu&amp;rsquo;il a également été traduit en plusieurs langues : Allemand, Espagnol, Japonais et Français grâce à Guillaume Lelarge &lt;a href=&#34;https://sql-au-coeur-des-performances.fr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SQL : Au cœur des performances&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Le contenu du livre est également disponible sur son site &lt;a href=&#34;https://use-the-index-luke.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Use the Index, Luke !&lt;/a&gt;. Markus est aussi l&amp;rsquo;auteur d&amp;rsquo;un excellent site sur les fonctionnalités avancés du SQL : &lt;a href=&#34;https://modern-sql.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Modern SQL&lt;/a&gt;. Lors de l&amp;rsquo;émission &lt;a href=&#34;https://youtu.be/mGqqQg-dG-w?si=he4R6eTC_2VckAVA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Modern SQL sur Postgres.FM&lt;/a&gt;, il a annoncé la volonté d&amp;rsquo;en faire un livre. J&amp;rsquo;ai hâte ! Il a aussi fait de nombreuses &lt;a href=&#34;https://winand.at/sql-slides-for-developers&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;présentations&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;indexing-beyond-the-basics&#34;&gt;Indexing Beyond the Basics&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;figure  id=&#34;figure-indexing-beyond-the-basics&#34;&gt;&#xA;  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;&#xA;    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;indexing&#34; srcset=&#34;&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/indexing_hu4ec3b1968fb5d81fd5627bea5287bed7_530622_cd04fe528416e6d69ed46ae57835a97e.webp 400w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/indexing_hu4ec3b1968fb5d81fd5627bea5287bed7_530622_7b7f71022bce674d799dc5af2cfdb5cb.webp 760w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/indexing_hu4ec3b1968fb5d81fd5627bea5287bed7_530622_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;&#xA;               src=&#34;https://blog.anayrat.info/2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/indexing_hu4ec3b1968fb5d81fd5627bea5287bed7_530622_cd04fe528416e6d69ed46ae57835a97e.webp&#34;&#xA;               width=&#34;668&#34;&#xA;               height=&#34;760&#34;&#xA;               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;&#xA;  &lt;/div&gt;&lt;figcaption&gt;&#xA;      Indexing Beyond the Basics&#xA;    &lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Niveau : Débutant - Intermédiaire&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://sqlfordevs.com/ebooks/indexing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Indexing Beyond the Basics&lt;/a&gt; est un e-book orienté sur les index. Un point intéressant est qu&amp;rsquo;il mentionne aussi pourquoi le moteur n&amp;rsquo;utilise pas un index.&lt;/p&gt;&#xA;&lt;h1 id=&#34;postgresql&#34;&gt;PostgreSQL&lt;/h1&gt;&#xA;&lt;h2 id=&#34;practical-sql&#34;&gt;Practical SQL&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;figure  id=&#34;figure-practical-sql&#34;&gt;&#xA;  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;&#xA;    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;practical&#34; srcset=&#34;&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/practical_hu01f19f83ea7b9b959997133246dda201_161098_c3df0446f9f62391d13c57dd10ec2e89.webp 400w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/practical_hu01f19f83ea7b9b959997133246dda201_161098_f2aecb321cb118f7fb40dddd50422be5.webp 760w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/practical_hu01f19f83ea7b9b959997133246dda201_161098_1200x1200_fit_q75_h2_lanczos_2.webp 1200w&#34;&#xA;               src=&#34;https://blog.anayrat.info/2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/practical_hu01f19f83ea7b9b959997133246dda201_161098_c3df0446f9f62391d13c57dd10ec2e89.webp&#34;&#xA;               width=&#34;477&#34;&#xA;               height=&#34;630&#34;&#xA;               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;&#xA;  &lt;/div&gt;&lt;figcaption&gt;&#xA;      Practical SQL&#xA;    &lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Niveau : Débutant - intermédiaire&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://nostarch.com/practical-sql-2nd-edition/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Practical SQL&lt;/a&gt; est un super livre pour quelqu&amp;rsquo;un qui débute sur Postgres. Il parle d&amp;rsquo;un peu de tout, du SQL jusqu&amp;rsquo;aux types avancés. Comment utiliser le SQL pour analyser des données, faire du &lt;em&gt;full text search&lt;/em&gt;, opération d&amp;rsquo;administration&amp;hellip;&lt;/p&gt;&#xA;&lt;h2 id=&#34;postgresql---architecture-et-notions-avancées&#34;&gt;PostgreSQL - Architecture et notions avancées&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;figure  id=&#34;figure-postgresql---architecture-et-notions-avancées&#34;&gt;&#xA;  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;&#xA;    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;architecture&#34; srcset=&#34;&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/architecture_hu4e070f54fbcfe012d689b7262a78d531_408340_8da2fb9ff08beb89b92a47f2af0154cc.webp 400w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/architecture_hu4e070f54fbcfe012d689b7262a78d531_408340_504568017e4d0ef28b5f0f36871185ec.webp 760w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/architecture_hu4e070f54fbcfe012d689b7262a78d531_408340_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;&#xA;               src=&#34;https://blog.anayrat.info/2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/architecture_hu4e070f54fbcfe012d689b7262a78d531_408340_8da2fb9ff08beb89b92a47f2af0154cc.webp&#34;&#xA;               width=&#34;559&#34;&#xA;               height=&#34;760&#34;&#xA;               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;&#xA;  &lt;/div&gt;&lt;figcaption&gt;&#xA;      PostgreSQL - Architecture et notions avancées&#xA;    &lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Niveau : Intermédiaire - avancé&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.d-booker.fr/bases-de-donnees/805-1338-postgresql-architecture-et-notions-avancees-5ed.html#/21-option-consultation_en_ligne&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PostgreSQL - Architecture et notions avancées&lt;/a&gt; par Guillaume Lelarge et Julien Rouhaud est &lt;strong&gt;le&lt;/strong&gt; livre que je recommande pour qui veut comprendre comment fonctionne Postgres. Mon seul regret est qu&amp;rsquo;il ne soit pas traduit en anglais pour en faire profiter plus de lecteurs.&lt;/p&gt;&#xA;&lt;p&gt;À noter aussi qu&amp;rsquo;il est mis à jour tous les ans.&lt;/p&gt;&#xA;&lt;h2 id=&#34;learn-postgresql&#34;&gt;Learn PostgreSQL&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;figure  id=&#34;figure-learn-postgresql&#34;&gt;&#xA;  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;&#xA;    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;learn&#34; srcset=&#34;&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/learn_hu00fe0c0efabc0ae6d85710a22f715230_111765_2e08c564415b06ee6ac817f7ac0914b0.webp 400w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/learn_hu00fe0c0efabc0ae6d85710a22f715230_111765_c22b1c79c1fe1d43eb51d2ce83b5ee11.webp 760w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/learn_hu00fe0c0efabc0ae6d85710a22f715230_111765_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;&#xA;               src=&#34;https://blog.anayrat.info/2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/learn_hu00fe0c0efabc0ae6d85710a22f715230_111765_2e08c564415b06ee6ac817f7ac0914b0.webp&#34;&#xA;               width=&#34;616&#34;&#xA;               height=&#34;760&#34;&#xA;               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;&#xA;  &lt;/div&gt;&lt;figcaption&gt;&#xA;      Learn PostgreSQL&#xA;    &lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.packtpub.com/product/learn-postgresql-second-edition/9781837635641&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Learn PostgreSQL&lt;/a&gt; par Lucas Ferrari et Enrico Pirozzi est un livre très complet sur l&amp;rsquo;administration de Postgres. Un &lt;em&gt;must have&lt;/em&gt; pour un DBA.&lt;/p&gt;&#xA;&lt;p&gt;Pour les francophones, vous pouvez vous orienter vers &lt;a href=&#34;https://www.editions-eni.fr/livre/postgresql-administration-et-exploitation-de-vos-bases-de-donnees-4e-edition-9782409011467&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PostgreSQL Administration et exploitation de vos bases de données&lt;/a&gt; de Sébastien Lardière.&lt;/p&gt;&#xA;&lt;h2 id=&#34;postgresql-14-internals&#34;&gt;PostgreSQL 14 Internals&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;figure  id=&#34;figure-postgresql-14-internals&#34;&gt;&#xA;  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;&#xA;    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;internals&#34; srcset=&#34;&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/internals_hu8a8cf4e0b43f0fa4f74d2b36d2f27852_60433_8639f0d8b0e15fe8fb464f6e5412e100.webp 400w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/internals_hu8a8cf4e0b43f0fa4f74d2b36d2f27852_60433_3d76ec668fd76ab0113449dbb278d740.webp 760w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/internals_hu8a8cf4e0b43f0fa4f74d2b36d2f27852_60433_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;&#xA;               src=&#34;https://blog.anayrat.info/2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/internals_hu8a8cf4e0b43f0fa4f74d2b36d2f27852_60433_8639f0d8b0e15fe8fb464f6e5412e100.webp&#34;&#xA;               width=&#34;384&#34;&#xA;               height=&#34;552&#34;&#xA;               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;&#xA;  &lt;/div&gt;&lt;figcaption&gt;&#xA;      PostgreSQL 14 Internals&#xA;    &lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://postgrespro.com/community/books/internals&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PostgreSQL 14 Internals&lt;/a&gt; par Egor Rogov est un livre sur les entrailles de Postgres. Il est vraiment très complet. Un grand merci à lui de le mettre à disposition en accès libre.&lt;/p&gt;&#xA;&lt;p&gt;Dans le même style, il existe un site &lt;a href=&#34;https://www.interdb.jp/pg/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Internals of PostgreSQL&lt;/a&gt; par Hironobu SUZUKI.&lt;/p&gt;</summary>
    <author>
      <name>blog.anayrat.info</name>
    </author>
  </entry>
  <entry>
    <title>Postgres à nouveau élu SGBD de l&#39;année en 2023, mais je suis inquiet</title>
    <updated>2024-02-05T08:00:00Z</updated>
    <id>tag:blog.anayrat.info,2024-02-05:/2024/02/05/postgres-a-nouveau-elu-sgbd-de-lannee-en-2023-mais-je-suis-inquiet/</id>
    <link href="https://blog.anayrat.info/2024/02/05/postgres-a-nouveau-elu-sgbd-de-lannee-en-2023-mais-je-suis-inquiet/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cette année encore, Postgres a été élu SGBD de l&amp;rsquo;année par &lt;a href=&#34;https://db-engines.com/en/blog_post/106&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DB-Engines&lt;/a&gt;. Même si ce n&amp;rsquo;est qu&amp;rsquo;un classement, cela donne une tendance. Cela fait aussi plusieurs années qu&amp;rsquo;il est reconnu selon&#xA;les sondages de Stackoverflow : &lt;a href=&#34;https://survey.stackoverflow.co/2023/#section-most-popular-technologies-databases&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Most popular Databases&lt;/a&gt;.&#xA;C&amp;rsquo;est un SGBD très apprécié, tant par les développeurs, que par les DBA chevronnés&amp;hellip; Mais aussi par les directeurs qui y trouvent une stabilité&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Postgres a tout pour séduire :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Année après année, de nouvelles fonctionnalités sont rajoutées. Je pense notamment à : la parallélisation, le partitionnement, la réplication logique&amp;hellip;&lt;/li&gt;&#xA;&lt;li&gt;Il a su, depuis toujours, garder sa fiabilité.&lt;/li&gt;&#xA;&lt;li&gt;Sa communauté n&amp;rsquo;a fait que grandir. Les conférences dédiées à Postgres battent des records d&amp;rsquo;affluence tous les ans.&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;&#xA;&lt;li&gt;C&amp;rsquo;est devenu un standard, même pour les autres logiciels : les éditeurs rajoutent même le support du protocole Postgres pour faciliter leur intégration : Aurora, AlloyDB, QuestDB&amp;hellip;&lt;/li&gt;&#xA;&lt;li&gt;C&amp;rsquo;est un des rares projets de cette envergure à être communautaire. On a pu voir qu&amp;rsquo;il ne suffit pas que le projet soit opensource, il faut aussi compter sur la communauté et son écosystème.&lt;/li&gt;&#xA;&lt;li&gt;Il est supporté par les gros acteurs : les GAFAM emploient de nombreux committers et contributeurs. Ils sponsorisent également les conférences. Par exemple, le prochain &lt;a href=&#34;https://2024.pgday.paris/sponsors/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pgDay Paris est sponsorisé par Microsoft&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Cependant, je suis un peu inquiet pour le futur. Non pas pour PostgreSQL. Bruce Momjian a fait plusieurs présentations sur ce sujet :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://momjian.us/main/writings/pgsql/challenges.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Future Postgres Challenges&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://momjian.us/main/writings/pgsql/forever.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Will Postgres Live Forever?&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://momjian.us/main/writings/pgsql/past_present_future.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PostgreSQL: Past, Present, and Future&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;C&amp;rsquo;est même le sujet de la Keynote d&amp;rsquo;ouverture du dernier PGConf Europe : &lt;a href=&#34;https://www.youtube.com/watch?v=8W-J36IxYv4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Simon Riggs: The Next 20 Years (PGConf.EU 2023)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Non, je suis plutôt inquiet sur la perte de connaissance du métier de DBA.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;A quoi servira Postgres si on ne sait pas l&amp;rsquo;utiliser correctement ?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;&#xA;  &lt;summary class=&#34;font-weight-bold&#34;&gt;Table des matières&lt;/summary&gt;&#xA;  &lt;nav id=&#34;TableOfContents&#34;&gt;&#xA;  &lt;ul&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#un-peu-dhistoire&#34;&gt;Un peu d&amp;rsquo;histoire&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#quest-ce-quon-oublie-&#34;&gt;Qu&amp;rsquo;est-ce qu&amp;rsquo;on oublie ?&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#oui-mais-le-cloud&#34;&gt;Oui, mais le cloud!&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#on-oublie-le-métier-de-dba&#34;&gt;On oublie le métier de DBA&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#on-oublie-le-passé&#34;&gt;On oublie le passé&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#le-code-change-la-donnée-reste&#34;&gt;Le code change, la donnée reste&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#il-faut-quelques-minutes-pour-prendre-une-mauvaise-décision-sur-une-base-de-donnée&#34;&gt;Il faut quelques minutes pour prendre une mauvaise décision sur une base de donnée&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#lusage-du-cloud&#34;&gt;L&amp;rsquo;usage du cloud&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#ce-quil-faudrait-changer&#34;&gt;Ce qu&amp;rsquo;il faudrait changer&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#pour-conclure&#34;&gt;Pour conclure&lt;/a&gt;&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/nav&gt;&#xA;&lt;/details&gt;&#xA;&lt;h1 id=&#34;un-peu-dhistoire&#34;&gt;Un peu d&amp;rsquo;histoire&lt;/h1&gt;&#xA;&lt;p&gt;Par le passé, il y avait une spécialisation forte des compétences : développeurs, testeurs, DBA étude, DBA prod, ingénieur système, ingénieur stockage, ingénieur sauvegarde&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;Chaque spécialité évoluait un peu dans sa bulle, ce qui compliquait la collaboration avec des cycles de développement longs.&lt;/p&gt;&#xA;&lt;p&gt;Cette organisation a laissé place à une nouvelle façon de travailler : développeurs &lt;em&gt;fullstack&lt;/em&gt;, &lt;em&gt;DEVOPS/SRE&lt;/em&gt;, des data &amp;ldquo;quelque chose&amp;rdquo; (engineer, analyst, steward&amp;hellip;).&lt;/p&gt;&#xA;&lt;p&gt;Les compétences se sont diluées sur les différents métiers. Je croise de plus en plus rarement des DBA.&lt;/p&gt;&#xA;&lt;p&gt;A la place, la base de donnée est &lt;em&gt;gérée&lt;/em&gt; par les développeurs. Ou, si on a un peu de chance, par des &amp;ldquo;data engineer&amp;rdquo; ou &amp;ldquo;data analyst&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;Après plusieurs années, alors que je baigne dedans, j&amp;rsquo;ai encore du mal à définir ces métiers.&lt;/p&gt;&#xA;&lt;p&gt;Le constat : bonne connaissance du python, monte des pipelines, on assemble en quelque sorte des Legos avec pleins d&amp;rsquo;outils : airflow, dbt&amp;hellip; Puis, on envoie ces données dans du Redshift, Biquery, Snowflake&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;Cependant, j&amp;rsquo;ai l&amp;rsquo;impression que la connaissance du SQL s&amp;rsquo;appauvrit à cause des couches d&amp;rsquo;abstraction.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Du moment où on manipule de la donnée, la première des compétences à avoir, devrait être la maitrise du SQL.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;quest-ce-quon-oublie-&#34;&gt;Qu&amp;rsquo;est-ce qu&amp;rsquo;on oublie ?&lt;/h1&gt;&#xA;&lt;p&gt;J&amp;rsquo;ai le sentiment, qu&amp;rsquo;année après année, on oublie le métier de DBA.&lt;/p&gt;&#xA;&lt;p&gt;Pour rappel, ce dernier va être à la croisée de plusieurs chemins :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Il a des compétences pures sur la base de données :&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Modélisation.&lt;/li&gt;&#xA;&lt;li&gt;Maitrise du SQL.&lt;/li&gt;&#xA;&lt;li&gt;Maitrise du SGBD : connait le fonctionnement du moteur (&lt;em&gt;vacuum&lt;/em&gt;, &lt;em&gt;checkpoint&lt;/em&gt; &amp;hellip;). Comprend les mécanismes de verrouillages (&lt;em&gt;MVCC&lt;/em&gt;, &lt;em&gt;locks&lt;/em&gt;&amp;hellip;).&lt;/li&gt;&#xA;&lt;li&gt;Conserve une veille technique : le Postgres que j&amp;rsquo;ai connu à mes débuts est très loin du Postgres actuel.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Mais également des compétences plus transverses :&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Avoir une bonne connaissance système pour investiguer sur les problèmes de performance, dimensionner les ressources.&lt;/li&gt;&#xA;&lt;li&gt;Un vernis en développement pour comprendre les besoins des développeurs et pouvoir les accompagner.&lt;/li&gt;&#xA;&lt;li&gt;De la culture &amp;ldquo;computer science&amp;rdquo;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;oui-mais-le-cloud&#34;&gt;Oui, mais le cloud!&lt;/h1&gt;&#xA;&lt;p&gt;On pourrait penser que le cloud a rebattu les cartes et qu&amp;rsquo;on n&amp;rsquo;a plus besoin de DBA. Dans la liste que j&amp;rsquo;ai donnée ci-dessus, quelles compétences sont couvertes par le cloud ?&lt;/p&gt;&#xA;&lt;p&gt;Le cloud résout une partie des besoins : hébergement, maintenance, réseau, monitoring (qu&amp;rsquo;il faut souvent compléter avec un APM ou un Datadog like).&#xA;Et il rajoute d&amp;rsquo;autres problèmes :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Il faut rajouter un métier de &lt;a href=&#34;https://lota.cloud/finops-cloud-2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;FinOps&lt;/a&gt; pour maitriser et optimiser les dépenses.&lt;/li&gt;&#xA;&lt;li&gt;C&amp;rsquo;est parfois une boite noire et il peut être difficile d&amp;rsquo;investiguer sur des problèmes de performance&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Cet excellent article de Markus Winand présente aussi d&amp;rsquo;autres inconvénients : &lt;a href=&#34;https://winand.at/newsletter/2024-01/clouds-bring-rain&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sometimes Clouds Bring Rain&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Changer de cloud provider est difficile. Je dirais même que c&amp;rsquo;est volontaire de leur part.&lt;/li&gt;&#xA;&lt;li&gt;Les coûts peuvent changer &lt;em&gt;Just because it is cheap today doesn’t mean it will be cheap forever&lt;/em&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Il faut prévoir un plan de sortie : éviter les services propriétaires, conserver un faible nombre de services.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Car une fois dans le cloud, qui s&amp;rsquo;occupe de : la modélisation, l&amp;rsquo;optimisation des requêtes, l&amp;rsquo;indexation, la veille technique sur le SGBD&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;, l&amp;rsquo;investigation sur les performances, comprendre les problèmes de verrouillages, l&amp;rsquo;accompagnement des développeurs ?&lt;/p&gt;&#xA;&lt;p&gt;Ceci est confirmé dans mes audits, je vois régulièrement des problèmes très basiques :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Absence de clé primaire.&lt;/li&gt;&#xA;&lt;li&gt;Pas d&amp;rsquo;index sur des cas très simples.&lt;/li&gt;&#xA;&lt;li&gt;Aucun respect des formes normales, même les plus basiques. Le JSON n&amp;rsquo;a pas arrangé les choses.&lt;/li&gt;&#xA;&lt;li&gt;Requêtes spaghetti.&lt;/li&gt;&#xA;&lt;li&gt;Des jointures façon SQL-89 alors que ça fait plus de 30 ans que le mot clé &lt;code&gt;JOIN&lt;/code&gt; existe.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;S&amp;rsquo;il faut retenir une chose : &lt;strong&gt;Le cloud ne permet pas de s&amp;rsquo;affranchir du DBA. Ce n&amp;rsquo;est pas parce qu&amp;rsquo;on peut obtenir les clés d&amp;rsquo;un avion, qu&amp;rsquo;on sait le piloter.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Un article intéressant sur le nombre de DBA dont vous avez besoin : &lt;a href=&#34;https://www.bytebase.com/blog/how-many-dbas-should-a-company-hire/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How many DBAs should a company hire?&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;on-oublie-le-métier-de-dba&#34;&gt;On oublie le métier de DBA&lt;/h1&gt;&#xA;&lt;p&gt;On pourrait naïvement penser qu&amp;rsquo;on confie ces tâches à des DBA experts, mais j&amp;rsquo;ai de plus en plus de doutes. J&amp;rsquo;ai l&amp;rsquo;impression &amp;ldquo;qu&amp;rsquo;on&amp;rdquo; est en train de perdre la connaissance d&amp;rsquo;un métier.&#xA;J&amp;rsquo;ai déjà croisé des développeurs expérimentés qui ne savaient même pas que le métier de DBA existait.&#xA;Des recruteurs qui me demandaient si en tant que DBA, je savais optimiser des requêtes et si je connaissais le SQL. C&amp;rsquo;est mon métier ! C&amp;rsquo;est un peu comme demander à un plombier s&amp;rsquo;il sait changer un robinet !&lt;/p&gt;&#xA;&lt;p&gt;Ce qui est d&amp;rsquo;autant plus alarmant, c&amp;rsquo;est que je crains qu&amp;rsquo;il y ait aussi des CTO qui ont aussi cette méconnaissance de la donnée.&lt;/p&gt;&#xA;&lt;p&gt;La conséquence est qu&amp;rsquo;en cas de problème de performance, on ne fait qu&amp;rsquo;augmenter les ressources des instances.&#xA;Avec le cloud, la facture croît linéairement avec la taille de l&amp;rsquo;instance.&#xA;Si la croissance de la charge est exponentielle, il faudra scaler la base et la facture qui va avec. On se retrouve avec une facture exponentielle.&lt;/p&gt;&#xA;&lt;p&gt;Quand on n&amp;rsquo;arrive plus à s&amp;rsquo;en sortir, on va accuser l&amp;rsquo;outil ou le modèle, donc on va changer de SGBD ou aller vers du NoSQL. Spoiler : ça ne résoudra pas vos problèmes.&lt;/p&gt;&#xA;&lt;h1 id=&#34;on-oublie-le-passé&#34;&gt;On oublie le passé&lt;/h1&gt;&#xA;&lt;p&gt;Pendant un temps, j&amp;rsquo;ai voulu écrire un livre pour parler optimisation de requête, des erreurs courantes que je rencontre, etc.&lt;/p&gt;&#xA;&lt;p&gt;En regardant ma bibliothèque, elle est pleine de livres de ce genre. Ils ont pour la plupart entre 10 et 30 ans et le contenu est toujours d&amp;rsquo;actualité. A quoi servirait un énième livre s&amp;rsquo;il n&amp;rsquo;est pas connu ?&lt;/p&gt;&#xA;&lt;p&gt;J&amp;rsquo;ai un autre exemple en tête : les data warehouse (DWH). Ce terme devient de plus en plus galvaudé.&#xA;La construction d&amp;rsquo;un DWH est complexe, il faut passer par une phase de modélisation afin de stocker correctement les données. Cela permet de bonnes performances et facilite l&amp;rsquo;écriture&#xA;des requêtes analytiques.&lt;/p&gt;&#xA;&lt;p&gt;Maintenant, je croise régulièrement des &amp;ldquo;data warehouse&amp;rdquo; qui se résument à envoyer toutes les données dans un SGBD spécialisé (redshift, biquery &amp;hellip;). Sans travail de modélisation et avec des requêtes très mal écrites, parfois générées, car les utilisateurs ne savent pas faire du SQL.&lt;/p&gt;&#xA;&lt;p&gt;Ces services coûtent très cher et ne font pas de miracle s&amp;rsquo;il n&amp;rsquo;y a pas eu un travail approfondi de modélisation et d&amp;rsquo;optimisation.&lt;/p&gt;&#xA;&lt;p&gt;Pourtant, les livres sur les DWH et le SQL ont entre 10 et 30 ans. A cette époque, le cloud n&amp;rsquo;existait pas, les SSD non plus, les CPU avec plusieurs coeurs non plus.&#xA;Pourtant, on savait construire des DWH, faire des sites performants&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Il ne faudrait pas que le cloud nous fasse oublier tout cet héritage. Sinon, on risque de payer la dette technique et la perte de connaissance très cher, avec les intérêts en plus.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Il faut avoir en tête que même si le SQL a évolué, les SGBD gagnés en fonctionnalités, &lt;strong&gt;les principes fondateurs sont toujours justes&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;le-code-change-la-donnée-reste&#34;&gt;Le code change, la donnée reste&lt;/h1&gt;&#xA;&lt;p&gt;J&amp;rsquo;ai eu un super manager, ancien DBA, qui expliquait aux développeurs : tu n&amp;rsquo;es pas ici pour &amp;ldquo;produire du code&amp;rdquo; =&amp;gt; yeux écarquillés du développeur.&#xA;&amp;ldquo;tu es là pour produire et manipuler de la donnée.&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;Lorsqu&amp;rsquo;il y avait une décision compliquée. Par exemple, prendre plus de temps pour revoir le code applicatif, faire une migration plus compliquée, plutôt qu&amp;rsquo;une solution&#xA;&amp;ldquo;quick win&amp;rdquo;. Ce même manager expliquait :&amp;quot;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;D&amp;rsquo;ici 5-10 ans, ton code aura été réécrit plusieurs fois, peut-être même dans un autre langage.&#xA;Nous, la donnée, dans 50 ans, elle sera toujours là. C&amp;rsquo;est notre devoir de nous assurer qu&amp;rsquo;elle sera toujours exploitable.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;il-faut-quelques-minutes-pour-prendre-une-mauvaise-décision-sur-une-base-de-donnée&#34;&gt;Il faut quelques minutes pour prendre une mauvaise décision sur une base de donnée&lt;/h1&gt;&#xA;&lt;p&gt;&lt;em&gt;Et parfois plusieurs mois / années pour la corriger.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Il m&amp;rsquo;est arrivé de faire des audits où le modèle était catastrophique. Il avait évolué de solutions à court terme en d&amp;rsquo;autres solutions à court terme.&#xA;&amp;ldquo;On corrigera plus tard, il faut faire passer cette fonctionnalité dans le sprint&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;Un DBA peut corriger le modèle de données à coup de grosses migrations (encore faut-il avoir un DBA, difficile si on ignore que ce métier existe&amp;hellip;).&#xA;Au-delà de ça, le problème va se poser autour : il faut réécrire une grosse partie du code applicatif (qui est souvent dans le même état que la base).&lt;/p&gt;&#xA;&lt;p&gt;Parfois, la complexité est quadratique ou exponentielle. Il vaut mieux tout jeter pour tout recommencer.&lt;/p&gt;&#xA;&lt;p&gt;On se retrouve face à plusieurs dilemmes :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Augmenter la taille des instances.&lt;/li&gt;&#xA;&lt;li&gt;Parfois, cette solution n&amp;rsquo;est pas suffisante. J&amp;rsquo;explique : &amp;ldquo;là, vous pouvez faire encore fois dix sur la taille de l&amp;rsquo;instance, mais vous ne pourrez jouer cette carte qu&amp;rsquo;une fois&amp;rdquo;. Notez que cette solution est inutile si le traitement ne peut pas être parallélisé.&lt;/li&gt;&#xA;&lt;li&gt;Tout jeter pour tout recommencer. Là aussi, le coût ou la perte peut être démentielle.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Alors qu&amp;rsquo;il aurait suffi des conseils d&amp;rsquo;un DBA à quelques moments de la vie du projet pour éviter de partir dans une mauvaise direction.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;On ne bâtit pas un château sur du sable&lt;/strong&gt;. J&amp;rsquo;ai une anecdote en tête, une personne de mon entourage m&amp;rsquo;a raconté une histoire d&amp;rsquo;un bâtiment qui avait été contrôlé au moment de la livraison :&lt;/p&gt;&#xA;&lt;p&gt;Un prélèvement avait été fait dans les murs et il n&amp;rsquo;y avait pas assez de ciment, le bâtiment, &lt;strong&gt;neuf&lt;/strong&gt;, pouvait s&amp;rsquo;écrouler. Il venait d&amp;rsquo;être totalement terminé, électricité, plomberie, menuiseries&amp;hellip; Tout était terminé.&#xA;Il a dû être rasé complètement. Autant il existe des assurances dans le bâtiment, mais pas pour le développement&amp;hellip;&#xA;Je pense que certaines sociétés ne survivent pas si la dette technique est trop importante.&lt;/p&gt;&#xA;&lt;h1 id=&#34;lusage-du-cloud&#34;&gt;L&amp;rsquo;usage du cloud&lt;/h1&gt;&#xA;&lt;p&gt;Le cloud a de nombreux avantages :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;On peut rapidement obtenir des bases de données avec une installation relativement propre.&lt;/li&gt;&#xA;&lt;li&gt;Le cloud provider vous obligera à rester sur des versions supportées.&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;Écologiquement&amp;rdquo;, cela permet de mutualiser des ressources physiques. Mais c&amp;rsquo;est aussi une faiblesse. L&amp;rsquo;accès facile à ces ressources peut aussi entrainer un gaspillage. On peut facilement déployer&#xA;une centaine d&amp;rsquo;instances. Là, où avec une infrastructure &lt;em&gt;on-premise&lt;/em&gt;, il faut concilier avec les ressources physiques à disposition : puissance des serveurs, puissance électrique, espace dans les baies&amp;hellip;&lt;/li&gt;&#xA;&lt;li&gt;On paye ce qu&amp;rsquo;on consomme. On peut facilement identifier combien coute un service. Qu&amp;rsquo;une requête est responsable de 80% de la facture. Ce qui peut inciter à l&amp;rsquo;optimiser, le gain financier est immédiat. Encore faut-il qu&amp;rsquo;il y ait des personnes qui s&amp;rsquo;y intéressent.&#xA;Je n&amp;rsquo;ai pas l&amp;rsquo;impression qu&amp;rsquo;il y ait beaucoup de FinOps. S&amp;rsquo;il y en a, est-ce que ces derniers pensent à optimiser la base ?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Mais il y a aussi de vrais inconvénients :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Perte de souveraineté numérique. A cela s&amp;rsquo;ajoute des risques juridiques. Comment garantir que vos données ne sont pas stockées ailleurs ? Si vous avez choisi un service managé, comment en sortir si la législation vous impose d&amp;rsquo;être sur le sol Français ou d&amp;rsquo;un autre pays ?&lt;/li&gt;&#xA;&lt;li&gt;Perte de compétences.&lt;/li&gt;&#xA;&lt;li&gt;Dépendance à un cloud provider : encore que sur ce point, on voit émerger de nouvelles offres &amp;ldquo;cloud agnostique&amp;rdquo; : Des sociétés créent un cloud par-dessus un autre cloud.&#xA;Je pense notamment à &lt;a href=&#34;https://aiven.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Aiven&lt;/a&gt;, &lt;a href=&#34;https://www.enterprisedb.com/docs/biganimal/latest/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;EDB BigAnimal&lt;/a&gt;, &lt;a href=&#34;https://www.crunchydata.com/products/crunchy-bridge&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Crunchy Bridge&lt;/a&gt; et j&amp;rsquo;en oublie certainement&amp;hellip;&lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;&#xA;&lt;li&gt;Les couts décollent quand l&amp;rsquo;infrastructure est importante. Certains commencent à quitter le cloud. Je pense notamment à Basecamp :&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://world.hey.com/dhh/why-we-re-leaving-the-cloud-654b47e0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Why we&amp;rsquo;re leaving the cloud&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://world.hey.com/dhh/we-stand-to-save-7m-over-five-years-from-our-cloud-exit-53996caa&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;We stand to save $7m over five years from our cloud exit&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://world.hey.com/dhh/the-big-cloud-exit-faq-20274010&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Big Cloud Exit FAQ&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;ce-quil-faudrait-changer&#34;&gt;Ce qu&amp;rsquo;il faudrait changer&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Redonner de la valeur à la donnée : des sociétés rechignent à faire appel à des DBA ou prendre des contrats de supports sur leur base. Quel est le cout d&amp;rsquo;une indisponibilité de service, d&amp;rsquo;une corruption de donnée, d&amp;rsquo;une perte de la base ?&lt;/li&gt;&#xA;&lt;li&gt;Réinvestir le champ des compétences en base de donnée : SQL, modélisation&lt;sup id=&#34;fnref:6&#34;&gt;&lt;a href=&#34;#fn:6&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;. A ce sujet, j&amp;rsquo;aime beaucoup le titre de Markus Winand : &lt;a href=&#34;https://winand.at/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SQL Renaissance Ambassador&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;S&amp;rsquo;attarder un peu plus sur l&amp;rsquo;usage des ressources : la consommation du numérique est importante, si les serveurs et l&amp;rsquo;électricité étaient plus chers, on serait contraint d&amp;rsquo;optimiser.&lt;/li&gt;&#xA;&lt;li&gt;Surveiller les dépenses sur les bases. Que ça soit dans le cloud, mais également on-premise. Pour cela, il faut avoir des indicateurs de couts.&lt;/li&gt;&#xA;&lt;li&gt;Penser pas à faire appel à des DBA pour anticiper les problèmes et investiguer sur les problèmes de performance : J&amp;rsquo;ai audité des bases dans un état catastrophique, ça aurait pu être évité si un DBA était intervenu dans la phase de modélisation. Sur les problèmes de performance, il m&amp;rsquo;est déjà arrivé de diviser des factures de cloud par 10 ou de baisser la charge moyenne de 80% à 5% avec un suivi régulier.&lt;/li&gt;&#xA;&lt;li&gt;Il ne faut pas se résigner à payer de grosses factures cloud plutôt que d&amp;rsquo;investir dans de la compétence de DBA.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;pour-conclure&#34;&gt;Pour conclure&lt;/h1&gt;&#xA;&lt;p&gt;C&amp;rsquo;est un article moins technique par rapport à ce que vous avez l&amp;rsquo;habitude de lire sur mon blog.&#xA;Cependant, c&amp;rsquo;est un des plus importants que j&amp;rsquo;ai été amené à écrire.&#xA;Ca fait plus de dix ans que je fais du Postgres et je réalise que la tendance ne va pas dans la bonne direction.&#xA;J&amp;rsquo;espère qu&amp;rsquo;il y aura une prise de conscience pour un avenir plus durable des bases de données.&lt;/p&gt;&#xA;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;&#xA;&lt;hr&gt;&#xA;&lt;ol&gt;&#xA;&lt;li id=&#34;fn:1&#34;&gt;&#xA;&lt;p&gt;Ainsi que dans le public, il est dans le &lt;a href=&#34;https://code.gouv.fr/data/sill.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Socle interministériel de logiciels libres&lt;/a&gt;.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li id=&#34;fn:2&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/pgconfeu/status/1734860251390750980&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;720 personnes à la PGEurope 2023&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li id=&#34;fn:3&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.datadoghq.com/blog/aws-ebs-latency-and-iops-the-surprising-truth/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AWS EBS latency and IOPS: The surprising truth&lt;/a&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Ultimately, due to AWS’ opacity, there is simply no way to know how much throughput (from the physical disks and from the network that sits in-between) to expect for a given EBS volume. Provisioned IOPS only offer a partial solution to this issue, at a higher hourly cost.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li id=&#34;fn:4&#34;&gt;&#xA;&lt;p&gt;Le Postgres actuel est très loin du Postgres avec lequel j&amp;rsquo;ai débuté :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Nouvelles fonctionnalités liées au standard SQL : JSONPath par exemple. &lt;a href=&#34;https://winand.at/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Markus Winand&lt;/a&gt; est l&amp;rsquo;auteur d&amp;rsquo;un super site à ce sujet: &lt;a href=&#34;https://modern-sql.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Modern SQL&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Nouvelles fonctionnalités sur le moteur : parallélisme, partitionnement, nouveaux noeuds d&amp;rsquo;exécution, réplication logique&amp;hellip;&lt;/li&gt;&#xA;&lt;li&gt;La conséquence est un nombre de paramètres qui augmente au fur et à mesure.&lt;/li&gt;&#xA;&lt;li&gt;De nouvelles extensions.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li id=&#34;fn:5&#34;&gt;&#xA;&lt;p&gt;Je n&amp;rsquo;ai pas travaillé avec ces offres, je n&amp;rsquo;ai pas de recul dessus. On peut néanmoins souligner que ces sociétés emploient des développeurs qui contribuent à Postgres.&amp;#160;&lt;a href=&#34;#fnref:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li id=&#34;fn:6&#34;&gt;&#xA;&lt;p&gt;Il y a quelques années, un article était tiré d&amp;rsquo;une conférence.&lt;/p&gt;&#xA;&lt;p&gt;Le titre est particulièrement juste : &lt;a href=&#34;https://www.citusdata.com/blog/2018/03/19/postgres-database-constraints&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Database constraints in Postgres: The last line of defense&lt;/a&gt;.&#xA;Voici la vidéo de la conférence : &lt;a href=&#34;https://www.youtube.com/watch?v=hWh8QoV8z8k&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Constraints: a Developer&amp;rsquo;s Secret Weapon - Will Leinweber&lt;/a&gt;&#xA;et ses &lt;a href=&#34;https://www.postgresql.eu/events/pgdayparis2018/sessions/session/1835/slides/70/2018-03-15%20constraints%20a%20developers%20secret%20weapon%20pgday%20paris.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;slides&lt;/a&gt;.&amp;#160;&lt;a href=&#34;#fnref:6&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;</summary>
    <author>
      <name>blog.anayrat.info</name>
    </author>
  </entry>
  <entry>
    <title>Optimisation du GROUP BY</title>
    <updated>2024-01-26T09:00:00Z</updated>
    <id>tag:blog.anayrat.info,2024-01-26:/2024/01/26/optimisation-du-group-by/</id>
    <link href="https://blog.anayrat.info/2024/01/26/optimisation-du-group-by/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Un commit a attiré mon attention lors de ma veille technique :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;commit 0452b461bc405e6d35d8a14c02813c15e28ae516&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Author:     Alexander Korotkov &amp;lt;akorotkov@postgresql.org&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;AuthorDate: Sun Jan 21 22:21:36 2024 +0200&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Commit:     Alexander Korotkov &amp;lt;akorotkov@postgresql.org&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CommitDate: Sun Jan 21 22:21:36 2024 +0200&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Explore alternative orderings of group-by pathkeys during optimization.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    When evaluating a query with a multi-column GROUP BY clause, we can minimize&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    sort operations or avoid them if we synchronize the order of GROUP BY clauses&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    with the ORDER BY sort clause or sort order, which comes from the underlying&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    query tree. Grouping does not imply any ordering, so we can compare&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    the keys in arbitrary order, and a Hash Agg leverages this. But for Group Agg,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    we simply compared keys in the order specified in the query. This commit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    explores alternative ordering of the keys, trying to find a cheaper one.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    The ordering of group keys may interact with other parts of the query, some of&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    which may not be known while planning the grouping. For example, there may be&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    an explicit ORDER BY clause or some other ordering-dependent operation higher up&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    in the query, and using the same ordering may allow using either incremental&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    sort or even eliminating the sort entirely.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    The patch always keeps the ordering specified in the query, assuming the user&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    might have additional insights.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    This introduces a new GUC enable_group_by_reordering so that the optimization&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    may be disabled if needed.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Discussion: https://postgr.es/m/7c79e6a5-8597-74e8-0671-1c39d124c9d6%40sigaev.ru&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Author: Andrei Lepikhov, Teodor Sigaev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Reviewed-by: Tomas Vondra, Claudio Freire, Gavin Flower, Dmitry Dolgov&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Reviewed-by: Robert Haas, Pavel Borisov, David Rowley, Zhihong Yu&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Reviewed-by: Tom Lane, Alexander Korotkov, Richard Guo, Alena Rybakina&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;On remarque le message du commit assez explicite en mentionnant les personnes impliquées (12 relecteurs!) ainsi que le lien vers la discussion :&#xA;&lt;a href=&#34;https://www.postgresql.org/message-id/flat/7c79e6a5-8597-74e8-0671-1c39d124c9d6%40sigaev.ru&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;POC: GROUP BY optimization&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Les travaux ont commencé en 2018! Il aura fallu 5 ans et demi pour aboutir à ce commit. C&amp;rsquo;est le fruit de nombreux échanges afin de parvenir à un consensus en prenant en compte les multiples idées.&lt;/p&gt;&#xA;&lt;p&gt;Pour tester ce patch, j&amp;rsquo;ai compilé Postgres depuis les sources. Prenons un exemple tout simple :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;insert&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;into&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;generate_series&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_000_000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;vacuum&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;analyze&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;On obtient une table de 422Mo et un index de 66Mo.&#xA;Vous noterez au passage que j&amp;rsquo;ai utilisé une nouveauté de Postgres 16 en utilisant des &amp;ldquo;underscore&amp;rdquo; dans le &lt;em&gt;generate_series&lt;/em&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Si on fait un &lt;code&gt;GROUP BY&lt;/code&gt; sur &lt;em&gt;c1,c2&lt;/em&gt;, on obtient un parcours d&amp;rsquo;index :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;explain (settings, analyze,buffers) select count(*),c1,c2 from t1 group by c1,c2 order by c1,c2;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                                                    QUERY PLAN&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; GroupAggregate  (cost=0.43..235342.27 rows=100000 width=16) (actual time=3.605..3501.887 rows=1000 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Group Key: c1, c2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Buffers: shared hit=10447&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   -&amp;gt;  Index Only Scan using t1_c1_c2_idx on t1  (cost=0.43..159340.96 rows=10000175 width=8) (actual time=0.070..1900.730 rows=10000000 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Heap Fetches: 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Buffers: shared hit=10447&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Settings: enable_group_by_reordering = &amp;#39;off&amp;#39;, random_page_cost = &amp;#39;1.1&amp;#39;, max_parallel_workers_per_gather = &amp;#39;0&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Planning:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Buffers: shared hit=1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Planning Time: 0.191 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Execution Time: 3502.036 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Vous remarquerez que j&amp;rsquo;ai volontairement désactivé la fonctionnalité dans un premier temps (enable_group_by_reordering=off). J&amp;rsquo;ai également désactivé la parallélisation pour plus de clarté.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;On a le plan attendu, le moteur va lire 10447 blocs avec un parcours &lt;em&gt;Index Only Scan&lt;/em&gt;. Le moteur va chercher le plan qui manipule le moins de blocs possible.&lt;/p&gt;&#xA;&lt;p&gt;En revanche, si on change l&amp;rsquo;ordre du group by :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;explain (settings, analyze,buffers) select count(*),c1,c2 from t1 group by c2,c1 order by c1,c2;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                                          QUERY PLAN&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;------------------------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Sort  (cost=602422.32..602672.32 rows=100000 width=16) (actual time=5393.446..5393.503 rows=1000 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Sort Key: c1, c2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Sort Method: quicksort  Memory: 79kB&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Buffers: shared hit=96 read=53959&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   -&amp;gt;  HashAggregate  (cost=514992.50..594117.50 rows=100000 width=16) (actual time=5392.351..5392.894 rows=1000 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Group Key: c2, c1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Batches: 1  Memory Usage: 3217kB&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Buffers: shared hit=96 read=53959&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         -&amp;gt;  Seq Scan on t1  (cost=0.00..154055.00 rows=10000000 width=8) (actual time=0.033..1186.171 rows=10000000 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               Buffers: shared hit=96 read=53959&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Settings: enable_group_by_reordering = &amp;#39;off&amp;#39;, random_page_cost = &amp;#39;1.1&amp;#39;, max_parallel_workers_per_gather = &amp;#39;0&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Planning:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Buffers: shared hit=1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Planning Time: 0.189 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Execution Time: 5394.566 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dans ce cas, le moteur va lire toute la table (&lt;em&gt;seqscan&lt;/em&gt;) et faire un tri, alors que le résultat est identique.&lt;/p&gt;&#xA;&lt;p&gt;Le moteur lit 422Mo de données contre 80Mo, soit 5 fois plus. Le résultat peut être désastreux suivant les performances du stockage.&#xA;Là, on a de la &amp;ldquo;chance&amp;rdquo;, mon instance est dans un ramdisk donc la requête n&amp;rsquo;est pas beaucoup plus lente.&#xA;Avec du stockage mécanique ou des disques cloud, le temps de réponse peut augmenter drastiquement.&lt;/p&gt;&#xA;&lt;p&gt;L&amp;rsquo;ordre des colonnes dans un group by est important, c&amp;rsquo;est une optimisation assez simple pour peu qu&amp;rsquo;on connaisse le schéma de la base et qu&amp;rsquo;on maitrise les requêtes exécutées sur le serveur.&lt;/p&gt;&#xA;&lt;p&gt;Malheureusement, avec les ORM, on peut perdre cette maitrise ou rater des corrections.&#xA;C&amp;rsquo;est là où cette fonctionnalité est intéressante. Voyons son effet :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;postgres=# set enable_group_by_reordering to on;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SET&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;postgres=# explain (settings, analyze,buffers) select count(*),c1,c2 from t1 group by c2,c1 order by c1,c2;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                                                    QUERY PLAN&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; GroupAggregate  (cost=0.43..235338.33 rows=100000 width=16) (actual time=4.502..3658.168 rows=1000 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Group Key: c1, c2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Buffers: shared hit=10447&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   -&amp;gt;  Index Only Scan using t1_c1_c2_idx on t1  (cost=0.43..159338.33 rows=10000000 width=8) (actual time=0.081..1923.553 rows=10000000 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Heap Fetches: 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Buffers: shared hit=10447&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Settings: random_page_cost = &amp;#39;1.1&amp;#39;, max_parallel_workers_per_gather = &amp;#39;0&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Planning:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Buffers: shared hit=1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Planning Time: 0.230 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Execution Time: 3658.337 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;On retrouve le premier plan bien plus performant.&lt;/p&gt;&#xA;&lt;p&gt;C&amp;rsquo;est une fonctionnalité assez simple qui devrait améliorer les temps d&amp;rsquo;exécutions de certaines requêtes dont la clause group by n&amp;rsquo;a pas été optimisée.&lt;/p&gt;&#xA;&lt;p&gt;C&amp;rsquo;est une demande assez récurrente d&amp;rsquo;améliorer le planificateur afin de gérer des cas en apparence simple. Il faut avoir en tête que le risque est de d&amp;rsquo;augmenter&#xA;les opérations de calculs dans le planificateur. Or, on veut que cette étape soit la plus rapide possible La réponse est souvent résumée à : &amp;ldquo;on ne veut pas alourdir le planificateur alors qu&amp;rsquo;on peut corriger la requête&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;Cependant, ce type d&amp;rsquo;optimisation peut être acceptée si on sait que ça ne sera pas couteux pour le planificateur.&lt;/p&gt;&#xA;&lt;p&gt;Il n&amp;rsquo;y a plus qu&amp;rsquo;à espérer que cette fonctionnalité ne soit pas retirée d&amp;rsquo;ici la sortie de Postgres 17 :)&lt;/p&gt;&#xA;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;&#xA;&lt;hr&gt;&#xA;&lt;ol&gt;&#xA;&lt;li id=&#34;fn:1&#34;&gt;&#xA;&lt;p&gt;Petite anecdote, pour ajouter cette fonctionnalité, l&amp;rsquo;auteur a fait évoluer le standard SQL : &lt;a href=&#34;http://peter.eisentraut.org/blog/2023/09/20/grouping-digits-in-sql&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Grouping digits in SQL&lt;/a&gt; .&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;</summary>
    <author>
      <name>blog.anayrat.info</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL compression du TOAST et toast_tuple_target</title>
    <updated>2022-02-14T07:00:00Z</updated>
    <id>tag:blog.anayrat.info,2022-02-14:/2022/02/14/postgresql-compression-du-toast-et-toast_tuple_target/</id>
    <link href="https://blog.anayrat.info/2022/02/14/postgresql-compression-du-toast-et-toast_tuple_target/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Quelques rappels sur le TOAST et présentation d&amp;rsquo;un changement apparu avec PostgreSQL 11.&lt;/p&gt;&#xA;&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;&#xA;  &lt;summary class=&#34;font-weight-bold&#34;&gt;Table des matières&lt;/summary&gt;&#xA;  &lt;nav id=&#34;TableOfContents&#34;&gt;&#xA;  &lt;ul&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#quest-ce-que-le-toast-&#34;&gt;Qu&amp;rsquo;est-ce que le TOAST ?&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#exemple-avec-le-jsonb&#34;&gt;Exemple avec le JSONB&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#paramétrage-avancé&#34;&gt;Paramétrage avancé&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#bonus&#34;&gt;Bonus&lt;/a&gt;&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/nav&gt;&#xA;&lt;/details&gt;&#xA;&lt;h1 id=&#34;quest-ce-que-le-toast-&#34;&gt;Qu&amp;rsquo;est-ce que le TOAST ?&lt;/h1&gt;&#xA;&lt;p&gt;Vous êtes-vous déjà posé la question sur comment Postgres fait pour stocker des lignes dépassant la taille d&amp;rsquo;un bloc? Pour rappel, la taille par défaut d&amp;rsquo;un bloc est de 8Ko.&lt;/p&gt;&#xA;&lt;p&gt;Postgres utilise un mécanisme appelé TOAST pour &lt;a href=&#34;https://www.postgresql.org/docs/current/storage-toast.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Oversized-Attribute Storage Technique&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Lorsqu&amp;rsquo;un enregistrement devient trop gros pour être stocké dans un bloc, le moteur va le stocker &amp;ldquo;à part&amp;rdquo;, dans une table de toast.&#xA;L&amp;rsquo;enregistrement sera découpé en &lt;em&gt;chunks&lt;/em&gt;, ainsi la table principale (appelée &lt;em&gt;heap&lt;/em&gt;) contiendra un pointeur (&lt;em&gt;chunk_id&lt;/em&gt;) pointant vers le bon &lt;em&gt;chunk&lt;/em&gt; dans la table de toast.&lt;/p&gt;&#xA;&lt;p&gt;Ce &lt;em&gt;chunk&lt;/em&gt; sera stocké sur plusieurs lignes, pour un &lt;em&gt;chunk_id&lt;/em&gt; on peut avoir plusieurs lignes dans cette table de toast.&#xA;Ainsi, cette table de toast est composée de 3 colonnes:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;chunk_id&lt;/em&gt; : Numéro du chunk référencé dans la heap&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;chunk_seq&lt;/em&gt; : Numéro de chaque segment d&amp;rsquo;un chunk&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;chunk_data&lt;/em&gt; : Partie données de chaque segment&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;La réalité est un peu plus complexe, en vrai le moteur va tenter d&amp;rsquo;éviter de stocker la donnée dans la table toast.&#xA;Si la ligne dépasse &lt;code&gt;TOAST_TUPLE_THRESHOLD&lt;/code&gt; (2Ko), il va tenter de compresser les colonnes pour essayer de faire rentrer la ligne dans le bloc.&#xA;Plus précisément, il faut que la taille soit inférieure à &lt;code&gt;TOAST_TUPLE_TARGET&lt;/code&gt; (2Ko par défaut, on va en reparler).&lt;/p&gt;&#xA;&lt;p&gt;Si on a de la chance, la ligne compressée rentre dans la heap. Sinon, il va tenter de compresser les colonnes,&#xA;de la plus grande à la plus petite et les stocker dans la partie toast jusqu&amp;rsquo;à ce que les colonnes restantes rentrent dans une ligne de la heap. &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;&lt;p&gt;A noter également que si le gain en compression est trop faible, il considère qu&amp;rsquo;il est inutile de dépenser&#xA;de la ressource de calcul à tenter de compresser. Il stocke donc la donnée sans compression. &lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;&lt;p&gt;Avez-vous déjà prêté attention à la colonne &amp;ldquo;Storage&amp;rdquo; lorsque vous affichez les caractéristiques d&amp;rsquo;une table à l&amp;rsquo;aide de la méta commande &lt;code&gt;\d+ table&lt;/code&gt; ?&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;stackoverflow=# \d+ posts&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                   Table &amp;#34;public.posts&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Column     |  Type   | Collation | Nullable | Default | Storage  |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---------------+---------+-----------+----------+---------+----------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; id            | integer |           | not null |         | plain    |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; posttypeid    | integer |           | not null |         | plain    |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; score         | integer |           |          |         | plain    |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; viewcount     | integer |           |          |         | plain    |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; body          | text    |           |          |         | extended |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dans cet exemple, la colonne prend comme valeur &lt;em&gt;plain&lt;/em&gt; ou &lt;em&gt;extended&lt;/em&gt;. En réalité, il existe 4 valeurs possibles selon le type de donnée :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;plain&lt;/em&gt; : la colonne est stockée dans la heap uniquement et sans compression.&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;extended&lt;/em&gt; : la colonne peut être compressée et stockée dans le toast si nécessaire.&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;external&lt;/em&gt; : la colonne peut être stockée dans le toast mais uniquement sans compression. Parfois on peut utiliser ce mode pour avoir un gain en performance (évite la compression/décompression)&#xA;au prix d&amp;rsquo;une consommation plus importante de l&amp;rsquo;espace disque.&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;main&lt;/em&gt; : La colonne est stockée dans la heap uniquement mais contrairement au mode &lt;em&gt;plain&lt;/em&gt;, on autorise la compression.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Au premier abord, on peut penser que l&amp;rsquo;intérêt est surtout sur la possibilité de stocker&#xA;des lignes dépassant la taille d&amp;rsquo;un bloc et de compresser la donnée pour gagner de l&amp;rsquo;espace disque.&lt;/p&gt;&#xA;&lt;p&gt;Il y a un autre intérêt : lors d&amp;rsquo;une mise à jour d&amp;rsquo;une ligne, si les colonnes &amp;ldquo;toastées&amp;rdquo; ne sont pas modifiées, le moteur n&amp;rsquo;a pas besoin de modifier la table toast.&#xA;On va ainsi éviter de devoir décompresser et recompresser le toast et écrire tout ça dans des journaux de transaction.&lt;/p&gt;&#xA;&lt;p&gt;Nous allons voir qu&amp;rsquo;un autre avantage est que le moteur peut éviter de lire le toast si ce n&amp;rsquo;est pas nécessaire.&lt;/p&gt;&#xA;&lt;h1 id=&#34;exemple-avec-le-jsonb&#34;&gt;Exemple avec le JSONB&lt;/h1&gt;&#xA;&lt;p&gt;Pour étudier ça, on va utiliser le type JSONB. De manière générale, je déconseille l&amp;rsquo;usage de ce type :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;On perd les avantages d&amp;rsquo;avoir un schéma :&#xA;&lt;ul&gt;&#xA;&lt;li&gt;vérification des types&lt;/li&gt;&#xA;&lt;li&gt;contraintes d&amp;rsquo;intégrité&lt;/li&gt;&#xA;&lt;li&gt;pas de clés étrangères&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;L&amp;rsquo;écriture des requêtes devient plus complexe&lt;/li&gt;&#xA;&lt;li&gt;Absence des statistiques sur les clés d&amp;rsquo;un champ json&lt;/li&gt;&#xA;&lt;li&gt;Perte d&amp;rsquo;efficacité du stockage vu qu&amp;rsquo;on stocke les clés pour chaque ligne&lt;/li&gt;&#xA;&lt;li&gt;Pas de mise à jour partielle du JSONB. Si on modifie une clé on est obligé de &lt;em&gt;detoaster&lt;/em&gt; et &lt;em&gt;toaster&lt;/em&gt; tout le JSONB&lt;/li&gt;&#xA;&lt;li&gt;Pas de &lt;em&gt;detoast&lt;/em&gt; partiel : si on souhaite lire une seule clé du JSONB, on est contraint de &lt;em&gt;detoaster&lt;/em&gt; tout le JSONB &lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Cependant, il y a quelques exceptions où le JSON peut être utile :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Lorsqu&amp;rsquo;on n&amp;rsquo;a pas besoin de chercher dans de multiples champs et qu&amp;rsquo;on récupère le json via une autre colonne. (Statistiques sur les clés du json inutiles).&lt;/li&gt;&#xA;&lt;li&gt;Et, lorsqu&amp;rsquo;il serait très difficile de faire rentrer le json dans un schéma relationnel. Certains cas impliqueraient d&amp;rsquo;avoir énormément de colonnes et la plupart à &lt;code&gt;NULL&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Par exemple, pour stocker des caractéristiques de produit où une version normalisée entrainerait l&amp;rsquo;usage de beaucoup de colonnes dont la plupart seraient à &lt;code&gt;NULL&lt;/code&gt;.&#xA;Imaginons que vous stockez des produits, une télévision aurait des caractéristiques spécifiques (type d&amp;rsquo;écran, taille etc). Une machine à laver aurait aussi d&amp;rsquo;autre caractéristiques spécifiques (vitesse essorage, poids accepté&amp;hellip;).&lt;/p&gt;&#xA;&lt;p&gt;On pourrait ainsi envisager d&amp;rsquo;avoir des colonnes &amp;ldquo;normales&amp;rdquo; comprenant le modèle, son prix, sa référence etc, et une colonne contenant toutes les caractéristiques.&#xA;On accèderait à la ligne via la référence et ainsi on récupèrerait toutes les caractéristiques du produit stockées dans le json.&lt;/p&gt;&#xA;&lt;p&gt;Je vais réutiliser la table des posts de Stackoverflow en déplaçant quelques colonnes dans une colonne de type jsonb (colonne &lt;em&gt;jsonfield&lt;/em&gt; dans cet exemple):&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;\d posts&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            Unlogged table &amp;#34;public.posts&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        Column         |            Type             | Collation | Nullable | Default&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-----------------------+-----------------------------+-----------+----------+---------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; id                    | integer                     |           | not null |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; posttypeid            | integer                     |           | not null |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; acceptedanswerid      | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; parentid              | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; creationdate          | timestamp without time zone |           | not null |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; score                 | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; viewcount             | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; body                  | text                        |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; owneruserid           | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; lasteditoruserid      | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; lasteditordisplayname | text                        |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; lasteditdate          | timestamp without time zone |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; lastactivitydate      | timestamp without time zone |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; title                 | text                        |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; tags                  | text                        |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; answercount           | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; commentcount          | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; favoritecount         | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; closeddate            | timestamp without time zone |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; communityowneddate    | timestamp without time zone |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; jsonfield             | jsonb                       |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Voici une requête toute simple d&amp;rsquo;agrégation :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;viewcount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;answercount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commentcount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;favoritecount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;posts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                                          QUERY PLAN&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-------------------------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Aggregate  (cost=10265135.77..10265135.78 rows=1 width=128) (actual time=170221.557..170221.558 rows=1 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Buffers: shared hit=1 read=9186137&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   I/O Timings: read=138022.290&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   -&amp;gt;  Seq Scan on posts  (cost=0.00..9725636.88 rows=53949888 width=16) (actual time=0.014..153665.913 rows=53949886 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Buffers: shared hit=1 read=9186137&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         I/O Timings: read=138022.290&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Planning Time: 0.240 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Execution Time: 170221.627 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(8 rows)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;La requête lit 70 Go de données et met environ 2min 50s à s&amp;rsquo;exécuter.&lt;/p&gt;&#xA;&lt;p&gt;Maintenant la même requête, mais cette fois en utilisant les clés présentes dans le json.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jsonfield&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ViewCount&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jsonfield&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;AnswerCount&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jsonfield&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;CommentCount&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jsonfield&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;FavoriteCount&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;posts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                           QUERY PLAN&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Aggregate  (cost=11883632.41..11883632.42 rows=1 width=128)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            (actual time=520917.028..520917.030 rows=1 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Buffers: shared hit=241116554 read=13625756&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   -&amp;gt;  Seq Scan on posts  (cost=0.00..9725636.88 rows=53949888 width=570)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                          (actual time=0.972..70569.365 rows=53949886 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Buffers: shared read=9186138&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Planning Time: 0.118 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Execution Time: 520945.395 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(10 rows)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;La requête met environ 8min 40s à s&amp;rsquo;exécuter. En revanche le nombre de blocs lus semble un peu délirant :&lt;/p&gt;&#xA;&lt;p&gt;Le Seq Scan indique comme tout à l&amp;rsquo;heure 70Go. En revanche, le nœud parent indique plus de 1.9 To lus!&lt;/p&gt;&#xA;&lt;p&gt;Voici la taille de la table avec le paramétrage par défaut. Il faut savoir que pour certains enregistrements,&#xA;le moteur va, soit compresser la ligne dans la heap, soit la compresser et la placer dans le toast.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SELECT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  pg_size_pretty(pg_relation_size(oid)) table_size,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  pg_size_pretty(pg_relation_size(reltoastrelid)) toast_size&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;FROM pg_class&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;WHERE relname = &amp;#39;posts&amp;#39;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; table_size | toast_size&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;------------+-----------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 70 GB      | 33 GB&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(1 row)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Comment expliquer les 1.9 To lus ?&lt;/p&gt;&#xA;&lt;p&gt;Par curiosité, j&amp;rsquo;ai fait la même requête, mais avec une seule agrégation et j&amp;rsquo;obtiens environ 538 Go.&lt;/p&gt;&#xA;&lt;p&gt;On peut se poser plusieurs questions :&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Comment savoir si le moteur va lire le toast ?&lt;/li&gt;&#xA;&lt;li&gt;Pourquoi un tel écart de temps d&amp;rsquo;exécution entre la version &amp;ldquo;colonne standard&amp;rdquo; et champ jsonb?&lt;/li&gt;&#xA;&lt;li&gt;A quoi correspondent les compteurs dans le nœud &lt;code&gt;Aggregate&lt;/code&gt; ?&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Pour répondre à la première question, il suffit de lire la vue &lt;code&gt;pg_statio_user_tables&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Avant exécution de la requête :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;select relid,schemaname,relname,heap_blks_read,heap_blks_hit,toast_blks_read,toast_blks_hit from pg_statio_all_tables where relname in (&amp;#39;posts&amp;#39;,&amp;#39;pg_toast_26180851&amp;#39;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  relid   | schemaname |      relname      | heap_blks_read | heap_blks_hit | toast_blks_read | toast_blks_hit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;----------+------------+-------------------+----------------+---------------+-----------------+----------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 26180851 | public     | posts             |      422018238 |      87673549 |       129785076 |      628153337&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 26180854 | pg_toast   | pg_toast_26180851 |      129785076 |     628153337 |                 |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(2 rows)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Après :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  relid   | schemaname |      relname      | heap_blks_read | heap_blks_hit | toast_blks_read | toast_blks_hit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;----------+------------+-------------------+----------------+---------------+-----------------+----------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 26180851 | public     | posts             |      431204376 |      87673549 |       134156898 |      686299551&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 26180854 | pg_toast   | pg_toast_26180851 |      134156898 |     686299551 |                 |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(2 rows)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ce qui nous fait :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pg_size_pretty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;431204376&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;87673549&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;422018238&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;87673549&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;bigint&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;heap_buffers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pg_size_pretty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;134156898&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;686299551&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;129785076&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;628153337&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;bigint&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;toast_buffers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;heap_buffers&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;toast_buffers&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--------------+---------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;70&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GB&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;477&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GB&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Le moteur va bien lire le toast. En revanche les compteurs laissent penser que le moteur va lire plusieurs fois le toast.&lt;/p&gt;&#xA;&lt;p&gt;Si je fais le même calcul, mais cette fois en effectuant l&amp;rsquo;agrégation que sur un seul champ, j&amp;rsquo;obtiens 119 Go (~ 477 Go / 4)&#xA;J&amp;rsquo;imagine que le moteur lit le toast pour chaque fonction.&lt;/p&gt;&#xA;&lt;p&gt;Ensuite, l&amp;rsquo;écart du temps d&amp;rsquo;exécution s&amp;rsquo;explique par plusieurs facteurs :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Le moteur va devoir lire et &lt;em&gt;detoaster&lt;/em&gt; (décompresser) le toast&lt;/li&gt;&#xA;&lt;li&gt;Faire des opérations supplémentaires sur le jsonb pour accéder à la valeur&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Avec la première requête, le moteur n&amp;rsquo;avait pas à lire le toast. D&amp;rsquo;une part, il a moins de données à lire,&#xA;d&amp;rsquo;autre part, il n&amp;rsquo;a pas à manipuler le json pour identifier la clé et extraire la valeur à calculer.&lt;/p&gt;&#xA;&lt;p&gt;Enfin, les compteurs du nœud aggregate doivent correspondre aux données décompressées pour chaque fonction qui va lire dans le json.&#xA;En effet, si on prend le total moins le &lt;em&gt;seqscan&lt;/em&gt; de la table, donc que la partie &lt;em&gt;toast&lt;/em&gt;, on a :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;468 Go pour un seul champ&lt;/li&gt;&#xA;&lt;li&gt;936 Go, le double pour deux champs&lt;/li&gt;&#xA;&lt;li&gt;1873 Go pour les 4 champs (donc environ 4 x 468 Go)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;C&amp;rsquo;est ce qui explique pourquoi on obtient une valeur aussi élevée.&lt;/p&gt;&#xA;&lt;h1 id=&#34;paramétrage-avancé&#34;&gt;Paramétrage avancé&lt;/h1&gt;&#xA;&lt;p&gt;Maintenant, on va encourager Postgres à placer le maximum de données dans le toast grâce à l&amp;rsquo;option &lt;em&gt;toast_tuple_target&lt;/em&gt; apparue avec la version 11 de Postgres.&lt;/p&gt;&#xA;&lt;p&gt;Cette option permet de manipuler le seuil à partir duquel les données sont stockée dans le &lt;em&gt;toast&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Par ailleurs, étant sous Postgres 14, j&amp;rsquo;en ai profité pour utiliser l&amp;rsquo;algorithme de compression lz4 (paramètre &lt;em&gt;default_toast_compression&lt;/em&gt;).&#xA;Cet algorithme offre un ratio de compression similaire à pglz, cependant, il est beaucoup plus rapide (Voir &lt;a href=&#34;https://www.postgresql.fastware.com/blog/what-is-the-new-lz4-toast-compression-in-postgresql-14&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;What is the new LZ4 TOAST compression in PostgreSQL 14, and how fast is it?&lt;/a&gt;).&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;posts_toast&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WITH&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;toast_tuple_target&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;posts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Voici la taille de la table obtenue.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SELECT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  pg_size_pretty(pg_relation_size(oid)) table_size,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  pg_size_pretty(pg_relation_size(reltoastrelid)) toast_size&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;FROM pg_class&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;WHERE relname = &amp;#39;posts_toast&amp;#39;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; table_size | toast_size&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;------------+------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 59 GB      | 52 GB&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Au total, la table avec le toast fait grosso-modo la même taille. Dans l&amp;rsquo;exemple avec la première table,&#xA;il faut savoir que le moteur compresse aussi les données dans la heap.&lt;/p&gt;&#xA;&lt;p&gt;Rejouons notre requête d&amp;rsquo;agrégation :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;viewcount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;answercount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commentcount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;favoritecount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;posts_toast&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Cette fois la requête lit 59 Go de données et met 2min 17 secondes.&#xA;On a gagné environ 20% de temps d&amp;rsquo;exécution sur cet exemple.&lt;/p&gt;&#xA;&lt;p&gt;On pourrait gagner beaucoup plus si la partie stockée en toast était plus importante. Le volume de donnée à lire dans la heap serait beaucoup plus réduit.&lt;/p&gt;&#xA;&lt;p&gt;Par curiosité, j&amp;rsquo;ai aussi exécuté la requête qui fait l&amp;rsquo;agrégation depuis les données du champ json. J&amp;rsquo;obtiens un temps d&amp;rsquo;exécution de 7min 17s.&lt;/p&gt;&#xA;&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;&#xA;&lt;p&gt;Résumé en quelques chiffres :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Agrégation type standard, stockage standard : 2min 50s&lt;/li&gt;&#xA;&lt;li&gt;Agrégation type jsonb, stockage standard : 8min 40s&lt;/li&gt;&#xA;&lt;li&gt;Agrégation type standard, stockage avec &lt;em&gt;toast_tuple_target&lt;/em&gt; = 128 : 2min 17s&lt;/li&gt;&#xA;&lt;li&gt;Agrégation type jsonb, stockage avec &lt;em&gt;toast_tuple_target&lt;/em&gt; = 128 : 7min 17s&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;On constate que l&amp;rsquo;usage du JSON est bien plus couteux que d&amp;rsquo;utiliser les types standards. Le moteur doit faire plus d&amp;rsquo;opérations pour accéder à la valeur d&amp;rsquo;une clé json.&lt;/p&gt;&#xA;&lt;p&gt;Par ailleurs, il est obligé de décompresser les données dans le toast pour y accéder. Néanmoins, on peut aussi jouer avec le paramètre &lt;code&gt;toast_tuple_target&lt;/code&gt; pour pousser plus&#xA;d&amp;rsquo;informations dans le toast. Ainsi, dans certains cas, cela peut permettre de réduire la quantité de données lues en évitant de lire le toast.&lt;/p&gt;&#xA;&lt;h1 id=&#34;bonus&#34;&gt;Bonus&lt;/h1&gt;&#xA;&lt;p&gt;Comment souvent dans Postgres, tout évolue au fil des versions. Le TOAST n&amp;rsquo;échappe pas à cette règle.&#xA;Ainsi, quelques nouveautés pourraient apparaitre dans les prochaines versions :&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Un premier patch a été proposé pour avoir plus de statistiques sur le toast : &lt;a href=&#34;https://commitfest.postgresql.org/37/3457/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pg_stat_toast&lt;/a&gt;.&#xA;L&amp;rsquo;idée, est d&amp;rsquo;avoir des statistiques sur la compression : gain compression, stockage inline ou séparé dans le toast&amp;hellip;&lt;/li&gt;&#xA;&lt;li&gt;Un second patch appelé &lt;a href=&#34;https://commitfest.postgresql.org/37/3490/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pluggable toaster&lt;/a&gt;. Celui-ci est beaucoup plus important. Il propose d&amp;rsquo;étendre le &lt;em&gt;&amp;ldquo;toaster&amp;rdquo;&lt;/em&gt;.&#xA;L&amp;rsquo;idée serait de pouvoir proposer différents &lt;em&gt;&amp;ldquo;toaster&amp;rdquo;&lt;/em&gt; selon le type de donnée (notamment le JSONB).&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;&#xA;&lt;hr&gt;&#xA;&lt;ol&gt;&#xA;&lt;li id=&#34;fn:1&#34;&gt;&#xA;&lt;p&gt;Voir &lt;a href=&#34;https://git.postgresql.org/gitweb/?p=postgresql.git;a=blob;f=src/backend/access/heap/heaptoast.c;h=55bbe1d584760a849960871296dfbdd7447b2b67;hb=refs/heads/REL_14_STABLE#l160&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;heap_toast_insert_or_update&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li id=&#34;fn:2&#34;&gt;&#xA;&lt;p&gt;Il existe deux algorithmes de compression supportés : &lt;em&gt;pglz&lt;/em&gt; (historique et intégré dans Postgres) et &lt;em&gt;lz4&lt;/em&gt; (depuis Postgres 14).&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Pour &lt;em&gt;pglz&lt;/em&gt;, voir &lt;a href=&#34;https://git.postgresql.org/gitweb/?p=postgresql.git;a=blob;f=src/include/common/pg_lzcompress.h;h=3e53fbe97bd0a10e3fbf7ed4396924084f657868;hb=refs/heads/REL_14_STABLE#l25&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PGLZ_Strategy&lt;/a&gt;&#xA;et &lt;a href=&#34;https://git.postgresql.org/gitweb/?p=postgresql.git;a=blob;f=src/common/pg_lzcompress.c;h=a30a2c2eb83a71725754d8dd680621a02e7557e9;hb=refs/heads/REL_14_STABLE#l223&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;strategy_default_data&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Pour &lt;em&gt;lz4&lt;/em&gt;, il s&amp;rsquo;agit d&amp;rsquo;une librarie externe. Voir &lt;a href=&#34;https://github.com/lz4/lz4/blob/dev/lib/lz4.h#L145&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LZ4_compress_default&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li id=&#34;fn:3&#34;&gt;&#xA;&lt;p&gt;Voir les slides de la conférence d&amp;rsquo;Oleg Bartunov et Nikita Glukhov : &lt;a href=&#34;http://www.sai.msu.su/~megera/postgres/talks/jsonb-nizhny-2021.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;json or not json that is the question&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;</summary>
    <author>
      <name>blog.anayrat.info</name>
    </author>
  </entry>
  <entry>
    <title>Cas d&#39;usages du partitionnement natif dans PostgreSQL</title>
    <updated>2021-09-01T07:00:00Z</updated>
    <id>tag:blog.anayrat.info,2021-09-01:/2021/09/01/cas-dusages-du-partitionnement-natif-dans-postgresql/</id>
    <link href="https://blog.anayrat.info/2021/09/01/cas-dusages-du-partitionnement-natif-dans-postgresql/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Après une période d&amp;rsquo;inactivité, je reprends l&amp;rsquo;écriture d&amp;rsquo;articles techniques sur Postgres. C&amp;rsquo;est aussi pour moi l&amp;rsquo;occasion de vous annoncer mon changement d&amp;rsquo;activité. Depuis courant 2021 je suis passé freelance pour permettre aux entreprises de bénéficier de mon expérience sur Postgres.&lt;/p&gt;&#xA;&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;&#xA;  &lt;summary class=&#34;font-weight-bold&#34;&gt;Table des matières&lt;/summary&gt;&#xA;  &lt;nav id=&#34;TableOfContents&#34;&gt;&#xA;  &lt;ul&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#histoire-du-partitionnement-dans-postgresql&#34;&gt;Histoire du partitionnement dans PostgreSQL&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#erreurs-courantes&#34;&gt;Erreurs courantes&lt;/a&gt;&#xA;      &lt;ul&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#il-faut-partitionner-dès-que-la-volumétrie-est-importante&#34;&gt;&amp;ldquo;Il faut partitionner dès que la volumétrie est importante&amp;rdquo;&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#il-faut-partitionner-pour-répartir-les-données-sur-plusieurs-disques&#34;&gt;&amp;ldquo;Il faut partitionner pour répartir les données sur plusieurs disques&amp;rdquo;&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;/ul&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#cas-dusages-du-partitionnement&#34;&gt;Cas d&amp;rsquo;usages du partitionnement&lt;/a&gt;&#xA;      &lt;ul&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#partitionner-pour-gérer-la-rétention&#34;&gt;Partitionner pour gérer la rétention&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#partitionner-pour-contrôler-la-fragmentation-des-index&#34;&gt;Partitionner pour contrôler la fragmentation des index&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#partitionner-pour-faciliter-lexécution-de-requête-lorsque-la-cardinalité-est-faible&#34;&gt;Partitionner pour faciliter l&amp;rsquo;exécution de requête lorsque la cardinalité est faible&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#partitionner-pour-obtenir-de-meilleures-statistiques&#34;&gt;Partitionner pour obtenir de meilleures statistiques&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#partitionwise-join--partitionwise-aggregate&#34;&gt;partitionwise join &amp;amp; partitionwise aggregate&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#stockage-avec-tiering&#34;&gt;Stockage avec tiering&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;/ul&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/nav&gt;&#xA;&lt;/details&gt;&#xA;&lt;h1 id=&#34;histoire-du-partitionnement-dans-postgresql&#34;&gt;Histoire du partitionnement dans PostgreSQL&lt;/h1&gt;&#xA;&lt;p&gt;PostgreSQL permet depuis très longtemps de partitionner des tables en exploitant l&amp;rsquo;héritage de table. Toutefois, cette méthode était assez lourde à mettre en oeuvre : elle impliquait de mettre en place soi-même des triggers pour rediriger les écritures (moins performant que le partitionnement natif), le temps de planification pouvait augmenter fortement au-delà d&amp;rsquo;une centaine de partitions&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;Le partitionnement natif est arrivé avec la version 10. C&amp;rsquo;est depuis cette version que le moteur est capable (entre autres) de diriger lui-même les écritures vers les bonnes tables, lire seulement les tables concernées, d&amp;rsquo;utiliser des algorithmes exploitant le partitionnement etc.&#xA;Il offre ainsi de meilleures performances et une facilité d&amp;rsquo;exploitation. On peut entre autres :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Partitionner :&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Par liste&lt;/li&gt;&#xA;&lt;li&gt;Par hashage&lt;/li&gt;&#xA;&lt;li&gt;Par intervalles&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Faire des partitionnements à plusieurs niveaux&lt;/li&gt;&#xA;&lt;li&gt;Partitionner sur plusieurs colonnes&lt;/li&gt;&#xA;&lt;li&gt;Utiliser des clés primaires et clés étrangères&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Toutes ces fonctionnalités sont intéressantes, mais on en vient à se poser une question toute bête : quand mettre en oeuvre le partitionnement?&lt;/p&gt;&#xA;&lt;p&gt;Je vais vous présenter plusieurs cas d&amp;rsquo;usages que j&amp;rsquo;ai pu rencontrer. Mais avant, voici quelques erreurs courantes sur le partitionnement.&lt;/p&gt;&#xA;&lt;h1 id=&#34;erreurs-courantes&#34;&gt;Erreurs courantes&lt;/h1&gt;&#xA;&lt;h2 id=&#34;il-faut-partitionner-dès-que-la-volumétrie-est-importante&#34;&gt;&amp;ldquo;Il faut partitionner dès que la volumétrie est importante&amp;rdquo;&lt;/h2&gt;&#xA;&lt;p&gt;Déjà, qu&amp;rsquo;est-ce qu&amp;rsquo;une volumétrie &amp;ldquo;importante&amp;rdquo;?&lt;/p&gt;&#xA;&lt;p&gt;Certains diront que c&amp;rsquo;est au-delà de plusieurs centaines de Go, d&amp;rsquo;autres au-delà du téraoctet, d&amp;rsquo;autres encore au-delà du pétaoctet&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;Il n&amp;rsquo;existe pas vraiment de réponse à cette question et globalement ça va dépendre du type d&amp;rsquo;activité : ratio INSERT/UPDATE/DELETE, type de SELECT (OLTP, OLAP&amp;hellip;).&#xA;Ca dépendra également du matériel. Il y a 10 ans, quand les serveurs n&amp;rsquo;avaient que quelques Go de RAM avec des disques mécaniques, il était probable qu&amp;rsquo;une base de quelques centaines de Go soit perçue comme une grosse base.&#xA;Maintenant il n&amp;rsquo;est pas rare de voir des serveurs avec plus d&amp;rsquo;un téraoctet de RAM, des disques NVMe.&lt;/p&gt;&#xA;&lt;p&gt;Ainsi, une base de quelques centaines de Go n&amp;rsquo;est plus considérée comme une grosse base. Mais plutôt comme une base de taille modeste.&lt;/p&gt;&#xA;&lt;p&gt;Petite anecdote, pour se rassurer, un client m&amp;rsquo;a questionné si Postgres était déjà utilisé pour des volumétries &amp;ldquo;importantes&amp;rdquo;. On parlait alors d&amp;rsquo;une base d&amp;rsquo;une quarantaine de Go sur un serveur qui disposait de 64Go de RAM. Toutes les lectures se faisaient depuis le cache&amp;hellip; :). J&amp;rsquo;ai pu le rassurer sur la taille de sa base qui était relativement modeste.&lt;/p&gt;&#xA;&lt;p&gt;Il peut tout à fait être superflu de partitionner une base de quelques To comme il peut être nécessaire de partitionner une base de quelques centaines de Go. Par exemple, si l&amp;rsquo;activité consiste juste à ajouter des lignes à des tables et que les requêtes se résument à de simple &lt;code&gt;WHERE colonne = 4&lt;/code&gt; qui retournent quelques lignes. Un simple Btree fera l&amp;rsquo;affaire. Et si la requête retourne un nombre assez important de lignes, il est possible d&amp;rsquo;utiliser les index BRIN ou les bloom filter.&lt;/p&gt;&#xA;&lt;p&gt;Les index BRIN présentent des bénéfices proches du partitionnement ou sharding en évitant la complexité de mise en oeuvre&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;il-faut-partitionner-pour-répartir-les-données-sur-plusieurs-disques&#34;&gt;&amp;ldquo;Il faut partitionner pour répartir les données sur plusieurs disques&amp;rdquo;&lt;/h2&gt;&#xA;&lt;p&gt;L&amp;rsquo;idée serait de créer des partitions et des tablespaces sur différents disques afin de répartir les opérations d&amp;rsquo;entrées/sorties.&lt;/p&gt;&#xA;&lt;p&gt;Pour PostgreSQL, un tablespace n&amp;rsquo;est ni plus, ni moins qu&amp;rsquo;un chemin vers un répertoire. Il est tout à fait possible&#xA;de gérer le stockage au niveau du système d&amp;rsquo;exploitation et d&amp;rsquo;agréger plusieurs disques (en RAID10) par exemple.&#xA;Ensuite, il suffit de stocker la table sur le volume créé. Ainsi, on peut répartir les I/O sur un ensemble de disques.&lt;/p&gt;&#xA;&lt;p&gt;Dans ce cas, il n&amp;rsquo;est donc pas nécessaire de mettre en oeuvre le partitionnement. Toutefois, nous verrons un cas où il pourrait avoir du sens.&lt;/p&gt;&#xA;&lt;p&gt;Maintenant nous allons nous intéresser à des cas d&amp;rsquo;usage &amp;ldquo;légitimes&amp;rdquo; du partitionnement.&lt;/p&gt;&#xA;&lt;h1 id=&#34;cas-dusages-du-partitionnement&#34;&gt;Cas d&amp;rsquo;usages du partitionnement&lt;/h1&gt;&#xA;&lt;h2 id=&#34;partitionner-pour-gérer-la-rétention&#34;&gt;Partitionner pour gérer la rétention&lt;/h2&gt;&#xA;&lt;p&gt;A cause du modèle MVCC, la suppression massive de données entraine de la fragmentation dans les tables.&lt;/p&gt;&#xA;&lt;p&gt;Un cas d&amp;rsquo;usage possible est de partitionner par date. Supprimer les anciennes données revient à supprimer une partition complète. L&amp;rsquo;opération sera rapide et les tables ne seront pas fragmentées&lt;/p&gt;&#xA;&lt;h2 id=&#34;partitionner-pour-contrôler-la-fragmentation-des-index&#34;&gt;Partitionner pour contrôler la fragmentation des index&lt;/h2&gt;&#xA;&lt;p&gt;L&amp;rsquo;ajout et modification de données dans une table fragmente les index au fil du temps. Pour faire simple, on ne peut pas récupérer l&amp;rsquo;espace libre dans un bloc tant qu&amp;rsquo;il n&amp;rsquo;est pas vide. Avec le temps les splits d&amp;rsquo;index créent du &amp;ldquo;vide&amp;rdquo; dans ce dernier et le seul moyen de récupérer cet espace est de reconstruire l&amp;rsquo;index.&lt;/p&gt;&#xA;&lt;p&gt;On appelle cela le &amp;ldquo;bloat&amp;rdquo;. Il y a eu de nombreuses améliorations sur les dernières versions de Postgres:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Version 12, on peut lire dans les &lt;a href=&#34;https://www.postgresql.org/docs/12/release-12.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Releases Notes&lt;/a&gt;:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Improve performance and space utilization of btree indexes with many duplicates (Peter Geoghegan, Heikki Linnakangas)&lt;/p&gt;&#xA;&lt;p&gt;Previously, duplicate index entries were stored unordered within their duplicate groups. This caused overhead during index inserts, wasted space due to excessive page splits, and it reduced VACUUM&amp;rsquo;s ability to recycle entire pages. Duplicate index entries are now sorted in heap-storage order.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Version 13, on peut lire dans les &lt;a href=&#34;https://www.postgresql.org/docs/13/release-13.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Releases Notes&lt;/a&gt;:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;More efficiently store duplicates in B-tree indexes (Anastasia Lubennikova, Peter Geoghegan)&lt;/p&gt;&#xA;&lt;p&gt;This allows efficient B-tree indexing of low-cardinality columns by storing duplicate keys only once. Users upgrading with pg_upgrade will need to use REINDEX to make an existing index use this feature.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Version 14, on peut lire dans les &lt;a href=&#34;https://www.postgresql.org/docs/14/release-14.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Releases Notes&lt;/a&gt;:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Allow btree index additions to remove expired index entries to prevent page splits (Peter Geoghegan)&lt;/p&gt;&#xA;&lt;p&gt;This is particularly helpful for reducing index bloat on tables whose indexed columns are frequently updated.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Pour contrôler le bloat, on pourrait reconstruire l&amp;rsquo;index à intervalles réguliers (merci &lt;code&gt;REINDEX CONCURRENTLY&lt;/code&gt; arrivé en version 12). Cette solution serait contraignante, car il faudrait régulièrement reconstruire l&amp;rsquo;intégralité de l&amp;rsquo;index.&lt;/p&gt;&#xA;&lt;p&gt;Si la majorité des modifications sont faites sur les données récentes, par exemple: table de logs, commandes clients, rendez-vous&amp;hellip; On pourrait imaginer un partitionnement par mois. Ainsi, à chaque début de mois on part sur une table &amp;ldquo;neuve&amp;rdquo; et on peut ré-indexer la précédente table pour supprimer le bloat.&lt;/p&gt;&#xA;&lt;p&gt;On peut aussi en profiter pour faire un &lt;code&gt;CLUSTER&lt;/code&gt; sur la table pour avoir une bonne corrélation des données avec le stockage.&lt;/p&gt;&#xA;&lt;h2 id=&#34;partitionner-pour-faciliter-lexécution-de-requête-lorsque-la-cardinalité-est-faible&#34;&gt;Partitionner pour faciliter l&amp;rsquo;exécution de requête lorsque la cardinalité est faible&lt;/h2&gt;&#xA;&lt;p&gt;Petit à petit on va voir des cas d&amp;rsquo;usages un peu plus compliqués :)&lt;/p&gt;&#xA;&lt;p&gt;Prenons un exemple : une table de commande comprenant un statut de livraison, au bout de quelques années 99% des commandes sont livrées (on l&amp;rsquo;espère!) et très peu en cours de paiement ou livraison.&lt;/p&gt;&#xA;&lt;p&gt;Imaginons qu&amp;rsquo;on souhaite récupérer 100 commandes en cours de livraison. On va créer un index sur le statut et l&amp;rsquo;utiliser pour récupérer les enregistrements.&#xA;En étant un peu astucieux, on peut créer un index partiel sur ce statut particulier. Problème, cet index va se fragmenter assez vite au fur et à mesure que les commandes seront livrées.&lt;/p&gt;&#xA;&lt;p&gt;Dans ce cas on pourrait faire un partitionnement sur le statut. Ainsi, récupérer 100 commandes en cours de livraison revient à lire 100 enregistrements de la partition.&lt;/p&gt;&#xA;&lt;h2 id=&#34;partitionner-pour-obtenir-de-meilleures-statistiques&#34;&gt;Partitionner pour obtenir de meilleures statistiques&lt;/h2&gt;&#xA;&lt;p&gt;Pour déterminer le meilleur plan d&amp;rsquo;exécution, Postgres prend des décisions à partir des statistiques d&amp;rsquo;une table. Ces statistiques sont obtenues à partir d&amp;rsquo;un échantillon de la table (le &lt;code&gt;default_statistic_target&lt;/code&gt; qui vaut 100 par défaut).&lt;/p&gt;&#xA;&lt;p&gt;Par défaut le moteur va collecter 300 x &lt;code&gt;default_statistic_target&lt;/code&gt; lignes, soit 30 000 lignes. Avec une table de plusieurs centaines de millions de lignes, cet échantillon est parfois trop petit.&lt;/p&gt;&#xA;&lt;p&gt;On peut augmenter de manière drastique la taille de l&amp;rsquo;échantillon, mais cette approche présente quelques inconvénients:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Ca alourdis le temps de planification&lt;/li&gt;&#xA;&lt;li&gt;Ca alourdis le &lt;code&gt;ANALYZE&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Parfois ce n&amp;rsquo;est pas suffisant si les données sont mal réparties. Par exemple si on prend quelques centaines de milliers de lignes sur une table qui comprend plusieurs centaines de millions, on peut rater les lignes dont le statut est en livraison.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Avec le partitionnement on pourrait avoir un même échantillon, mais par partition, ce qui permet de gagner en précision.&lt;/p&gt;&#xA;&lt;p&gt;Ce serait également utile quand on a des données corrélées entre colonnes. Je vais reprendre l&amp;rsquo;exemple des commandes. On a une année entière de commandes: toutes les commandes qui ont plus d&amp;rsquo;un mois sont livrées, celles du dernier mois sont livrées à 90% (10% sont en cours de livraison).&lt;/p&gt;&#xA;&lt;p&gt;Intuitivement, si je cherche une commande en cours de livraison il y a plus de 6 mois je ne devrais pas avoir de résultat. Inversement, si je cherche des commandes en cours de livraison sur le dernier mois, je devrais obtenir 10% de la table. Or, le moteur ne le sait pas, pour lui les commandes en cours de livraison sont réparties sur toute la table.&lt;/p&gt;&#xA;&lt;p&gt;Avec un partitionnement par date, il peut estimer qu&amp;rsquo;il n&amp;rsquo;y a pas de commande en cours de livraisons de plus d&amp;rsquo;un mois. Ce type d&amp;rsquo;approche permet surtout de réduire une erreur d&amp;rsquo;estimation dans un plan d&amp;rsquo;exécution.&lt;/p&gt;&#xA;&lt;p&gt;Voici un exemple avec cette table de commandes, &lt;code&gt;orders_p&lt;/code&gt; est la version partitionnée par mois de la table &lt;code&gt;orders&lt;/code&gt;. Les données étant identiques dans les deux tables.&lt;/p&gt;&#xA;&lt;p&gt;On peut remarquer que l&amp;rsquo;estimation est bien meilleure dans le cas où la table est partitionnée, le moteur ayant des statistiques par partition.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;19&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;22&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;25&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;EXPLAIN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ANALYZE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;BETWEEN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-01-01&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-01-31&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                                                  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;QUERY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PLAN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_13_state_idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_13&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;42&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;45&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Cond&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-01-01&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-01-31&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Planning&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;120&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Execution&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;059&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;EXPLAIN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ANALYZE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;BETWEEN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-01-01&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-01-31&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                                                  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;QUERY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PLAN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;---------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_state_idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;44&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;13168&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3978&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Cond&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-01-01&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-01-31&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Rows&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Removed&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;by&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100161&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Planning&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;188&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Execution&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;141&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;571&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;Maintenant prenons la même requête sur le dernier mois:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;19&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;22&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;26&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;EXPLAIN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ANALYZE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;BETWEEN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-07-01&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-07-31&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                                                       &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;QUERY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PLAN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;-------------------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_19_state_idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_19&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;43&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2417&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;19215&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20931&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Cond&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-07-01&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-07-31&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Planning&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;297&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Execution&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;618&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;EXPLAIN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ANALYZE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;BETWEEN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-07-01&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-07-31&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                                                     &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;QUERY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PLAN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--------------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_state_idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;44&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;13168&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15008&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20931&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Cond&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-07-01&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-07-31&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Rows&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Removed&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;by&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;79230&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Planning&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;173&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Execution&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;146&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;326&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;Ici aussi on peut remarquer que l&amp;rsquo;estimation est meilleure.&lt;/p&gt;&#xA;&lt;h2 id=&#34;partitionwise-join--partitionwise-aggregate&#34;&gt;partitionwise join &amp;amp; partitionwise aggregate&lt;/h2&gt;&#xA;&lt;p&gt;Un autre intérêt du partitionnement est de bénéficier de meilleurs algorithmes pour les jointures et agrégation.&lt;/p&gt;&#xA;&lt;p&gt;Le &lt;code&gt;partitionwise aggregate&lt;/code&gt; permet de faire une agregation ou un regroupement partition par partition. Un exemple vaut mieux qu&amp;rsquo;un long discours:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;16&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;21&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;explain&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;analyze&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timing&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;group&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;by&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                                                  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;QUERY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PLAN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HashAggregate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;508361&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;508365&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;45&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;365&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;365&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Group&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Append&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;408317&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;35&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20008890&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20000000&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_01&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;70&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1270&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_02&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;70&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1270&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[...]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_19&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;45308&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;04&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2941004&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2941004&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_20&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;131708&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8549421&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8549421&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Planning&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;576&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Execution&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5273&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;217&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;enable_partitionwise_aggregate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;explain&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;analyze&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timing&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;group&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;by&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                                                  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;QUERY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PLAN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Append&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;05&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;408343&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;83&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1765&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;365&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HashAggregate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;05&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;05&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Group&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_01&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;70&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1270&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HashAggregate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;05&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;05&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Group&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_02&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_02&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;70&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1270&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[...]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HashAggregate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;60013&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;06&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;60013&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;37&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Group&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_19&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;45308&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;04&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2941004&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2941004&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HashAggregate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;174455&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;174455&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;55&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Group&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_20&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;131708&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8549421&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8549421&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Planning&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;461&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Execution&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4669&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;315&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;63&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;Dans le premier cas l&amp;rsquo;agrégation se fait une fois pour toutes les tables, alors que dans le second exemple, on fait l&amp;rsquo;agrégation par partition.&#xA;On peut également remarquer que le coût total est inférieur dans le plan avec agrégation par partition.&lt;/p&gt;&#xA;&lt;p&gt;Le &lt;code&gt;partitionwise join&lt;/code&gt; fonctionne sur le même principe, on fait une jointure partition par partition. C&amp;rsquo;est utile pour joindre deux tables partitionnées.&lt;/p&gt;&#xA;&lt;h2 id=&#34;stockage-avec-tiering&#34;&gt;Stockage avec tiering&lt;/h2&gt;&#xA;&lt;p&gt;Enfin, un autre cas d&amp;rsquo;usage serait de vouloir stocker une partie de la table sur un stockage différent:&lt;/p&gt;&#xA;&lt;p&gt;On peut stocker une table partitionnée dans des tablespaces différents. Par exemple les données récentes sur un tablespace rapide sur SSD NVMe.&#xA;Puis les données plus rarement accédées sur un autre tablespace, avec des disques mécaniques moins couteux.&lt;/p&gt;&#xA;&lt;p&gt;Cette approche peut aussi avoir du sens à l&amp;rsquo;heure du cloud où le stockage est très onéreux.&lt;/p&gt;&#xA;&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;&#xA;&lt;p&gt;Voilà, je pense avoir fait le tour des principaux cas d&amp;rsquo;usages qui me venaient en tête.&lt;/p&gt;&#xA;&lt;p&gt;Evidemment, la mise en oeuvre du partitionnement implique une plus grande complexité (gestion des partitions&amp;hellip;)&#xA;et des limitations qu&amp;rsquo;il faudra étudier en amont.&lt;/p&gt;&#xA;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;&#xA;&lt;hr&gt;&#xA;&lt;ol&gt;&#xA;&lt;li id=&#34;fn:1&#34;&gt;&#xA;&lt;p&gt;&amp;ldquo;BRIN indexes provide similar benefits to horizontal partitioning or sharding but without needing to explicitly declare partitions.&amp;rdquo; - &lt;a href=&#34;https://en.wikipedia.org/wiki/Block_Range_Index&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://en.wikipedia.org/wiki/Block_Range_Index&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;</summary>
    <author>
      <name>blog.anayrat.info</name>
    </author>
  </entry>
  <entry>
    <title>Mesurer facilement la latence I/O avec PostgreSQL 16</title>
    <updated>2023-09-02T16:30:00Z</updated>
    <id>tag:pgphil.ovh,2023-09-02:/traqueur_16_01.php</id>
    <link href="http://pgphil.ovh/traqueur_16_01.php" rel="alternate"></link>
    <summary type="html">Démonstration avec le traqueur d&#39;une nouvelle fonctionnalité PostgreSQL 16 facilitant le suivi des performances et le diagnostic des ralentissements</summary>
    <author>
      <name>pgphil.ovh</name>
    </author>
  </entry>
  <entry>
    <title>Mettre à jour PostgreSQL pour améliorer les performances</title>
    <updated>2023-05-21T09:00:00Z</updated>
    <id>tag:pgphil.ovh,2023-05-21:/migration_performance_14_15_01.php</id>
    <link href="http://pgphil.ovh/migration_performance_14_15_01.php" rel="alternate"></link>
    <summary type="html">Pagination, ex aequo...obtenez vos résultats triés bien plus rapidement avec PostgreSQL 15</summary>
    <author>
      <name>pgphil.ovh</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL inspire les autres SGBD ?</title>
    <updated>2023-04-12T09:00:00Z</updated>
    <id>tag:pgphil.ovh,2023-04-12:/oracle23c_ou_oracle23p_comme_postgresql.php</id>
    <link href="http://pgphil.ovh/oracle23c_ou_oracle23p_comme_postgresql.php" rel="alternate"></link>
    <summary type="html">Oracle 23c ou 23p comme PostgreSQL ?</summary>
    <author>
      <name>pgphil.ovh</name>
    </author>
  </entry>
  <entry>
    <title>CYCLE</title>
    <updated>2022-12-03T15:00:00Z</updated>
    <id>tag:pgphil.ovh,2022-12-03:/nocycle_15_01.php</id>
    <link href="http://pgphil.ovh/nocycle_15_01.php" rel="alternate"></link>
    <summary type="html">Nouveautés autour des requêtes hiérarchiques avec PostgreSQL 14 et versions supérieures</summary>
    <author>
      <name>pgphil.ovh</name>
    </author>
  </entry>
  <entry>
    <title>MERGE</title>
    <updated>2022-03-29T17:30:00Z</updated>
    <id>tag:pgphil.ovh,2022-03-29:/upsert_15_devel_01.php</id>
    <link href="http://pgphil.ovh/upsert_15_devel_01.php" rel="alternate"></link>
    <summary type="html">Introduction de la commande MERGE par PostgreSQL 15</summary>
    <author>
      <name>pgphil.ovh</name>
    </author>
  </entry>
  <entry>
    <title>Limitations du planner (optimiseur) de PostgreSQL</title>
    <updated>2022-03-06T18:45:00Z</updated>
    <id>tag:pgphil.ovh,2022-03-06:/limitations_planner_13_01.php</id>
    <link href="http://pgphil.ovh/limitations_planner_13_01.php" rel="alternate"></link>
    <summary type="html">Est-il toujours possible en 2022 de faire trébucher l&#39;optimiseur statistique de PostgreSQL ? Comment y remédier ?</summary>
    <author>
      <name>pgphil.ovh</name>
    </author>
  </entry>
  <entry>
    <title>[Infographie] PostgreSQL</title>
    <updated>2021-02-11T11:23:13Z</updated>
    <id>tag:blog.atolcd.com,2021-02-11:/infographie-postgresql/</id>
    <content type="html">&#xA;&lt;p&gt;PostgreSQL est un SGBD que nous affectionnons particulièrement chez Atol CD ! Retrouvez dans cette infographie quelques caractéristiques techniques, des chiffres-clé, son histoire mais aussi pourquoi nous l&amp;rsquo;aimons et notre Top5 des fonctionnalités côté développement.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-gallery columns-1 is-cropped wp-block-gallery-1 is-layout-flex wp-block-gallery-is-layout-flex&#34;&gt;&lt;ul class=&#34;blocks-gallery-grid&#34;&gt;&lt;li class=&#34;blocks-gallery-item&#34;&gt;&lt;figure&gt;&lt;img fetchpriority=&#34;high&#34; decoding=&#34;async&#34; width=&#34;866&#34; height=&#34;2560&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-scaled.jpg&#34; alt=&#34;&#34; data-id=&#34;4477&#34; data-full-url=&#34;https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-scaled.jpg&#34; data-link=&#34;https://blog.atolcd.com/infographie-postgresql/infographie_postgresql/&#34; class=&#34;wp-image-4477&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-scaled.jpg 866w, https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-101x300.jpg 101w, https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-346x1024.jpg 346w, https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-768x2271.jpg 768w, https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-520x1536.jpg 520w, https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-693x2048.jpg 693w, https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-600x1774.jpg 600w, https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-945x2794.jpg 945w&#34; sizes=&#34;(max-width: 866px) 100vw, 866px&#34; /&gt;&lt;/figure&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/figure&gt;&#xA;&lt;p&gt;Cet article &lt;a href=&#34;https://blog.atolcd.com/infographie-postgresql/&#34;&gt;[Infographie] PostgreSQL&lt;/a&gt; est apparu en premier sur &lt;a href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.atolcd.com/infographie-postgresql/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=infographie-postgresql" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PostgreSQL est un SGBD que nous affectionnons particulièrement chez Atol CD ! Retrouvez dans cette infographie quelques caractéristiques techniques, des chiffres-clé, son histoire mais aussi pourquoi nous l&amp;#8217;aimons et notre Top5 des fonctionnalités côté développement.&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a href=&#34;https://blog.atolcd.com/infographie-postgresql/&#34;&gt;[Infographie] PostgreSQL&lt;/a&gt; est apparu en premier sur &lt;a href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Caroline Chanlon</name>
    </author>
  </entry>
  <entry>
    <title>Sortie de PostgreSQL 13</title>
    <updated>2020-09-24T05:54:57Z</updated>
    <id>tag:blog.atolcd.com,2020-09-24:/sortie-de-postgresql-13/</id>
    <content type="html">&#xA;&lt;p&gt;&lt;span style=&#34;font-weight: 400;&#34;&gt;&lt;img decoding=&#34;async&#34; class=&#34;alignnone size-full wp-image-4130&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2020/09/pg13.jpg&#34; alt=&#34;&#34; width=&#34;960&#34; height=&#34;540&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2020/09/pg13.jpg 960w, https://blog.atolcd.com/wp-content/uploads/2020/09/pg13-300x169.jpg 300w, https://blog.atolcd.com/wp-content/uploads/2020/09/pg13-768x432.jpg 768w, https://blog.atolcd.com/wp-content/uploads/2020/09/pg13-600x338.jpg 600w, https://blog.atolcd.com/wp-content/uploads/2020/09/pg13-945x532.jpg 945w&#34; sizes=&#34;(max-width: 960px) 100vw, 960px&#34; /&gt;Malgré des actualités plutôt moroses au Botswana concernant nos chers éléphants, il y en a un qui se porte bien et est encore plus fort à savoir PostgreSQL qui sort en version 13 stable ce jeudi 24 septembre 2020. &lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;span style=&#34;font-weight: 400;&#34;&gt;Après seulement 3 versions Bêta et une RC le voilà dans les starting blocks pour débarquer sur vos serveurs ! Et comme à chaque nouvelle version son&lt;/span&gt; &lt;span style=&#34;font-weight: 400;&#34;&gt;lot de nouveautés&lt;/span&gt;&lt;span style=&#34;font-weight: 400;&#34;&gt;.&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;span style=&#34;font-weight: 400;&#34;&gt;Un petit rappel qui peut parfois éviter bien des catastrophes, si vous avez prévu de migrer vers PostgreSQL 13, vous devriez jeter un oeil sur &lt;a href=&#34;https://www.postgresql.org/docs/13/release-13.html#id-1.11.6.5.4&#34;&gt;les potentielles incompatibilités avec les précédentes versions&lt;/a&gt;  (et aussi sur les versions intermédiaires si vous faite un gap de plusieurs versions d&amp;rsquo;un coup), il est toujours préférable d&amp;rsquo;identifier ces légers changements en amont plutôt qu&amp;rsquo;une fois en production. Mais rassurez-vous, dans cette version pas de quoi freiner significativement une migration.&lt;/span&gt;&lt;/p&gt;&#xA;&lt;h1&gt;Partitionnement&lt;/h1&gt;&#xA;&lt;p&gt;Des améliorations sont ajoutées sur le partitionnement de tables, tant au niveau performance avec l&amp;rsquo;ajout de cas où une jointure directe entre partition peut être utilisée dans une requête, mais aussi de fonctionnalités telles que  la gestion des triggers avec le support de la clause BEFORE ou bien encore la réplication logique sans avoir besoin de publier chaque partition.&lt;/p&gt;&#xA;&lt;h1&gt;Index&lt;/h1&gt;&#xA;&lt;p&gt;Là aussi des améliorations de performances mais aussi des gains d&amp;rsquo;espace disque sur les index B-tree surtout pour ceux contenant des doublons, mais si vous passez par un pg_upgrade il voudra passer par un reindex pour bénéficier de ces changements.&lt;/p&gt;&#xA;&lt;h1&gt;Planificateur&lt;/h1&gt;&#xA;&lt;p&gt;Le planificateur de requête PostgreSQL a lui aussi eu le droit à quelques améliorations notamment au niveau des statistiques ce qui peut améliorer les plans d&amp;rsquo;exécution et donc les performances.&lt;/p&gt;&#xA;&lt;h1&gt;Performance générale&lt;/h1&gt;&#xA;&lt;p&gt;Les performances ne sont pas en reste dans cette nouvelle version, avec l&amp;rsquo;ajout du &lt;span style=&#34;font-weight: 400;&#34;&gt;tri incrémentiel ce qui accélère le tri des données dans certains cas,  sur les agrégations de hachage qui peuvent désormais utiliser le stockage sur disque dans le cadre de grands ensembles d&amp;rsquo;agrégation, sur la conversion de type entier vers texte.&lt;/span&gt;&lt;/p&gt;&#xA;&lt;h1&gt;Vues système&lt;/h1&gt;&#xA;&lt;p&gt;De nouvelles vues système font leur apparition :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/13/progress-reporting.html#BASEBACKUP-PROGRESS-REPORTING&#34;&gt;pg_stat_progress_basebackup &lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/13/progress-reporting.html#ANALYZE-PROGRESS-REPORTING&#34;&gt;pg_stat_progress_analyze &lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/13/view-pg-shmem-allocations.html&#34;&gt;pg_shmem_allocations &lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/13/monitoring-stats.html#MONITORING-PG-STAT-SLRU-VIEW&#34;&gt;pg_stat_slru&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;la vue &lt;a href=&#34;https://www.postgresql.org/docs/13/monitoring-stats.html#PG-STAT-ACTIVITY-VIEW&#34;&gt;pg_stat_activity&lt;/a&gt; se voit elle ajoutée une colonne leader_pid ce qui permet de retrouver rapidement tous les processus impliqués dans une requête parallèle.&lt;/p&gt;&#xA;&lt;h1&gt;Fonctionnalités&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ajout de la fonctionnalité &lt;a href=&#34;https://www.postgresql.org/docs/13/sql-select.html#SQL-LIMIT&#34;&gt;FETCH FIRST WITH TIES&lt;/a&gt; (vous trouverez &lt;a href=&#34;http://pgphil.ovh/topn_13_beta_01.php&#34;&gt;ici&lt;/a&gt; un exemple)&lt;/li&gt;&#xA;&lt;li&gt;Ajout de la fonction gen_random_uuid() utilisable sans activer d’extensions&lt;/li&gt;&#xA;&lt;li&gt;Ajout de la possibilité de renommer une colonne d&amp;rsquo;une vue :&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;ALTER VIEW [ IF EXISTS ] name RENAME [ COLUMN ] column_name TO new_column_name&lt;/pre&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Ajout de la fonction .datetime() dans les jsonpath pour convertir automatique une chaîne en date ou horodatage&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1&gt;Client psql&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Ajout de nouvelles commandes pour afficher la description de classe d&amp;rsquo;opérateur et famille d&amp;rsquo;opérateur&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a class=&#34;link&#34; title=&#34;Meta-Commands&#34; href=&#34;https://www.postgresql.org/docs/13/app-psql.html#APP-PSQL-META-COMMANDS&#34;&gt;&lt;code class=&#34;literal&#34;&gt;\dAc&lt;/code&gt;&lt;/a&gt;, &lt;code class=&#34;literal&#34;&gt;\dAf&lt;/code&gt;, &lt;code class=&#34;literal&#34;&gt;\dAo&lt;/code&gt;, et &lt;code class=&#34;literal&#34;&gt;\dAp&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Ajout du statut de la transaction dans le prompt &lt;br /&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;* dans une transaction&lt;/li&gt;&#xA;&lt;li&gt;! dans un échec de transaction&lt;/li&gt;&#xA;&lt;li&gt;? pour un état indéterminé de la transaction&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1&gt;Administration&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Ajout de la capacité de la commande VACUUM à traiter des index en parallèle&lt;/li&gt;&#xA;&lt;li&gt;la commande reindexdb peut aussi paralléliser les tâches&lt;/li&gt;&#xA;&lt;li&gt;introduction de la notion de « trusted extension » qui permet à un super utilisateur de définir les extensions qu’un utilisateur a le droit d&amp;rsquo;installer dans sa base de données en ayant le droit CREATE.&lt;/li&gt;&#xA;&lt;li&gt;Ajout pour pg_dump de l&amp;rsquo;option &amp;#8211;include-foreign-data pour inclure dans la sauvegarde les données de serveurs distants&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;La liste des nouveautés dans cette version est grande, toutes les nouveautés n&amp;rsquo;ont pas été abordées mais vous pouvez bien sur les retrouver dans la &lt;a href=&#34;https://www.postgresql.org/docs/13/release-13.html&#34;&gt;note de version&lt;/a&gt;. Le focus a surtout été fait sur le côté utilisateur plutôt qu&amp;rsquo;administrateur de PostgreSQL.&lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a href=&#34;https://blog.atolcd.com/sortie-de-postgresql-13/&#34;&gt;Sortie de PostgreSQL 13&lt;/a&gt; est apparu en premier sur &lt;a href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.atolcd.com/sortie-de-postgresql-13/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=sortie-de-postgresql-13" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Malgré des actualités plutôt moroses au Botswana concernant nos chers éléphants, il y en a un qui se porte bien et est encore plus fort à savoir PostgreSQL qui sort en version 13 stable ce jeudi 24 septembre 2020.  Après... &lt;a class=&#34;more-link&#34; href=&#34;https://blog.atolcd.com/sortie-de-postgresql-13/&#34;&gt;Continue Reading &amp;#8594;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a href=&#34;https://blog.atolcd.com/sortie-de-postgresql-13/&#34;&gt;Sortie de PostgreSQL 13&lt;/a&gt; est apparu en premier sur &lt;a href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Caroline Chanlon</name>
    </author>
  </entry>
  <entry>
    <title>Sortie de PostgreSQL 11</title>
    <updated>2018-10-19T13:12:39Z</updated>
    <id>tag:blog.atolcd.com,2018-10-19:/sortie-de-postgresql-11/</id>
    <content type="html">&lt;p&gt;Après seulement une release candidate (mais auparavant 4 version bêta), PostgreSQL 11 vient de sortir!!!! Et comme à chaque nouvelle version son lot de nouveautés que nous allons essayer de passer rapidement en revue.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img decoding=&#34;async&#34; class=&#34;aligncenter size-full wp-image-3169&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2018/10/PostGresql11.jpg&#34; alt=&#34;&#34; width=&#34;826&#34; height=&#34;540&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2018/10/PostGresql11.jpg 826w, https://blog.atolcd.com/wp-content/uploads/2018/10/PostGresql11-300x196.jpg 300w, https://blog.atolcd.com/wp-content/uploads/2018/10/PostGresql11-768x502.jpg 768w, https://blog.atolcd.com/wp-content/uploads/2018/10/PostGresql11-600x392.jpg 600w&#34; sizes=&#34;(max-width: 826px) 100vw, 826px&#34; /&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Amélioration de la parallélisation&lt;/h2&gt;&#xA;&lt;p&gt;Quoi de mieux que de commencer le tour des nouveautés par un sujet que l&amp;rsquo;on a abordé lors du &lt;a href=&#34;https://blog.atolcd.com/conference-la-parallelisation-au-service-de-loptimisation/&#34;&gt;PG Day France 2018&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;PostgreSQL 11 va encore plus loin dans la parallélisation avec :&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Création d&amp;rsquo;index B-tree en parallèle&lt;/li&gt;&#xA;&lt;li&gt;Parallélisation des UNION ALL&lt;/li&gt;&#xA;&lt;li&gt;Amélioration du Parallel hash join (paralléliser le remplissage d’une seule table de hachage, partagée) et parallelized sequential scans&lt;/li&gt;&#xA;&lt;li&gt;Parallélisation sur la création de vue matérialisée et table à partir des résultats d&amp;rsquo;une requête&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE TABLE .. AS, SELECT INTO et CREATE MATERIALIZED VIEW.&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout d&amp;rsquo;un paramètre de configuration du serveur « parallel_leader_participation » qui permet de contrôler si le processus leader participe à l&amp;rsquo;exécution des sous plans d&amp;rsquo;exécution&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;Amélioration du partitionnement&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;La possibilité de partitionner une table par hashage de clé (en plus des autres)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE TABLE hash1 (col1 NUMERIC, col2 VARCHAR(10)) PARTITION BY HASH(col1);&#xD;&#xA;CREATE TABLE hash1a PARTITION OF hash1 FOR VALUES WITH (MODULUS 4, REMAINDER 0) ;&#xD;&#xA;CREATE TABLE hash1b PARTITION OF hash1 FOR VALUES WITH (MODULUS 4, REMAINDER 1) ;&#xD;&#xA;CREATE TABLE hash1c PARTITION OF hash1 FOR VALUES WITH (MODULUS 4, REMAINDER 2) ;&#xD;&#xA;CREATE TABLE hash1d PARTITION OF hash1 FOR VALUES WITH (MODULUS 4, REMAINDER 3) ;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout possible d&amp;rsquo;une partition par défaut pour les données ne correspondant à aucune partition&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE TABLE table1d PARTITION OF table1 DEFAULT;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;La possibilité de créer des clés primaires, clés étrangères, index et triggers qui seront automatiquement applicables sur l&amp;rsquo;ensemble des partitions&lt;/li&gt;&#xA;&lt;li&gt;Support du changement automatique de partition en cas de mise à jour de la clé de partitionnement&lt;/li&gt;&#xA;&lt;li&gt;Amélioration des performances lors des SELECT sur la lecture des partitions&lt;/li&gt;&#xA;&lt;li&gt;Support des upsert sur les tables partitionnées&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;INSERT  INTO  tablep1 (col1, col2) &#xD;&#xA;VALUES  (100,  &#39;update&#39;) &#xD;&#xA;ON  CONFLICT ON CONSTRAINT tablep1_pkey &#xD;&#xA;DO UPDATE SET col2=&#39;update&#39; ;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Gestion des transactions dans les procédures stockées&lt;/h2&gt;&#xA;&lt;p&gt;PostgreSQL 11 introduit la possibilité de créer des procédures (en PL/pgSQL, PL/Perl, PL/Python, et PL/Tcl). Depuis de nombreuses années, il est possible dans PostgreSQL de créer des fonctions et bien ici ça y ressemble fortement, sauf que l&amp;rsquo;on ne retourne pas de résultats et que l&amp;rsquo;on peut gérer les transactions !&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE PROCEDURE transaction_test1()&#xD;&#xA;LANGUAGE plpgsql&#xD;&#xA;AS $$&#xD;&#xA;BEGIN&#xD;&#xA;  FOR i IN 0..9 LOOP&#xD;&#xA;    INSERT INTO table1 (col1) VALUES (i) ;&#xD;&#xA;    IF i % 2 = 0 THEN&#xD;&#xA;      COMMIT;&#xD;&#xA;    ELSE&#xD;&#xA;      ROLLBACK;&#xD;&#xA;    END IF;&#xD;&#xA;  END LOOP;&#xD;&#xA;END;&#xD;&#xA;$$;&lt;/pre&gt;&lt;p&gt;L&amp;rsquo;exécution de ces procédures se fait en utilisant la commande CALL&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CALL transaction_test1();&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Compilation JIT&lt;/h2&gt;&#xA;&lt;p&gt;PostgreSQL 11 introduit le support de la compilation Just-in-Time (JIT) pour optimiser l’exécution de code et d’autres opérations. Utilisant des composants du projet LLVM, l’introduction de JIT dans PostgreSQL accélère les requêtes utilisant des expressions, listes, agrégats, projections, ainsi que certaines opérations internes.&lt;/p&gt;&#xA;&lt;p&gt;Pour pouvoir utiliser la compilation JIT, vous devrez installer la dépendance LLVM puis activer la compilation JIT soit dans le fichier de configuration (jit = on), soit durant votre session en exécutant SET jit = on.&lt;/p&gt;&#xA;&lt;p&gt;La compilation JIT bénéficie surtout aux requêtes de longue durée et limitées par le processeur. Ce seront souvent des requêtes analytiques (OLAP). Pour les requêtes courtes, le surcoût apporté par la compilation JIT sera souvent supérieur au temps qu&amp;rsquo;elle permet de gagner.&lt;/p&gt;&#xA;&lt;h2&gt;Améliorations générales SQL&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Support de toutes les clauses (SQL:2011) dans les fonctions de fenêtrage ce qui permet maintenant l’utilisation de RANGE dans des clauses PRECEDING/FOLLOWING, GROUPS ou d’exclusion&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;WINDOW window_name AS ( &#xD;&#xA;  [ PARTITION BY expression [, ...] ]&#xD;&#xA;  [ ORDER BY expression [ ASC | DESC | USING operator ] [ NULLS { FIRST | LAST } ] [, ...] ]&#xD;&#xA;  [ frame_clause ]&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;frame_clause :&#xD;&#xA;{ RANGE | ROWS | GROUPS } frame_start [ frame_exclusion ]&#xD;&#xA;{ RANGE | ROWS | GROUPS } BETWEEN frame_start AND frame_end [ frame_exclusion ]&#xD;&#xA;&#xD;&#xA;frame_start / frame_end :&#xD;&#xA;&#xD;&#xA;UNBOUNDED PRECEDING&#xD;&#xA;offset PRECEDING&#xD;&#xA;CURRENT ROW&#xD;&#xA;offset FOLLOWING&#xD;&#xA;UNBOUNDED FOLLOWING&#xD;&#xA;&#xD;&#xA;frame_exclusion :&#xD;&#xA;&#xD;&#xA;EXCLUDE CURRENT ROW&#xD;&#xA;EXCLUDE GROUP&#xD;&#xA;EXCLUDE TIES&#xD;&#xA;EXCLUDE NO OTHERS&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout de fonctions de hash sha-2 : sha224(), sha256(), sha384() et sha512()&lt;/li&gt;&#xA;&lt;li&gt;Ajout de fonctions de recherche plein texte : json(b)_to_tsvector() et websearch_to_tsquery()&lt;/li&gt;&#xA;&lt;li&gt;Ajout de l&amp;rsquo;opérateur ^@ identique à LIKE &amp;lsquo;mot%&amp;rsquo; mais plus efficace sur un index b-tree&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;text ^@ text&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Amélioration des index avec l&amp;rsquo;ajout du mot clef INCLUDE, qui permet d&amp;rsquo;indiquer une liste de colonnes qui seront incluses dans l&amp;rsquo;index comme des colonnes non clés. L&amp;rsquo;ajout de colonnes dans la création d&amp;rsquo;index permet alors l&amp;rsquo;utilisation de parcours d&amp;rsquo;index couvrants.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE [ UNIQUE ] INDEX [ CONCURRENTLY ] [ [ IF NOT EXISTS ] nom ] ON [ ONLY ] nom_table [ USING méthode ]&#xD;&#xA;    ( { nom_colonne | ( expression ) } [ COLLATE collation ] [ classeop ] [ ASC | DESC ] [ NULLS { FIRST | LAST } ] [, ...] )&#xD;&#xA;    [ INCLUDE ( nom_colonne [, ...] ) ]&#xD;&#xA;    [ WITH ( parametre_stockage = valeur [, ... ] ) ]&#xD;&#xA;    [ TABLESPACE nom_espacelogique ]&#xD;&#xA;    [ WHERE prédicat ]&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Amélioration de l’ordre ALTER TABLE .. ADD COLUMN .. DEFAULT .. avec une valeur par défaut non NULL n’a plus besoin de réécrire entièrement la table lors de son exécution, ce qui entraîne une grosse amélioration des performances.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;Authentification&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout de l&amp;rsquo;authentification LDAP, mais celle ci n&amp;rsquo;est utilisée que pour valider les paires nom d&amp;rsquo;utilisateur/mot de passe. De ce fait, pour pouvoir utiliser LDAP comme méthode d&amp;rsquo;authentification, l&amp;rsquo;utilisateur doit préalablement exister dans la base.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;psql&lt;/h2&gt;&#xA;&lt;p&gt;Le client psql évolue lui aussi :&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout des commandes « quit » et « exit » dans le client psql&amp;#8230; (fini les personnes prisent de panique pour sortir de leur terminal ??? )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://media.giphy.com/media/xTk9ZBWrma4PIC9y4E/giphy.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout de la commande \gdesc pour afficher les noms et types de colonnes du résultat de la requête&lt;/li&gt;&#xA;&lt;li&gt;Ajout de variables pour les erreurs et activités des requêtes ERROR, SQLSTATE, ROW_COUNT, LAST_ERROR_MESSAGE, and LAST_ERROR_SQLSTATE.&lt;/li&gt;&#xA;&lt;li&gt;Ajout de la possibilité de tester l&amp;rsquo;existence d&amp;rsquo;une variable par exemple dans un if&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;\if :{?variable_name}&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Amélioration de la complétion dans l&amp;rsquo;écriture de requêtes&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;En dehors de ces nouveautés en terme d&amp;rsquo;utilisation, cette nouvelle version apporte aussi des améliorations de performance et d&amp;rsquo;utilisation de mémoire.&lt;/p&gt;&#xA;&lt;p&gt;Et voilà, nous avons fini notre petit tour rapide des nouveautés de postgreSQL 11, mais ne vous inquiétez pas une version 12 est déjà en préparation pour le troisième trimestre 2019.&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a href=&#34;https://blog.atolcd.com/sortie-de-postgresql-11/&#34;&gt;Sortie de PostgreSQL 11&lt;/a&gt; est apparu en premier sur &lt;a href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.atolcd.com/sortie-de-postgresql-11/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=sortie-de-postgresql-11" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Après seulement une release candidate (mais auparavant 4 version bêta), PostgreSQL 11 vient de sortir!!!! Et comme à chaque nouvelle version son lot de nouveautés que nous allons essayer de passer rapidement en revue. Amélioration de la parallélisation Quoi de... &lt;a class=&#34;more-link&#34; href=&#34;https://blog.atolcd.com/sortie-de-postgresql-11/&#34;&gt;Continue Reading &amp;#8594;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a href=&#34;https://blog.atolcd.com/sortie-de-postgresql-11/&#34;&gt;Sortie de PostgreSQL 11&lt;/a&gt; est apparu en premier sur &lt;a href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Caroline Chanlon</name>
    </author>
  </entry>
  <entry>
    <title>Pimp My PostgreSQL</title>
    <updated>2018-01-26T11:07:23Z</updated>
    <id>tag:blog.atolcd.com,2018-01-26:/pimp-my-postgresql/</id>
    <content type="html">&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;alignright wp-image-2934&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2018/01/pimp-my-postgresql.png&#34; alt=&#34;&#34; width=&#34;491&#34; height=&#34;290&#34; /&gt;Une question qui se pose souvent après l&amp;rsquo;installation d&amp;rsquo;une instance postgreSQL, c&amp;rsquo;est comment configurer ce fichier postgresql.conf. Dans le doute souvent, beaucoup de personnes conservent la configuration par défaut, ce qui ne va pas poser vraiment de problème pour une utilisation légère. Mais si on a une instance postgreSQL avec postGIS et des millions d&amp;rsquo;enregistrements, cela va rapidement se trouver problématique si on laisse les valeurs par défaut&amp;#8230;&lt;/p&gt;&#xA;&lt;p&gt;Pour les initiés qui installent régulièrement de nouvelles instances postgreSQL, se plonger dans les plus de 600 lignes du fichier de configuration par défaut ne les effraie pas. Mais on n&amp;rsquo;installe pas forcément tous les jours un nouveau serveur avec des caractéristiques différentes. Il faut donc soit se replonger pour une centième fois dans la documentation de postgres pour se rappeler à notre bonne mémoire les différents paramètres et les valeurs à adapter en fonction de la ram, disque, cpu&amp;#8230;&lt;/p&gt;&#xA;&lt;p&gt;En plus de devoir se rappeler les &lt;strong&gt;paramètres à modifier,&lt;/strong&gt; il faut aussi connaître les &lt;strong&gt;règles de calcul &lt;/strong&gt;pour les valeurs comme par exemple le « effective_cache_size » qui est préconisé à 75% de la ram total du serveur si celui-ci est dédié à postgres.&lt;/p&gt;&#xA;&lt;p&gt;Le but de cet article n&amp;rsquo;est pas de voir ni de détailler tous les paramètres de configuration possibles et inimaginables, mais de voir cela comme un mémo pour les initiés ou de s’interroger sur les &lt;strong&gt;paramètres qui seraient potentiellement à modifier en fonction du serveur&lt;/strong&gt; (et des applications qui l&amp;rsquo;utilisent) si l&amp;rsquo;on ne connait pas l&amp;rsquo;utilisation des paramètres de ce fichier postgresql.conf.&lt;/p&gt;&#xA;&lt;p&gt;Pour cela un petit outil a été conçu par Cybertec, qui permet de renseigner quelques caractéristiques et de voir évoluer en conséquence le fichier postgresql.conf notamment en fonction de la ram du serveur, du nombre de cpu, de la taille de la base&amp;#8230; etc.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;alignnone size-full wp-image-2925&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2018/01/pgconfigurator.png&#34; alt=&#34;&#34; width=&#34;1005&#34; height=&#34;993&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2018/01/pgconfigurator.png 1005w, https://blog.atolcd.com/wp-content/uploads/2018/01/pgconfigurator-300x296.png 300w, https://blog.atolcd.com/wp-content/uploads/2018/01/pgconfigurator-768x759.png 768w, https://blog.atolcd.com/wp-content/uploads/2018/01/pgconfigurator-945x934.png 945w, https://blog.atolcd.com/wp-content/uploads/2018/01/pgconfigurator-600x593.png 600w&#34; sizes=&#34;(max-width: 1005px) 100vw, 1005px&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cela ne remplace pas une connaissance aguerrie de postgreSQL et de sa configuration mais ça permet de se faire une idée des paramètres à adapter en fonction de son serveur et de ses besoins.&lt;/p&gt;&#xA;&lt;p&gt;Cet outil est disponible en ligne à cette adresse : &lt;a href=&#34;http://pgconfigurator.cybertec.at/&#34;&gt;http://pgconfigurator.cybertec.at/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a href=&#34;https://blog.atolcd.com/pimp-my-postgresql/&#34;&gt;Pimp My PostgreSQL&lt;/a&gt; est apparu en premier sur &lt;a href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.atolcd.com/pimp-my-postgresql/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=pimp-my-postgresql" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Une question qui se pose souvent après l&amp;#8217;installation d&amp;#8217;une instance postgreSQL, c&amp;#8217;est comment configurer ce fichier postgresql.conf. Dans le doute souvent, beaucoup de personnes conservent la configuration par défaut, ce qui ne va pas poser vraiment de problème pour une... &lt;a class=&#34;more-link&#34; href=&#34;https://blog.atolcd.com/pimp-my-postgresql/&#34;&gt;Continue Reading &amp;#8594;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a href=&#34;https://blog.atolcd.com/pimp-my-postgresql/&#34;&gt;Pimp My PostgreSQL&lt;/a&gt; est apparu en premier sur &lt;a href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Caroline Chanlon</name>
    </author>
  </entry>
  <entry>
    <title>Sortie de PostgreSQL 10</title>
    <updated>2017-10-05T13:28:32Z</updated>
    <id>tag:blog.atolcd.com,2017-10-05:/sortie-de-postgresql-10/</id>
    <content type="html">&lt;p&gt;Aujourd&amp;rsquo;hui, c&amp;rsquo;est la sortie de &lt;strong&gt;PostgreSQL 10&lt;/strong&gt;!!!! Première révolution, la numérotation des versions : on passe de 9.4&amp;#8230;9.6 pour les versions majeures à 10, 11, 12&amp;#8230; Ce point est important car un changement de version majeure implique une migration des données. Une opération beaucoup plus lourde que la seule mise à jour des exécutables !&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;aligncenter size-full wp-image-2788&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2017/10/postgresql-10.jpg&#34; alt=&#34;&#34; width=&#34;558&#34; height=&#34;337&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2017/10/postgresql-10.jpg 558w, https://blog.atolcd.com/wp-content/uploads/2017/10/postgresql-10-300x181.jpg 300w&#34; sizes=&#34;(max-width: 558px) 100vw, 558px&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;Voici quelques détails sur cette&lt;strong&gt; nouvelle version 10&lt;/strong&gt; et ce qu&amp;rsquo;elle apporte :&lt;/p&gt;&#xA;&lt;h2&gt;Performance et partitionnement&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Le partitionnement de table est maintenant un attribut de la table :&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE TABLE table_name ( ... )&#xD;&#xA;[ PARTITION BY { RANGE | LIST } ( { column_name | ( expression ) }&#xD;&#xA;&#xD;&#xA;CREATE TABLE table_name&#xD;&#xA;PARTITION OF parent_table [ (&#xD;&#xA;) ] FOR VALUES partition_bound_spec&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;PostgreSQL 10 va plus loin dans la parallélisation avec le parallélisme des Index-Only Scan, Index Scan, Bitmap Heap Scan, Merge Join / Gather Merge, Subplan-Related Improvements&lt;/li&gt;&#xA;&lt;li&gt;Amélioration des performances pour les agrégats et jointures avec &lt;code&gt;postgres_fdw&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Amélioration des performances de l&amp;rsquo;analyseur de requête&lt;/li&gt;&#xA;&lt;li&gt;Apparition des statistiques multi-colonnes&lt;/li&gt;&#xA;&lt;li&gt;Amélioration du plan d’exécution des requêtes&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;Réplication et scalabilité&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Réplication logique : légère et basée sur les WAL, répliquant les objets individuellement via les commandes PUBLICATION (primaire) et SUBSCRIPTION (secondaire)&lt;/li&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE PUBLICATION financials FOR TABLE ONLY loans, ONLY fines;&lt;/pre&gt;&lt;br /&gt;&#xA;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE SUBSCRIPTION financials&#xD;&#xA;CONNECTION &#39;dbname=libdata user=postgres host=172.17.0.2&#39;&#xD;&#xA;PUBLICATION financials;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;QUORUM replication : avec ANY et FIRST pour synchronous_standby_names;&lt;/li&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;synchronous_standby_names = ANY 2(node1,node2,node3);&#xD;&#xA;synchronous_standby_names = FIRST 2(node1,node2);&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Suppression automatique à la fin de la session des slots de réplication temporaires&lt;/li&gt;&#xA;&lt;li&gt;Amélioration de libpq permettant des connexions a de multiples systèmes&lt;/li&gt;&#xA;&lt;li&gt;Amélioration des performances de la réplication physique&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;Administration&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Support de la compression pour pg_receivewal&lt;/li&gt;&#xA;&lt;li&gt;Ajout d&amp;rsquo;informations sur les Background processes et Wait Events dans pg_stat_activity&lt;/li&gt;&#xA;&lt;li&gt;Ajout de fonctions qui remontent à l&amp;rsquo;utilisateur des informations sur le status de transaction. L&amp;rsquo;usage principal de ces fonctions est de déterminer les transactions commitées entre deux snapshots.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;txid_status(bigint)&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Fonctionnalités SQL et développeurs&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Gestion de colonne Identity qui vise à remplacer l&amp;rsquo;utilisation du type serial et qui est conforme au standard SQL&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE TABLE test_new (&#xD;&#xA;    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,&#xD;&#xA;    payload text&#xD;&#xA;);&lt;/pre&gt;&lt;p&gt;plus d&amp;rsquo;informations sur ce sujet &lt;a href=&#34;https://blog.2ndquadrant.com/postgresql-10-identity-columns/&#34;&gt;ici par exemple&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Possibilité de renommer la valeur d&amp;rsquo;une énumération&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE TYPE langage AS ENUM (&#39;SQL&#39;, &#39;JAVA&#39;, &#39;HTML&#39;) ;&#xD;&#xA;ALTER TYPE langage RENAME VALUE &#39;HTML&#39; TO &#39;HTML5&#39; ;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout des triggers AFTER STATEMENT qui peuvent avoir accès à l’ensemble des lignes modifiées, avant et après changement, à travers une pseudo-variable de type table&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE TRIGGER nom_trigger AFTER DELETE ON nom_table&#xD;&#xA;REFERENCING OLD TABLE AS OLD&#xD;&#xA;FOR EACH STATEMENT&#xD;&#xA;EXECUTE PROCEDURE nom_procedure();&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout de la fonction xmltable qui produit une table basée sur la valeur XML donnée.&lt;/li&gt;&#xA;&lt;li&gt;Supprimer des éléments d&amp;rsquo;un JSONB&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;SELECT &#39;{&#34;a&#34;:1 , &#34;b&#34;:2, &#34;c&#34;:3}&#39;::jsonb - &#39;{a,c}&#39;::text[] ;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Il est possible de créer des indexes full text sur une colonne JSON ou JSONB&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE INDEX bookdata_fts ON bookdata&#xD;&#xA;USING gin (( to_tsvector(&#39;english&#39;,bookdata) ));&#xD;&#xA;&#xD;&#xA;SELECT bookdata -&amp;gt; &#39;title&#39;&#xD;&#xA;FROM bookdata&#xD;&#xA;WHERE to_tsvector(&#39;english&#39;,bookdata) @@ to_tsquery(&#39;duke&#39;);&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Sécurité&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Authentification SCRAM plus sécurisée que md5&lt;/li&gt;&#xA;&lt;li&gt;Création de nouveau rôle pour le monitoring évitant ainsi d&amp;rsquo;être super utilisateur&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;pg_read_all_settings : Lit toutes les variables de configuration, y compris celles normalement visibles des seuls super-utilisateurs.&#xD;&#xA;pg_read_all_stats : Lit toutes les vues pg_stat_* et utilise plusieurs extensions relatives aux statistiques, y compris celles normalement visibles des seuls super-utilisateurs.&#xD;&#xA;pg_stat_scan_tables : Exécute des fonctions de monitoring pouvant prendre des verrous verrous ACCESS SHARE sur les tables, potentiellement pour une longue durée.&#xD;&#xA;pg_monitor : Lit et exécute plusieurs vues et fonctions de monitoring. Ce rôle est membre de pg_read_all_settings, pg_read_all_stats et pg_stat_scan_tables.&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout de politiques restrictive dans les politiques de sécurité pour l&amp;rsquo;accès aux lignes et plus seulement de politiques permissives&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE POLICY admin_local_only ON passwd AS RESTRICTIVE TO admin&#xD;&#xA;    USING (pg_catalog.inet_client_addr() IS NULL);&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Autres fonctionnalités&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;file_fdw peut maintenant utiliser les programmes&lt;/li&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE FOREIGN TABLE&#xD;&#xA;   test(a int, b text)&#xD;&#xA;   SERVER csv&#xD;&#xA;   OPTIONS (program &#39;gunzip -c /tmp/data.czv.gz&#39;);&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;support des collations ICU&lt;/li&gt;&#xA;&lt;li&gt;Ajout d&amp;rsquo;un module amcheck permettant de vérifier cohérence / corruption d&amp;rsquo;un index B-Tree&lt;/li&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE EXTENSION amcheck ;&#xD;&#xA;   SELECT bt_index_check(&#39;idx1_check1&#39;) ;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;Modifications entrainant une incompatibilité ascendante&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;“xlog” et “clog” qui deviennent respectivement “wal” et “xact”.&lt;/li&gt;&#xA;&lt;li&gt;fin du support du protocole client/serveur 1.0 (clients datant d’avant la version 6.3)&lt;/li&gt;&#xA;&lt;li&gt;changement de valeurs par défaut pour pg_basebackup&lt;/li&gt;&#xA;&lt;li&gt;fin du support des TIMESTAMP avec floating point.&lt;/li&gt;&#xA;&lt;li&gt;Le module contrib/tsearch2 a été supprimé qui permettait une comptabilité avec les fonction de recherche full text avant la version 8.3&lt;/li&gt;&#xA;&lt;li&gt;fin du support de la commande pg_dump pour les bases de données plus anciennes que la version 8.0&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Et voilà, nous avons fini notre petit tour rapide des nouveautés de postgreSQL 10 mais une version 11 est déjà prévue pour dans 12 mois !&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a href=&#34;https://blog.atolcd.com/sortie-de-postgresql-10/&#34;&gt;Sortie de PostgreSQL 10&lt;/a&gt; est apparu en premier sur &lt;a href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.atolcd.com/sortie-de-postgresql-10/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=sortie-de-postgresql-10" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Aujourd&amp;#8217;hui, c&amp;#8217;est la sortie de PostgreSQL 10!!!! Première révolution, la numérotation des versions : on passe de 9.4&amp;#8230;9.6 pour les versions majeures à 10, 11, 12&amp;#8230; Ce point est important car un changement de version majeure implique une migration des... &lt;a class=&#34;more-link&#34; href=&#34;https://blog.atolcd.com/sortie-de-postgresql-10/&#34;&gt;Continue Reading &amp;#8594;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a href=&#34;https://blog.atolcd.com/sortie-de-postgresql-10/&#34;&gt;Sortie de PostgreSQL 10&lt;/a&gt; est apparu en premier sur &lt;a href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Caroline Chanlon</name>
    </author>
  </entry>
  <entry>
    <title>Nouveau module d’export de données pour REMOcRA</title>
    <updated>2017-05-12T13:52:26Z</updated>
    <id>tag:blog.atolcd.com,2017-05-12:/nouveau-module-dexport-de-donnees-remocra/</id>
    <content type="html">&lt;h1&gt;Objectif du module&lt;/h1&gt;&#xA;&lt;p&gt;Le SDIS du Var ne disposait pas jusqu&amp;rsquo;à ce jour, à travers la plate-forme collaborative &lt;a href=&#34;http://sdis.atolcd.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;REMOcRA&lt;/a&gt;, d&amp;rsquo;une méthode simple pour exporter le contenu de la base de données auprès de ses partenaires. Les demandes étant de plus en plus récurrentes, le SDIS du Var a décidé &lt;strong&gt;de faire évoluer l&amp;rsquo;application pour l&amp;rsquo;enrichir d&amp;rsquo;un module dédié aux exports&lt;/strong&gt; et a confié à Atol Conseils et Développements sa réalisation en veillant à respecter les besoins suivants :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;En tant qu&amp;rsquo;administrateur de l&amp;rsquo;extranet, être en mesure de réaliser facilement des exports de données en se basant sur des modèles administrables. Ce module devait être en mesure de produire des fichiers tabulaires ou des fichiers géographiques.&lt;/li&gt;&#xA;&lt;li&gt;En tant que partenaire, être en mesure d&amp;rsquo;exporter soit même les données mises à disposition par le SDIS sur un territoire autorisé.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1&gt;Comment ça marche ?&lt;/h1&gt;&#xA;&lt;h2&gt;Un fonctionnement basé sur des modèles d&amp;rsquo;exports&lt;/h2&gt;&#xA;&lt;p&gt;Le mécanisme d&amp;rsquo;export repose sur des modèles. Ces derniers peuvent être référencés directement par les administrateurs de la plate-forme REMOcRA grâce à des fichiers de définition de modèle (format XML) déposés fia FTP dans un sous-dossier de REMOcRA.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;aligncenter size-large wp-image-2626&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-1-1024x220.png&#34; alt=&#34;&#34; width=&#34;676&#34; height=&#34;145&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-1-1024x220.png 1024w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-1-300x64.png 300w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-1-768x165.png 768w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-1-945x203.png 945w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-1-600x129.png 600w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-1.png 1067w&#34; sizes=&#34;(max-width: 676px) 100vw, 676px&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;Le fichier XML précise principalement la requête SQL à utiliser pour filtrer et formater les données à la bonne structure. L&amp;rsquo;attribut spatial du nœud racine permet de préciser si l&amp;rsquo;export est de type tabulaire (CSV) ou géographique (Esri Shapefile). Dans le cas d&amp;rsquo;un export géographique, la colonne « wkt » contenant la géométrie encodée en WKT est exploitée.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;aligncenter size-full wp-image-2627&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-2.png&#34; alt=&#34;&#34; width=&#34;822&#34; height=&#34;341&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-2.png 822w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-2-300x124.png 300w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-2-768x319.png 768w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-2-600x249.png 600w&#34; sizes=&#34;(max-width: 822px) 100vw, 822px&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;Le référencement des modèles est réalisé directement depuis l&amp;rsquo;interface en exécutant depuis REMOcRA le traitement « Référencer les modèles d&amp;rsquo;export de données » disponible dans la catégorie d&amp;rsquo;applications « Divers »&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;aligncenter size-full wp-image-2628&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-3.png&#34; alt=&#34;&#34; width=&#34;968&#34; height=&#34;288&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-3.png 968w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-3-300x89.png 300w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-3-768x228.png 768w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-3-945x281.png 945w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-3-600x179.png 600w&#34; sizes=&#34;(max-width: 968px) 100vw, 968px&#34; /&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Un traitement spécifique intégrant le filtrage spatial des données&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;aligncenter size-large wp-image-2629&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-4-1024x525.png&#34; alt=&#34;&#34; width=&#34;676&#34; height=&#34;347&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-4-1024x525.png 1024w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-4-300x154.png 300w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-4-768x394.png 768w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-4-945x484.png 945w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-4-600x307.png 600w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-4.png 1167w&#34; sizes=&#34;(max-width: 676px) 100vw, 676px&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;La réalisation d&amp;rsquo;un export de données depuis le système REMOcRA se base sur le mécanisme suivant :&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;L&amp;rsquo;utilisateur de profil « administrateur » dispose d&amp;rsquo;un nouveau traitement intitulé « Exporter les données à partir d&amp;rsquo;un modèle ». Ce dernier permet de réaliser des exports de données en s&amp;rsquo;appuyant sur la liste de modèles.&lt;/li&gt;&#xA;&lt;li&gt;Après avoir choisi son modèle, la demande d&amp;rsquo;export formulée par l&amp;rsquo;utilisateur est stockée en file d&amp;rsquo;attente. Une tâche planifiée vérifie régulièrement la présence de demandes en attente&lt;/li&gt;&#xA;&lt;li&gt;Lors de l’exécution de la tâche planifiée, le moteur ETL exécute les demandes d&amp;rsquo;export en attente en s&amp;rsquo;appuyant sur les informations contenues dans le modèle pour générer un fichier CSV (dans le cas de données non géographiques) ou des fichiers de formes (fichiers ESRI Shapefile).&lt;/li&gt;&#xA;&lt;li&gt;A l&amp;rsquo;issu du traitement, les fichiers produits sont compressés au format ZIP et un lien de téléchargement est fourni dans un mél envoyé au demandeur du traitement.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;aligncenter size-full wp-image-2630&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-5.png&#34; alt=&#34;&#34; width=&#34;962&#34; height=&#34;367&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-5.png 962w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-5-300x114.png 300w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-5-768x293.png 768w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-5-945x361.png 945w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-5-600x229.png 600w&#34; sizes=&#34;(max-width: 962px) 100vw, 962px&#34; /&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Une mutualisation des connaissances !&lt;/h2&gt;&#xA;&lt;p&gt;Le SDIS du Var (83), à l&amp;rsquo;initiative de la plate-forme collaborative métier REMOcRA, a décidé de faire bénéficier ses confrères de sa démarche en redistribuant gratuitement l&amp;rsquo;outil et ce module sous licence Creative Commons.&lt;br /&gt;&#xA;Dans cette démarche open source, la solution et le nouveau module sont disponibles sur Github pour installation et test à tous les SDIS sur &lt;a href=&#34;https://github.com/atolcd/sdis-remocra&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;https://github.com/atolcd/sdis-remocra&lt;/a&gt;. Pour plus d&amp;rsquo;information sur la solution REMOcRA, consulter &lt;a href=&#34;http://sdis.atolcd.com&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;http://sdis.atolcd.com&lt;/a&gt;&lt;br /&gt;&#xA;&lt;em&gt;REMOcRA est cofinancé par l’Union européenne. L’Europe s’engage avec le Fonds européen de développement régional.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a href=&#34;https://blog.atolcd.com/nouveau-module-dexport-de-donnees-remocra/&#34;&gt;Nouveau module d&amp;rsquo;export de données pour REMOcRA&lt;/a&gt; est apparu en premier sur &lt;a href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.atolcd.com/nouveau-module-dexport-de-donnees-remocra/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=nouveau-module-dexport-de-donnees-remocra" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Objectif du module Le SDIS du Var ne disposait pas jusqu&amp;#8217;à ce jour, à travers la plate-forme collaborative REMOcRA, d&amp;#8217;une méthode simple pour exporter le contenu de la base de données auprès de ses partenaires. Les demandes étant de plus... &lt;a class=&#34;more-link&#34; href=&#34;https://blog.atolcd.com/nouveau-module-dexport-de-donnees-remocra/&#34;&gt;Continue Reading &amp;#8594;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a href=&#34;https://blog.atolcd.com/nouveau-module-dexport-de-donnees-remocra/&#34;&gt;Nouveau module d&amp;rsquo;export de données pour REMOcRA&lt;/a&gt; est apparu en premier sur &lt;a href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Caroline Chanlon</name>
    </author>
  </entry>
  <entry>
    <title>Nouveau dans pg13: Colonne leader_pid dans pg_stat_activity</title>
    <updated>2020-03-08T05:33:26Z</updated>
    <id>tag:rjuju.github.io,2020-03-08:/postgresqlfr/2020/03/08/nouveau-dans-pg13-leader_pid.html</id>
    <content type="html">&lt;h3 id=&#34;nouvelle-colonne-leader_pid-dans-la-vue-pg_stat_activity&#34;&gt;Nouvelle colonne leader_pid dans la vue pg_stat_activity&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Étonnamment, depuis que les requêtes parallèles ont été ajoutées dans&#xA;PostgreSQL 9.6, il était impossible de savoir à quel processus client était lié&#xA;un worker parallèle.  Ainsi, comme &lt;a href=&#34;https://twitter.com/g_lelarge/status/1209486212190343168&#34;&gt;Guillaume l’a fait&#xA;remarquer&lt;/a&gt;, it makes&#xA;il est assez difficile de construire des outils simples permettant&#xA;d’échantillonner les événements d’attente liés à tous les processus impliqués&#xA;dans une requête.  Une solution simple à ce problème est d’exporter&#xA;l’information de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;lock group leader&lt;/code&gt; disponible dans le processus client au&#xA;niveau SQL :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-plaintext highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;commit b025f32e0b5d7668daec9bfa957edf3599f4baa8&#xA;Author: Michael Paquier &amp;lt;michael@paquier.xyz&amp;gt;&#xA;Date:   Thu Feb 6 09:18:06 2020 +0900&#xA;&#xA;Add leader_pid to pg_stat_activity&#xA;&#xA;This new field tracks the PID of the group leader used with parallel&#xA;query.  For parallel workers and the leader, the value is set to the&#xA;PID of the group leader.  So, for the group leader, the value is the&#xA;same as its own PID.  Note that this reflects what PGPROC stores in&#xA;shared memory, so as leader_pid is NULL if a backend has never been&#xA;involved in parallel query.  If the backend is using parallel query or&#xA;has used it at least once, the value is set until the backend exits.&#xA;&#xA;Author: Julien Rouhaud&#xA;Reviewed-by: Sergei Kornilov, Guillaume Lelarge, Michael Paquier, Tomas&#xA;Vondra&#xA;Discussion: https://postgr.es/m/CAOBaU_Yy5bt0vTPZ2_LUM6cUcGeqmYNoJ8-Rgto+c2+w3defYA@mail.gmail.com&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Avec cette modification, il est maintenant très simple de trouver tous les&#xA;processus impliqués dans une requête parallèle.  Par exemple :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;leader_pid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;  &lt;span class=&#34;n&#34;&gt;array_agg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;leader_pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;members&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_stat_activity&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;leader_pid&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IS&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NULL&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;BY&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;leader_pid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;       &lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;leader_pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;members&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;-------------------+------------+---------------&lt;/span&gt;&#xA; &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;      &lt;span class=&#34;mi&#34;&gt;31630&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32269&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32268&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Attention toutefois, comme indiqué dans le message de commit, si la colonne&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;leader_pid&lt;/code&gt; à la même valeur que la colonne &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pid&lt;/code&gt;, cela ne veut pas forcément&#xA;dire que le processus client est actuellement en train d’effectuer une requête&#xA;parallèle, car une fois que le champ est positionné il n’est jamais&#xA;réinitialisé.  De plus, pour éviter tout surcoût, aucun verrou supplémentaire&#xA;n’est maintenu lors de l’affichage de ces données.  Cela veut dire que chaque&#xA;ligne est traitée indépendamment.  Ainsi, bien que cela soit fort peu probable,&#xA;vous pouvez obtenir des données incohérentes dans certaines circonstances,&#xA;comme par exemple un worker paralèlle pointant vers un pid qui est déjà&#xA;déconnecté.&lt;/p&gt;&#xA;&#xA;    &lt;p&gt;&lt;a href=&#34;https://rjuju.github.io/postgresqlfr/2020/03/08/nouveau-dans-pg13-leader_pid.html&#34;&gt;Nouveau dans pg13: Colonne leader_pid dans pg_stat_activity&lt;/a&gt; was originally published by Julien Rouhaud at &lt;a href=&#34;https://rjuju.github.io&#34;&gt;rjuju&#39;s home&lt;/a&gt; on March 08, 2020.&lt;/p&gt;</content>
    <link href="https://rjuju.github.io/postgresqlfr/2020/03/08/nouveau-dans-pg13-leader_pid.html" rel="alternate"></link>
    <summary type="html"></summary>
    <author>
      <name>Julien Rouhaud</name>
    </author>
  </entry>
  <entry>
    <title>pg qualstats 2: Suggestion d&#39;index globale</title>
    <updated>2020-01-06T12:23:29Z</updated>
    <id>tag:rjuju.github.io,2020-01-06:/postgresqlfr/2020/01/06/pg_qualstats-2-suggestion-index-globale.html</id>
    <content type="html">&lt;p&gt;Parvenir à une suggestion d’index de qualité peut être une tâche complexe.&#xA;Cela nécessite à la fois une connaissance des requêtes applicatives et des&#xA;spécificités de la base de données.  Avec le temps de nombreux projets ont&#xA;essayé de résoudre ce problème, l’un d’entre eux étant &lt;a href=&#34;https://powa.readthedocs.io/&#34;&gt;PoWA version&#xA;3&lt;/a&gt;, avec l’aide de &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/stats_extensions/pg_qualstats.html&#34;&gt;pg_qualstats&#xA;extension&lt;/a&gt;.&#xA;Cet outil donne de plutôt bonnes suggestions d’index, mais il est nécessaire&#xA;d’installer et configurer PoWA, alors que certains utilisateurs aimeraient&#xA;n’avoir que la suggestion d’index globale.  Pour répondre à ce besoin de&#xA;simplicité, l’algorithme utilisé dans PoWA est maintenant disponible dans&#xA;pg_qualstats version 2, sans avoir besoin d’utiliser des composants&#xA;additionnels.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;EDIT: La fonction &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_qualstats_index\_advisor()&lt;/code&gt; a été changée pour retourner&#xA;du &lt;strong&gt;json&lt;/strong&gt; plutôt que du &lt;strong&gt;jsonb&lt;/strong&gt;, afin de conserver la compatibilité avec PostgreSQL&#xA;9.3.  Les requêtes d’exemples sont donc également modifiées pour utiliser&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;json_array_elements()&lt;/code&gt; plutôt que &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;jsonb_array_elements()&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;quest-ce-que-pg_qualstats&#34;&gt;Qu’est-ce que pg_qualstats&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Une manière simple d’expliquer ce qu’est pg_qualstats serait de dire qu’il&#xA;s’agit d’une extension similaire à&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/current/pgstatstatements.html&#34;&gt;pg_stat_statements&lt;/a&gt;&#xA;mais travaillant au niveaux des prédicats.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Cette extension sauvegarde des statistiques utiles pour les clauses &lt;strong&gt;WHERE&lt;/strong&gt;&#xA;et &lt;strong&gt;JOIN&lt;/strong&gt; : à quelle table et quelle colonne un prédicat fait référénce, le&#xA;nombre de fois qu’un prédicat a été utilisé, le nombre d’exécutions de&#xA;l’opérateur sous-jacent, si le prédicat provient d’un parcours d’index ou non,&#xA;la sélectivité, la valeur des constantes et bien plus encore.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Il est possible de déduire beaucoup de choses depuis ces informations.  Par&#xA;exemple, si vous examinez les prédicats qui contiennent des références à des&#xA;tables différentes, vous pouvez trouver quelles tables sont jointes ensembles,&#xA;et à quel point les conditions de jointures sont sélectives.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;suggestion-globale-&#34;&gt;Suggestion Globale ?&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Comment je l’ai mentionné, la suggestion d’index globale ajoutée dans&#xA;pg_qualstats 2 utilise la même approche que celle de PoWA, ainsi cet article&#xA;peut servir à décrire le fonctionnement des deux outils.  La seule différence&#xA;est que vous obtiendrez probablement une suggestion de meilleure qualité avec&#xA;PoWA, puisque plus de prédicats seront disponibles, et que vous pourrez&#xA;également choisir sur quel intervalle de temps vous souhaitez effectuer une&#xA;suggestion d’index manquants.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La chose importante à retenir ici est qu’il s’agit d’une suggestion effectuée&#xA;de manière &lt;strong&gt;globale&lt;/strong&gt;, c’est-à-dire en prenant en compte tous les prédicats&#xA;intéressant en même temps.  Cette approche est différente de toutes les autres&#xA;dont j’ai connaissance, qui ne prennent en compte qu’une seule requête à la&#xA;fois.  Selon moi, une approche globale est meilleure, car il est possible de&#xA;réduire le nombre total d’index, en maximisant l’efficacité des index&#xA;multi-colonnes.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;comment-marche-la-suggestion-globale&#34;&gt;Comment marche la suggestion globale&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;La première étape consiste à récupérer tous les prédicats qui pourraient&#xA;bénéficier de nouveaux index.  C’est particulièrement facile à obtenir avec&#xA;pg_qualstats.  En filtrant les prédicats venant d’un parcours séquentiel,&#xA;exécutés de nombreuses fois et qui filtrent de nombreuses lignes (à la fois en&#xA;nombre et en pourcentage), vous obtenez une liste parfaite de prédicats qui&#xA;auraient très probablement besoin d’un index (ou alors dans certains cas une&#xA;liste des requêtes mal écrites).  Voyons regardons par exemple le cas d’une&#xA;applications qui utiliserait ces 4 prédicats:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/global_advisor_1_quals.png&#34;&gt;&lt;img src=&#34;/images/global_advisor_1_quals.png&#34; alt=&#34;Liste de tous les prédicats&#xA;trouvés&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Ensuite, il faut construire l’ensemble entier des chemins de toutes les&#xA;prédicats joints par un AND logique, qui contiennent d’autres prédicats, qui&#xA;peuvent être eux-meme également joints par des AND logiques.  En utilisants les&#xA;même 4 prédicats vus précédemments, nous obtenons ces chemins :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/global_advisor_2_graphs.png&#34;&gt;&lt;img src=&#34;/images/global_advisor_2_graphs.png&#34; alt=&#34;Construction de tous les chemins de prédicats&#xA;possibles&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Une fois tous les chemins construits, il suffit d’obtenir le meilleur chemin&#xA;pour trouver le meilleur index à suggérer.  Le classement de ces chemins est&#xA;pour le moment fait en donnant un poids à chaque nœud de chaque chemin qui&#xA;correspond au nombre de prédicats simple qu’il contient, et en additionnant le&#xA;poids pour chaque chemin.  C’est une approche très simple, et qui permet de&#xA;favoriser un nombre minimal d’index qui optimisent le plus de requêtes&#xA;possible.  Avec nos exemple, nous obtenons :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/global_advisor_3_weighted.png&#34;&gt;&lt;img src=&#34;/images/global_advisor_3_weighted.png&#34; alt=&#34;Ajout d&#39;un poids à tous les chemins et choix du score le plus&#xA;haut&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Bien évidemment, d’autres approches de classement pourraient être utilisée pour&#xA;prendre en compte d’autres paramètres, et potentiellement obtenir une meilleur&#xA;suggestion.  Par exemple, en prenant en compte également le nombre d’exécution&#xA;ou la sélectivité des prédicats.  Si le ratio de lecture/écriture pour chaque&#xA;table est connu (ce qui est disponible avec l’extension&#xA;&lt;a href=&#34;https://github.com/powa-team/powa-archivist&#34;&gt;powa-archivist&lt;/a&gt;), il serait&#xA;également possible d’adapter le classement pour limiter la suggestion d’index&#xA;pour les tables qui ne sont accédées presque exclusivement en écriture.  Avec&#xA;cet algorithme, ces ajustements seraient relativement simples à faire.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Une fois que le meilleur chemin est trouvé, on peut générer l’ordre de création&#xA;de l’index !  Comme l’ordre des colonnes peut être important, l’ordre est&#xA;généré en récupérant les colonnes de chaque nœud par poids croissant.  Avec&#xA;notre exemple, l’index suivant est généré :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INDEX&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;ON&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Une fois que l’index est trouvé, on supprime simplement les prédicats contenus&#xA;de la liste globale de prédicats et on reprendre de zéro jusqu’à ce qu’il n’y&#xA;ait plus de prédicats.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;un-peu-plus-de-détails-et-mise-en-garde&#34;&gt;Un peu plus de détails et mise en garde&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Bien évidemment, il s’agit ici d’une version simplifiée de l’algorithme de&#xA;suggestion, car d’autres informations sont nécessaires.  Par exemple, la liste&#xA;des prédicats est en réalité ajustée avec les &lt;a href=&#34;https://www.postgresql.org/docs/current/indexes-opclass.html&#34;&gt;classes d’opérateurs et méthode&#xA;d’acces&lt;/a&gt; en&#xA;fonction du type de la colonne et de sont opérateur, afin de s’assurer&#xA;d’obtenir des index valides.  Si plusieurs méthodes d’accès aux index sont&#xA;trouvées pour un même meilleur chemin, &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;btree&lt;/code&gt; sera choisi en priorité.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Cela nous amène à un autre détail : cette approche est principalement pensée&#xA;pour les index &lt;strong&gt;btree&lt;/strong&gt;, pour lesqules l’ordre des colonnes est critiques.&#xA;D’autres méthodes d’accès ne requièrent pas un ordre spécifique pour les&#xA;colonnes, et pour ces méthodes d’accès il est possible qu’une suggestion plus&#xA;optimale soit possible si l’ordre des colonnes n’était pas pris en compte.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Un autre point important est que les classes d’opérateurs et méthodes d’accès&#xA;ne sont pas gérés en dur mais récupérés à l’exécution en utilisant les&#xA;catalogues locaux.  Par conséquent, vous pouvez obtenir des résultats&#xA;différents (et potentiellement meilleurs) si vous faites en sorte d’avoir&#xA;toutes les classes d’opérateur additionelles disponibles quand vous utilisez la&#xA;suggestion d’index globale.  Cela pourrait être les extensions &lt;strong&gt;btree_gist&lt;/strong&gt;&#xA;et &lt;strong&gt;btree_gist&lt;/strong&gt;, mais également d’autres méthodes d’accès aux index.  Il est&#xA;également possible que certain types / opérateurs n’aient pas de méthode&#xA;d’accès associée dans les catalogues.  Dans ce cas, ces prédicats sont&#xA;retournées séparément dans une liste de prédicats non optimisables&#xA;automatiquement, et pour lequel une analyse manuelle est nécessaire.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Enfin, comme pg_qualstats ne traite pas les prédicats composés d’expressions,&#xA;l’outil ne peut pas suggérer d’index sur des expressions, par exemple en cas&#xA;d’utilisateur de recherche plein texte.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;exemple-dutilisation&#34;&gt;Exemple d’utilisation&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Une simple fonction est fournie, avec des paramètres facultatifs, qui retourne&#xA;une valeur de type json :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;REPLACE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FUNCTION&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_qualstats_index_advisor&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;min_filter&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;DEFAULT&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;min_selectivity&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;DEFAULT&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;forbidden_am&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;DEFAULT&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;{}&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;RETURNS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Les noms de paramètres sont parlants :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;min_filter&lt;/code&gt;: combien de lignes le prédicat doit-il filtrer en moyenne pour&#xA;être pris en compte par la suggestion globale, par défaut &lt;strong&gt;1000&lt;/strong&gt; ;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;min_selectivity&lt;/code&gt;: quelle doit être la sélectivité moyenne d’un prédicat&#xA;pour qu’il soit pris en compte par la suggestion globale, par défaut&#xA;&lt;strong&gt;30%&lt;/strong&gt; ;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;forbidden_am&lt;/code&gt;: liste des méthodes d’accès aux index à ignorer.  Aucune par&#xA;défaut, bien que pour les version 9.6 et inférieures &lt;strong&gt;les index hash sont&#xA;ignoré en interne&lt;/strong&gt;, puisque ceux-ci ne sont sur que depuis la version 10.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Voici un exemple simple, tirés des tests de non régression de pg_qualstats :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pgqs&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;a&#39;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;generate_series&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id1&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id2&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id3&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;line &#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;generate_series&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_qualstats_reset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;meh&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;meh&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;meh&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;meh&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;meh&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;ILIKE&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;moh&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;COUNT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pgqs&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Et voici ce que la fonction retourne :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&#xA;  &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;json_array_elements&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;pg_qualstats_index_advisor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min_filter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;indexes&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&#xA;  &lt;span class=&#34;k&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;BY&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;COLLATE&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;C&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;                               &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;---------------------------------------------------------------&lt;/span&gt;&#xA; &lt;span class=&#34;nv&#34;&gt;&#34;CREATE INDEX ON public.adv USING btree (id1)&#34;&lt;/span&gt;&#xA; &lt;span class=&#34;nv&#34;&gt;&#34;CREATE INDEX ON public.adv USING btree (val, id1, id2, id3)&#34;&lt;/span&gt;&#xA; &lt;span class=&#34;nv&#34;&gt;&#34;CREATE INDEX ON public.pgqs USING btree (id)&#34;&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&#xA;  &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;json_array_elements&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;pg_qualstats_index_advisor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min_filter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;unoptimised&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&#xA;  &lt;span class=&#34;k&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;BY&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;COLLATE&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;C&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;        &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;-----------------&lt;/span&gt;&#xA; &lt;span class=&#34;nv&#34;&gt;&#34;adv.val ~~* ?&#34;&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;La &lt;a href=&#34;https://github.com/powa-team/pg_qualstats/&#34;&gt;version 2 de pg_qualstats&lt;/a&gt;&#xA;n’est pas encore disponible en version stable, mais n’hésitez pas à la tester&#xA;et &lt;a href=&#34;https://github.com/powa-team/pg_qualstats/issues&#34;&gt;rapporter tout problème que vous pourriez&#xA;rencontrer&lt;/a&gt; !&lt;/p&gt;&#xA;&#xA;    &lt;p&gt;&lt;a href=&#34;https://rjuju.github.io/postgresqlfr/2020/01/06/pg_qualstats-2-suggestion-index-globale.html&#34;&gt;pg qualstats 2: Suggestion d&#39;index globale&lt;/a&gt; was originally published by Julien Rouhaud at &lt;a href=&#34;https://rjuju.github.io&#34;&gt;rjuju&#39;s home&lt;/a&gt; on January 06, 2020.&lt;/p&gt;</content>
    <link href="https://rjuju.github.io/postgresqlfr/2020/01/06/pg_qualstats-2-suggestion-index-globale.html" rel="alternate"></link>
    <summary type="html"></summary>
    <author>
      <name>Julien Rouhaud</name>
    </author>
  </entry>
  <entry>
    <title>PoWA 4: Nouveau daemon powa-collector</title>
    <updated>2019-12-10T18:54:17Z</updated>
    <id>tag:rjuju.github.io,2019-12-10:/postgresqlfr/2019/12/10/powa-4-nouveau-powa-collector.html</id>
    <content type="html">&lt;p&gt;Cet article fait partie d’une série d’article sur &lt;a href=&#34;http://powa.readthedocs.io/&#34;&gt;la beta de PoWA&#xA;4&lt;/a&gt;, et décrit le nouveau &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/index.html&#34;&gt;daemon&#xA;powa-collector&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;nouveau-daemon-powa-collector&#34;&gt;Nouveau &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/index.html&#34;&gt;daemon powa-collector&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Ce daemon remplace le précédent &lt;em&gt;background worker&lt;/em&gt; lorsque le nouveau &lt;a href=&#34;https://powa.readthedocs.io/en/latest/remote_setup.html&#34;&gt;mode&#xA;remote&lt;/a&gt; est utilisé.&#xA;Il s’agit d’un simple daemon écrit en python, qui s’occupera de toutes les&#xA;étapes nécessaires pour effectuer des &lt;em&gt;snapshots distants&lt;/em&gt;.  Il est &lt;a href=&#34;https://pypi.org/project/powa-collector/&#34;&gt;disponible&#xA;sur pypi&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Comme je l’ai expliqué dans mon &lt;a href=&#34;/postgresql/2019/05/17/powa-4-with-remote-mode-beta-is-available.html&#34;&gt;précédent article introduistant PoWA 4&lt;/a&gt;, ce&#xA;daemon est nécessaire  pour la configuration d’un mode remote, en gardant cette&#xA;architecture à l’esprit :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/powa_4_remote.svg&#34;&gt;&lt;img src=&#34;/images/powa_4_remote.svg&#34; alt=&#34;Architecture de PoWA 4 en mode distant&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Sa configuration est très simple.  Il vous suffit tout simplement de renommer&#xA;le fichier &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa-collector.conf.sample&lt;/code&gt; fourni, et d’adapter &lt;a href=&#34;https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING&#34;&gt;l’URI de&#xA;connexion&lt;/a&gt;&#xA;pour décrire comment se connecter sur votre &lt;em&gt;serveur repository&lt;/em&gt; dédié, et&#xA;c’est fini.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Une configuration typique devrait ressembler à :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-conf&#34; data-lang=&#34;conf&#34;&gt;{&#xA;    &lt;span class=&#34;s2&#34;&gt;&#34;repository&#34;&lt;/span&gt;: {&#xA;        &lt;span class=&#34;s2&#34;&gt;&#34;dsn&#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&#34;postgresql://powa_user@server_dns:5432/powa&#34;&lt;/span&gt;,&#xA;    },&#xA;    &lt;span class=&#34;s2&#34;&gt;&#34;debug&#34;&lt;/span&gt;: &lt;span class=&#34;n&#34;&gt;true&lt;/span&gt;&#xA;}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;La liste des &lt;em&gt;serveur distants&lt;/em&gt;, leur configuration ainsi que tout le reste qui&#xA;est nécessaire pour le bon fonctionnement sera automatiquement récupéré depuis&#xA;le &lt;em&gt;serveur repository&lt;/em&gt; que vous ave déjà configuré.  Une fois démarré, il&#xA;démarrera un thread dédié par &lt;em&gt;serveur distant&lt;/em&gt; déclaré, et maintiendra une&#xA;&lt;strong&gt;connexion persistente&lt;/strong&gt; sur ce &lt;em&gt;serveur distant&lt;/em&gt;.  Chaque thread effectuera&#xA;un &lt;em&gt;snapshot distant&lt;/em&gt;, exportant les données sur le &lt;em&gt;serveur repository&lt;/em&gt; en&#xA;utilisant les nouvelles &lt;em&gt;fonctions sources&lt;/em&gt;.  Chaque thread ouvrira et fermera&#xA;une connexion sur le &lt;em&gt;serveur repository&lt;/em&gt; lors de l’exécution du &lt;em&gt;snapshot&#xA;distant&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Bien évidemment, ce daemon a besoin de pouvoir se connecter sur tous les&#xA;&lt;em&gt;serveurs distants&lt;/em&gt; déclarés ainsi que le &lt;em&gt;serveur repository&lt;/em&gt;.  La table&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_servers&lt;/code&gt;, qui stocke la liste des &lt;em&gt;serveurs distants&lt;/em&gt;, a un champ pour&#xA;stocker les nom d’utilisateur et mot de passe pour se connecter aux &lt;em&gt;serveur&#xA;distants&lt;/em&gt;.  Stocker un mot de passe en clair dans cette table est une hérésie,&#xA;si l’on considère l’aspect sécurité.  Ainsi, comme indiqué dans la&#xA;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/security.html#connection-on-remote-servers&#34;&gt;section sécurité de&#xA;PoWA&lt;/a&gt;,&#xA;vous pouve stocker un mot de passe NULL et &lt;a href=&#34;https://www.postgresql.org/docs/current/auth-methods.html&#34;&gt;utiliser à la place n’importe&#xA;laquelle des autres méthodes d’authentification supportées par la&#xA;libpq&lt;/a&gt; (fichier&#xA;.pgpass, certificat…).  C’est très fortement recommandé pour toute&#xA;installation sérieuse.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La connexion persistente sur le &lt;em&gt;serveur repository&lt;/em&gt; est utilisée pour&#xA;superviser la daemon :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;pour vérifier  que le daemon est bien démarré&lt;/li&gt;&#xA;  &lt;li&gt;pour communiquer au travers de l’UI en utilisant un &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/protocol.html&#34;&gt;protocole simple&lt;/a&gt;&#xA;afin d’effectuer des actions diverses (recharger la configuration, vérifier&#xA;le status d’un thread dédié à un &lt;em&gt;serveur distant&lt;/em&gt;…)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Il est à noter que vous pouvez également demander au daemon de recharger sa&#xA;configuration en envoyant un SIGHUP au processus du daemon.  Un rechargement&#xA;est nécessaire pour toute modification effectuée sur la liste des serveurs&#xA;distants (ajout ou suppression d’un &lt;em&gt;serveur distant&lt;/em&gt;, ou mise à jour d’un&#xA;existant).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Veuillez également noter que, par choix,&#xA;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/index.html&#34;&gt;powa-collector&lt;/a&gt;&#xA;n’effectuera pas de &lt;em&gt;snapshot local&lt;/em&gt;.  Si vous voulez utiliser PoWA pour le&#xA;&lt;em&gt;serveur repository&lt;/em&gt;, il vous faudra activer le &lt;em&gt;background worker&lt;/em&gt; original.&lt;/p&gt;&#xA;&#xA;&lt;h5 id=&#34;nouvelle-page-de-configuration&#34;&gt;Nouvelle page de configuration&lt;/h5&gt;&#xA;&#xA;&lt;p&gt;La page de configuration est maintenant modifiée pour donner toutes les&#xA;informations nécessaires sur le status du background worker, le &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/index.html&#34;&gt;powa-collector&#xA;daemon&lt;/a&gt;&#xA;(incluant tous ses threads dédiés) ainsi que la liste des &lt;em&gt;serveurs distants&lt;/em&gt;&#xA;déclarés.  Voici un exemple de cette nouvelle page racine de configuration :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/powa_4_configuration_page.png&#34;&gt;&lt;img src=&#34;/images/powa_4_configuration_page.png&#34; alt=&#34;Nouvelle page de&#xA;configuration&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Si le &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/index.html&#34;&gt;daemon&#xA;powa-collector&lt;/a&gt;&#xA;est utilisé, le status de chaque serveur distant sera récupéré en utilisant le&#xA;protocole de communication.  Si le collecteur rencontre des erreurs (lors de la&#xA;connexion à un &lt;em&gt;serveur distant&lt;/em&gt;, durant un &lt;em&gt;snapshot&lt;/em&gt; par exemple), celles-ci&#xA;seront également affichées ici.  À noter également que ces erreurs seront&#xA;également affichées en haut de chaque page de toutes les pages de l’UI, afin&#xA;d’être sûr de ne pas les rater.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;De plus, la section configuration a maintenant une hiérarchie, et vous pourrez&#xA;voir la liste des extensions ainsi que la configuration actuelle de PostgreSQL&#xA;pour le serveur &lt;strong&gt;local&lt;/strong&gt; ou &lt;strong&gt;distant&lt;/strong&gt; en cliquant sur le serveur de votre&#xA;choix!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Il y a également un nouveau bouton &lt;strong&gt;Reload collector&lt;/strong&gt; sur le bandeau&#xA;d’en-tête qui, comme on pourrait s’y attendre, demandera au collecteur de&#xA;recharger sa configuration.  Cela peut être utile si vous avez déclarés de&#xA;nouveaux serveurs mais n’ave pas d’accès au serveur sur lequel le collecteur&#xA;s’exécute.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Cette article est le dernier de la séurie concernant la nouvelle version de&#xA;PoWA.  Il est toujours en beta, n’hésitez donc pas à le tester, &lt;a href=&#34;https://powa.readthedocs.io/en/latest/support.html#support&#34;&gt;rapporter&#xA;tout bug rencontré&lt;/a&gt;&#xA;ou donner tout autre retour!&lt;/p&gt;&#xA;&#xA;    &lt;p&gt;&lt;a href=&#34;https://rjuju.github.io/postgresqlfr/2019/12/10/powa-4-nouveau-powa-collector.html&#34;&gt;PoWA 4: Nouveau daemon powa-collector&lt;/a&gt; was originally published by Julien Rouhaud at &lt;a href=&#34;https://rjuju.github.io&#34;&gt;rjuju&#39;s home&lt;/a&gt; on December 10, 2019.&lt;/p&gt;</content>
    <link href="https://rjuju.github.io/postgresqlfr/2019/12/10/powa-4-nouveau-powa-collector.html" rel="alternate"></link>
    <summary type="html"></summary>
    <author>
      <name>Julien Rouhaud</name>
    </author>
  </entry>
  <entry>
    <title>PoWA 4: nouveautés dans powa-archivist !</title>
    <updated>2019-06-05T14:26:17Z</updated>
    <id>tag:rjuju.github.io,2019-06-05:/postgresqlfr/2019/06/05/powa-4-nouveaute-dans-powa-archivist.html</id>
    <content type="html">&lt;p&gt;Cet article fait partie d’une série d’article sur &lt;a href=&#34;http://powa.readthedocs.io/&#34;&gt;la beta de PoWA&#xA;4&lt;/a&gt;, et décrit les changements présents dans&#xA;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-archivist/index.html&#34;&gt;powa-archivist&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Pour plus d’information sur cette version 4, vous pouvez consulter &lt;a href=&#34;/postgresqlfr/2019/05/17/powa-4-avec-mode-remote-disponible-en-beta.html&#34;&gt;l’article&#xA;de présentation général&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;aperçu-rapide&#34;&gt;Aperçu rapide&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Tout d’abord, il faut savoir qu’il n’y a pas d’upgrade possible depuis la v3&#xA;vers la v4, il est donc nécessaire d’effectuer un &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;DROP EXTENSION powa&lt;/code&gt; si vous&#xA;utilisiez déjà PoWA sur vos serveurs.  Cela est du au fait que la v4 apporte&#xA;&lt;strong&gt;de très nombreux&lt;/strong&gt; changements dans la partie SQL de l’extension, ce qui en&#xA;fait le changement le plus significatif dans la suite PoWA pour cette nouvelle&#xA;version.  Au moment où j’écris cet article, la quantité de changements apportés&#xA;dans cette extension est :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt; CHANGELOG.md       |   14 +&#xA; powa--4.0.0dev.sql | 2075 +++++++++++++++++++++-------&#xA; powa.c             |   44 +-&#xA; 3 files changed, 1629 insertions(+), 504 deletions(-)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;L’absence d’upgrade ne devrait pas être un problème en pratique.  PoWA est un&#xA;outil pour analyser les performances, il est fait pour avoir des données avec&#xA;une grande précision mais un historique très limité.  Si vous cherchez une&#xA;solution de supervision généraliste pour conserver des mois de données, PoWA&#xA;n’est définitivement pas l’outil qu’il vous faut.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;configurer-la-liste-des-serveurs-distants&#34;&gt;Configurer la liste des &lt;em&gt;serveurs distants&lt;/em&gt;&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;En ce qui concerne les changements à proprement parler, le premier petit&#xA;changement est que le &lt;a href=&#34;https://www.postgresql.org/docs/current/bgworker.html&#34;&gt;background&#xA;worker&lt;/a&gt; n’est plus&#xA;nécessaire pour le fonctionnement de powa-archivist, car il n’est pas utilisé&#xA;pour le mode distant.  Cela signifie qu’un redémarrage de PostgreSQL n’est plus&#xA;nécessaire pour installer PoWA.  Bien évidemment, un redémarrage est toujours&#xA;nécessaire si vous souhaitez utiliser le mode local, en utilisant le background&#xA;worker, or si vous voulez installer des extensions additionelles qui&#xA;nécessitent elles-même un redémarrage.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Ensuite, comme PoWA requiert un peu de configuration (fréquence des snapshot,&#xA;rétention des données et ainsi de suite), certaines nouvelles tables sont&#xA;ajouter pour permettre de configurer tout ça.  La nouvelle table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_servers&lt;/code&gt;&#xA;stocke la configuration de toutes les instances distantes dont les données&#xA;doivent être stockées sur cette instance.  Cette &lt;em&gt;instance PoWA locale&lt;/em&gt; est&#xA;appelée un &lt;strong&gt;serveur repository&lt;/strong&gt; (qui devrait typiquement être dédiée à&#xA;stocker des données PoWA), en opposition aux &lt;strong&gt;instances distantes&lt;/strong&gt; qui sont&#xA;les instances que vous voulez monitorer.  Le contenu de cette table est tout ce&#xA;qu’il y a de plus simple :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;powa_servers&lt;/span&gt;&#xA;                              &lt;span class=&#34;k&#34;&gt;Table&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;public.powa_servers&#34;&lt;/span&gt;&#xA;  &lt;span class=&#34;k&#34;&gt;Column&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;k&#34;&gt;Type&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Collation&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;                 &lt;span class=&#34;k&#34;&gt;Default&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;-----------+----------+-----------+----------+------------------------------------------&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;            &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nextval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;powa_servers_id_seq&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;regclass&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;hostname&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;k&#34;&gt;alias&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;username&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;password&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;dbname&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;frequency&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;300&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;powa_coalesce&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;retention&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;interval&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;1 day&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;interval&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Si vous avez déjà utilisé PoWA, vous devriez reconnaître la plupart des options&#xA;de configuration qui sont maintenant stockées ici.  Les nouvelles options sont&#xA;utilisées pour décrire comment se connecter aux &lt;em&gt;instances distances&lt;/em&gt;, et&#xA;peuvent fournir un alias à afficher sur l’UI.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Vous avez également probablement remarqué une colonne &lt;strong&gt;password&lt;/strong&gt;.  Stocker un&#xA;mot de passe en clair dans cette table est une hérésie pour n’importe qui&#xA;désirant un minimum de sécurité.  Ainsi, comme mentionné dans la &lt;a href=&#34;https://powa.readthedocs.io/en/latest/security.html#connection-on-remote-servers&#34;&gt;section&#xA;sécurité de la documentation de PoWA&#xA;&lt;/a&gt;,&#xA;vous pouvez stocker NULL pour le champ password et à la place utiliser&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/current/auth-methods.html&#34;&gt;n’importe laquelle des autres méthodes d’authentification supportée par la&#xA;libpq&lt;/a&gt;&#xA;(fichier .pgpass, certificat…).  Une authentification plus sécurisée est&#xA;chaudement recommandée pour toute installation sérieuse.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Une autre table, la table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_snapshot_metas&lt;/code&gt;, est également ajoutée pour&#xA;stocker quelques métadonnées concernant les informations de snapshot pour&#xA;chaque &lt;em&gt;serveur distant&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;                                   &lt;span class=&#34;k&#34;&gt;Table&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;public.powa_snapshot_metas&#34;&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;Column&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;k&#34;&gt;Type&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Collation&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;                &lt;span class=&#34;k&#34;&gt;Default&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;--------------+--------------------------+-----------+----------+---------------------------------------&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;srvid&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;                  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;coalesce_seq&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bigint&lt;/span&gt;                   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;snapts&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;zone&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;-infinity&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;zone&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;aggts&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;zone&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;-infinity&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;zone&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;purgets&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;zone&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;-infinity&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;zone&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;errors&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Il s’agit tout simplement d’un compteur pour compter le nombre de snapshots&#xA;effectués, un timestamp pour chaque type d’événement survenu (snapshot,&#xA;aggrégation et purge) et un tableau de chaîne de caractères pour stocker toute&#xA;erreur survenant durant le snapshot, afin que l’UI pour l’afficher.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;api-sql-pour-configurer-les-serveurs-distants&#34;&gt;API SQL pour configurer les &lt;em&gt;serveurs distants&lt;/em&gt;&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Bien que ces tables soient très simples, une &lt;a href=&#34;https://powa.readthedocs.io/en/latest/remote_setup.html#configure-powa-and-stats-extensions-on-each-remote-server&#34;&gt;API SQL basique est disponible&#xA;pour déclarer de nouveaux serveurs et les&#xA;configurer&lt;/a&gt;.&#xA;6 fonctions de bases sont disponibles :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_register_server()&lt;/code&gt;, pour déclarer un nouveau &lt;em&gt;servuer distant&lt;/em&gt;, ainsi&#xA;que la liste des extensions qui y sont disponibles&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_configure_server()&lt;/code&gt; pour mettre à jour un des paramètres pour le&#xA;&lt;em&gt;serveur distant&lt;/em&gt; spécifié (en utilisant un paramètre JSON, où la clé est&#xA;le nom du paramètre à changer et la valeur la nouvelle valeur à utiliser)&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_deactivate_server()&lt;/code&gt; pour désactiver les snapshots pour le &lt;em&gt;serveur&#xA;distant&lt;/em&gt; spécifiqué (ce qui concrètement positionnera le paramètre&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;frequency&lt;/code&gt; à &lt;strong&gt;-1&lt;/strong&gt;)&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_delete_and_purge_server()&lt;/code&gt; pour supprimer le &lt;em&gt;serveur distant&lt;/em&gt;&#xA;spécifié de la liste des serveurs et supprimer toutes les données associées&#xA;aux snapshots&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_activate_extension()&lt;/code&gt;, pour déclarer qu’une nouvelle extension est&#xA;disponible sur le &lt;em&gt;serveur distant&lt;/em&gt; spécifié&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_deactivate_extension()&lt;/code&gt;, pour spécifier qu’une extension n’est plus&#xA;disponible sur le &lt;em&gt;serveur distant&lt;/em&gt; spécifié&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Toute action plus compliquée que ça devra être effectuée en utilisant des&#xA;requêtes SQL.  Heureusement, il ne devrait pas y avoir beaucoup d’autres&#xA;besoins, et les tables sont vraiment très simple donc cela ne devrait pas poser&#xA;de soucis.  &lt;a href=&#34;https://github.com/powa-team/powa-archivist/issues&#34;&gt;N’hésitez cependant pas à demander de nouvelles&#xA;fonctions&lt;/a&gt; si vous aviez&#xA;d’autres besoins.  Veuillez également noter que l’UI ne vous permet pas&#xA;d’appeler ces fonctions, puisque celle-ci est pour le moment &lt;strong&gt;entièrement en&#xA;lecture seule&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;effectuer-des-snapshots-distants&#34;&gt;Effectuer des &lt;em&gt;snapshots distants&lt;/em&gt;&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Puisque les métriques sont maintenant stockées sur une instance PostgreSQL&#xA;différente, nous avons énormément changé la façon dont les &lt;em&gt;snapshots&lt;/em&gt;&#xA;(récupérer les données fournies par une &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/stats_extensions/index.html&#34;&gt;extensions&#xA;statistique&lt;/a&gt;&#xA;et les stockées dans le catalogue PoWA &lt;a href=&#34;/postgresqlfr/2019/04/06/minimiser-le-surcout-de-stockage-par-ligne.html&#34;&gt;de manière à optimiser le stockage&lt;/a&gt;) sont&#xA;effectués.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La liste de toutes les extensions statistiques, ou &lt;em&gt;sources de données&lt;/em&gt;, qui&#xA;sont disponibles sur un &lt;strong&gt;serveur&lt;/strong&gt; (soit &lt;em&gt;distant&lt;/em&gt; soit &lt;em&gt;local&lt;/em&gt;) et pour&#xA;lesquelles un &lt;em&gt;snapshot&lt;/em&gt; devrait être effectué est stockée dans une table&#xA;appelée &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_functions&lt;/code&gt;:&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;               &lt;span class=&#34;k&#34;&gt;Table&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;public.powa_functions&#34;&lt;/span&gt;&#xA;     &lt;span class=&#34;k&#34;&gt;Column&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;Type&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Collation&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Default&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;----------------+---------+-----------+----------+---------&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;srvid&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;module&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;k&#34;&gt;operation&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;function_name&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;query_source&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;added_manually&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;enabled&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;priority&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;numeric&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Un nouveau champ &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;query_source&lt;/code&gt; a été rajouté.  Celui-ci fournit le nom de la&#xA;&lt;em&gt;fonction source&lt;/em&gt;, nécessaire pour la compatibilité d’une &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/stats_extensions/index.html&#34;&gt;extension&#xA;statistique&lt;/a&gt;&#xA;avec les snapshots distants.  Cette fonction est utilisée pour exporter les&#xA;compteurs fournis par cette extension sur un serveur différent, dans une &lt;em&gt;table&#xA;transitoire&lt;/em&gt; dédiée.  La fonction de &lt;em&gt;snapshot&lt;/em&gt; effectuera alors le &lt;em&gt;snapshot&lt;/em&gt;&#xA;en utilisant automatiquement ces données exportées plutôt que celles fournies&#xA;par l’extension statististique locale quand le mode distant est utilisé.  Il&#xA;est à noter que l’export de ces compteurs ainsi que le snapshot distant est&#xA;effectué automatiquement par le nouveau &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/index.html&#34;&gt;daemon&#xA;powa-collector&lt;/a&gt;&#xA;que je présenterai dans un autre article.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Voici un exemple montant comment PoWA effectue un &lt;em&gt;snapshot distant&lt;/em&gt; d’une&#xA;liste de base données.  Comme vous allez le voir, c’est très simple ce qui&#xA;signifie qu’il est également très simple d’ajouter cette même compatibilité&#xA;pour une nouvelle extension statistique.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La &lt;em&gt;table transitoire&lt;/em&gt;:&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;   &lt;span class=&#34;n&#34;&gt;Unlogged&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;public.powa_databases_src_tmp&#34;&lt;/span&gt;&#xA; &lt;span class=&#34;k&#34;&gt;Column&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;Type&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Collation&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Default&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;---------+---------+-----------+----------+---------&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;srvid&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;oid&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;oid&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;datname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Pour de meilleurs performances, toutes les &lt;em&gt;tables transitoires&lt;/em&gt; sont &lt;strong&gt;non&#xA;journalisées (unlogged)&lt;/strong&gt;, puisque leur contenu n’est nécessaire que durant un&#xA;&lt;em&gt;snapshot&lt;/em&gt; et sont supprimées juste après.  Dans cet examlple, la &lt;em&gt;table&#xA;transitoire&lt;/em&gt; ne stocke que l’identifiant du serveur distant correspondant à ces&#xA;données, l’oid ainsi que le nom de chacune des bases de données présentes sur&#xA;le &lt;em&gt;serveur distant&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Et la &lt;em&gt;fonction source&lt;/em&gt; :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;REPLACE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FUNCTION&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;powa_databases_src&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_srvid&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;OUT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;oid&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;oid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;OUT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datname&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA; &lt;span class=&#34;k&#34;&gt;RETURNS&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SETOF&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;record&lt;/span&gt;&#xA; &lt;span class=&#34;k&#34;&gt;LANGUAGE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;plpgsql&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;BEGIN&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;IF&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_srvid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;THEN&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;RETURN&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;QUERY&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;oid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datname&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_database&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;ELSE&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;RETURN&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;QUERY&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;oid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datname&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;powa_databases_src_tmp&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;srvid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_srvid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;IF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Cette fonction retourne simplement le contenu de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_database&lt;/code&gt; si les données&#xA;locales sont demandées (l’identifiant de serveur &lt;strong&gt;0&lt;/strong&gt; est toujours le serveur&#xA;local), ou alors le contenu de la &lt;em&gt;table transitoire&lt;/em&gt; pour le serveur distant&#xA;spécifié.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La &lt;em&gt;fonction de snapshot&lt;/em&gt; peut alors facilement effectuer n’importe quel&#xA;traitement avec ces données pour le &lt;em&gt;serveur distant&lt;/em&gt; voulu.  Dans le cas de la&#xA;fonction &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_databases_snapshot()&lt;/code&gt;, il s’agit simplement de synchroniser la&#xA;liste des bases de données, et de stocker le timestamp de suppression si une&#xA;base de données qui existait précédemment n’est plus listée.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Pour plus de détails, vous pouvez consulter la documentation concernant&#xA;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-archivist/development.html&#34;&gt;l’ajout d’une source de données dans&#xA;PoWA&lt;/a&gt;,&#xA;qui a été mise à jour pour les spécificités de la version 4.&lt;/p&gt;&#xA;&#xA;    &lt;p&gt;&lt;a href=&#34;https://rjuju.github.io/postgresqlfr/2019/06/05/powa-4-nouveaute-dans-powa-archivist.html&#34;&gt;PoWA 4: nouveautés dans powa-archivist !&lt;/a&gt; was originally published by Julien Rouhaud at &lt;a href=&#34;https://rjuju.github.io&#34;&gt;rjuju&#39;s home&lt;/a&gt; on June 05, 2019.&lt;/p&gt;</content>
    <link href="https://rjuju.github.io/postgresqlfr/2019/06/05/powa-4-nouveaute-dans-powa-archivist.html" rel="alternate"></link>
    <summary type="html"></summary>
    <author>
      <name>Julien Rouhaud</name>
    </author>
  </entry>
  <entry>
    <title>PoWA 4 apporte un mode remote, disponible en beta !</title>
    <updated>2019-05-17T11:04:17Z</updated>
    <id>tag:rjuju.github.io,2019-05-17:/postgresqlfr/2019/05/17/powa-4-avec-mode-remote-disponible-en-beta.html</id>
    <content type="html">&lt;p&gt;&lt;a href=&#34;http://powa.readthedocs.io/&#34;&gt;PoWA 4&lt;/a&gt; est disponible en beta.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;nouveau-mode-remote-&#34;&gt;Nouveau mode remote !&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Le &lt;a href=&#34;https://powa.readthedocs.io/en/latest/remote_setup.html&#34;&gt;nouveau mode remote&lt;/a&gt;&#xA;est la plus grosse fonctionnalité ajoutée dans PoWA 4, bien qu’il y ait eu&#xA;d’autres améliorations.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Je vais décrire ici ce que ce nouveau mode implique ainsi que ce qui a changé&#xA;sur l’&lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-web/index.html&#34;&gt;UI&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Si de plus amples détails sur le reste des changements apportés dans PoWA 4&#xA;vous intéresse, je publierai bientôt d’autres articles sur le sujet.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Pour les plus pressés, n’hésitez pas à aller directement sur la &lt;a href=&#34;https://dev-powa.anayrat.info/&#34;&gt;démo v4 de&#xA;PoWA&lt;/a&gt;, très gentiment hébergée par &lt;a href=&#34;http://blog.anayrat.info/&#34;&gt;Adrien&#xA;Nayrat&lt;/a&gt;.  Aucun authentification n’est requise,&#xA;cliquez simplement sur “Login”.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;pourquoi-un-mode-remote-est-il-important&#34;&gt;Pourquoi un mode remote est-il important&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Cette fonctionnalité a probablement été la plus fréquemment demandée depuis que&#xA;PoWA a été publié, en 2014.  Et c’est pour de bonnes raisons, car un mode local&#xA;a quelques inconvénients.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Tout d’abord, voyons comment se présentait l’architecture avec les versions 3&#xA;et antérieures.  Imaginons une instance contenant 2 bases de données (db1 et&#xA;db2), ainsi qu’&lt;strong&gt;une base de données dédiée à PoWA&lt;/strong&gt;.  Cette base de données&#xA;dédiée contient à la fois les &lt;em&gt;extensions statistiques&lt;/em&gt; nécessaires pour&#xA;récupérer compteurs de performances actuels ainsi que pour &lt;strong&gt;les stocker&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/powa_4_local.svg&#34;&gt;&lt;img src=&#34;/images/powa_4_local.svg&#34; alt=&#34;Architecture en mode local&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Un &lt;em&gt;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-archivist/configuration.html#background-worker-configuration&#34;&gt;background&#xA;worker&lt;/a&gt;&lt;/em&gt;&#xA;est démarré par PoWA, qui est responsable d’effectuer des &lt;em&gt;snapshots&lt;/em&gt; et de les&#xA;stocker dans la base powa dédiée à intervalle réguliers.  Ensuite, en utilisant&#xA;powa-web, vous pouvez consulter l’activité de n’importe laquelle des bases de&#xA;données &lt;strong&gt;locales&lt;/strong&gt; en effectuant des requêtes sur les données stockées dans la&#xA;base dédié, et potentiellement en se connectant sur l’une des autres bases de&#xA;données locales lorsque les données complètes sont nécessaires, par exemple&#xA;lorsque l’outil de suggestion d’index est utilisé.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Avec la version 4, l’architecture avec une configuration distante change de&#xA;manière significative:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/powa_4_remote.svg&#34;&gt;&lt;img src=&#34;/images/powa_4_remote.svg&#34; alt=&#34;Architecture en mode distant&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Vous pouvez voir qu’une base de donnée powa dédiée est toujours nécessaire,&#xA;mais &lt;strong&gt;uniquement pour les extensions statistiques&lt;/strong&gt;.  Les données sont&#xA;maintenant stockées sur une instance différente.  Ensuite, le &lt;em&gt;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-archivist/configuration.html#background-worker-configuration&#34;&gt;background&#xA;worker&lt;/a&gt;&lt;/em&gt;&#xA;est remplacé par un &lt;strong&gt;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/index.html&#34;&gt;nouveau daemon&#xA;collecteur&lt;/a&gt;&lt;/strong&gt;,&#xA;qui lit les métriques de performance depuis les &lt;em&gt;serveurs distants&lt;/em&gt;, et les&#xA;stocke sur le &lt;em&gt;serveur repository&lt;/em&gt; dédié.  Powa-web pourra présenter les&#xA;données en se connectant sur le &lt;em&gt;serveur repository&lt;/em&gt;, ainsi que sur les&#xA;&lt;strong&gt;serveurs distants&lt;/strong&gt; lorsque des données complètes sont nécessaires.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;En résumé, avec le nouveau mode distant ajouté dans cette version 4&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;un redémarrage de PostgreSQL n’est plus nécessaire pour installer&#xA;powa-archivist&lt;/li&gt;&#xA;  &lt;li&gt;il n’y a plus de surcoût du au fait de stocker et requêter les données sur&#xA;le même serveur PostgreSQL que vos serveurs de productions (il y a toujours&#xA;certaines partie de l’UI qui nécessitent d’effectuer des requêtes sur le&#xA;serveur d’origine, par exemple pour montrer des plans avec EXPLAIN, mais le&#xA;surcoût est négligeable)&lt;/li&gt;&#xA;  &lt;li&gt;il est maintenant possible d’utiliser PoWA sur un &lt;strong&gt;serveur en&#xA;hot-standby&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;L’UI vous accueillera donc maintenant avec une page initiale afin de choisir&#xA;lequel des serveurs stockés sur la base de données cible vous voulez&#xA;travailler :&#xA;&lt;a href=&#34;/images/powa_4_all_servers.png&#34;&gt;&lt;img src=&#34;/images/powa_4_all_servers.png&#34; alt=&#34;Choix des serveurs&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La principale raison pour laquelle il a fallu tellement de temps pour apporter&#xA;ce mode distant est parce que cela apporte beaucoup de complexité, nécessitant&#xA;une réécriture majeure de PoWA.  Nous voulions également ajouter d’abord&#xA;d’autres fonctionnalités, comme la &lt;strong&gt;suggestion globale d’index&lt;/strong&gt;, avec une&#xA;&lt;strong&gt;validation grâce à &lt;a href=&#34;http://hypopg.readthedocs.io/&#34;&gt;hypopg&lt;/a&gt;&lt;/strong&gt; introduit avec&#xA;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/releases/v3.0.0.html&#34;&gt;PoWA 3&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;changements-dans-powa-web&#34;&gt;Changements dans &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-web/index.html&#34;&gt;powa-web&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;L’&lt;em&gt;interface graphique&lt;/em&gt; est le composant qui a le plus de changements visibles&#xA;dans cette version 4.  Voici les plus changements les plus importants.&lt;/p&gt;&#xA;&#xA;&lt;h5 id=&#34;compatibilité-avec-le-mode-distant&#34;&gt;Compatibilité avec le mode distant&lt;/h5&gt;&#xA;&#xA;&lt;p&gt;Le changement le plus important est bien évidemment le support pour le &lt;a href=&#34;https://powa.readthedocs.io/en/latest/remote_setup.html&#34;&gt;nouveau&#xA;mode remote&lt;/a&gt;.  En&#xA;conséquence, la première page affichée est maintenant une page de &lt;strong&gt;sélection&#xA;de serveur&lt;/strong&gt;, affichant tous les &lt;em&gt;serveurs distants&lt;/em&gt; enregistrés.  Après avoir&#xA;choisi le &lt;em&gt;serveur distant&lt;/em&gt; voulu (ou le &lt;em&gt;serveur local&lt;/em&gt; si vous n’utilisez pas&#xA;le mode distant), toutes les autres pages seront similaires à celles&#xA;disponibles jusqu’à la version 3, mais afficheront les données pour un &lt;em&gt;serveur&#xA;distant&lt;/em&gt; spécifique uniquement, et bien entendu en récupérant les données&#xA;depuis la &lt;strong&gt;base de données repository&lt;/strong&gt;, avec en plus de nouvelles&#xA;informations décrites ci-dessous.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Veuillez notez que puisque les données sont maintenant stockées sur un &lt;em&gt;serveur&#xA;repository&lt;/em&gt; dédié quand le mode remote est utilisé, la majorité de l’UI est&#xA;utilisable sans se connecter au &lt;em&gt;serveur distant&lt;/em&gt; sélectionné.  Toutefois,&#xA;powa-web nécessite toujours de pouvoir se connecter sur le &lt;em&gt;serveur distant&lt;/em&gt;&#xA;quand les données originales sont nécessaires (par exemple, pour la suggestion&#xA;d’index ou pour montrer des plans avec &lt;strong&gt;EXPLAIN&lt;/strong&gt;).  Les &lt;a href=&#34;https://powa.readthedocs.io/en/latest/security.html#connection-on-remote-servers&#34;&gt;mêmes considérations&#xA;et possibilités concernant&#xA;l’authentification&lt;/a&gt;&#xA;que pour le nouveau &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/index.html&#34;&gt;daemon powa-collector&#xA;&lt;/a&gt;&#xA;(qui sera décrit dans un prochain article) s’appliquent ici.&lt;/p&gt;&#xA;&#xA;&lt;h5 id=&#34;pg_track_settings-support&#34;&gt;&lt;a href=&#34;https://github.com/rjuju/pg_track_settings/&#34;&gt;pg_track_settings&lt;/a&gt; support&lt;/h5&gt;&#xA;&#xA;&lt;p&gt;Quand cette extension est correctement configurée, un nouveau widget timeline&#xA;apparaîtra, placé entre chaque graph et son aperçu, affichant différents types&#xA;de changements enregistrés si ceux-ci ont été détectés sur l’intervalle de&#xA;temps sélectionné.  Sur les pages par base de données et par requête, la liste&#xA;sera également filtrée en fonction de la base de données sélectionnée.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La même timeline sera affichée sur chacun des graphs de chacune des pages, afin&#xA;de facilement vérifier si ces changements ont eu un impact visible en utilisant&#xA;les différents graphs.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Veuillez noter que les détails des changements sont affichés au survol de la&#xA;souris.  Vous pouvez également cliquer sur n’importe lequel des événements de&#xA;la timeline pour figer l’affichage, et tracer une ligne verticale sur le graph&#xA;associé.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Voici un exemple d’un tel changement de configuration en action :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/pg_track_settings_powa4.png&#34;&gt;&lt;img src=&#34;/images/pg_track_settings_powa4.png&#34; alt=&#34;Changements de configuration détectés&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Veuillez également noter qu’il est nécessaire d’avoir au minimum la version&#xA;2.0.0 de &lt;a href=&#34;https://github.com/rjuju/pg_track_settings/&#34;&gt;pg_track_settings&lt;/a&gt;, et&#xA;que l’extension doit être installée &lt;strong&gt;à la fois sur les &lt;em&gt;serveurs distants&lt;/em&gt;&#xA;ainsi que sur le &lt;em&gt;serveur repository&lt;/em&gt;.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;h5 id=&#34;nouveaux-graphs-disponibles&#34;&gt;Nouveaux graphs disponibles&lt;/h5&gt;&#xA;&#xA;&lt;p&gt;Quand&#xA;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/stats_extensions/pg_stat_kcache.html&#34;&gt;pg_stat_kcache&lt;/a&gt;&#xA;est configuré, ses informations n’étaient auparavant affichées que sur la page&#xA;par requête.  Les informations sont maintenant également affichées sur les&#xA;pages par serveur et par base, dans deux nouveaux graphs :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;dans le graph &lt;strong&gt;Block Access&lt;/strong&gt;, où les métriques &lt;strong&gt;OS cache&lt;/strong&gt; et &lt;strong&gt;disk&#xA;read&lt;/strong&gt; remplaceront la métrique &lt;strong&gt;read&lt;/strong&gt;&lt;/li&gt;&#xA;  &lt;li&gt;dans un nouveau graph &lt;strong&gt;System Resources&lt;/strong&gt; (qui est également ajouté dans&#xA;la page &lt;em&gt;par requête&lt;/em&gt;), montrant les &lt;a href=&#34;/postgresql/2018/07/17/pg_stat_kcache-2-1-is-out.html&#34;&gt;metrics ajoutées dans pg_stat_kcache&#xA;2.1&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Voici un example de ce nouveau graph &lt;strong&gt;System Resources&lt;/strong&gt; :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/pg_stat_kcache_system_resources_powa4.png&#34;&gt;&lt;img src=&#34;/images/pg_stat_kcache_system_resources_powa4.png&#34; alt=&#34;Ressources système&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Il y avait également un graph &lt;strong&gt;Wait Events&lt;/strong&gt; (disponible quand &lt;a href=&#34;https://powa.readthedocs.io/en/v4/components/stats_extensions/pg_wait_sampling.html&#34;&gt;l’extension&#xA;pg_wait_sampling&lt;/a&gt;&#xA;est configuée) disponible uniquement sur la page par requête.  Ce graph est&#xA;maintenant disponible sur les pages par serveur et par base également.&lt;/p&gt;&#xA;&#xA;&lt;h5 id=&#34;documentation-des-métriques-et-liens-vers-la-documentation&#34;&gt;Documentation des métriques et liens vers la documentation&lt;/h5&gt;&#xA;&#xA;&lt;p&gt;Certaines métriques affichées sur l’interface sont assez parlante, mais&#xA;certaines autres peuvent être un peu obscures.  Jusqu’à maintenant, il n’y&#xA;avait malheureusement aucune documentation pour les métriques.  Le problème est&#xA;maintenant réglé, et tous les graphs ont une &lt;em&gt;icône d’information&lt;/em&gt;, qui&#xA;affichent une description des métriques utilisée dans le graph au survol de la&#xA;souris.  Certains graphs incluent également un lien vers la &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/stats_extensions/index.html&#34;&gt;documentation PoWA&#xA;de extension&#xA;statistiques&lt;/a&gt;&#xA;pour les utilisateurs qui désirent en apprendre plus à leur sujet.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Voici un exemple :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/powa_4_metrics_doc.png&#34;&gt;&lt;img src=&#34;/images/powa_4_metrics_doc.png&#34; alt=&#34;Documentation des métriques&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;h5 id=&#34;et-des-correctifs-de-bugs-divers&#34;&gt;Et des correctifs de bugs divers&lt;/h5&gt;&#xA;&#xA;&lt;p&gt;Certains problèmes de longues dates ont également été rapportés :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;la boîte affichée au survol d’un graph montant les valeurs des métriques&#xA;avait une position verticale incorrecte&lt;/li&gt;&#xA;  &lt;li&gt;la sélection temporelle en utilisant l’aperçu des graphs ne montrait pas un&#xA;aperçu correct après avoir appliqué la sélection&lt;/li&gt;&#xA;  &lt;li&gt;les erreurs lors de la création d’index hypothétiques ou dans certains cas&#xA;leur affichage n’était pas correctement gérés sur plusieurs pages&lt;/li&gt;&#xA;  &lt;li&gt;les filtres des tableaux n’était pas réappliqués quand l’intervalle de&#xA;temps sélectionné était changé&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Si un de ces problèmes vous a un jour posé problème, vous serez ravi&#xA;d’apprendre qu’ils sont maintenant tous corrigés !&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Cette 4ème version de PoWA représente un temps de développement très important,&#xA;de nombreuses améliorations sur la documentation et beaucoup de tests.  Nous&#xA;somme maintenant assez satisfaits, mais il est possible que nous ayons ratés&#xA;certains bugs.  Si vous vous intéressez à ce projet, j’espère que vous&#xA;essaierez de tester cette beta, et si besoin n’hésitez pas à &lt;a href=&#34;https://powa.readthedocs.io/en/latest/support.html#support&#34;&gt;nous remonter un&#xA;bug&lt;/a&gt;!&lt;/p&gt;&#xA;&#xA;    &lt;p&gt;&lt;a href=&#34;https://rjuju.github.io/postgresqlfr/2019/05/17/powa-4-avec-mode-remote-disponible-en-beta.html&#34;&gt;PoWA 4 apporte un mode remote, disponible en beta !&lt;/a&gt; was originally published by Julien Rouhaud at &lt;a href=&#34;https://rjuju.github.io&#34;&gt;rjuju&#39;s home&lt;/a&gt; on May 17, 2019.&lt;/p&gt;</content>
    <link href="https://rjuju.github.io/postgresqlfr/2019/05/17/powa-4-avec-mode-remote-disponible-en-beta.html" rel="alternate"></link>
    <summary type="html"></summary>
    <author>
      <name>Julien Rouhaud</name>
    </author>
  </entry>
  <entry>
    <title>Nouveauté pg12: Statistiques sur les erreurs de checkums</title>
    <updated>2019-04-18T11:02:26Z</updated>
    <id>tag:rjuju.github.io,2019-04-18:/postgresqlfr/2019/04/18/nouveau-dans-pg12-statistiques-erreurs-checksums.html</id>
    <content type="html">&lt;h3 id=&#34;data-checksums&#34;&gt;Data checksums&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Ajoutés dans &lt;a href=&#34;https://git.postgresql.org/gitweb/?p=postgresql.git;a=commitdiff;h=96ef3b8ff1c&#34;&gt;PostgreSQL&#xA;9.3&lt;/a&gt;,&#xA;les &lt;a href=&#34;https://www.postgresql.org/docs/current/app-initdb.html#APP-INITDB-DATA-CHECKSUMS&#34;&gt;data&#xA;checksums&lt;/a&gt;&#xA;peuvent aider à détecter les corruptions de données survenant sur votre&#xA;stockage.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Les checksums sont activés si l’instance a été initialisée en utilisant &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;initdb&#xA;--data-checksums&lt;/code&gt; (ce qui n’est pas le comportement par défaut), ou s’ils ont&#xA;été activés après en utilisant la nouvelle utilitaire&#xA;activated afterwards with the new&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/devel/app-pgchecksums.html&#34;&gt;pg_checksums&lt;/a&gt;&#xA;également &lt;a href=&#34;https://git.postgresql.org/gitweb/?p=postgresql.git;a=commitdiff;h=ed308d783790&#34;&gt;ajouté dans PostgreSQL&#xA;12&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Quand les checksums sont ativés, ceux-ci sont écrits à chaque fois qu’un bloc&#xA;de données est écrit sur disque, et vérifiés à chaque fois qu’un bloc est lu&#xA;depuis le disque (ou depuis le cache du système d’exploitation).  Si la&#xA;vérification échoue, une erreur est remontée dans les logs.  Si le bloc était&#xA;lu par un processus client, la requête associée échouera bien évidemment, mais&#xA;si le bloc était lu par une opération&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/current/protocol-replication.html#id-1.10.5.9.7.1.8.1.12&#34;&gt;BASE_BACKUP&lt;/a&gt;&#xA;(tel que pg_basebackup), la commande continuera à s’exécuter.  Bien que les&#xA;data checksums ne détecteront qu’un sous ensemble des problèmes possibles, ils&#xA;ont tout de même une certaine utilisé, surtout si vous ne faites pas confiance&#xA;à votre stockage.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Jusqu’à PostgreSQL 11, les erreurs de validation de checksum ne pouvaient être&#xA;trouvées qu’en cherchant dans les logs, ce qui n’est clairement pas pratique si&#xA;vous voulez monitorer de telles erreurs.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;nouveaux-compteurs-disponibles-dans-pg_stat_database&#34;&gt;Nouveaux compteurs disponibles dans pg_stat_database&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Pour rendre la supervision des erreurs de checksum plus simple, et pour aider&#xA;les utilisateurs à réagir dès qu’un tel problème survient, PostgreSQL 12 ajoute&#xA;de nouveaux compteurs dans la vue &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_stat_database&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-plaintext highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;commit 6b9e875f7286d8535bff7955e5aa3602e188e436&#xA;Author: Magnus Hagander &amp;lt;magnus@hagander.net&amp;gt;&#xA;Date:   Sat Mar 9 10:45:17 2019 -0800&#xA;&#xA;Track block level checksum failures in pg_stat_database&#xA;&#xA;This adds a column that counts how many checksum failures have occurred&#xA;on files belonging to a specific database. Both checksum failures&#xA;during normal backend processing and those created when a base backup&#xA;detects a checksum failure are counted.&#xA;&#xA;Author: Magnus Hagander&#xA;Reviewed by: Julien Rouhaud&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-plaintext highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;commit 77bd49adba4711b4497e7e39a5ec3a9812cbd52a&#xA;Author: Magnus Hagander &amp;lt;magnus@hagander.net&amp;gt;&#xA;Date:   Fri Apr 12 14:04:50 2019 +0200&#xA;&#xA;    Show shared object statistics in pg_stat_database&#xA;&#xA;    This adds a row to the pg_stat_database view with datoid 0 and datname&#xA;    NULL for those objects that are not in a database. This was added&#xA;    particularly for checksums, but we were already tracking more satistics&#xA;    for these objects, just not returning it.&#xA;&#xA;    Also add a checksum_last_failure column that holds the timestamptz of&#xA;    the last checksum failure that occurred in a database (or in a&#xA;    non-dataabase file), if any.&#xA;&#xA;    Author: Julien Rouhaud &amp;lt;rjuju123@gmail.com&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-plaintext highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;commit 252b707bc41cc9bf6c55c18d8cb302a6176b7e48&#xA;Author: Magnus Hagander &amp;lt;magnus@hagander.net&amp;gt;&#xA;Date:   Wed Apr 17 13:51:48 2019 +0200&#xA;&#xA;    Return NULL for checksum failures if checksums are not enabled&#xA;&#xA;    Returning 0 could falsely indicate that there is no problem. NULL&#xA;    correctly indicates that there is no information about potential&#xA;    problems.&#xA;&#xA;    Also return 0 as numbackends instead of NULL for shared objects (as no&#xA;    connection can be made to a shared object only).&#xA;&#xA;    Author: Julien Rouhaud &amp;lt;rjuju123@gmail.com&amp;gt;&#xA;    Reviewed-by: Robert Treat &amp;lt;rob@xzilla.net&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Ces compteurs reflèteront les erreurs de validation de checksum à la fois pour&#xA;les processus clients et pour l’activité&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/current/protocol-replication.html#id-1.10.5.9.7.1.8.1.12&#34;&gt;BASE_BACKUP&lt;/a&gt;,&#xA;par base de données.&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;rjuju&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_stat_database&lt;/span&gt;&#xA;                        &lt;span class=&#34;k&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;pg_catalog.pg_stat_database&#34;&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;Column&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;k&#34;&gt;Type&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Collation&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Default&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;-----------------------+--------------------------+-----------+----------+---------&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;datid&lt;/span&gt;                 &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;oid&lt;/span&gt;                      &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;datname&lt;/span&gt;               &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;                     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;p&#34;&gt;[...]&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;checksum_failures&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bigint&lt;/span&gt;                   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;checksum_last_failure&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;zone&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;p&#34;&gt;[...]&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;stats_reset&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;zone&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;La colonne &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;checksum_failures&lt;/code&gt; montrera un nombre cumulé d’erreurs, et la&#xA;colonne &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;checksum_last_failure&lt;/code&gt; montrera l’horodatage de la dernière erreur de&#xA;validation sur la base de données (NULL si aucune erreur n’est jamais&#xA;survenue).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Pour éviter toute confusion (merci à Robert Treat pour l’avoir signalé), ces&#xA;deux colonnes retourneront toujours NULL si les data checkums ne sont pas&#xA;activés, afin qu’on ne puisse pas croire que les checksums sont toujours&#xA;vérifiés avec succès.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Comme effet de bord, &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_stat_database&lt;/code&gt;  montrera maintenant également les&#xA;statistiques disponibles pour les objets partagés (tels que la table&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_database&lt;/code&gt; par exemple), dans une nouvelle ligne pour laquelle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;datid&lt;/code&gt; vaut&#xA;&lt;strong&gt;0&lt;/strong&gt;, et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;datname&lt;/code&gt; vaut &lt;strong&gt;NULL&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;del&gt;Une sonde dédiée est également &lt;a href=&#34;https://github.com/OPMDG/check_pgactivity/issues/226&#34;&gt;déjà&#xA;planifiée&lt;/a&gt; dans&#xA;&lt;a href=&#34;https://opm.readthedocs.io/probes/check_pgactivity.html&#34;&gt;check_pgactivity&lt;/a&gt; !&lt;/del&gt;&#xA;Une sonde dédiée est également &lt;a href=&#34;https://github.com/OPMDG/check_pgactivity/commit/0e8b516e95e4364470d4e205aebc9fe68bbcfd23&#34;&gt;déjà&#xA;disponible&lt;/a&gt;&#xA;dans &lt;a href=&#34;https://opm.readthedocs.io/probes/check_pgactivity.html&#34;&gt;check_pgactivity&lt;/a&gt; !&lt;/p&gt;&#xA;&#xA;    &lt;p&gt;&lt;a href=&#34;https://rjuju.github.io/postgresqlfr/2019/04/18/nouveau-dans-pg12-statistiques-erreurs-checksums.html&#34;&gt;Nouveauté pg12: Statistiques sur les erreurs de checkums&lt;/a&gt; was originally published by Julien Rouhaud at &lt;a href=&#34;https://rjuju.github.io&#34;&gt;rjuju&#39;s home&lt;/a&gt; on April 18, 2019.&lt;/p&gt;</content>
    <link href="https://rjuju.github.io/postgresqlfr/2019/04/18/nouveau-dans-pg12-statistiques-erreurs-checksums.html" rel="alternate"></link>
    <summary type="html"></summary>
    <author>
      <name>Julien Rouhaud</name>
    </author>
  </entry>
  <entry>
    <title>Mettre en place une streaming replication avec PostgreSQL 10</title>
    <updated>2018-03-13T06:28:00Z</updated>
    <id>tag:blog.raveland.tech,2018-03-13:/post/postgresql_sr_fr/</id>
    <link href="https://blog.raveland.tech/post/postgresql_sr_fr/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dans ce post, je vais vous expliquer comment mettre en place une &lt;em&gt;streaming replication&lt;/em&gt; avec PostgreSQL 10. Par contre, je n&amp;rsquo;expliquerais pas comment installer PostgreSQL donc je suppose que cela est déjà le cas.&lt;/p&gt;</summary>
    <author>
      <name>blog.raveland.tech</name>
    </author>
  </entry>
  <entry>
    <title>OpenBSD / PostgreSQL / Authentification</title>
    <updated>2017-11-29T11:31:53Z</updated>
    <id>tag:blog.raveland.tech,2017-11-29:/post/openbsd_pg/</id>
    <link href="https://blog.raveland.tech/post/openbsd_pg/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Si vous êtes un utilisateur d&amp;rsquo;OpenBSD et de PostgreSQL, vous pouvez utiliser l&amp;rsquo;authentification BSD pour vous authentifier sur vos bases.&#xA;Nous allons voir comment faire cela.&lt;/p&gt;</summary>
    <author>
      <name>blog.raveland.tech</name>
    </author>
  </entry>
  <entry>
    <title>Postgresql et la réplication logique</title>
    <updated>2017-11-27T08:32:06Z</updated>
    <id>tag:blog.raveland.tech,2017-11-27:/post/postgresql_lr/</id>
    <link href="https://blog.raveland.tech/post/postgresql_lr/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cet article va tester la nouvelle fonctionnalité disponible depuis PostgreSQL 10.0 : la réplication logique.&lt;/p&gt;&#xA;&lt;p&gt;Pour en savoir plus, l&amp;rsquo;excellente &lt;a href=&#34;https://docs.postgresql.fr/10/logical-replication.html&#34;&gt;documentation de PostgreSQL&lt;/a&gt;&lt;/p&gt;</summary>
    <author>
      <name>blog.raveland.tech</name>
    </author>
  </entry>
</feed>