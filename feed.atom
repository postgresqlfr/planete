<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>Planète PostgreSQL</title>
  <id>https://planete.postgresql.fr/</id>
  <updated>2024-09-12T12:53:17Z</updated>
  <subtitle>L&#39;actualité de PostgreSQL de français</subtitle>
  <link href="https://planete.postgresql.fr/"></link>
  <author>
    <name>PostgreSQL.fr</name>
    <email>contact@postgresql.fr</email>
  </author>
  <entry>
    <title>PostgreSQL Hebdo #116</title>
    <updated>2024-09-09T14:06:00Z</updated>
    <id>tag:sebastien.lardiere.net,2024-09-09:/blog/index.php/post/2024/09/09/PostgreSQL-Hebdo-116</id>
    <link href="http://sebastien.lardiere.net/blog/index.php/post/2024/09/09/PostgreSQL-Hebdo-116" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lu ces dernières semaines :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://begriffs.com/posts/2018-03-20-user-defined-order.html&#34;&gt;User-defined Order in SQL&lt;/a&gt; : Ordonner les informations, c&#39;est souvent adopter un certain point de vue, et cette démarche fait partie de la modélisation des données ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://mccue.dev/pages/8-16-24-just-use-postgres&#34;&gt;Just use Postgres&lt;/a&gt; : passage en revue des alternatives à PostgreSQL ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/do-you-still-need-pgbadger-youre-using-grafana-alicja-kucharczyk-cgfmf&#34;&gt;Do you still need pgBadger if you’re using Grafana?&lt;/a&gt; : Grafana ne remplace pas complètement un rapport pgBadger, dans lequel on trouve de nombreuses informations utiles à la compréhension du fonctionnement d&#39;une instance PostgreSQL ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/not-so-good-idea-pipe-syntax-sql-franck-pachot-dx6he/&#34;&gt;&lt;/a&gt; : De la façon dont le language SQL s&#39;écrit, ou pourquoi on manipule des ensembles et non pas des flux ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/cybertec-postgresql/pgwatch&#34; title=&#34;https://github.com/cybertec-postgresql/pgwatch&#34;&gt;https://github.com/cybertec-postgre...&lt;/a&gt; la prochaine version de PgWatch poursuit son développement avec la version 3.0 beta4&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://dataegret.com/2024/08/handling_cancellation_request/&#34;&gt;Handling Cancellation Request&lt;/a&gt; : Comment annuler correctement une requête, depuis l&#39;application client, vers un cluster PostgreSQL avec le gestionnaire de connexions PgBouncer ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.shayon.dev/post/2024/225/stop-relying-on-if-not-exists-for-concurrent-index-creation-in-postgresql/&#34;&gt;Stop Relying on IF NOT EXISTS for Concurrent Index Creation in PostgreSQL&lt;/a&gt; : à propos d&#39;index invalide et de création conditionelle ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://anyblockers.com/posts/postgres-as-a-search-engine&#34;&gt;Postgres as a search engine&lt;/a&gt; : Peut-on utiliser PostgreSQL comme moteur de recherche ?&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://okbob.blogspot.com/2024/09/how-to-get-info-about-relations-between.html?m=1&#34;&gt;How to get info about relations between system tables?&lt;/a&gt; : à propos des liens internes du catalogue ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/news/postgresql-17-rc1-released-2926/&#34;&gt;PostgreSQL 17 RC1 Released!&lt;/a&gt;  (et en français : &lt;a href=&#34;https://www.loxodata.com/post/postgresql-17-rc1/&#34; title=&#34;https://www.loxodata.com/post/postgresql-17-rc1/&#34;&gt;https://www.loxodata.com/post/postg...&lt;/a&gt;) : la date prévue pour PostgreSQL 17.0 est le 26 septembre !&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/patroni/patroni/blob/master/docs/releases.rst#version-401&#34;&gt;Patroni 4.0&lt;/a&gt; : nouvelle version de l&#39;outil de gestion de la haute disponibilité, avec quelques ruptures de compatibilité ;&lt;/li&gt;&#xA;&lt;/ul&gt;</summary>
    <author>
      <name>Sébastien Lardière</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL Hebdo #115</title>
    <updated>2024-08-09T14:39:00Z</updated>
    <id>tag:sebastien.lardiere.net,2024-08-09:/blog/index.php/post/2024/08/09/PostgreSQL-Hebdo-115</id>
    <link href="http://sebastien.lardiere.net/blog/index.php/post/2024/08/09/PostgreSQL-Hebdo-115" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lu ces dernières semaines :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://swizec.com/blog/why-sql-is-forever/&#34;&gt;Why SQL is Forever&lt;/a&gt; : billet sur la pertinence du SQL et des transactions face aux bases de données « NoSQL », et sur le point de vue de Stonebraker (le créateur de PostgreSQL) à ce sujet ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.ubicloud.com/blog/difference-between-running-postgres-for-yourself-and-for-others&#34;&gt;Difference between running Postgres for yourself and for others&lt;/a&gt; : comparaison des modes d&#39;hébergement d&#39;une instance PostgreSQL (du point de vue d&#39;un clouder) ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://proopensource.it/blog/postgresql-connection-poolers&#34;&gt;PostgreSQL Connection Poolers&lt;/a&gt; : court billet sur les gestionnaires de connexions à PostgreSQL ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://danolivo.substack.com/p/designing-a-prototype-postgres-plan&#34;&gt;Designing a Prototype: Postgres Plan Freezing&lt;/a&gt; : intéressante démarche à propos de la mise en cache de plan d&#39;exécution de requêtes ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://drew.silcock.dev/blog/how-postgres-stores-data-on-disk/&#34;&gt;How Postgres stores data on disk – this one&#39;s a page turner&lt;/a&gt; : article complet sur la technique de stockage des donnés de PostgreSQL ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/news/postgresql-164-158-1413-1316-1220-and-17-beta-3-released-2910/&#34;&gt;PostgreSQL 16.4, 15.8, 14.13, 13.16, 12.20, and 17 Beta 3 Released!&lt;/a&gt; (en français : &lt;a href=&#34;https://www.loxodata.com/post/postgresql-16-4/&#34;&gt;PostgreSQL 16.4 et autres correctifs&lt;/a&gt;) : Troisième Bêta pour PostgreSQL 17 ! À vos tests !&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&lt;p&gt;À venir :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Le programme de PgConf Europe 2024, qui a lieu à Athènes, est publié : &lt;a href=&#34;https://www.postgresql.eu/events/pgconfeu2024/schedule/&#34; title=&#34;https://www.postgresql.eu/events/pgconfeu2024/schedule/&#34;&gt;https://www.postgresql.eu/events/pg...&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</summary>
    <author>
      <name>Sébastien Lardière</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL Hebdo #114</title>
    <updated>2024-06-28T14:14:00Z</updated>
    <id>tag:sebastien.lardiere.net,2024-06-28:/blog/index.php/post/2024/06/28/PostgreSQL-Hebdo-114</id>
    <link href="http://sebastien.lardiere.net/blog/index.php/post/2024/06/28/PostgreSQL-Hebdo-114" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lu ces dernières semaines :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/testing-dbtune-showing-postgresql-double-buffering-some-franck-pachot-voyhe/&#34;&gt;Testing DBtune, showing PostgreSQL double buffering, and some thoughts about automated database tuning for SQL databases&lt;/a&gt; : retour sur l&#39;utilisation de l&#39;outil DBtune, suite à l&#39;atelier éponyme lors du PGDay.fr à Lille ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.ploeh.dk/2024/06/03/youll-regret-using-natural-keys/&#34;&gt;You&#39;ll regret using natural keys&lt;/a&gt; : la notion de clé primaire naturelle est en réalité loin d&#39;être simple ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.loxodata.com/post/formes-normales/&#34;&gt;Les formes normales&lt;/a&gt; : une introduction aux formes normales ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://stborden.wordpress.com/2024/06/18/reduce-vacuum-by-using-on-conflict-directive/&#34;&gt;Reduce Vacuum by Using “ON CONFLICT” Directive&lt;/a&gt; : ou on comprend qu&#39;une insertion dans une table peut générer du « bloat » ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.loxodata.com/post/logical-replication-with-patroni/&#34;&gt;Réplication logique et Patroni&lt;/a&gt; : retour sur l&#39;utilisation de slots dans un cluster Patroni ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cybertec-postgresql.com/en/making-the-postgresql-visibility-map-visible/&#34;&gt;Making the PostgreSQL visibility map visible&lt;/a&gt; : plongée dans les détails internes du stockage des données et des index et de leurs optimisations parfois contre-intuitives ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/news/postgresql-17-beta-2-released-2885/&#34;&gt;PostgreSQL 17 Beta 2 Released!&lt;/a&gt; : le cycle de publication de PostgreSQL 17 continue avec la version beta2 ; Testez-là !&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.percona.com/blog/upgrading-to-the-new-etcd-version-from-3-3-for-patroni/&#34;&gt;Upgrading to the New Etcd Version From 3.3 for Patroni&lt;/a&gt; : la gestion d&#39;un cluster Patroni passe par la maitrise des différents composants du cluster, ici, le DCS Etcd ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.ongres.com/blog/toast_and_its_influences_-on_parallelism_in_postgres/&#34;&gt;TOAST and its influences on parallelism in PostgreSQL&lt;/a&gt; : de la détermination d&#39;un plan d&#39;exéction en fonction de la taille des TOASTs.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://2024.pgconf.eu/call-for-papers/&#34; title=&#34;https://2024.pgconf.eu/call-for-papers/&#34;&gt;https://2024.pgconf.eu/call-for-pap...&lt;/a&gt; : derniers jours pour soumettre un sujet à la prochaine conférence européenne sur PostgreSQL !&lt;/li&gt;&#xA;&lt;/ul&gt;</summary>
    <author>
      <name>Sébastien Lardière</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL Hebdo #113</title>
    <updated>2024-06-14T14:25:00Z</updated>
    <id>tag:sebastien.lardiere.net,2024-06-14:/blog/index.php/post/2024/06/14/PostgreSQL-Hebdo-113</id>
    <link href="http://sebastien.lardiere.net/blog/index.php/post/2024/06/14/PostgreSQL-Hebdo-113" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lu ces dernières semaines :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.percona.com/blog/administering-a-patroni-managed-postgresql-cluster/&#34;&gt;Administering a Patroni Managed PostgreSQL Cluster&lt;/a&gt; : un tutoriel assez complet pour prendre en main Patroni ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.stephane-robert.info/docs/services/bdd/relationnelles/introduction/&#34;&gt;Les bases de données relationnelles&lt;/a&gt; et &lt;a href=&#34;https://blog.stephane-robert.info/docs/services/bdd/relationnelles/postgresql/introduction/&#34;&gt;Introduction à PostgreSQL&lt;/a&gt; : Deux documentations, en français, claires et accessibles ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.dalibo.com/2024/06/03/ldap2pg-6.1.html&#34;&gt;ldap2pg 6.1 disponible&lt;/a&gt; : nouvelle version de l&#39;outil ldap2pg, qui permet de synchroniser des rôles depuis un annuaire ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.enterprisedb.com/blog/finding-memory-leaks-postgres-c-code&#34;&gt;Finding memory leaks in Postgres C code&lt;/a&gt; : quelques explications simples à propos d&#39;outils détectant une éventuelle fuite mémoire dans PostgreSQL ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://h50146.www5.hpe.com/products/software/oe/linux/mainstream/support/lcc/pdf/PostgreSQL_17_Beta_1_New_Features_en_202405125-1.pdf&#34;&gt;PostgreSQL 17 New Features With Examples (Beta 1)&lt;/a&gt; (pdf)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog-postgresql.verite.pro/2024/06/07/pg17-utf8-collation.html&#34;&gt;On analyse la nouvelle collation de PostgreSQL 17&lt;/a&gt; : les tris et recherche de texte nécessitent de correctement choisir les collations, et la version 17 simplifie ce choix ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://rss2tg.duck.consulting/tuning_postgresql_to_reduce_ssd_wearout.html&#34;&gt;Tuning PostgreSQL to reduce SSD wearout&lt;/a&gt; : intéressant, il y a des choses à prendre, mais attention à vos données ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://tembo.io/blog/optimizing-memory-usage&#34;&gt;How to Get the Most out of Postgres Memory Settings&lt;/a&gt; : retour sur l&#39;utilisation de la mémoire par PostgreSQL ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://2024.pgconf.eu/call-for-papers/&#34; title=&#34;https://2024.pgconf.eu/call-for-papers/&#34;&gt;https://2024.pgconf.eu/call-for-pap...&lt;/a&gt; : Il est temps de proposer un sujet de présentation pour la conférence européenne sur PostgreSQL, qui aura lieu à Athènes au mois d&#39;octobre.&lt;/li&gt;&#xA;&lt;/ul&gt;</summary>
    <author>
      <name>Sébastien Lardière</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL Hebdo #112</title>
    <updated>2024-05-31T15:17:00Z</updated>
    <id>tag:sebastien.lardiere.net,2024-05-31:/blog/index.php/post/2024/05/31/PostgreSQL-Hebdo-112</id>
    <link href="http://sebastien.lardiere.net/blog/index.php/post/2024/05/31/PostgreSQL-Hebdo-112" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lu ces dernières semaines :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/news/postgresql-17-beta-1-released-2865/&#34;&gt;PostgreSQL 17 Beta 1 Released!&lt;/a&gt; : c&#39;est le moment de tester !&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://rhaas.blogspot.com/2024/05/hacking-on-postgresql-is-really-hard.html&#34;&gt;Hacking on PostgreSQL is Really Hard&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://ivdl.co.za/2024/05/29/achieving-a-100x-speedup-of-deletes-on-postgresql/&#34;&gt;Achieving a 100x speedup of DELETEs on PostgreSQL&lt;/a&gt; : performance des suppressions, clé étrangère et index ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://notso.boringsql.com/posts/custom-postgresql-extensions-with-rust/&#34;&gt;Custom PostgreSQL extensions with Rust&lt;/a&gt; : utiliser du Rust dans PostgreSQL ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cybertec-postgresql.com/en/why-do-i-have-a-slow-commit-in-postgresql/&#34;&gt;Why do I have a slow COMMIT in PostgreSQL?&lt;/a&gt; : différentes réponses qui nécessitent de plonger dans les arcanes de nos bases de données et des systèmes sous-jacents ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.depesz.com/2024/05/22/waiting-for-postgresql-17-merge-split-partitions/&#34;&gt;Waiting for PostgreSQL 17 – MERGE / SPLIT partitions&lt;/a&gt; : Il est parfois nécessaire de ranger ses affaires ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/cybertec-postgresql/pgwatch3/&#34;&gt;pgwatch3&lt;/a&gt; va prendre la suite de pgwatch2 ;&lt;/li&gt;&#xA;&lt;/ul&gt;</summary>
    <author>
      <name>Sébastien Lardière</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL Hebdo #111</title>
    <updated>2024-04-19T14:28:00Z</updated>
    <id>tag:sebastien.lardiere.net,2024-04-19:/blog/index.php/post/2024/04/19/PostgreSQL-Hebdo-111</id>
    <link href="http://sebastien.lardiere.net/blog/index.php/post/2024/04/19/PostgreSQL-Hebdo-111" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lu ces derniers temps :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.shayon.dev/post/2023/355/do-you-really-need-foreign-keys/&#34;&gt;Do you really need Foreign Keys?&lt;/a&gt; : une clé étrangère a en effet des conséquences en termes de performance. Peut-on pour autant s&#39;en passer ?&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.deblan.io/post/660/anonymiser-une-base-de-donnees-mysql-et-postgresql&#34;&gt;Anonymiser une base de données MySQL et PostgreSQL&lt;/a&gt; : l&#39;anonymisation est devenue essentielle pour protéger les données personnelles tout en permettant de travailler sur des volumes de données proche de la réalité, donc souvent des données issues de système de production. Ce type d&#39;outil devient donc indispensable ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.citusdata.com/blog/2024/04/04/pgbouncer-supports-more-session-vars/&#34;&gt;PgBouncer Connection Pooler for Postgres Now Supports More Session Vars&lt;/a&gt; : support des variables de sessions dans PgBouncer, très utile lors de l&#39;utilisation du mode « transaction » ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://aliramadhan.me/2024/03/31/trillion-rows.html&#34;&gt;Building a weather data warehouse part I: Loading a trillion rows of weather data into TimescaleDB&lt;/a&gt; : de l&#39;utilisation de TimescaleDB, de COPY et autres outils pour ingérer des milliards d&#39;enregistrements ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/commandprompt/pgmanage?tab=readme-ov-file#pgmanage-10-release&#34;&gt;PgManage 1.0 Release&lt;/a&gt; : première publication majeure du fork d&#39;OmniDB ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.anayrat.info/2024/02/05/postgres-a-nouveau-elu-sgbd-de-lannee-en-2023-mais-je-suis-inquiet/&#34;&gt;Postgres à nouveau élu SGBD de l&#39;année en 2023, mais je suis inquiet&lt;/a&gt; : en français, quelques réflexions sur le métier de DBA ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://lwn.net/SubscriberLink/968300/c3a1c8bb070076c8/&#34;&gt;The PostgreSQL community debates ALTER SYSTEM&lt;/a&gt; : intéressant retour sur l&#39;adoption d&#39;une fonctionnalité dans PostgreSQL, et les interactions parfois difficiles mais nécessaire ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.pinaraf.info/2024/03/look-ma-i-wrote-a-new-jit-compiler-for-postgresql/&#34;&gt;Look ma, I wrote a new JIT compiler for PostgreSQL&lt;/a&gt; : un exemple de la modularité de PostgreSQL ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.figma.com/fr/blog/how-figmas-databases-team-lived-to-tell-the-scale/&#34;&gt;How Figma’s databases team lived to tell the scale&lt;/a&gt; : un bon exemple de gestion d&#39;architecture de bases de données quand le volume s&#39;acroit ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://rmarcus.info/blog/2024/04/12/pg-over-time.html&#34;&gt;Ten years of improvements in PostgreSQL&#39;s optimizer&lt;/a&gt; : mesures des améliorations du Planner.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&lt;p&gt;À venir dans PostgreSQL 17 :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://pganalyze.com/blog/5mins-postgres-17-faster-vacuum-adaptive-radix-trees&#34;&gt;Faster VACUUM with Adaptive Radix Trees&lt;/a&gt; : une amélioration des performances de VACUUM basée sur des travaux de recherches ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.depesz.com/2024/04/11/waiting-for-postgresql-17-add-support-for-merge-when-not-matched-by-source/&#34;&gt;Add support for MERGE … WHEN NOT MATCHED BY SOURCE.&lt;/a&gt; : à venir dans PostgreSQL 17, une amélioration de la commande MERGE permettant de travailler sur la source des données ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.depesz.com/2024/03/19/waiting-for-postgresql-17-add-returning-support-to-merge/&#34;&gt;Add RETURNING support to MERGE&lt;/a&gt; : support de la clause RETURNING (non-standard) pour la commande MERGE ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://andyatkinson.com/blog/2024/04/16/postgresql-17-merge-split-partitions&#34;&gt;Use Cases for Merging and Splitting Partitions With Minimal Locking in PostgreSQL 17&lt;/a&gt; : Fusion et division de partitions, attention toutefois aux verrous ;&lt;/li&gt;&#xA;&lt;/ul&gt;</summary>
    <author>
      <name>Sébastien Lardière</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL 17 en RC1</title>
    <updated>2024-09-06T10:00:00Z</updated>
    <id>tag:www.loxodata.com,2024-09-06:/post/postgresql-17-rc1/</id>
    <link href="http://www.loxodata.com/post/postgresql-17-rc1/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Le PostgreSQL Global Development Group a annoncé la publication de la première&#xA;Release Candidate de PostgreSQL 17. En tant que Release Candidate, la version&#xA;de PostgreSQL 17 RC1 sera quasiment identique à la publication initiale de&#xA;PostgreSQL 17, cependant, des corrections pourront être appliquées avant la&#xA;mise à disposition de la version finale de PostgreSQL 17.&lt;/p&gt;&#xA;&lt;p&gt;La date de publication pour la version finale de PostgreSQL 17 est prévue au 26&#xA;septembre 2024. Consulter la section &lt;a href=&#34;#planning-des-publications&#34;&gt;Planning des publications&lt;/a&gt; pour plus de détails.&lt;/p&gt;&#xA;&lt;h1 id=&#34;mise-à-jour-vers-la-rc1-de-postgresql-17&#34;&gt;Mise à jour vers la RC1 de PostgreSQL 17&lt;/h1&gt;&#xA;&lt;p&gt;Pour mettre à jour votre version de PostgreSQL depuis une précédente version de&#xA;PostgreSQL, vous pouvez utiliser la même stratégie que pour mettre à jour vers&#xA;toute version majeure de PostgreSQL (par exemple avec la commande &lt;code&gt;pg_upgrade&lt;/code&gt;&#xA;ou &lt;code&gt;pg_dump&lt;/code&gt;/&lt;code&gt;pg_restore&lt;/code&gt;).&lt;/p&gt;&#xA;&lt;p&gt;Pour plus d&amp;rsquo;information, consultez la section &lt;a href=&#34;https://www.postgresql.org/docs/17/upgrading.html&#34;&gt;mise à jour&lt;/a&gt;&#xA;de la documentation officielle : &lt;a href=&#34;https://www.postgresql.org/docs/17/upgrading.html&#34;&gt;https://www.postgresql.org/docs/17/upgrading.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;changements-depuis-la-bêta-3&#34;&gt;Changements depuis la bêta 3&lt;/h1&gt;&#xA;&lt;p&gt;Plusieurs corrections ont été apportées à PostgreSQL 17 suite aux remontées&#xA;d&amp;rsquo;utilisateurs ayant testé la bêta 3.&lt;/p&gt;&#xA;&lt;p&gt;Dont notamment :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;suppression de la fonctionnalité de MERGE/SPLIT d&amp;rsquo;une partition&lt;/li&gt;&#xA;&lt;li&gt;amélioration des performances suite à un correctif autour de la réplication logique et des sous-transactions&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Pour la liste complète des corrections, veuillez consulter la page des&#xA;&lt;a href=&#34;https://wiki.postgresql.org/wiki/PostgreSQL_17_Open_Items#resolved_before_17rc1&#34;&gt;tickets&lt;/a&gt; ouverts.&lt;/p&gt;&#xA;&lt;h1 id=&#34;planning-des-publications&#34;&gt;Planning des publications&lt;/h1&gt;&#xA;&lt;p&gt;Il s&amp;rsquo;agit de la première Release Candidate de la version 17. Sauf à découvrir un&#xA;problème imposant un nouveau délai ou une nouvelle Release Candidate, PostgreSQL&#xA;17 devrait être publiée le 26 septembre 2024.&lt;/p&gt;&#xA;&lt;p&gt;Pour plus d&amp;rsquo;information, veuillez consulter la page &lt;a href=&#34;https://www.postgresql.org/developer/beta/&#34;&gt;Beta Testing&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;liens&#34;&gt;Liens&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/download/&#34;&gt;Téléchargement&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/developer/beta/&#34;&gt;Information sur le Bêta Testing&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/17/release-17.html&#34;&gt;Note de publication de PostgreSQL 17&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://wiki.postgresql.org/wiki/PostgreSQL_17_Open_Items&#34;&gt;Problèmes connus de PostgreSQL 17&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/featurematrix/#configuration-management&#34;&gt;Matrice de fonctionnalités&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/account/submitbug/&#34;&gt;Soumettre un bogue&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://twitter.com/postgresql&#34;&gt;Suivre @postgresql sur Twitter&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/donate/&#34;&gt;Faire un don&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</summary>
    <author>
      <name>Loxodata</name>
    </author>
  </entry>
  <entry>
    <title>IA et neutralité carbone</title>
    <updated>2024-08-23T14:45:00Z</updated>
    <id>tag:www.loxodata.com,2024-08-23:/post/ia-neutralite-carbone/</id>
    <link href="http://www.loxodata.com/post/ia-neutralite-carbone/" rel="alternate"></link>
    <summary type="html">&lt;h2 id=&#34;neutralité-carbone-&#34;&gt;Neutralité carbone ?&lt;/h2&gt;&#xA;&lt;p&gt;Les géants de la tech américaine comme Google et Microsoft se sont engagés il y a quelques années à tendre vers la neutralité carbone en 2030. Mais qu&amp;rsquo;est-ce que la neutralité carbone ? Selon le Parlement Européen, la neutralité carbone est &amp;ldquo;l&#39;équilibre entre les émissions de carbone et l&amp;rsquo;absorption du carbone de l&amp;rsquo;atmosphère par les puits de carbone&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;L&amp;rsquo;Union européenne s&amp;rsquo;est fixé comme objectif de neutralité carbone les années 2050. Plusieurs actions sont visées pour essayer d&amp;rsquo;atteindre cet objectif, dont notamment :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Décarboner totalement la production d’énergie à l’horizon 2050&lt;/li&gt;&#xA;&lt;li&gt;Réduire la consommation d’énergie dans tous les secteurs&lt;/li&gt;&#xA;&lt;li&gt;Diminuer les émissions non liées à la consommation d’énergie&lt;/li&gt;&#xA;&lt;li&gt;Augmenter les puits de carbone (naturels et technologiques)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Or, avec l&amp;rsquo;avènement de l&amp;rsquo;IA générative, et des cryptomonnaies encore avant, on voit que l&amp;rsquo;atteinte de la neutralité carbone risque d&#39;être bousculée.&lt;/p&gt;&#xA;&lt;h2 id=&#34;ia-générative-et-datacenters&#34;&gt;IA générative et datacenters&lt;/h2&gt;&#xA;&lt;p&gt;On ne peut passer à côté désormais de tous les services d&amp;rsquo;intelligence artificielle, et notamment l&amp;rsquo;IA générative, tant les grands groupes se livrent une bataille sans merci, menant à une course à la puissance de calcul. Ce qu&amp;rsquo;il faut voir derrière ces services, c&amp;rsquo;est la demande toujours croissante de nouveaux datacenters pour stocker les innombrables données nécessaires aux algorithmes d&amp;rsquo;IA générative. Ce qui pousse à consommer de plus en plus d&#39;énergie, et donc à émettre plus de gaz à effet de serre.&lt;/p&gt;&#xA;&lt;p&gt;Cette augmentation s&amp;rsquo;est élevée à 48% sur cinq ans d&amp;rsquo;après le rapport de Google, et représentait pour la seule année 2023, près de 17,2 millions de tonnes de CO2.&lt;/p&gt;&#xA;&lt;p&gt;En plus de mettre en tension les réseaux d&#39;énergie, les ressources en eau sont aussi à surveiller de près, car c&amp;rsquo;est bien l&amp;rsquo;eau qui est utilisée pour refroidir ces grands centres de données. On peut aussi noter la demande toujours forte en matières premières pour équiper ces datacenters de puces de dernière génération d&amp;rsquo;un fabricant taïwanais bien connu.&lt;/p&gt;&#xA;&lt;p&gt;Depuis l&amp;rsquo;année dernière, Google comme d&amp;rsquo;autres sociétés essaye aussi une autre stratégie pour atteindre la neutralité carbone, celle d&amp;rsquo;investir dans des crédits de suppression carbone en plus de chercher à augmenter l&amp;rsquo;efficacité énergétique de ces datacenters.&lt;/p&gt;&#xA;&lt;h2 id=&#34;pg_vector&#34;&gt;pg_vector&lt;/h2&gt;&#xA;&lt;p&gt;En attendant, PostgreSQL est entré dans la course de l&amp;rsquo;IA générative afin de proposer des fonctionnalités facilitant son intégration. L&amp;rsquo;extension &lt;a href=&#34;https://github.com/pgvector/pgvector&#34;&gt;&lt;code&gt;pg_vector&lt;/code&gt;&lt;/a&gt; est une extension créée il y a maintenant trois ans afin de pouvoir stocker des données de type vecteur, et de faire de la recherche de similarité vectorielle efficace en proposant plusieurs types d&amp;rsquo;index et d&amp;rsquo;opérations de calcul de distance.&lt;/p&gt;&#xA;&lt;p&gt;En faisant ce choix, PostgreSQL peut devenir alors une base de données vectorielle offrant ses fonctionnalités éprouvées, avec des requêtes rendues plus efficaces pour ce type de données, à l&amp;rsquo;image du support du JSON par PostgreSQL.&lt;/p&gt;&#xA;&lt;h2 id=&#34;le-mot-de-la-fin&#34;&gt;Le mot de la fin&lt;/h2&gt;&#xA;&lt;p&gt;Les enjeux sont importants et les objectifs ambitieux, mais il est important de s&amp;rsquo;y pencher, car nous sommes tous acteurs, et face au réchauffement climatique il est urgent d&amp;rsquo;agir. On peut également espérer rendre cette consommation de l&amp;rsquo;IA moins énergivore et plus efficiente par les progrès futurs.&lt;/p&gt;&#xA;&lt;h2 id=&#34;liens&#34;&gt;Liens&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/en-us/corporate-responsibility/sustainability/report&#34;&gt;Rapport d&amp;rsquo;impact environnemental de Microsoft&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.gstatic.com/gumdrop/sustainability/google-2024-environmental-report.pdf&#34;&gt;Rapport d&amp;rsquo;impact environnemental de Google&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</summary>
    <author>
      <name>Loxodata</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL 16.4 et autres correctifs</title>
    <updated>2024-08-09T08:00:00Z</updated>
    <id>tag:www.loxodata.com,2024-08-09:/post/postgresql-16-4/</id>
    <link href="http://www.loxodata.com/post/postgresql-16-4/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Le PGDG a publié une mise à jour de toutes les versions supportées de&#xA;PostgreSQL. Il s&amp;rsquo;agit des versions 16.4, 15.8, 14.13, 13.16 et 12.20,&#xA;ainsi que la troisième publication Bêta de PostgreSQL 17.  Cette&#xA;publication corrige une vulnérabilité de sécurité et près de 55 bogues&#xA;repérés durant les derniers mois.&lt;/p&gt;&#xA;&lt;p&gt;Pour la liste complète des changements, se référer à la section &lt;a href=&#34;https://www.postgresql.org/docs/release/&#34;&gt;Notes&#xA;de publication&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;fin-de-support-de-postgresql-12&#34;&gt;Fin de support de PostgreSQL 12&lt;/h2&gt;&#xA;&lt;p&gt;La version 12 de PostgreSQL ne recevra plus aucun correctif à partir&#xA;du 14 novembre 2024. Si vous utilisez une version 12 de PostgreSQL en&#xA;production, nous vous recommandons de planifier une mise à jour vers&#xA;une version plus récente et supportée de PostgreSQL. Se référer à&#xA;notre &lt;a href=&#34;https://www.postgresql.org/support/versioning/&#34;&gt;politique de versionnement&lt;/a&gt;&#xA;pour plus d&amp;rsquo;informations.&lt;/p&gt;&#xA;&lt;h2 id=&#34;problèmes-de-sécurité&#34;&gt;Problèmes de sécurité&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/support/security/CVE-2024-7348/&#34;&gt;CVE-2024-7348&lt;/a&gt; :&#xA;le remplacement de relations dans PostgreSQL lors de l&amp;rsquo;utilisation de&#xA;&lt;code&gt;pg_dump&lt;/code&gt; permet d&amp;rsquo;exécuter du code SQL arbitraire.&lt;/p&gt;&#xA;&lt;p&gt;CVSS v3.1 Base Score: 8.8&lt;/p&gt;&#xA;&lt;p&gt;Versions vulnérables et supportées : 12 - 16.&lt;/p&gt;&#xA;&lt;p&gt;Un assaillant capable de créer et supprimer des objets non-temporaire&#xA;pourrait injecter du code SQL qui serait exécuté par une session&#xA;&lt;code&gt;pg_dump&lt;/code&gt; concurrente avec les privilèges du rôle exécutant &lt;code&gt;pg_dump&lt;/code&gt; (qui&#xA;est souvent un super-utilisateur). L&amp;rsquo;attaque implique le remplacement&#xA;d&amp;rsquo;une séquence ou d&amp;rsquo;un objet similaire avec une vue ou une table&#xA;étrangère qui exécuterait du code malicieux. Pour se prémunir de cela,&#xA;l&amp;rsquo;introduction d&amp;rsquo;un nouveau paramètre&#xA;&lt;code&gt;restrict_nonsystem_relation_kind&lt;/code&gt; permet de désactiver l&amp;rsquo;expansion de&#xA;vues autres qu&amp;rsquo;internes ainsi que l&amp;rsquo;accès aux tables étrangères et&#xA;apprend à &lt;code&gt;pg_dump&lt;/code&gt; à le définir lorsqu&amp;rsquo;il est disponible. Notez que&#xA;l&amp;rsquo;attaque est bloquée lorsque &lt;code&gt;pg_dump&lt;/code&gt; et le serveur sauvegardé sont&#xA;suffisamment récents pour avoir ce correctif.&lt;/p&gt;&#xA;&lt;p&gt;Le projet PostgreSQL remercie Noah Misch pour avoir signalé ce problème.&lt;/p&gt;&#xA;&lt;h2 id=&#34;corrections-des-bogues-et-améliorations&#34;&gt;Corrections des bogues et améliorations&lt;/h2&gt;&#xA;&lt;p&gt;Cette mise à jour corrige près de 55 bogues qui ont été signalés&#xA;depuis ces derniers mois. Les problèmes listés ci-dessous affectent la&#xA;version 16 de PostgreSQL. Certaines peuvent aussi affecter d&amp;rsquo;autres&#xA;versions supportées de PostgreSQL.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;empêche des résultats incorrects de plans &amp;ldquo;Merge Right Anti Join&amp;rdquo;,&#xA;lorsque la relation interne est connue pour avoir une clé de&#xA;jointure unique, la fusion pourrait alors se faire quand il y a des&#xA;clés de jointure dupliquées dans la relation externe ;&lt;/li&gt;&#xA;&lt;li&gt;empêche une boucle infinie dans &lt;code&gt;VACUUM&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;corrige la configuration de l&#39;élagage d&amp;rsquo;une partition pendant&#xA;&lt;code&gt;ALTER TABLE DETACH ... PARTITION CONCURRENTLY&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;corrige le comportement de fonctions stables utilisées comme argument&#xA;d&amp;rsquo;un appel &lt;code&gt;CALL&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;la fonction &lt;code&gt;pg_sequence_last_value()&lt;/code&gt; retourne maintenant &lt;code&gt;NULL&lt;/code&gt;&#xA;plutôt que de remonter une erreur quand elle est appelée sur une&#xA;séquence non tracée dans une instance secondaire et sur séquence&#xA;temporaire d&amp;rsquo;une autre session ;&lt;/li&gt;&#xA;&lt;li&gt;corrige l&amp;rsquo;analyse des opérateurs ignorés dans &lt;code&gt;websearch_to_tsquery()&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;vérifie correctement la possibilité de mettre à jour les colonnes&#xA;cibles des vues par &lt;code&gt;INSERT ... DEFAULT&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;verrouille les séquences détenues lors de &lt;code&gt;ALTER TABLE ... SET LOGGED|UNLOGGED&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;ne remonte par d&amp;rsquo;erreurs si un déclencheur &lt;code&gt;AFTER&lt;/code&gt; en file d&amp;rsquo;attente&#xA;n&amp;rsquo;existe plus ;&lt;/li&gt;&#xA;&lt;li&gt;Corrige la sélection d&amp;rsquo;un index arbitral pour &lt;code&gt;INSERT ... ON CONFLICT&lt;/code&gt; quand l&amp;rsquo;index souhaité a des expressions ou des prédicats,&#xA;par exemple à travers une vue actualisable ;&lt;/li&gt;&#xA;&lt;li&gt;refuse la modification d&amp;rsquo;une table temporaire d&amp;rsquo;une autre session&#xA;avec &lt;code&gt;ALTER TABLE&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;corrige la manipulation des statistiques étendues sur expressions&#xA;dans &lt;code&gt;CREATE TABLE ... LIKE STATISTICS&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;corrige l&#39;échec du recalcul des sous-requêtes générées par les&#xA;agrégats &lt;code&gt;MIN()&lt;/code&gt; ou &lt;code&gt;MAX()&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;désactive le caractère de soulignement dans les paramètres&#xA;positionnés ;&lt;/li&gt;&#xA;&lt;li&gt;empêche une défaillance lorsqu&amp;rsquo;une fonction JIT en ligne remonte une&#xA;erreur ;&lt;/li&gt;&#xA;&lt;li&gt;corrige la manipulation de sous-transactions d&amp;rsquo;une transaction&#xA;préparée lors du démarrage d&amp;rsquo;une instance secondaire ;&lt;/li&gt;&#xA;&lt;li&gt;empêche l&amp;rsquo;initialisation incorrecte d&amp;rsquo;un créneau de réplication logique ;&lt;/li&gt;&#xA;&lt;li&gt;corrige une fuite mémoire dans le processus d&amp;rsquo;envoi des WAL de&#xA;réplication logique quand la publication change pour une table&#xA;partitionnée pour laquelle les partitions ont des types de données&#xA;d&amp;rsquo;enregistrement qui diffèrent physiquement de la table ;&lt;/li&gt;&#xA;&lt;li&gt;désactive la création de tickets de sessions TLS avec état avec OpenSSL ;&lt;/li&gt;&#xA;&lt;li&gt;corrige la manipulation par PL/pgSQL de plages d&amp;rsquo;entier contenant&#xA;des caractères de soulignement (par exemple, &lt;code&gt;FOR i IN 1_001..1_002&lt;/code&gt;) ;&lt;/li&gt;&#xA;&lt;li&gt;corrige l&amp;rsquo;incompatibilité entre PL/Perl et Perl 5.40 ;&lt;/li&gt;&#xA;&lt;li&gt;plusieurs correctifs liés à des fonctions et déclencheurs récursifs&#xA;en PL/Python ;&lt;/li&gt;&#xA;&lt;li&gt;garantit le fait que &lt;code&gt;pg_restore -l&lt;/code&gt; rapporte les tables dépendantes&#xA;des entrées contenues correctement ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;pg_stat_statements&lt;/code&gt; passe maintenant un identifiant de requête pour&#xA;les ordres utilitaires apparaissant dans des fonctions en langage&#xA;SQL ;&lt;/li&gt;&#xA;&lt;li&gt;corrige &lt;code&gt;postgres_fdw&lt;/code&gt; lors d&amp;rsquo;une correspondance entre une table&#xA;étrangère et une vue distante non triviale ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;postgres_fdw&lt;/code&gt; n&amp;rsquo;envoie plus la clause &lt;code&gt;FETCH FIRST WITH TIES&lt;/code&gt; à un&#xA;serveur distant.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;mise-à-jour&#34;&gt;Mise à jour&lt;/h2&gt;&#xA;&lt;p&gt;Toutes les publications de mises à jour de PostgreSQL sont&#xA;cumulatives. Comme pour les autres mises à jour mineures, il n&amp;rsquo;est pas&#xA;nécessaire d&amp;rsquo;extraire et de recharger les bases de données ni&#xA;d&amp;rsquo;utiliser &lt;code&gt;pg_upgrade&lt;/code&gt; pour appliquer cette mise à jour ;&#xA;il suffit simplement d&amp;rsquo;arrêter PostgreSQL et de mettre à jour les binaires.&lt;/p&gt;&#xA;&lt;p&gt;Les utilisateurs ayant sauté une ou plusieurs mises à jour peuvent&#xA;avoir besoin d&#39;étapes additionnelles après la mise à jour.&#xA;Les notes de publication des versions précédentes fournissent les détails.&lt;/p&gt;&#xA;&lt;p&gt;Pour plus de détails, se référer à la &lt;a href=&#34;https://www.postgresql.org/docs/release/&#34;&gt;note de publication de&#xA;versions&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;note-à-propos-de-postgresql-17-bêta&#34;&gt;Note à propos de PostgreSQL 17 Bêta&lt;/h2&gt;&#xA;&lt;p&gt;Cette publication marque la troisième publication bêta de PostgreSQL&#xA;17 et rapproche d&amp;rsquo;une étape la communauté de la disponibilité&#xA;probablement vers la fin du troisième trimestre.&lt;/p&gt;&#xA;&lt;p&gt;Dans l&amp;rsquo;esprit de la communauté PostgreSQL « open-source », nous vous&#xA;encourageons fortement à tester les nouvelles fonctionnalités de&#xA;PostgreSQL sur vos systèmes pour nous aider à éliminer les bogues et&#xA;autres problèmes existants. Bien que nous ne recommandons pas&#xA;l&amp;rsquo;utilisation de PostgreSQL 17 Bêta 3 dans des environnements de&#xA;production, nous vous encourageons à trouver des moyens de tester les&#xA;applications avec cette version.&lt;/p&gt;&#xA;&lt;p&gt;Vos tests et retours aideront la communauté à s&amp;rsquo;assurer que la&#xA;publication de PostgreSQL 17 maintiendra nos standards pour livrer une&#xA;version fiable et stable de la base de données relationnelle «&#xA;open-source » la plus avancée du monde. Merci de prendre connaissance&#xA;du processus de publication et de comment vous pouvez contribuer :&#xA;(&lt;a href=&#34;https://www.postgresql.org/developer/beta/)&#34;&gt;https://www.postgresql.org/developer/beta/)&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;mettre-à-jour-vers-postgresql-17-bêta-3&#34;&gt;Mettre à jour vers PostgreSQL 17 Bêta 3&lt;/h2&gt;&#xA;&lt;p&gt;Afin de mettre à jour vers PostgreSQL 17 Bêta 3 à partir d&amp;rsquo;une&#xA;publication antérieure de PostgreSQL, vous aurez besoin d&amp;rsquo;utiliser une&#xA;stratégie similaire à la mise à jour entre versions majeures de&#xA;PostgreSQL (par exemple : &lt;code&gt;pg_upgrade&lt;/code&gt; ou&#xA;&lt;code&gt;pg_dump&lt;/code&gt;/&lt;code&gt;pg_restore&lt;/code&gt;). Pour plus d&amp;rsquo;information, merci de prendre&#xA;connaissance de la documentation sur la mise à jour.&lt;/p&gt;&#xA;&lt;h2 id=&#34;changements-depuis-la-bêta-2&#34;&gt;Changements depuis la Bêta 2&lt;/h2&gt;&#xA;&lt;p&gt;Les corrections et changements dans PostgreSQL 17 Beta 3 incluent :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;renommage du paramètre &lt;code&gt;standby_slot_names&lt;/code&gt; vers&#xA;&lt;code&gt;synchronized_standby_slots&lt;/code&gt; :&lt;/li&gt;&#xA;&lt;li&gt;plusieurs correctifs sur SQL/JSON ;&lt;/li&gt;&#xA;&lt;li&gt;corrections de &lt;code&gt;pg_combinebackup --clone&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;correction de &lt;code&gt;pg_createsubscriber&lt;/code&gt; pour fonctionner avec un nom de base&#xA;de données contenant un caractère espace ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;pg_createsubscriber&lt;/code&gt; supprime maintenant les souscriptions&#xA;préexistantes lors de l&amp;rsquo;exécution sur une base de données cibles ;&lt;/li&gt;&#xA;&lt;li&gt;amélioration de l&amp;rsquo;efficacité lors de la récupération d&amp;rsquo;information sur une&#xA;souscription avec &lt;code&gt;pg_upgrade&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;correction du comportement d&amp;rsquo;un repli TLS avec &lt;code&gt;sslmode=prefer&lt;/code&gt; en&#xA;erreur quand un serveur envoie une erreur pendant le processus de&#xA;démarrage ;&lt;/li&gt;&#xA;&lt;li&gt;documentation d&amp;rsquo;un cas d&amp;rsquo;erreur avec une sauvegarde incrémentale de&#xA;&lt;code&gt;pg_basebackup&lt;/code&gt; sur une instance secondaire lorsqu&amp;rsquo;il est exécuté&#xA;immédiatement après la sauvegarde précédente.&lt;/li&gt;&#xA;&lt;li&gt;Correction d&amp;rsquo;un problème où &lt;code&gt;pg_upgrade --transaction-size&lt;/code&gt; peut faire&#xA;qu&amp;rsquo;un processus d&amp;rsquo;arrière-plan (&lt;em&gt;backend&lt;/em&gt;) consomme de la mémoire dans un&#xA;ordre de grandeur de plus ;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Merci de se référer aux notes de publication pour la liste complète&#xA;des nouveautés et changements, ainsi qu&amp;rsquo;aux items ouverts de&#xA;PostgreSQL pour plus de détails sur les changements et correctifs.&lt;/p&gt;&#xA;&lt;h2 id=&#34;liens&#34;&gt;Liens&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/download/&#34;&gt;Téléchargements&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/release/&#34;&gt;Notes de version&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/support/security/&#34;&gt;Page sur la sécurité&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/support/versioning/&#34;&gt;Politique de version&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/developer/beta/&#34;&gt;Information sur le Bêta Testing&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/17/release-17.html&#34;&gt;Note de publication de PostgreSQL 17 Bêta&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://wiki.postgresql.org/wiki/PostgreSQL_17_Open_Items&#34;&gt;Problème connu de PostgreSQL 17&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/featurematrix/#configuration-management&#34;&gt;Matrice fonctionnelle&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/account/submitbug/&#34;&gt;Soumettre un bogue&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://twitter.com/postgresql&#34;&gt;Suivre @postgresql sur X/Twitter&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/donate/&#34;&gt;Faire un don&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Si vous avez des corrections ou suggestions sur cette annonce de&#xA;publication, merci de les envoyer à la mailing list publique&#xA;&lt;a href=&#34;https://www.postgresql.org/list/&#34;&gt;&lt;em&gt;pgsql-www@lists.postgresql.org&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;</summary>
    <author>
      <name>Loxodata</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL 17 bêta 2</title>
    <updated>2024-06-27T14:00:00Z</updated>
    <id>tag:www.loxodata.com,2024-06-27:/post/postgresql-17-beta2/</id>
    <link href="http://www.loxodata.com/post/postgresql-17-beta2/" rel="alternate"></link>
    <summary type="html">&lt;h1 id=&#34;postgresql-17-bêta-2-publiée&#34;&gt;PostgreSQL 17 Bêta 2 publiée&lt;/h1&gt;&#xA;&lt;p&gt;Le PostgreSQL Global Development Group annonce la disponibilité de la&#xA;deuxième bêta de PostgreSQL 17 en&#xA;&lt;a href=&#34;https://www.postgresql.org/download/&#34;&gt;téléchargement&lt;/a&gt;.  Cette&#xA;publication contient un aperçu des fonctionnalités qui seront&#xA;disponibles dans la version finale de PostgreSQL 17. Des modifications&#xA;peuvent toutefois intervenir d&amp;rsquo;ici là.&lt;/p&gt;&#xA;&lt;p&gt;Vous pouvez trouver des informations sur toutes les fonctionnalités et&#xA;les changements de PostgreSQL 17 dans les &lt;a href=&#34;https://www.postgresql.org/docs/17/release-17.html&#34;&gt;notes de&#xA;version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Dans l&amp;rsquo;esprit de la communauté open source PostgreSQL, nous vous&#xA;encourageons fortement à tester les nouvelles fonctionnalités de&#xA;PostgreSQL dans vos systèmes de base de données. Ceci afin de nous&#xA;aider à éliminer les bogues et autres problèmes qui pourraient&#xA;exister. Bien que nous ne vous conseillions pas de faire fonctionner&#xA;PostgreSQL 17 Bêta 2 dans vos environnements de production, nous vous&#xA;encourageons à trouver des moyens de faire fonctionner votre charge&#xA;applicative typique avec cette publication bêta.&lt;/p&gt;&#xA;&lt;p&gt;Vos tests et vos commentaires aideront la communauté à s&amp;rsquo;assurer que&#xA;PostgreSQL 17 respecte nos standards de stabilité et fiabilité. Vous&#xA;pouvez également vous renseigner sur notre &lt;a href=&#34;https://www.postgresql.org/developer/beta/&#34;&gt;processus de bêta&#xA;testing&lt;/a&gt; et comment y&#xA;contribuer.&lt;/p&gt;&#xA;&lt;h2 id=&#34;mise-à-jour-vers-postgresql-17-bêta-2&#34;&gt;Mise à jour vers PostgreSQL 17 Bêta 2&lt;/h2&gt;&#xA;&lt;p&gt;Pour mettre à jour vers PostgreSQL 17 Beta 2 à partir d&amp;rsquo;une précédente&#xA;version de PostgreSQL, vous aurez besoin d&amp;rsquo;utiliser une stratégie&#xA;similaire à la mise à jour entre versions majeures de PostgreSQL&#xA;(i.e. &lt;code&gt;pg_upgrade&lt;/code&gt; ou &lt;code&gt;pg_dump&lt;/code&gt;/&lt;code&gt;pg_restore&lt;/code&gt;). Pour plus&#xA;d&amp;rsquo;information, merci de consulter la section de la documentation&#xA;concernant les mises à jour.&lt;/p&gt;&#xA;&lt;h2 id=&#34;changement-depuis-la-publication-bêta-1&#34;&gt;Changement depuis la publication Bêta 1&lt;/h2&gt;&#xA;&lt;p&gt;Les corrections et changements depuis la publication PostgreSQL 17 Bêta&#xA;2 incluent :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Appliquer correctement le comportement par défaut de la clause &lt;code&gt;ON EMPTY&lt;/code&gt; lorsqu&amp;rsquo;elle n&amp;rsquo;est pas présente dans la requête&#xA;SQL/JSON ;&lt;/li&gt;&#xA;&lt;li&gt;Correction d&amp;rsquo;un problème avec la fonction&#xA;&lt;code&gt;pg_logical_slot_get_changes&lt;/code&gt; relative à la gestion de la propriété&#xA;de la ressource ;&lt;/li&gt;&#xA;&lt;li&gt;Plusieurs correctifs liés à la nouvelle structure de données pour&#xA;les données relatives à la commande &lt;code&gt;VACUUM&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Veuillez consulter les notes de publication pour une liste complète&#xA;des nouveautés et changements : &lt;a href=&#34;https://www.postgresql.org/docs/17/release-17.html&#34;&gt;https://www.postgresql.org/docs/17/release-17.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;tests-pour-le-débogage-et-la-compatibilité&#34;&gt;Tests pour le débogage et la compatibilité&lt;/h2&gt;&#xA;&lt;p&gt;La stabilité de chaque publication de PostgreSQL dépend de vous, la&#xA;communauté. En testant la version à venir avec votre charge et vos&#xA;outils de tests, vous pourrez nous aider à trouver les bogues et&#xA;régressions avant la publication de PostgreSQL 17.&lt;/p&gt;&#xA;&lt;p&gt;Étant donné qu&amp;rsquo;il s&amp;rsquo;agit d&amp;rsquo;une version bêta, des changements mineurs&#xA;dans le comportement de la base de données, des détails et des APIs&#xA;sont toujours possibles. Vos retours et tests aideront à déterminer&#xA;les ajustements finaux des nouvelles fonctionnalités.&lt;/p&gt;&#xA;&lt;p&gt;La qualité des tests aide à déterminer le moment de la publication&#xA;finale.&lt;/p&gt;&#xA;&lt;p&gt;Une liste des &lt;a href=&#34;https://wiki.postgresql.org/wiki/PostgreSQL_17_Open_Items&#34;&gt;problèmes&#xA;ouverts&lt;/a&gt;&#xA;est publiquement disponible dans le wiki de PostgreSQL. Vous pouvez&#xA;&lt;a href=&#34;https://www.postgresql.org/account/submitbug/&#34;&gt;rapporter des bogues&lt;/a&gt;&#xA;en utilisant le formulaire présent sur le site web de&#xA;PostgreSQL : &lt;a href=&#34;https://www.postgresql.org/account/submitbug/&#34;&gt;https://www.postgresql.org/account/submitbug/&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;planning-bêta&#34;&gt;Planning Bêta&lt;/h2&gt;&#xA;&lt;p&gt;Il s&amp;rsquo;agit de la deuxième publication bêta de la version 17. Le projet&#xA;PostgreSQL publiera autant de bêtas que cela est nécessaire pour&#xA;tester. Celles-ci seront suivies par une ou plusieurs publications de&#xA;versions candidates, jusqu&#39;à la publication de la version finale&#xA;autour de septembre ou octobre 2024.&lt;/p&gt;&#xA;&lt;p&gt;Pour plus d&amp;rsquo;information, veuillez consulter la page &lt;a href=&#34;https://www.postgresql.org/developer/beta/&#34;&gt;Beta&#xA;Testing&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;liens&#34;&gt;Liens&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/download/&#34;&gt;Téléchargement&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/developer/beta/&#34;&gt;Information sur le Bêta Testing&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/17/release-17.html&#34;&gt;Note de publication de PostgreSQL 17 Bêta&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://wiki.postgresql.org/wiki/PostgreSQL_17_Open_Items&#34;&gt;Problème connu de PostgreSQL 17&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/featurematrix/#configuration-management&#34;&gt;Matrice fonctionnelle&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/account/submitbug/&#34;&gt;Soumettre un bogue&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://twitter.com/postgresql&#34;&gt;Suivre @postgresql sur X/Twitter&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/donate/&#34;&gt;Faire un don&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Crédits photo : Carlos Gonzalez&lt;/p&gt;</summary>
    <author>
      <name>Loxodata</name>
    </author>
  </entry>
  <entry>
    <title>Retour sur POSETTE 2024</title>
    <updated>2024-06-25T07:00:00Z</updated>
    <id>tag:www.loxodata.com,2024-06-25:/post/posette-2024/</id>
    <link href="http://www.loxodata.com/post/posette-2024/" rel="alternate"></link>
    <summary type="html">&lt;h2 id=&#34;posette-vous-dites-&#34;&gt;POSETTE vous dites ?&lt;/h2&gt;&#xA;&lt;p&gt;La semaine passée s&amp;rsquo;est déroulé l&#39;évènement virtuel et gratuit, &lt;a href=&#34;https://www.citusdata.com/posette/2024/&#34;&gt;&amp;ldquo;POSETTE : an event for Postgres 2024&amp;rdquo;&lt;/a&gt;, organisé par l&#39;équipe PostgreSQL chez Microsoft. Cette année était la troisième édition de l&#39;évènement, qui s&amp;rsquo;appelait auparavant &lt;a href=&#34;https://www.youtube.com/playlist?list=PLlrxD0HtieHgf43JaI0A1VPpxEMTZGLNH&#34;&gt;Citus Con&lt;/a&gt; et organisé par Citus Data, racheté en 2019 par Microsoft.&lt;/p&gt;&#xA;&lt;p&gt;Que signifie l&amp;rsquo;acronyme POSETTE ? Claire Giordano qui fait partie du comité de sélection de l&#39;évènement chez Microsoft, nous l&amp;rsquo;explique dans ce &lt;a href=&#34;https://techcommunity.microsoft.com/t5/azure-database-for-postgresql/what-s-in-a-name-hello-posette-an-event-for-postgres-2024/ba-p/4073516&#34;&gt;post&lt;/a&gt; : P.O.S.E.T.T.E - Postgres Open Source Ecosystem Talks Training &amp;amp; Education et a été inspiré par le nom du FOSDEM, un évènement majeur pour les développeurs.&lt;/p&gt;&#xA;&lt;p&gt;Claire nous partage également le processus de sélection des sujets dans cet &lt;a href=&#34;https://techcommunity.microsoft.com/t5/azure-database-for-postgresql/about-talk-selection-for-posette-an-event-for-postgres-2024/ba-p/4120268&#34;&gt;article&lt;/a&gt;. C&amp;rsquo;est intéressant de voir également l&amp;rsquo;envers du décor et ce qui amène les organisateurs d&#39;évènements à sélectionner tel ou tel sujet pour les conférences.&lt;/p&gt;&#xA;&lt;p&gt;Pour en revenir à l&#39;évènement &lt;a href=&#34;https://www.citusdata.com/posette/2024/&#34;&gt;POSETTE 2024&lt;/a&gt;, il s&amp;rsquo;est déroulé sur trois jours, du 11 au 13 juin, avec pas moins de 42 présentations (dont 4 keynotes), 44 orateurs et quatre diffusions en direct sur deux fuseaux horaires différents.&lt;/p&gt;&#xA;&lt;p&gt;Le format virtuel de l&#39;évènement a permis à tous de participer, sans les frais inhérents aux autres conférences, les contraintes professionnelles et familliales. Il était possible de rejoindre un &lt;a href=&#34;https://aka.ms/open-source-discord&#34;&gt;serveur Discord&lt;/a&gt; pour l&amp;rsquo;occasion afin de poser des questions aux orateurs et de discuter avec les autres participants.&lt;/p&gt;&#xA;&lt;h2 id=&#34;le-programme-2024&#34;&gt;Le programme 2024&lt;/h2&gt;&#xA;&lt;p&gt;Vous pouvez retrouver la rediffusion des conférences ci-dessous pour les trois journées :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.citusdata.com/posette/2024/schedule/#livestream1&#34;&gt;Livestream 1&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.citusdata.com/posette/2024/schedule/#livestream2&#34;&gt;Livestream 2&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.citusdata.com/posette/2024/schedule/#livestream3&#34;&gt;Livestream 3&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.citusdata.com/posette/2024/schedule/#livestream4&#34;&gt;Livestream 4&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Les sujets des conférences étaient assez équilibrés, et ont embrassé plusieurs thématiques autour du noyau de PostgreSQL (15 sujets), de son écosystème (8 sujets), de la version Azure PostgreSQL de Microsoft (8 sujets), de l&amp;rsquo;IA (7 sujets) et de sujets plus communautaires (4 sujets).&lt;/p&gt;&#xA;&lt;p&gt;On voit que les sujets autour de l&amp;rsquo;IA et de l&amp;rsquo;adoption de PostgreSQL dans cet écosystème ont été nombreux, mais pas seulement. Les sujets sur PostgreSQL et son écosystème ont été majoritaires, avec beaucoup de sujets techniques intéressants. Pour n&amp;rsquo;en citer que quelques-uns : présentation du planificateur/optimiseur de requêtes PostgreSQL, les bonnes pratiques sur partionnement, tout savoir sur le RLS (row level security), optimisation de requêtes versus optimisation de configuration, réplication physique et logique, JSONB et schéma.&lt;/p&gt;&#xA;&lt;p&gt;Le format virtuel de l&#39;évènement peut déplaire à certains, mais pour ma part, je trouve qu&amp;rsquo;il est tout à fait approprié pour fédérer le plus de monde possible autour de PostgreSQL. Mais si vous avez l&amp;rsquo;occasion de participer en personne à une des nombreuses conférences autour de PostgreSQL, il ne faut pas hésiter : la prochaine PGConf européenne se tiendra à Athènes du 22 au 25 octobre.&lt;/p&gt;&#xA;&lt;p&gt;Crédits photo : Citus Data et Microsoft&lt;/p&gt;</summary>
    <author>
      <name>Loxodata</name>
    </author>
  </entry>
  <entry>
    <title>Réplication logique et Patroni</title>
    <updated>2024-06-24T08:55:00Z</updated>
    <id>tag:www.loxodata.com,2024-06-24:/post/logical-replication-with-patroni/</id>
    <link href="http://www.loxodata.com/post/logical-replication-with-patroni/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dans ce précédent &lt;a href=&#34;../logical-replication-v10+/&#34;&gt;article&lt;/a&gt;, nous vous présentions l&#39;évolution des fonctionnalités de la réplication logique apportées par les différentes versions de PostgreSQL et dans cet autre &lt;a href=&#34;../replicationlogique/&#34;&gt;article&lt;/a&gt;, nous avions vu la mise en place d&amp;rsquo;une réplication logique.&lt;/p&gt;&#xA;&lt;h2 id=&#34;réplication-logique-et-haute-disponibilité&#34;&gt;Réplication logique et haute disponibilité&lt;/h2&gt;&#xA;&lt;p&gt;Dans le cadre de la haute disponibilité en réplication physique avec un primaire et plusieurs secondaires, la bascule lors d&amp;rsquo;un incident va bloquer la réplication logique.&lt;/p&gt;&#xA;&lt;p&gt;Pour rappel, la mise en place de la réplication logique implique de créer un slot de réplication sur le primaire, ce slot permettant de conserver les fichiers WAL requis par les souscriptions (un slot de réplication par souscription).&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://www.loxodata.com/images/post/logical-replication-with-patroni/logical_replication.png&#34; alt=&#34;Réplication logique&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Lors d&amp;rsquo;une bascule, le slot de réplication logique créé initialement sur le primaire ne sera pas présent sur le secondaire promu. La souscription abonnée à cette publication se retrouvera alors bloquée car ne recevant plus les changements émis par la publication, le temps de recréer un slot de réplication logique, avec le risque de perdre des données pendant la bascule.&lt;/p&gt;&#xA;&lt;p&gt;Nativement, PostgreSQL n&amp;rsquo;offre pas encore de solution intégrée pour la gestion des slots de réplication pendant une bascule. Mais la prochaine version majeure de PostgreSQL, la version 17, va commencer à intégrer des changements pour y pallier.&lt;/p&gt;&#xA;&lt;p&gt;En attendant, vous pouvez utiliser l&amp;rsquo;extension &lt;a href=&#34;https://github.com/EnterpriseDB/pg_failover_slots&#34;&gt;&lt;code&gt;pg_failover_slots&lt;/code&gt;&lt;/a&gt;. Sinon, si vous utilisez &lt;a href=&#34;https://patroni.readthedocs.io/en/latest/index.html&#34;&gt;&lt;code&gt;Patroni&lt;/code&gt;&lt;/a&gt;, il est possible de configurer ce dernier pour gérer les slots de réplication. C&amp;rsquo;est l&amp;rsquo;objet de la suite de l&amp;rsquo;article.&lt;/p&gt;&#xA;&lt;h2 id=&#34;patroni-cest-quoi-déjà-&#34;&gt;Patroni, c&amp;rsquo;est quoi déjà ?&lt;/h2&gt;&#xA;&lt;p&gt;Patroni est un framework de gestion de cluster PostgreSQL pour assurer la haute disponibilité de service, en assurant une bascule automatique et offrant une gestion de la configuration centralisée.&lt;/p&gt;&#xA;&lt;p&gt;La mise en place d&amp;rsquo;un cluster Patroni pourra faire l&amp;rsquo;objet d&amp;rsquo;un prochain article, mais pour l&amp;rsquo;instant nous allons considérer que vous possédez déjà un cluster Patroni opérationnel avec une instance primaire, et deux instances secondaires.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://www.loxodata.com/images/post/logical-replication-with-patroni/patroni_cluster.png&#34; alt=&#34;Cluster Patroni&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;configuration&#34;&gt;Configuration&lt;/h3&gt;&#xA;&lt;p&gt;Première étape à la mise en place d&amp;rsquo;une réplication logique avec Patroni, il faut passer le paramètre &lt;code&gt;wal_level&lt;/code&gt; à &lt;code&gt;logical&lt;/code&gt; afin d&amp;rsquo;ajouter dans les fichiers WAL toutes les informations nécessaires au support du décodage logique.&lt;/p&gt;&#xA;&lt;p&gt;Nous utiliserons la commande &lt;code&gt;patronictl&lt;/code&gt; qui permet de gérer le cluster Patroni et vérifier son état.&lt;/p&gt;&#xA;&lt;p&gt;Vérifier le statut et la topologie actuelle d&amp;rsquo;un cluster avec l&amp;rsquo;option &lt;code&gt;topology&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;postgres@pgdeb01:~$ patronictl -c /etc/patroni/patroni.yml topology&#xA;&#xA;+ Cluster: loxodemo &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;7382147555638198668&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; ------+----+-----------+&#xA;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; Member    &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; Host        &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; Role    &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; State     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; TL &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; Lag in MB &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&#xA;+-----------+-------------+---------+-----------+----+-----------+&#xA;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; pgdeb01   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; 10.200.0.11 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; Leader  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; running   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; + pgdeb02 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; 10.200.0.12 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; Replica &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; streaming &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; + pgdeb03 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; 10.200.0.13 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; Replica &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; streaming &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&#xA;+-----------+-------------+---------+-----------+----+-----------+&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Consulter la configuration du cluster avec l&amp;rsquo;option &lt;code&gt;show-config&lt;/code&gt; :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;postgres@pgdeb01:~$ patronictl -c /etc/patroni/patroni.yml show-config&#xA;&#xA;loop_wait: &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&#xA;maximum_lag_on_failover: &lt;span class=&#34;m&#34;&gt;1048576&lt;/span&gt;&#xA;postgresql:&#xA;  parameters:&#xA;    archive_command: pgbackrest --stanza&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;loxodemo archive-push %p&#xA;    archive_mode: &lt;span class=&#34;s1&#34;&gt;&amp;#39;on&amp;#39;&lt;/span&gt;&#xA;  recovery_conf:&#xA;    restore_command: pgbackrest --stanza&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;loxodemo archive-get %f %p&#xA;  use_pg_rewind: &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&#xA;  use_slots: &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&#xA;retry_timeout: &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&#xA;ttl: &lt;span class=&#34;m&#34;&gt;30&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Nous modifions le paramètre PostgreSQL &lt;code&gt;wal_level&lt;/code&gt; à &lt;code&gt;logical&lt;/code&gt; avec l&amp;rsquo;option &lt;code&gt;edit-config&lt;/code&gt; :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;postgres@pgdeb01:~$ patronictl -c /etc/patroni/config.yml edit-config&#xA;---&#xA;+++&#xA;@@ -4,6 +4,7 @@&#xA;   parameters:&#xA;     archive_command: pgbackrest --stanza&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;loxodemo archive-push %p&#xA;     archive_mode: &lt;span class=&#34;s1&#34;&gt;&amp;#39;on&amp;#39;&lt;/span&gt;&#xA;+    wal_level: &lt;span class=&#34;s1&#34;&gt;&amp;#39;logical&amp;#39;&lt;/span&gt;&#xA;   recovery_conf:&#xA;     restore_command: pgbackrest --stanza&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;loxodemo archive-get %f %p&#xA;   use_pg_rewind: &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&#xA;&#xA;Apply these changes? &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;y/N&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: y&#xA;Configuration changed&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Le changement de ce paramètre nécessite un redémarrage des instances PostgreSQL. Le redémarrage est indiqué par Patroni dans la sortie de l&amp;rsquo;option &lt;code&gt;list&lt;/code&gt;, dans la colonne &lt;code&gt;Pending restart&lt;/code&gt; :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;postgres@pgdeb01:~$ patronictl -c /etc/patroni/config.yml list&#xA;+ Cluster: loxodemo &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;7382147555638198668&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; ----+----+-----------+-----------------+-----------------------------+&#xA;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; Member  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; Host        &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; Role    &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; State     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; TL &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; Lag in MB &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; Pending restart &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; Pending restart reason      &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&#xA;+---------+-------------+---------+-----------+----+-----------+-----------------+-----------------------------+&#xA;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; pgdeb01 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; 10.200.0.11 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; Leader  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; running   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; *               &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; wal_level: replica-&amp;gt;logical &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; pgdeb02 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; 10.200.0.12 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; Replica &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; streaming &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; *               &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; wal_level: replica-&amp;gt;logical &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; pgdeb03 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; 10.200.0.13 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; Replica &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; streaming &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; *               &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; wal_level: replica-&amp;gt;logical &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&#xA;+---------+-------------+---------+-----------+----+-----------+-----------------+-----------------------------+&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Il faut alors procéder au redémarrage en utilisant l&amp;rsquo;option &lt;code&gt;restart&lt;/code&gt; :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;postgres@pgdeb01:~$ patronictl -c /etc/patroni/config.yml restart --force loxodemo&#xA;+ Cluster: loxodemo &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;7382147555638198668&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; ----+----+-----------+-----------------+-----------------------------+&#xA;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; Member  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; Host        &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; Role    &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; State     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; TL &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; Lag in MB &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; Pending restart &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; Pending restart reason      &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&#xA;+---------+-------------+---------+-----------+----+-----------+-----------------+-----------------------------+&#xA;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; pgdeb01 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; 10.200.0.11 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; Leader  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; running   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; *               &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; wal_level: replica-&amp;gt;logical &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; pgdeb02 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; 10.200.0.12 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; Replica &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; streaming &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; *               &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; wal_level: replica-&amp;gt;logical &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; pgdeb03 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; 10.200.0.13 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; Replica &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; streaming &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; *               &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; wal_level: replica-&amp;gt;logical &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&#xA;+---------+-------------+---------+-----------+----+-----------+-----------------+-----------------------------+&#xA;Success: restart on member pgdeb01&#xA;Success: restart on member pgdeb02&#xA;Success: restart on member pgdeb03&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Il peut être intéressant aussi de revoir la configuration des paramètres suivants, qui demandent aussi un redémarrage de PostgreSQL :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span class=&#34;na&#34;&gt;max_replication_slots: 10&lt;/span&gt;&#xA;&lt;span class=&#34;na&#34;&gt;max_wal_senders: 10&lt;/span&gt;&#xA;&lt;span class=&#34;na&#34;&gt;max_worker_processes: 10&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;max_replication_slots&lt;/code&gt; (défaut à 10) indiquant le nombre de slots de réplication maximum (réplication logique et physique). Doit être au moins égal au nombre de réplica et de souscription (pour chaque souscription, un &lt;code&gt;apply worker&lt;/code&gt; et plusieurs &lt;code&gt;tablesync worker&lt;/code&gt;);&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;max_wal_senders&lt;/code&gt; (défaut à 10) doit être équivalent ou plus au nombre de slots de réplication, plus le nombre de réplica présents;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;max_worker_processes&lt;/code&gt; (défaut à 8) doit être supérieur aux valeurs précédentes, et supérieures sur les réplicas;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Du côté des souscriptions, il peut aussi être utile de modifier les paramètres suivants propre aux souscriptions :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span class=&#34;na&#34;&gt;max_logical_replication_workers: 4&lt;/span&gt;&#xA;&lt;span class=&#34;na&#34;&gt;max_sync_workers_per_subscription: 2&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Il convient à présent de déclarer les slots de réplication dans la configuration de Patroni, afin de les rendre permanents et qu&amp;rsquo;ils soient préservés lors d&amp;rsquo;une bascule.&lt;/p&gt;&#xA;&lt;p&gt;La déclaration dans la configuration va créer les slots de réplication logique sur tous les nœuds secondaires, et Patroni se chargera d&amp;rsquo;avancer leur position via l&amp;rsquo;appel de la fonction &lt;code&gt; pg_replication_slot_advance&lt;/code&gt;. Le paramètre &lt;code&gt;hot_standby_feedback&lt;/code&gt; est activé aussi par Patroni sur les secondaires.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;postgres@pgdeb01:~$ patronictl -c /etc/patroni/config.yml edit-config&#xA;---&#xA;+++&#xA;@@ -8,6 +8,11 @@&#xA;   recovery_conf:&#xA;     restore_command: pgbackrest --stanza&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;loxodemo archive-get %f %p&#xA;   use_pg_rewind: &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&#xA;-  use_slots: &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&#xA;+  use_slots: &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;&#xA; retry_timeout: &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&#xA; ttl: &lt;span class=&#34;m&#34;&gt;30&lt;/span&gt;&#xA;+slots:&#xA;+  logical_slot_emp:&#xA;+    database: employees&#xA;+    plugin: pgoutput&#xA;+    type: logical&#xA;&#xA;Apply these changes? &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;y/N&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: y&#xA;Configuration changed&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Un exemple de configuration :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span class=&#34;na&#34;&gt;loop_wait: 10&lt;/span&gt;&#xA;&lt;span class=&#34;na&#34;&gt;maximum_lag_on_failover: 1048576&lt;/span&gt;&#xA;&lt;span class=&#34;na&#34;&gt;postgresql:&lt;/span&gt;&#xA;  &lt;span class=&#34;na&#34;&gt;parameters:&lt;/span&gt;&#xA;    &lt;span class=&#34;na&#34;&gt;archive_command: pgbackrest --stanza&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;loxodemo archive-push %p&#xA;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;    archive_mode: &amp;#39;on&amp;#39;&#xA;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;    wal_level: logical&#xA;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;  recovery_conf:&#xA;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;    restore_command: pgbackrest --stanza=loxodemo archive-get %f %p&#xA;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;  use_pg_rewind: false&#xA;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;  use_slots: true&lt;/span&gt;&#xA;&lt;span class=&#34;na&#34;&gt;retry_timeout: 10&lt;/span&gt;&#xA;&lt;span class=&#34;na&#34;&gt;slots:&lt;/span&gt;&#xA;  &lt;span class=&#34;na&#34;&gt;logical_slot_emp:&lt;/span&gt;&#xA;    &lt;span class=&#34;na&#34;&gt;database: employees&lt;/span&gt;&#xA;    &lt;span class=&#34;na&#34;&gt;plugin: pgoutput&lt;/span&gt;&#xA;    &lt;span class=&#34;na&#34;&gt;type: logical&lt;/span&gt;&#xA;&lt;span class=&#34;na&#34;&gt;ttl: 30&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;use_slots&lt;/code&gt; permet d&amp;rsquo;activer les slots de réplication;&lt;/li&gt;&#xA;&lt;li&gt;section &lt;code&gt;slots&lt;/code&gt; permet de définir les slots de réplication permanents;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;logical_slot_emp&lt;/code&gt; correspond au nom du slot de réplication;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;database&lt;/code&gt; est le nom de la base de données depuis laquelle la publication est créée;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;plugin&lt;/code&gt; est le plugin de décodage utilisé (le plugin &lt;code&gt;pgoutput&lt;/code&gt; est le plugin natif de PostgreSQL);&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;type&lt;/code&gt; est le type de réplication, ici &lt;code&gt;logical&lt;/code&gt; (sinon &lt;code&gt;physical&lt;/code&gt;);&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Il est aussi possible de créer le slot de réplication logique auparavant, et de spécifier le nom de ce slot dans la configuration de Patroni. Par contre, la suppression de la définition de ce slot dans la configuration supprimera également le slot.&lt;/p&gt;&#xA;&lt;p&gt;Attention au nom du slot donné dans la configuration, qui ne doit pas rentrer en conflit avec les slots de réplication physique.&lt;/p&gt;&#xA;&lt;p&gt;On peut vérifier l&amp;rsquo;existence des slots de réplications avec la vue &lt;code&gt;pg_replication_slots&lt;/code&gt;, en s&amp;rsquo;intéressant à celui de type &lt;code&gt;logical&lt;/code&gt; :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;employees&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_replication_slots&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&#xA;    &lt;span class=&#34;n&#34;&gt;slot_name&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;plugin&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;slot_type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datoid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;database&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;temporary&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;active&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;active_pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;xmin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;catalog_xmin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;restart_lsn&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;confirmed_flush_lsn&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wal_status&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;safe_wal_size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;two_phase&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;conflicting&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;------------------+----------+-----------+--------+-----------+-----------+--------+------------+------+--------------+-------------+---------------------+------------+---------------+-----------+-------------&#xA;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;logical_slot_emp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pgoutput&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;logical&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;  &lt;span class=&#34;mi&#34;&gt;16389&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;employees&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;            &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;mi&#34;&gt;817&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;170001&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;C0&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;170001&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;F8&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;reserved&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;               &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;catalog_xmin&lt;/code&gt; correspondant à la transaction la plus ancienne affectant le catalogue système et requis par le slot;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;restart_lsn&lt;/code&gt; la position du plus ancien WAL requis par la souscription;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;confirmed_flush_lsn&lt;/code&gt; la dernière position reçue et rejouée côté souscription;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;supervision&#34;&gt;Supervision&lt;/h2&gt;&#xA;&lt;p&gt;L&amp;rsquo;essentiel à suite de la mise en place de cette configuration est de superviser la réplication logique et son état d&amp;rsquo;avancement.&lt;/p&gt;&#xA;&lt;p&gt;Pour ce faire, il existe de nombreuses vues système pour la supervision.&lt;/p&gt;&#xA;&lt;p&gt;Côté publication, nous pouvons utiliser les vues suviantes :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/monitoring-stats.html#MONITORING-PG-STAT-REPLICATION-VIEW&#34;&gt;&lt;code&gt;pg_stat_replication&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/view-pg-replication-slots.html&#34;&gt;&lt;code&gt;pg_replication_slots&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/monitoring-stats.html#MONITORING-PG-STAT-REPLICATION-SLOTS-VIEW&#34;&gt;&lt;code&gt;pg_stat_replication_slots&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Et côté souscription :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/monitoring-stats.html#MONITORING-PG-STAT-SUBSCRIPTION&#34;&gt;&lt;code&gt;pg_stat_subscription&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/monitoring-stats.html#MONITORING-PG-STAT-SUBSCRIPTION-STATS&#34;&gt;&lt;code&gt;pg_stat_subscription_stats&lt;/code&gt;&lt;/a&gt; (depuis la version 16)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Par exemple avec la vue &lt;code&gt;pg_replication_slots&lt;/code&gt; et la requête suivante :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;slot_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;       &lt;span class=&#34;n&#34;&gt;active&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;       &lt;span class=&#34;n&#34;&gt;confirmed_flush_lsn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;       &lt;span class=&#34;n&#34;&gt;pg_current_wal_lsn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&#xA;       &lt;span class=&#34;n&#34;&gt;pg_size_pretty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pg_wal_lsn_diff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pg_current_wal_lsn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;restart_lsn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;retained_walsize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;       &lt;span class=&#34;n&#34;&gt;pg_size_pretty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pg_wal_lsn_diff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pg_current_wal_lsn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;confirmed_flush_lsn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;subscriber_lag&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_replication_slots&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&#xA;&#xA;    &lt;span class=&#34;n&#34;&gt;slot_name&lt;/span&gt;                &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;active&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;confirmed_flush_lsn&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_current_wal_lsn&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;retained_walsize&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;subscriber_lag&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;-----------------------------------------+--------+---------------------+--------------------+------------------+----------------&#xA;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;logical_slot_emp&lt;/span&gt;                        &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;72&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;B96B50&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;72&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;B96B50&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;385&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;kB&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bytes&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;active&lt;/code&gt; donnant le status du slot de réplication;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;confirmed_flush_lsn&lt;/code&gt; la dernière position reçue et rejouée côté souscription;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;retained_walsize&lt;/code&gt; la quantité de WAL (en octet) retenue par le slot côté publication&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;subscriber_lag&lt;/code&gt; le retard de réplication logique (en octet) entre la publication et la souscription.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;quattendre-de-la-version-17-de-postgresql-&#34;&gt;Qu&amp;rsquo;attendre de la version 17 de PostgreSQL ?&lt;/h2&gt;&#xA;&lt;p&gt;Comme nous l&amp;rsquo;avons vu, les versions actuelles ne prennent pas en charge les bascules des slots de réplication logique, ce qui dans un contexte de haute disponibilité de service assuré par Patroni, rend la mise en place de la réplication logique plus contraignante.&lt;/p&gt;&#xA;&lt;p&gt;La version 17 de PostgreSQL va permettre de gérer nativement la bascule des slots de réplication et rendre plus aisée l&amp;rsquo;utilisation de la réplication logique.&lt;/p&gt;&#xA;&lt;p&gt;Cependant, il reste encore des fonctionnalités attendues comme la réplication des séquences ou des schémas de bases de données, qui doivent se faire manuellement avant la mise en place d&amp;rsquo;une souscription.&lt;/p&gt;</summary>
    <author>
      <name>Loxodata</name>
    </author>
  </entry>
  <entry>
    <title>Faire vivre une communauté</title>
    <updated>2024-07-30T09:30:00Z</updated>
    <id>tag:fljd.in,2024-07-30:/2024/07/30/faire-vivre-une-communaute/</id>
    <link href="https://fljd.in/2024/07/30/faire-vivre-une-communaute/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Le &lt;a href=&#34;https://pgday.fr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PG Day France&lt;/a&gt; s&amp;rsquo;est tenu les 11 et 12 juin derniers à Lille, ma ville natale.&#xA;Il s&amp;rsquo;agit de l&amp;rsquo;événement de la communauté française de PostgreSQL qui pose ses valises dans une&#xA;ville différente chaque année. L&amp;rsquo;occasion était trop belle pour moi et j&amp;rsquo;y ai rencontré de nombreuses&#xA;personnes venant de toute la France et de ses alentours, pour discuter de PostgreSQL au cours&#xA;de deux jours d&amp;rsquo;ateliers et de conférences.&lt;/p&gt;&#xA;&lt;p&gt;Pour cette édition, j&amp;rsquo;ai eu le plaisir de prendre la parole et de faire un retour d&amp;rsquo;expérience&#xA;sur l&amp;rsquo;animation du groupe Meetup local dont j&amp;rsquo;ai repris les rennes il y a maintenant quatre ans.&#xA;Dans cet article, je souhaite retranscrire les principaux points abordés lors de cette présentation,&#xA;en attendant que la vidéo de la conférence soit mise en ligne.&lt;/p&gt;</summary>
    <author>
      <name>Florent Jardin</name>
    </author>
  </entry>
  <entry>
    <title>Un assistant pour copier les données distantes</title>
    <updated>2024-05-28T00:00:00Z</updated>
    <id>tag:fljd.in,2024-05-28:/2024/05/28/un-assistant-pour-copier-les-donnees-distantes/</id>
    <link href="https://fljd.in/2024/05/28/un-assistant-pour-copier-les-donnees-distantes/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lors de la dernière &lt;a href=&#34;https://blog.dalibo.com/2023/12/08/pgsession16_programme.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PGSession 16&lt;/a&gt;, j&amp;rsquo;ai rédigé et animé un &lt;a href=&#34;https://dali.bo/wsfdw_html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;atelier&lt;/a&gt; de&#xA;trois heures au sujet de la migration vers PostgreSQL à l&amp;rsquo;aide des Foreign Data&#xA;Wrappers, ou FDW. Ce fut notamment l&amp;rsquo;occasion de présenter au grand public,&#xA;l&amp;rsquo;extension &lt;a href=&#34;https://github.com/cybertec-postgresql/db_migrator&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;db_migrator&lt;/code&gt;&lt;/a&gt; pour laquelle j&amp;rsquo;ai dédié un &lt;a href=&#34;https://fljd.in/2023/07/28/en-route-vers-la-liberte-avec-db_migrator/&#34;&gt;article&lt;/a&gt; sur ce&#xA;blog.&lt;/p&gt;&#xA;&lt;p&gt;Au cours de cet atelier, nous pouvons constater que la copie des données avec&#xA;l&amp;rsquo;extension &lt;code&gt;db_migrator&lt;/code&gt; n&amp;rsquo;est pas parfaitement prise en charge. En effet, bien&#xA;qu&amp;rsquo;il existe une fonction de bas niveau pour répartir sur plusieurs processus le&#xA;transfert table à table, de nombreuses situations devront exiger de rédiger un&#xA;grand nombre de requêtes SQL pour se tirer d&amp;rsquo;affaire. Au cours des mois qui&#xA;suivirent, je me suis attelé à la conception d&amp;rsquo;un &lt;a href=&#34;https://github.com/fljdin/fdw-assistant&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;assistant&lt;/a&gt; écrit en&#xA;PL/pgSQL dont le but est de simplifier la génération de ces requêtes.&lt;/p&gt;</summary>
    <author>
      <name>Florent Jardin</name>
    </author>
  </entry>
  <entry>
    <title>Les modes de transfert dans une migration</title>
    <updated>2023-10-11T00:00:00Z</updated>
    <id>tag:fljd.in,2023-10-11:/2023/10/11/les-modes-de-transfert-dans-une-migration/</id>
    <link href="https://fljd.in/2023/10/11/les-modes-de-transfert-dans-une-migration/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;En informatique, un projet de migration consiste à changer un ou plusieurs&#xA;composants techniques sans qu&amp;rsquo;aucun comportement des applications n&amp;rsquo;en soit&#xA;impacté. Dans le paysage des bases de données (et le métier que j&amp;rsquo;exerce), il&#xA;s&amp;rsquo;agira de choisir un nouveau système (comme PostgreSQL) en remplacement d&amp;rsquo;un&#xA;autre (comme Oracle ou Microsoft SQL Server).&lt;/p&gt;&#xA;&lt;p&gt;Dans un &lt;a href=&#34;https://fljd.in/2021/12/06/migrer-vers-postgresql/&#34;&gt;précédent article&lt;/a&gt;, je décrivais les étapes exhaustives pour&#xA;réaliser une migration complète à l&amp;rsquo;aide de la technologie des &lt;em&gt;Foreign Data&#xA;Wrappers&lt;/em&gt;, mais l&amp;rsquo;étape critique de transfert des données qui y était décrite ne&#xA;s&amp;rsquo;adapte pas à toutes les situations. Voyons ensemble les alternatives qui&#xA;permettent de couvrir une grande partie des besoins.&lt;/p&gt;</summary>
    <author>
      <name>Florent Jardin</name>
    </author>
  </entry>
  <entry>
    <title>En route vers la liberté avec db_migrator</title>
    <updated>2023-07-28T00:00:00Z</updated>
    <id>tag:fljd.in,2023-07-28:/2023/07/28/en-route-vers-la-liberte-avec-db_migrator/</id>
    <link href="https://fljd.in/2023/07/28/en-route-vers-la-liberte-avec-db_migrator/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;J&amp;rsquo;ai passé plusieurs semaines ces derniers mois à contribuer à l&amp;rsquo;extension&#xA;&lt;a href=&#34;https://github.com/cybertec-postgresql/db_migrator&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;db_migrator&lt;/a&gt;. Rédigée uniquement en PL/pgSQL, elle permet de migrer les schémas&#xA;et les données d&amp;rsquo;un système de bases de données vers PostgreSQL à l&amp;rsquo;aide des&#xA;données externes que j&amp;rsquo;avais déjà présentées il y a &lt;a href=&#34;https://fljd.in/2021/07/16/parlons-un-peu-des-donnees-externes/&#34;&gt;quelques années&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Dans cet article, je présente le fonctionnement de l&amp;rsquo;outil, sa philosophie et la&#xA;raison d&amp;rsquo;être que je lui ai trouvée, alors même qu&amp;rsquo;il rejoint l&amp;rsquo;écosystème des&#xA;projets libres déjà bien installés dans le paysage de la migration. Que vaut-il&#xA;aux côtés d&amp;rsquo;&lt;a href=&#34;https://ora2pg.darold.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ora2Pg&lt;/a&gt; ou de &lt;a href=&#34;https://pgloader.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pgloader&lt;/a&gt; ?&lt;/p&gt;</summary>
    <author>
      <name>Florent Jardin</name>
    </author>
  </entry>
  <entry>
    <title>Les colonnes générées</title>
    <updated>2023-03-22T00:00:00Z</updated>
    <id>tag:fljd.in,2023-03-22:/2023/03/22/les-colonnes-generees/</id>
    <link href="https://fljd.in/2023/03/22/les-colonnes-generees/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;La norme ISO SQL/Foundation (&lt;a href=&#34;https://www.iso.org/standard/63556.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ISO/IEC 9075-2:2016&lt;/a&gt;) fait partie du standard&#xA;SQL et définit les règles pour la définition des relations et la manipulation&#xA;des données. En adoptant cette norme, les moteurs de bases de données&#xA;garantissent une interopérabilité avec leurs concurrents et permettent aux&#xA;entreprises de bénéficier d&amp;rsquo;une plus grande flexibilité lorsqu&amp;rsquo;elles souhaitent&#xA;passer de l&amp;rsquo;un à l&amp;rsquo;autre sans (trop) réécrire leur modèle de données ou leurs&#xA;requêtes SQL.&lt;/p&gt;&#xA;&lt;p&gt;Dans sa publication SQL:2003, la norme a introduit le concept de &lt;strong&gt;colonnes&#xA;générées&lt;/strong&gt; comme nouvelle spécification technique. Parfois appelées &lt;em&gt;colonnes&#xA;calculées&lt;/em&gt; ou &lt;em&gt;colonnes virtuelles&lt;/em&gt;, leurs valeurs dérivent de celles des autres&#xA;colonnes de la table. &lt;a href=&#34;https://modern-sql.com/caniuse/generated-always-as&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Un des articles&lt;/a&gt; de Markus Winand passe au crible les&#xA;différents systèmes du marché pour voir s&amp;rsquo;ils respectent ce standard.&lt;/p&gt;</summary>
    <author>
      <name>Florent Jardin</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL 17 : des sauvegardes incrémentales avec pg_basebackup</title>
    <updated>2024-07-16T11:24:05Z</updated>
    <id>tag:blog.capdata.fr,2024-07-16:/index.php/postgresql-17-sauvegardes-incrementales/</id>
    <content type="html">&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10584&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10584&amp;#038;title=PostgreSQL%2017%20%3A%20des%20sauvegardes%20incr%C3%A9mentales%20avec%20pg_basebackup&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=PostgreSQL%2017%20%3A%20des%20sauvegardes%20incr%C3%A9mentales%20avec%20pg_basebackup&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10584&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;alignnone size-full wp-image-10592&#34; src=&#34;https://blog.capdata.fr/wp-content/uploads/2024/07/SalesGrowth.jpg&#34; alt=&#34;&#34; width=&#34;279&#34; height=&#34;180&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Bonjour&lt;/p&gt;&#xA;&lt;p&gt;Les 11 et 12 juin derniers, nous étions aux journées PGDAY à Lille pour découvrir les nouveautés autour de PostgreSQL.&lt;br /&gt;&#xA;Cette conférence regroupe différents professionnels, de la communauté francophone, qui agissent en contribuant sur des sujets techniques mais aussi sur les bonnes pratiques afin d&amp;#8217;utiliser PostgreSQL dans les meilleurs conditions.&lt;/p&gt;&#xA;&lt;p&gt;Un article m&amp;#8217;a particulièrement intéressé cette année, c&amp;#8217;est celui de &lt;a href=&#34;https://www.linkedin.com/in/stefan-fercot/?originalSubdomain=be&#34;&gt;Stefan Fercot&lt;/a&gt; Senior DBA PostgreSQL qui vit en Belgique, et travaille pour une société allemande experte dans les solutions PostgreSQL. Sa présentation portait sur le sujet &amp;#8220;démystifier les sauvegardes incrémentales sous PostgreSQL&amp;#8221;.&lt;/p&gt;&#xA;&lt;p&gt;J&amp;#8217;ai écouté sa conférence tout en ayant hâte de tester sa mise en place dès mon retour de Lille.&lt;/p&gt;&#xA;&lt;p&gt;Je tiens à remercier Stefan pour son travail sur ce sujet sauvegardes PostgreSQL.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Tout d&amp;#8217;abord, il faut savoir que les sujets sauvegardes incrémentales ont été déjà abordés avec des outils comme &lt;strong&gt;Barman&lt;/strong&gt; ou &lt;strong&gt;Pg_BackRest&lt;/strong&gt;, et que certaines instances PostgreSQL de production sont sauvegardées via ces mécanismes depuis quelques années maintenant.&lt;/p&gt;&#xA;&lt;p&gt;Ici, nous parlons de la solution &amp;#8220;backup incremental&amp;#8221; inclu nativement dans le moteur PostgreSQL, et disponible avec l&amp;#8217;outil &amp;#8220;&lt;strong&gt;pg_basebackup&lt;/strong&gt;&amp;#8220;. C&amp;#8217;est d&amp;#8217;ailleurs ce point que Stefan a souligné durant la journée PGDAY du 11 juin dernier.&lt;/p&gt;&#xA;&lt;p&gt;Cette nouvelle fonctionnalité fait partie de la version &lt;strong&gt;PostgreSQL 17&lt;/strong&gt; qui est pour le moment, en version&lt;strong&gt; Beta 2&lt;/strong&gt;.&lt;br /&gt;&#xA;Celle ci devrait sortir, comme à l&amp;#8217;accoutumé, au cour de l&amp;#8217;automne prochain.&lt;/p&gt;&#xA;&lt;p&gt;Preuve que PostgreSQL est en perpétuel évolution, et rejoint la liste des SGBD étant capable, comme peuvent le faire Oracle et SQL Server, de proposer nativement des sauvegardes incrémentales.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;h2&gt;Installation de PostgreSQL 17&lt;/h2&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Pour tester cette fonctionnalité, nous devons installer la toute dernière version de PostgreSQL , la 17 beta 2. Attention, celle ci n&amp;#8217;étant pas disponible dans les dépôts PGDG, nous devons nous charger d&amp;#8217;installer cette version via le site postgresql.org&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://download.postgresql.org/pub/repos/yum/testing/17/redhat/rhel-8-x86_64/&#34;&gt;https://download.postgresql.org/pub/repos/yum/testing/17/redhat/rhel-8-x86_64/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Nous disposons d&amp;#8217;un serveur Linux fork Red Hat 8 (Rocky Linux). Il nous faut donc télécharger les &amp;#8220;rpm&amp;#8221; liés à cette version.&lt;/p&gt;&#xA;&lt;p&gt;Les packages dont nous avons besoin sont les suivants&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;# ls -lrt postgresql1* | awk &#39;{print$9}&#39;&#xD;&#xA;postgresql17-contrib-17-beta2_1PGDG.rhel8.x86_64.rpm&#xD;&#xA;postgresql17-17-beta2_1PGDG.rhel8.x86_64.rpm&#xD;&#xA;postgresql17-libs-17-beta2_1PGDG.rhel8.x86_64.rpm&#xD;&#xA;postgresql17-server-17-beta2_1PGDG.rhel8.x86_64.rpm&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Nous les installons avec le compte &lt;strong&gt;root&lt;/strong&gt; de notre serveur.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[root@ tmp]# rpm -i postgresql17-libs-17-beta2_1PGDG.rhel8.x86_64.rpm&#xD;&#xA;[root@ tmp]# rpm -i postgresql17-17-beta2_1PGDG.rhel8.x86_64.rpm&#xD;&#xA;[root@ tmp]# rpm -i postgresql17-server-17-beta2_1PGDG.rhel8.x86_64.rpm&#xD;&#xA;[root@ tmp]# rpm -i postgresql17-contrib-17-beta2_1PGDG.rhel8.x86_64.rpm&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Comme nous sommes sur un environnement &amp;#8220;Red Hat like&amp;#8221;, la création d&amp;#8217;une première instance via &amp;#8220;initdb&amp;#8221; est nécessaire.&lt;br /&gt;&#xA;Surtout, ne pas oublier d&amp;#8217;activer les &amp;#8220;data checksums&amp;#8221; (option -k), nous verrons pourquoi dans la suite de cet article. La suite est à faire avec le compte &lt;strong&gt;postgres&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres ~]$ initdb -D /data/postgres/17/pg_data -k&#xD;&#xA;The files belonging to this database system will be owned by user &amp;quot;postgres&amp;quot;.&#xD;&#xA;This user must also own the server process.&#xD;&#xA;&#xD;&#xA;The database cluster will be initialized with locale &amp;quot;en_US.UTF-8&amp;quot;.&#xD;&#xA;The default database encoding has accordingly been set to &amp;quot;UTF8&amp;quot;.&#xD;&#xA;The default text search configuration will be set to &amp;quot;english&amp;quot;.&#xD;&#xA;&#xD;&#xA;Data page checksums are enabled.&#xD;&#xA;&#xD;&#xA;creating directory /data/postgres/17/pg_data ... ok&#xD;&#xA;creating subdirectories ... ok&#xD;&#xA;selecting dynamic shared memory implementation ... posix&#xD;&#xA;selecting default &amp;quot;max_connections&amp;quot; ... 100&#xD;&#xA;selecting default &amp;quot;shared_buffers&amp;quot; ... 128MB&#xD;&#xA;selecting default time zone ... UTC&#xD;&#xA;creating configuration files ... ok&#xD;&#xA;running bootstrap script ... ok&#xD;&#xA;performing post-bootstrap initialization ... ok&#xD;&#xA;syncing data to disk ... ok&#xD;&#xA;&#xD;&#xA;initdb: warning: enabling &amp;quot;trust&amp;quot; authentication for local connections&#xD;&#xA;initdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run initdb.&#xD;&#xA;&#xD;&#xA;Success. You can now start the database server using:&#xD;&#xA;&#xD;&#xA;pg_ctl -D /data/postgres/17/pg_data -l logfile start&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Démarrer cette instance pour s&amp;#8217;assurer que tout fonctionne&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres ~]$ pg_ctl -D /data/postgres/17/pg_data -l logfile start&#xD;&#xA;waiting for server to start.... done&#xD;&#xA;server started&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Notre version enregistrée est bien une Beta 2. Version qui ne doit pas être mise sur un environnement de production comme le rappelle le site de la communauté PostgreSQL.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres ~]$ psql&#xD;&#xA;(postgres@[local]:5437) [postgres] &amp;gt; select * from version();&#xD;&#xA;version&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;PostgreSQL 17beta2 on x86_64-pc-linux-gnu, compiled by gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-22), 64-bit&#xD;&#xA;(1 row)&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;h3&gt;Upgrade de version&lt;/h3&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Comme nous disposions deja d&amp;#8217;une version PostgreSQL15 sur ce serveur, nous passons par un upgrade via l&amp;#8217;outil &amp;#8220;pg_upgrade&amp;#8221; toujours disponible dans cette nouvelle version.&lt;/p&gt;&#xA;&lt;p&gt;Lancer pg_upgrade en mode check&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres ~]$ pg_upgrade -b /usr/pgsql-15/bin/ -B /usr/pgsql-17/bin/ -c -d /data/postgres/15/pg_data/ -D /data/postgres/17/pg_data/ -p 5434 -P 5437&#xD;&#xA;.....&#xD;&#xA;.....&#xD;&#xA;&#xD;&#xA;*Clusters are compatible*&#xD;&#xA;&amp;quot;/usr/pgsql-17/bin/pg_ctl&amp;quot; -w -D &amp;quot;/data/postgres/17/pg_data&amp;quot; -o &amp;quot;&amp;quot; -m smart stop  &amp;quot;/data/postgres/17/pg_data/pg_upgrade_output.d/20240708T085906.955/log/pg_upgrade_server.log&amp;quot; &lt;/pre&gt;&#xA;&lt;p&gt;la log est générée dans le $PGDATA de la version 17.&lt;/p&gt;&#xA;&lt;p&gt;Puis lancer l&amp;#8217;exécution de pg_upgrade&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres ~]$ pg_upgrade -b /usr/pgsql-15/bin/ -B /usr/pgsql-17/bin/ -d /data/postgres/15/pg_data/ -D /data/postgres/17/pg_data/ -p 5434 -P 5437&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;h2&gt;Effectuer une sauvegarde&lt;/h2&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;h3&gt;Prérequis&lt;/h3&gt;&#xA;&lt;p&gt;Avant de pouvoir effectuer une première sauvegarde avec l&amp;#8217;outil &amp;#8220;&lt;strong&gt;pg_basebackup&lt;/strong&gt;&amp;#8221; natif, il est primordial de respecter certains prérequis important.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;L&amp;#8217;instance PostgreSQL doit être créée avec les &amp;#8216;data checksums&amp;#8217; activés. Si ce n&amp;#8217;est pas le cas, utiliser l&amp;#8217;outil &amp;#8220;&lt;strong&gt;pg_checksums&lt;/strong&gt;&amp;#8221; avec l&amp;#8217;option &amp;#8220;&lt;strong&gt;-e&lt;/strong&gt;&amp;#8220;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Si vous lancez une sauvegarde full puis une incrémentale immédiatement, vous avez toutes les chances de tomber sur cette erreur&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;pg_basebackup: error: could not initiate base backup: ERROR: incremental backups cannot be taken unless WAL summarization is enabled&lt;/pre&gt;&#xA;&lt;p&gt;En effet, pour avoir toutes les informations concernant les blocks modifiés, PostgreSQL a besoin de tracer dans les WALs toutes les modifications sur les objets en base.&lt;br /&gt;&#xA;Pour les DBA Oracle, le &amp;#8220;block change tracking&amp;#8221; de la version Enterprise Edition vous parlera très certainement&amp;#8230;.&lt;br /&gt;&#xA;Il s&amp;#8217;agit ici de la même fonctionnalité, c&amp;#8217;est à dire, tracer les modifications effectuées dans les blocks de données.&lt;br /&gt;&#xA;Cette option est le &amp;#8220;&lt;strong&gt;summarize_wal&lt;/strong&gt;&amp;#8220;.&lt;/p&gt;&#xA;&lt;p&gt;Pour activer l&amp;#8217;option, nous aurons 2 paramètres à modifier, soit via un ALTER SYSTEM directement sous psql, ou bien dans le fichier &amp;#8220;postgresql.conf&amp;#8221;.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres backup]$ vi $PGDATA/postgresql.conf&#xD;&#xA;...&#xD;&#xA;&#xD;&#xA;# - WAL Summarization -&#xD;&#xA;&#xD;&#xA;#summarize_wal = off # run WAL summarizer process?&#xD;&#xA;#wal_summary_keep_time = &#39;10d&#39; # when to remove old summary files, 0 = never&lt;/pre&gt;&#xA;&lt;p&gt;Le premier paramètre permet d&amp;#8217;activer cette option.&lt;br /&gt;&#xA;Le second définit un temps de conservation des informations concernant les blocks modifiés entre une sauvegarde FULL et un incrémentale.&lt;/p&gt;&#xA;&lt;p&gt;Nous activons donc l&amp;#8217;option &amp;#8220;&lt;strong&gt;summarize_wal&lt;/strong&gt;&amp;#8221; et la passons à &lt;strong&gt;ON&lt;/strong&gt; et laissons à 10 jours le &amp;#8220;&lt;strong&gt;wal_summary_keep_time&lt;/strong&gt;&amp;#8220;.&lt;/p&gt;&#xA;&lt;p&gt;Attention, activez ces deux paramètres avant votre première sauvegarde FULL. Si vous le faites après, vous risquez de rencontrer l&amp;#8217;erreur suivante&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;pg_basebackup: error: could not initiate base backup: ERROR: WAL summaries are required on timeline 1 from 1/AA000028 to 1/AC000060, but the summaries for that timeline and LSN range are incomplete&#xD;&#xA;DETAIL: The first unsummarized LSN in this range is 1/AA000028.&lt;/pre&gt;&#xA;&lt;p&gt;Le LSN pris lors de la première sauvegarde FULL n&amp;#8217;est pas reconnu, et donc la sauvegarde incrémentale ne peut s&amp;#8217;appuyer dessus.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Redémarrer l&amp;#8217;instance une fois les modifications effectuées&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres ~]$ pg_ctl -D /data/postgres/17/pg_data/ restart&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;h3&gt;Lancer une sauvegarde FULL&lt;/h3&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Voici la nouvelle option présente pour l&amp;#8217;outil &amp;#8220;&lt;strong&gt;pg_basebackup&lt;/strong&gt;&amp;#8221;&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres -]$ pg_basebackup --help&#xD;&#xA;pg_basebackup takes a base backup of a running PostgreSQL server.&#xD;&#xA;&#xD;&#xA;Usage:&#xD;&#xA;pg_basebackup [OPTION]...&#xD;&#xA;&#xD;&#xA;Options controlling the output:&#xD;&#xA;-D, --pgdata=DIRECTORY receive base backup into directory&#xD;&#xA;-F, --format=p|t output format (plain (default), tar)&#xD;&#xA;-i, --incremental=OLDMANIFEST&#xD;&#xA;take incremental backup&#xD;&#xA;-r, --max-rate=RATE maximum transfer rate to transfer data directory&#xD;&#xA;(in kB/s, or use suffix &amp;quot;k&amp;quot; or &amp;quot;M&amp;quot;)&#xD;&#xA;&#xD;&#xA;.... &lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Depuis la &lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-13-les-nouveautes-interessantes/&#34;&gt;version 13&lt;/a&gt; de PostgreSQL, nous disposons pour chaque sauvegarde, d&amp;#8217;un fichier nommé &amp;#8220;backup_manifest&amp;#8221;. Il s&amp;#8217;agit d&amp;#8217;un fichier json qui recense entièrement les objets bases de données sauvegardés avec leur emplacement, leur taille, leur date de modification et leur &amp;#8220;checksum&amp;#8221;.&lt;/p&gt;&#xA;&lt;p&gt;Celui ci est essentiel pour vérifier l&amp;#8217;intégrité de notre sauvegarde avec &amp;#8220;&lt;strong&gt;pg_verifybackup&lt;/strong&gt;&amp;#8220;.&lt;/p&gt;&#xA;&lt;p&gt;Nous pouvons à présent faire une première sauvegarde FULL de notre instance PG17.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres -]$ pg_basebackup -D /data/postgres/backup/pg_basebackup/PG17 -F p -l &amp;quot;Full Backup PG17&amp;quot; -P -v&#xD;&#xA;pg_basebackup: initiating base backup, waiting for checkpoint to complete&#xD;&#xA;pg_basebackup: checkpoint completed&#xD;&#xA;pg_basebackup: write-ahead log start point: 1/AD000028 on timeline 1&#xD;&#xA;pg_basebackup: starting background WAL receiver&#xD;&#xA;pg_basebackup: created temporary replication slot &amp;quot;pg_basebackup_8048&amp;quot;&#xD;&#xA;3097788/3097788 kB (100%), 1/1 tablespace&#xD;&#xA;pg_basebackup: write-ahead log end point: 1/AD000158&#xD;&#xA;pg_basebackup: waiting for background process to finish streaming ...&#xD;&#xA;pg_basebackup: syncing data to disk ...&#xD;&#xA;pg_basebackup: renaming backup_manifest.tmp to backup_manifest&#xD;&#xA;pg_basebackup: base backup completed&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Puis on effectue quelques transactions : création d&amp;#8217;une table et insertions de données sur cette table de test&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;(postgres@[local]:5437) [manu] $ &amp;gt; create table backup (nom varchar(20), type varchar(20), date_backup date);&#xD;&#xA;CREATE TABLE&#xD;&#xA;Time: 3.344 ms&#xD;&#xA;&#xD;&#xA;(postgres@[local]:5437) [manu] $ &amp;gt; insert into backup values (&#39;sauvegarde&#39;,&#39;FULL&#39;,&#39;2024-07-08 12:00:00&#39;);&#xD;&#xA;INSERT 0 1&#xD;&#xA;Time: 3.612 ms&#xD;&#xA;(postgres@[local]:5437) [manu] $ &amp;gt; insert into backup values (&#39;sauvegarde&#39;,&#39;incremental&#39;,&#39;2024-07-08 13:00:00&#39;);&#xD;&#xA;INSERT 0 1&#xD;&#xA;Time: 1.461 ms&#xD;&#xA;&#xD;&#xA;(postgres@[local]:5437) [manu] $ &amp;gt; select * from backup;&#xD;&#xA;nom | type | date_backup&#xD;&#xA;------------+-------------+-------------&#xD;&#xA;sauvegarde | FULL | 2024-07-08&#xD;&#xA;sauvegarde | incremental | 2024-07-08&#xD;&#xA;(2 rows)&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Repérer le fichier &amp;#8220;backup_manifest&amp;#8221; de la sauvegarde FULL réalisée dans le dossier &amp;#8220;&lt;strong&gt;/data/postgres/backup/pg_basebackup/PG17&lt;/strong&gt;&amp;#8221;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres PG17]$ ls -lrt backup*&#xD;&#xA;-rw-------. 1 postgres postgres 218 Jul 8 09:19 backup_label&#xD;&#xA;-rw-------. 1 postgres postgres 433295 Jul 8 09:20 backup_manifest&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;h3&gt;Effectuer une sauvegarde incrémentale&lt;/h3&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;A partir de là, lancer une sauvegarde incrémentale. Nous utilisons l&amp;#8217;option &amp;#8220;&lt;strong&gt;-i&lt;/strong&gt;&amp;#8221; pour indiquer à &lt;strong&gt;pg_basebackup&lt;/strong&gt; ou est situé le &amp;#8220;backup_manifest&amp;#8221; de la dernière sauvegarde FULL.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres - ]$ pg_basebackup -D /data/postgres/backup/pg_basebackup/PG17_incr -l &amp;quot;Incremental Backup PG17&amp;quot; -P -v -i /data/postgres/backup/pg_basebackup/PG17/backup_manifest&#xD;&#xA;pg_basebackup: initiating base backup, waiting for checkpoint to complete&#xD;&#xA;pg_basebackup: checkpoint completed&#xD;&#xA;pg_basebackup: write-ahead log start point: 1/AF000028 on timeline 1&#xD;&#xA;pg_basebackup: starting background WAL receiver&#xD;&#xA;pg_basebackup: created temporary replication slot &amp;quot;pg_basebackup_8139&amp;quot;&#xD;&#xA;12485/3097787 kB (100%), 1/1 tablespace&#xD;&#xA;pg_basebackup: write-ahead log end point: 1/AF000120&#xD;&#xA;pg_basebackup: waiting for background process to finish streaming ...&#xD;&#xA;pg_basebackup: syncing data to disk ...&#xD;&#xA;pg_basebackup: renaming backup_manifest.tmp to backup_manifest&#xD;&#xA;pg_basebackup: base backup completed&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;S&amp;#8217;il l&amp;#8217;on compare les deux répertoires de sauvegardes &amp;#8220;&lt;strong&gt;/data/postgres/backup/pg_basebackup/PG17&lt;/strong&gt;&amp;#8221; et &amp;#8220;&lt;strong&gt;/data/postgres/backup/pg_basebackup/PG17_incr&lt;/strong&gt;&amp;#8220;, nous voyons que les tailles sont bien différentes&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres - ]$ du -h /data/postgres/backup/pg_basebackup/PG17&#xD;&#xA;......&#xD;&#xA;3.0G /data/postgres/backup/pg_basebackup/PG17&#xD;&#xA;&#xD;&#xA;[postgres - ]$ du -h /data/postgres/backup/pg_basebackup/PG17_incr&#xD;&#xA;......&#xD;&#xA;35M /data/postgres/backup/pg_basebackup/PG17_incr&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Un volume de 3Go pour la sauvegarde FULL de l&amp;#8217;instance contre 35Mo pour l&amp;#8217;incrémentale.&lt;br /&gt;&#xA;La taille occupée par les objets dans chacune des bases est bien plus faible dans la sauvegarde incrémentale.&lt;/p&gt;&#xA;&lt;p&gt;Nous continuons à insérer des données :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt; [postgres - ]$ psql -d manu&#xD;&#xA;&#xD;&#xA;(postgres@[local]:5437) [manu] $ &amp;gt; select * from backup;&#xD;&#xA;nom | type | date_backup&#xD;&#xA;------------+-------------+-------------&#xD;&#xA;sauvegarde | FULL | 2024-07-08&#xD;&#xA;sauvegarde | incremental | 2024-07-08&#xD;&#xA;(2 rows)&#xD;&#xA;&#xD;&#xA;Time: 0.614 ms&#xD;&#xA;(postgres@[local]:5437) [manu] $ &amp;gt; insert into backup values (&#39;sauvegarde&#39;,&#39;incremental 2&#39;,&#39;2024-07-08 14:00:00&#39;);&#xD;&#xA;INSERT 0 1&#xD;&#xA;Time: 1.436 ms&#xD;&#xA;(postgres@[local]:5437) [manu] $ &amp;gt; select * from backup;&#xD;&#xA;nom | type | date_backup&#xD;&#xA;------------+---------------+-------------&#xD;&#xA;sauvegarde | FULL | 2024-07-08&#xD;&#xA;sauvegarde | incremental | 2024-07-08&#xD;&#xA;sauvegarde | incremental 2 | 2024-07-08&#xD;&#xA;(3 rows)&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Puis on lance une seconde sauvegarde incrémentale :&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres - ]$ pg_basebackup -D /data/postgres/backup/pg_basebackup/PG17_incr_2 -l &amp;quot;Incremental 2 Backup PG17&amp;quot; -P -v -i /data/postgres/backup/pg_basebackup/PG17_incr/backup_manifest&#xD;&#xA;pg_basebackup: initiating base backup, waiting for checkpoint to complete&#xD;&#xA;pg_basebackup: checkpoint completed&#xD;&#xA;pg_basebackup: write-ahead log start point: 1/B1000028 on timeline 1&#xD;&#xA;pg_basebackup: starting background WAL receiver&#xD;&#xA;pg_basebackup: created temporary replication slot &amp;quot;pg_basebackup_8313&amp;quot;&#xD;&#xA;12260/3097787 kB (100%), 1/1 tablespace&#xD;&#xA;pg_basebackup: write-ahead log end point: 1/B1000120&#xD;&#xA;pg_basebackup: waiting for background process to finish streaming ...&#xD;&#xA;pg_basebackup: syncing data to disk ...&#xD;&#xA;pg_basebackup: renaming backup_manifest.tmp to backup_manifest&#xD;&#xA;pg_basebackup: base backup completed&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Nous remarquons l&amp;#8217;appel au &amp;#8220;backup manifest&amp;#8221; de la dernière sauvegarde incrémentale présente dans le répertoire &amp;#8220;&lt;strong&gt;/data/postgres/backup/pg_basebackup/PG17_incr&lt;/strong&gt;&amp;#8221;&lt;/p&gt;&#xA;&lt;p&gt;Si l&amp;#8217;on regarde la taille de ce nouveau backup&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres pg_basebackup]$ du -h PG17_incr_2&#xD;&#xA;.......&#xD;&#xA;35M PG17_incr_2&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;A nouveau 35 Mo, mais vu le peu de modifications effectuées, la taille n&amp;#8217;est pas très représentative.&lt;/p&gt;&#xA;&lt;p&gt;Ce qu&amp;#8217;il faut retenir, c&amp;#8217;est qu&amp;#8217;en fonction du fichier &amp;#8220;backup manifest&amp;#8221; pris lors de l&amp;#8217;appel à &lt;strong&gt;pg_basebackup&lt;/strong&gt;, vous pourrez faire soit&lt;br /&gt;&#xA;&amp;#8211; une sauvegarde incrémentale qui prendra les dernières modifications depuis la dernière sauvegarde incrémentale effectuée.&lt;br /&gt;&#xA;&amp;#8211; une sauvegarde différentielle qui prendra les modifications faites depuis la dernière sauvegarde FULL si vous vous appuyez toujours sur le &amp;#8220;backup manifest&amp;#8221; de votre sauvegarde FULL.&lt;/p&gt;&#xA;&lt;p&gt;C&amp;#8217;est donc ce fichier json &amp;#8220;backup manifest&amp;#8221; qui a un rôle essentiel dans l&amp;#8217;élaboration de votre stratégie de sauvegarde au fur et à mesure du temps.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;h2&gt;Et la restauration , comment ca se passe ?&lt;/h2&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Si l&amp;#8217;on souhaite restaurer tous ces jeux de sauvegardes, nous utilisons un nouvel outil qui est &amp;#8220;&lt;strong&gt;pg_combinebackup&lt;/strong&gt;&amp;#8220;.&lt;br /&gt;&#xA;Cet outil permet de &amp;#8220;merger&amp;#8221; les différentes sauvegardes dans un et un seul dossier que l&amp;#8217;on restaurera par la suite.&lt;/p&gt;&#xA;&lt;p&gt;Dans notre exemple, nous avons fait 1 sauvegarde FULL puis 2 incrémentales.&lt;br /&gt;&#xA;Nous allons donc restaurer ces 3 jeux de sauvegardes afin de retrouver les données. A noter qu&amp;#8217;il existe une option &amp;#8220;&amp;#8211;dry-run&amp;#8221; pour tester la commande&lt;/p&gt;&#xA;&lt;p&gt;Exécuter la commande en prenant en paramètre les dossiers de sauvegardes dans l&amp;#8217;ordre chronologique.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres - ]$ pg_combinebackup -n -o /data/postgres/backup/pg_basebackup/PG17_ALL /data/postgres/backup/pg_basebackup/PG17 /data/postgres/backup/pg_basebackup/PG17_incr /data/postgres/backup/pg_basebackup/PG17_incr_2 &lt;/pre&gt;&#xA;&lt;p&gt;Si aucune erreur en sortie, on exécute sans l&amp;#8217;option &amp;#8220;dry run&amp;#8221;.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt; [postgres - ]$ pg_combinebackup -o /data/postgres/backup/pg_basebackup/PG17_ALL /data/postgres/backup/pg_basebackup/PG17 /data/postgres/backup/pg_basebackup/PG17_incr /data/postgres/backup/pg_basebackup/PG17_incr_2 &lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Le répertoire &amp;#8220;&lt;strong&gt;/data/postgres/backup/pg_basebackup/PG17_ALL&lt;/strong&gt;&amp;#8221; ainsi généré, doit avoir une taille très légèrement supérieure au dossier de la sauvegarde FULL.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres - ]$ du -h PG17_ALL&#xD;&#xA;....&#xD;&#xA;3.0G PG17_ALL&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Dernière étape, nous passons à la restauration des données.&lt;/p&gt;&#xA;&lt;p&gt;Nous arrêtons l&amp;#8217;instance PG17&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres - ]$ pg_ctl -D /data/postgres/17/pg_data/ stop&#xD;&#xA;waiting for server to shut down.... done&#xD;&#xA;server stopped&lt;/pre&gt;&#xA;&lt;p&gt;Nous supprimons les données dans $PGDATA&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres - ]$ rm -rf /data/postgres/17/pg_data/* &lt;/pre&gt;&#xA;&lt;p&gt;Puis nous restaurons ce jeu complet de données avec une simple copie.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres - ]$ cp -r /data/postgres/backup/pg_basebackup/PG17_ALL/* /data/postgres/17/pg_data/ &lt;/pre&gt;&#xA;&lt;p&gt;Enfin redémarrons l&amp;#8217;instance&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres - ]$ pg_ctl -D /data/postgres/17/pg_data/ start&#xD;&#xA;waiting for server to start....2024-07-08 10:51:45.671 UTC [8909] LOG: redirecting log output to logging collector process&#xD;&#xA;2024-07-08 10:51:45.671 UTC [8909] HINT: Future log output will appear in directory &amp;quot;log&amp;quot;.&#xD;&#xA;done&#xD;&#xA;server started&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Puis contrôler que nous récupérons bien toutes les lignes de notre table &amp;#8220;backup&amp;#8221;.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres@ip-172-44-2-96 pg_basebackup]$ psql -d manu&#xD;&#xA;(postgres@[local]:5437) [manu] primaire $ &amp;gt; select * from backup;&#xD;&#xA;nom | type | date_backup&#xD;&#xA;------------+---------------+-------------&#xD;&#xA;sauvegarde | FULL | 2024-07-08&#xD;&#xA;sauvegarde | incremental | 2024-07-08&#xD;&#xA;sauvegarde | incremental 2 | 2024-07-08&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;h3&gt;&lt;/h3&gt;&#xA;&lt;h3&gt;&lt;/h3&gt;&#xA;&lt;h3&gt;Remarques&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Attention, toujours vérifier les sauvegardes à chaque étape avec l&amp;#8217;outil &lt;strong&gt;pg_verifybackup &lt;/strong&gt;car rien ne garantit qu&amp;#8217;au moment de l&amp;#8217;appel à &lt;strong&gt;pg_combinebackup&lt;/strong&gt; les différents jeux de sauvegardes FULL et/ou incrémentales ne soient pas corrompus.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Assurez vous d&amp;#8217;être en mode &amp;#8220;data_checksum&amp;#8221; activé et ne pas changer de mode entre les jeux de backup. Le &amp;#8220;backup manifest&amp;#8221; s&amp;#8217;appuie sur ce paramétrage pour valider les checksums de chaque fichier.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Le mode TAR pour &lt;strong&gt;pg_basebackup&lt;/strong&gt; n&amp;#8217;est pas compatible pour les sauvegardes full et incrémentales même si celui ci est possible. Mais c&amp;#8217;est à vous de détarer les fichiers &amp;#8220;&lt;strong&gt;base.tar.gz&lt;/strong&gt;&amp;#8221; Et au moment de la restauration  avec &amp;#8220;&lt;strong&gt;pg_combinebackup&lt;/strong&gt;&amp;#8220;, une possible corruption est rencontrée.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres - ]$ pg_combinebackup -o /data/postgres/backup/pg_basebackup/PG17_all_tar /data/postgres/backup/pg_basebackup/PG17_TAR /data/postgres/backup/pg_basebackup/PG17_incr_TAR&#xD;&#xA;pg_combinebackup: error: could not write to file &amp;quot;/data/postgres/backup/pg_basebackup/PG17_all_tar/base/25284/25332&amp;quot;, offset 122470400: wrote 380928 of 409600&#xD;&#xA;pg_combinebackup: removing output directory &amp;quot;/data/postgres/backup/pg_basebackup/PG17_all_tar&amp;quot; &lt;/pre&gt;&#xA;&lt;p&gt;La compression a potentiellement ajoutée une corruption ne rendant pas possible l&amp;#8217;opération de &amp;#8220;merge&amp;#8221; des données.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;La restauration PITR est possible bien entendu. N&amp;#8217;oubliez pas de créer le &amp;#8220;&lt;strong&gt;recovery.signal&lt;/strong&gt;&amp;#8221; dans $PGDATA et de définir dans le fichier &amp;#8220;postgresql.conf&amp;#8221; les quelques paramètres suivants&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;span style=&#34;color: #3366ff;&#34;&gt;recovery_target_name &lt;/span&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;span style=&#34;color: #3366ff;&#34;&gt;recovery_target_time &lt;/span&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;span style=&#34;color: #3366ff;&#34;&gt;recovery_target_xid &lt;/span&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;span style=&#34;color: #3366ff;&#34;&gt;recovery_target_lsn &lt;/span&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;span style=&#34;color: #808000;&#34;&gt;recovery_target_inclusive = off ou on&lt;/span&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;span style=&#34;color: #808000;&#34;&gt;recovery_target_timeline = &amp;#8216;latest&amp;#8217; &lt;/span&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;span style=&#34;color: #808000;&#34;&gt;recovery_target_action = &amp;#8216;pause&amp;#8217; &lt;/span&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://s.w.org/images/core/emoji/15.0.3/72x72/1f642.png&#34; alt=&#34;🙂&#34; class=&#34;wp-smiley&#34; style=&#34;height: 1em; max-height: 1em;&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;strong&gt;Continuez votre lecture sur le blog :&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul class=&#34;similar-posts&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-la-streaming-replication-en-12/&#34; rel=&#34;bookmark&#34; title=&#34;19 novembre 2019&#34;&gt;PostgreSQL : la streaming replication en 12.&lt;/a&gt; (Emmanuel RAMI) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-13-les-nouveautes-interessantes/&#34; rel=&#34;bookmark&#34; title=&#34;30 octobre 2020&#34;&gt;PostgreSQL 13 : présentation&lt;/a&gt; (Emmanuel RAMI) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/oracle-rds-effectuer-des-backup-rman-en-mode-paas/&#34; rel=&#34;bookmark&#34; title=&#34;25 juin 2019&#34;&gt;Oracle RDS : effectuer des backup RMAN en mode PaaS.&lt;/a&gt; (Emmanuel RAMI) [AWSNon classéOracle]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-comparatif-entre-barman-et-pgbackrest/&#34; rel=&#34;bookmark&#34; title=&#34;4 février 2020&#34;&gt;PostgreSQL : Comparatif entre Barman et pgBackRest&lt;/a&gt; (Capdata team) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/haute-disponibilite-de-postgresql-avec-patroni/&#34; rel=&#34;bookmark&#34; title=&#34;2 février 2022&#34;&gt;Haute disponibilité de PostgreSQL avec Patroni&lt;/a&gt; (Ludovic AUGEREAU) [PostgreSQL]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;!-- Similar Posts took 4.336 ms --&gt;&lt;/p&gt;&#xA;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10584&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10584&amp;#038;title=PostgreSQL%2017%20%3A%20des%20sauvegardes%20incr%C3%A9mentales%20avec%20pg_basebackup&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=PostgreSQL%2017%20%3A%20des%20sauvegardes%20incr%C3%A9mentales%20avec%20pg_basebackup&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10584&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/postgresql-17-sauvegardes-incrementales/&#34;&gt;PostgreSQL 17 : des sauvegardes incrémentales avec pg_basebackup&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.capdata.fr/index.php/postgresql-17-sauvegardes-incrementales/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&amp;#160; Bonjour Les 11 et 12 juin derniers, nous étions aux journées PGDAY à Lille pour découvrir les nouveautés autour de PostgreSQL. Cette conférence regroupe différents professionnels, de la communauté francophone, qui agissent en contribuant sur des sujets techniques mais&amp;#8230; &lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-17-sauvegardes-incrementales/&#34; class=&#34;more-link&#34;&gt;Continuer la lecture &lt;span class=&#34;meta-nav&#34;&gt;&amp;#8594;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/postgresql-17-sauvegardes-incrementales/&#34;&gt;PostgreSQL 17 : des sauvegardes incrémentales avec pg_basebackup&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Emmanuel RAMI</name>
    </author>
  </entry>
  <entry>
    <title>PGO : la suite</title>
    <updated>2024-05-29T08:58:17Z</updated>
    <id>tag:blog.capdata.fr,2024-05-29:/index.php/pgo-la-suite/</id>
    <content type="html">&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10562&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10562&amp;#038;title=PGO%20%3A%20la%20suite&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=PGO%20%3A%20la%20suite&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10562&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;La gestion efficace des clusters PostgreSQL dans un environnement Kubernetes est un défi complexe auquel sont confrontées de nombreuses entreprises aujourd&amp;#8217;hui. PGO offre une solution déclarative qui automatise la gestion des clusters PostgreSQL, simplifiant ainsi le déploiement, la mise à l&amp;#8217;échelle et la gestion des bases de données PostgreSQL dans un environnement Kubernetes.&lt;/p&gt;&#xA;&lt;p&gt;Pour faire suite à l&amp;#8217;article de David sur PGO et à la demande d&amp;#8217;un de nos clients, j&amp;#8217;ai réalisé une étude approfondie de plusieurs fonctionnalités de PGO.&lt;br /&gt;&#xA;Cet article va faire un petit tour d&amp;#8217;horizon des outils principaux inclus dans l&amp;#8217;implémentation de PGO. Que ce soit pour la sauvegarde avec pgbackrest, pour la balance des connexion avec pgbouncer ou pour le monitoring avec prometheus, PGO ne manque pas d&amp;#8217;utilitaire dont l&amp;#8217;utilisation est facilitée par la solution tout embarqué.&lt;/p&gt;&#xA;&lt;h3&gt;Pgbackrest :&lt;/h3&gt;&#xA;&lt;h4&gt;Utilité :&lt;/h4&gt;&#xA;&lt;p&gt;PgBackRest est une solution de sauvegarde et de restauration pour les bases de données PostgreSQL qui propose plusieurs fonctionnalités, telles que la sauvegarde et la restauration parallèles, la compression, les sauvegardes complètes, différentielles et incrémentielles, la rotation des sauvegardes et l&amp;#8217;expiration des archives, l&amp;#8217;intégrité des sauvegardes, etc. Il prend en charge plusieurs référentiels, qui peuvent être situés localement ou à distance via TLS/SSH, ou être des stockages fournis par le cloud comme S3/GCS/Azure.&lt;br /&gt;&#xA;L&amp;#8217;architecture de pgbackrest pour PGO est la suivante :&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.capdata.fr/wp-content/uploads/2024/05/Image1.png&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;alignnone size-medium wp-image-10564&#34; src=&#34;https://blog.capdata.fr/wp-content/uploads/2024/05/Image1-300x168.png&#34; alt=&#34;&#34; width=&#34;300&#34; height=&#34;168&#34; srcset=&#34;https://blog.capdata.fr/wp-content/uploads/2024/05/Image1-300x168.png 300w, https://blog.capdata.fr/wp-content/uploads/2024/05/Image1.png 605w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h4&gt;Mise en place :&lt;/h4&gt;&#xA;&lt;p&gt;On peut imaginer plusieurs moyens de mettre en place le pgbackrest. Dans un premier temps, nous avons la sauvegarde classique en système de fichier, comme dans notre exemple sur le blog :&lt;/p&gt;&#xA;&lt;h5&gt;1) La sauvegarde sur volume persistant Kubernetes :&lt;/h5&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;- name: repo1&#xD;&#xA;  volume:&#xD;&#xA;    volumeClaimSpec:&#xD;&#xA;      accessModes:&#xD;&#xA;      - &amp;quot;ReadWriteOnce&amp;quot;&#xD;&#xA;      resources:&#xD;&#xA;        requests:&#xD;&#xA;          storage: 1Gi&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Ce type de sauvegarde utilise un volume persistant de Kubernetes pour recueillir nos sauvegardes et les garder.&lt;br /&gt;&#xA;Une PersistentVolumeClaim (PVC) est une demande de stockage faite par un utilisateur. Elle est similaire à un Pod. Les Pods consomment des ressources de nœud et les PVC consomment des ressources de PV (PersistentVolume). Les Pods peuvent demander des niveaux spécifiques de ressources (CPU et mémoire). Les revendications peuvent demander une taille spécifique et des modes d&amp;#8217;accès spécifiques (par exemple, elles peuvent être montées en ReadWriteOnce, ReadOnlyMany, ReadWriteMany, ou ReadWriteOncePod, voir AccessModes).&lt;/p&gt;&#xA;&lt;h5&gt;2) Le stockage pour S3 :&lt;/h5&gt;&#xA;&lt;p&gt;Pour pouvoir faire du stockage dans S3, il faut rajouter un fichier de configuration dans notre dossier de déploiement. Le fichier doit s’appeler s3.conf. Ce fichier contient les crédential de connexion à un AWS S3 :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;repo1-s3-key=$YOUR_AWS_S3_KEY&#xD;&#xA;repo1-s3-key-secret=$YOUR_AWS_S3_KEY_SECRET&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Une fois que c’est configuré dans votre fichier, il ne reste plus qu’à modifier le postgresql.yaml, et configurer dans la partie backup :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;backups:&#xD;&#xA;    pgbackrest:&#xD;&#xA;      image: registry.developers.crunchydata.com/crunchydata/crunchy-pgbackrest:ubi8-2.49-0&#xD;&#xA;      configuration:&#xD;&#xA;      - secret:&#xD;&#xA;          name: pgo-s3-creds&#xD;&#xA;      global:&#xD;&#xA;        repo1-path: /pgbackrest/postgres-operator/pgcluster1/repo1&#xD;&#xA;      repos:&#xD;&#xA;      - name: repo1&#xD;&#xA;        s3:&#xD;&#xA;          bucket: &amp;quot;&amp;lt;YOUR_AWS_S3_BUCKET_NAME&amp;gt;&amp;quot;&#xD;&#xA;          endpoint: &amp;quot;&amp;lt;YOUR_AWS_S3_ENDPOINT&amp;gt;&amp;quot;&#xD;&#xA;          region: &amp;quot;&amp;lt;YOUR_AWS_S3_REGION&amp;gt;&amp;quot;&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Une fois configuré, et le job mis dans le cron, vous devriez voir apparaitre les sauvegardes sur le volume S3.&lt;/p&gt;&#xA;&lt;h5&gt;3) Le stockage GCS :&lt;/h5&gt;&#xA;&lt;p&gt;Comme pour Amazon S3 on peut sauvegarder nos backups dans Google Cloud Storage. Pour pouvoir le faire fonctionner il vous faut copier votre GCS key secret (qui est un fichier JSON) dans un gcs.conf que vous allez placer dans votre dossier Kustomize.&lt;br /&gt;&#xA;Il vous suffit ensuite de modifier votre fichier postgres.yaml pour ajouter dans la partie backup la configuration pour une sauvegarde gcs :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;backups:&#xD;&#xA;    pgbackrest:&#xD;&#xA;      image: registry.developers.crunchydata.com/crunchydata/crunchy-pgbackrest:ubi8-2.49-0&#xD;&#xA;      configuration:&#xD;&#xA;      - secret:&#xD;&#xA;          name: pgo-gcs-creds&#xD;&#xA;      global:&#xD;&#xA;        repo1-path: /pgbackrest/postgres-operator/pgcluster1/repo1&#xD;&#xA;      repos:&#xD;&#xA;      - name: repo1&#xD;&#xA;        gcs:&#xD;&#xA;          bucket: &amp;quot;&amp;lt;YOUR_GCS_BUCKET_NAME&amp;gt;&amp;quot;&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Il ne vous reste plus qu’à regénérer vos pods, et votre sauvegarde arrivera directement dans votre Google Cloud Service.&lt;/p&gt;&#xA;&lt;h5&gt;4) Le stockage Azur Blob Storage :&lt;/h5&gt;&#xA;&lt;p&gt;Comme pour les deux points précédents, vous pouvez également stocker vos sauvegardes sur le blob storage d’Azure. Pour cela il vous faut créer un fichier dans votre kustomize, avec à l’intérieur la configuration pour votre point de sauvegarde Azure. Il vous faut l’appeler azure.conf et il devra contenir les lignes suivantes :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;repo1-azure-account=$YOUR_AZURE_ACCOUNT&#xD;&#xA;repo1-azure-key=$YOUR_AZURE_KEY&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Il faut ensuite intégrer ces modifications dans votre fichier postgres.yaml :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;backups:&#xD;&#xA;    pgbackrest:&#xD;&#xA;      image: registry.developers.crunchydata.com/crunchydata/crunchy-pgbackrest:ubi8-2.49-0&#xD;&#xA;      configuration:&#xD;&#xA;      - secret:&#xD;&#xA;          name: pgo-azure-creds&#xD;&#xA;      global:&#xD;&#xA;        repo1-path: /pgbackrest/postgres-operator/pgcluster/repo1&#xD;&#xA;      repos:&#xD;&#xA;      - name: repo1&#xD;&#xA;        azure:&#xD;&#xA;          container: &amp;quot;&amp;lt;YOUR_AZURE_CONTAINER&amp;gt;&amp;quot;&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Bien sur rien ne vous interdit, et c’est même conseillé, de joindre plusieurs moyens de sauvegarde. Cela permet notamment de s’assurer une plus grande fiabilité du système de sauvegarde, en s’assurant qu’elles sont disponibles à plusieurs endroits.&lt;br /&gt;&#xA;Une fois que vous avez décidé d’où vous allez stocker vos sauvegardes, et que vous l’avez configuré, il faut maintenant décider des différents paramètres de ces sauvegardes : la programmation, la rétention…&lt;/p&gt;&#xA;&lt;h5&gt;5) La programmation des sauvegardes :&lt;/h5&gt;&#xA;&lt;p&gt;Il faut savoir que par défaut, PGO sauvegarde automatiquement les WAL dans la méthode de sauvegarde que vous lui avez configuré. C’est donc une forme de sauvegarde en soit.&lt;br /&gt;&#xA;Mais dans le cadre d’une récupération après incident majeur, il peut aussi être utilise d’avoir des sauvegardes full programmées. Pgbackrest, qui est l’outil utilisé par PGO permet de mettre en place trois types de sauvegarde : les incrémentales, les différentielles et les fulls.&lt;br /&gt;&#xA;Chaque type de sauvegarde peut être programmée en suivant une notation identique à celle des crontab. Par exemple :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;backups:&#xD;&#xA;    pgbackrest:&#xD;&#xA;      repos:&#xD;&#xA;      - name: repo1&#xD;&#xA;        schedules:&#xD;&#xA;          full: &amp;quot;0 1 * * 0&amp;quot;&#xD;&#xA;          differential: &amp;quot;0 1 * * 1-6&amp;quot;&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Le fait d’implémenter ces planifications créera des CronJobs dans Kubernetes.&lt;/p&gt;&#xA;&lt;h5&gt;6) La rétention des backups :&lt;/h5&gt;&#xA;&lt;p&gt;Vous pouvez définir une rétention maximum pour vos backups sur le support de backup de votre choix. Une fois que cette rétention sera atteinte, pgbackrest fera le ménage tout seul des sauvegardes et des WAL qui lui sont reliées.&lt;br /&gt;&#xA;Il y a deux types de rétentions que l’on peut définir : les rétentions « count » basées sur le nombre de backup que l’on souhaite garder et les rétentions « time » basées sur le nombre de jours ou vous souhaitez garder votre sauvegarde.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;backups:&#xD;&#xA;    pgbackrest:&#xD;&#xA;      global:&#xD;&#xA;        repo1-retention-full: &amp;quot;14&amp;quot;&#xD;&#xA;        repo1-retention-full-type: time&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;h5&gt;7) La sauvegarde unique :&lt;/h5&gt;&#xA;&lt;p&gt;Si dans le cadre d’un besoin particuliers, une grosse modification ou une migration par exemple, vous avez besoin de prendre une sauvegarde immédiate sans forcément attendre que le cron n’arrive, vous pouvez le faire.&lt;br /&gt;&#xA;Pour la configuration de cette sauvegarde, il faudra l’annoter comme « manuelle » :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;  backups:&#xD;&#xA;    pgbackrest:&#xD;&#xA;      manual:&#xD;&#xA;        repoName: repo1&#xD;&#xA;        options:&#xD;&#xA;         - --type=full&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Il vous faudra ensuite déclencher cette sauvegarde avec une commande manuelle. Dans le cadre de notre cluster exemple pgcluster1 :&lt;br /&gt;&#xA;kubectl annotate -n postgres-operator postgrescluster pgcluster1 \ postgres-operator.crunchydata.com/pgbackrest-backup=&amp;#8221;$(date)&amp;#8221;&lt;/p&gt;&#xA;&lt;h5&gt;8) Faire un clone à partir d’un repo :&lt;/h5&gt;&#xA;&lt;p&gt;Quand on a configuré un repo sur notre instance primaire, on peut facilement créer un clone de notre instance à l’aide de notre sauvegarde. Ainsi, on créer un tout nouveau Pods à partir des informations stockées à propos du pod que l’on possède déjà. Ici, nous allons créer un nouveau pod à partir de notre pod pgcluster1 :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;apiVersion: postgres-operator.crunchydata.com/v1beta1&#xD;&#xA;kind: PostgresCluster&#xD;&#xA;metadata:&#xD;&#xA;  name: pgcluster2&#xD;&#xA;spec:&#xD;&#xA;  dataSource:&#xD;&#xA;    postgresCluster:&#xD;&#xA;      clusterName: pgcluster1&#xD;&#xA;      repoName: repo1&#xD;&#xA;  image: registry.developers.crunchydata.com/crunchydata/crunchy-postgres:ubi8-16.2-0&#xD;&#xA;  postgresVersion: 16&#xD;&#xA;  instances:&#xD;&#xA;    - dataVolumeClaimSpec:&#xD;&#xA;        accessModes:&#xD;&#xA;        - &amp;quot;ReadWriteOnce&amp;quot;&#xD;&#xA;        resources:&#xD;&#xA;          requests:&#xD;&#xA;            storage: 1Gi&#xD;&#xA;  backups:&#xD;&#xA;    pgbackrest:&#xD;&#xA;      image: registry.developers.crunchydata.com/crunchydata/crunchy-pgbackrest:ubi8-2.49-0&#xD;&#xA;      repos:&#xD;&#xA;      - name: repo1&#xD;&#xA;        volume:&#xD;&#xA;          volumeClaimSpec:&#xD;&#xA;            accessModes:&#xD;&#xA;            - &amp;quot;ReadWriteOnce&amp;quot;&#xD;&#xA;            resources:&#xD;&#xA;              requests:&#xD;&#xA;                storage: 1Gi&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Ici on peut noter entre autres la partie spec de la configuration, qui est le morceau de yaml nous permettant de dire qu’on s’appuie sur le cluster existant pour créer un clone indépendant :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;spec:&#xD;&#xA;  dataSource:&#xD;&#xA;    postgresCluster:&#xD;&#xA;      clusterName: pgcluster1&#xD;&#xA;      repoName: repo1&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;h5&gt;9) Point in Time Recovery :&lt;/h5&gt;&#xA;&lt;p&gt;De la même façon, si l’on veut faire une restauration PITR, nous allons remplir la balise spec de notre yaml. Attention cependant, pour faire une restauration PITR, nous avons besoin de posséder encore la sauvegarde. On ne peut pas faire une restauration PITR sur une sauvegarde lointaine qu’on ne possèderait plus. Imaginons que je souhaite repartir d’une sauvegarde datant d’hier soir à 20h30 de mon instance pgcluster1 sur mon instance pgcluster2, la configuration serait la suivante :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;apiVersion: postgres-operator.crunchydata.com/v1beta1&#xD;&#xA;kind: PostgresCluster&#xD;&#xA;metadata:&#xD;&#xA;  name: pgcluster2&#xD;&#xA;spec:&#xD;&#xA;  dataSource:&#xD;&#xA;    postgresCluster:&#xD;&#xA;      clusterName: pgcluster1&#xD;&#xA;      repoName: repo1&#xD;&#xA;      options:&#xD;&#xA;      - --type=time&#xD;&#xA;      - --target=&amp;quot;2024-04-09 20:30:00-00&amp;quot;&#xD;&#xA;  image: registry.developers.crunchydata.com/crunchydata/crunchy-postgres:ubi8-16.2-0&#xD;&#xA;  postgresVersion: 16&#xD;&#xA;  instances:&#xD;&#xA;    - dataVolumeClaimSpec:&#xD;&#xA;        accessModes:&#xD;&#xA;        - &amp;quot;ReadWriteOnce&amp;quot;&#xD;&#xA;        resources:&#xD;&#xA;          requests:&#xD;&#xA;            storage: 1Gi&#xD;&#xA;  backups:&#xD;&#xA;    pgbackrest:&#xD;&#xA;      image: registry.developers.crunchydata.com/crunchydata/crunchy-pgbackrest:ubi8-2.49-0&#xD;&#xA;      repos:&#xD;&#xA;      - name: repo1&#xD;&#xA;        volume:&#xD;&#xA;          volumeClaimSpec:&#xD;&#xA;            accessModes:&#xD;&#xA;            - &amp;quot;ReadWriteOnce&amp;quot;&#xD;&#xA;            resources:&#xD;&#xA;              requests:&#xD;&#xA;                storage: 1Gi&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;La partie qui nous intéresse ici est la partie spec, ou nous avons rajouter un type de restauration (ici time) et une heure target. Cela indique à pgbackrest qu’il doit aller chercher tous les fichiers de sauvegarde et WAL sur notre point de sauvegarde repo1 venant de l’instance pgcluster1 pour les réappliquer sur notre nouveau cluster pgcluster2.&lt;br /&gt;&#xA;Vous pouvez également vouloir réaliser une restauration In Place, c’est-à-dire écraser l’instance présente pour la remplacer par la restauration. Auquel cas, plutôt que de préciser comment s’appellera notre nouveau cluster, il faut alors passer par la balise restore :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;spec:&#xD;&#xA;  backups:&#xD;&#xA;    pgbackrest:&#xD;&#xA;      restore:&#xD;&#xA;        enabled: true&#xD;&#xA;        repoName: repo1&#xD;&#xA;        options:&#xD;&#xA;        - --type=time&#xD;&#xA;        - --target=&amp;quot;2024-04-09 20:30:00-00&amp;quot;&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Ici, comme précédemment, nous restaurons à l’heure de 20 :30 hier soir, et cela sur notre propre instance. Ne reste plus qu’à lancer la restauration :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;kubectl annotate -n postgres-operator postgrescluster pgcluster1 --overwrite \ postgres-operator.crunchydata.com/pgbackrest-restore=&amp;quot;$(date)&amp;quot;&lt;/pre&gt;&#xA;&lt;p&gt;A noter qu’il ne faut pas oublier de désactiver ensuite le restore en le passant à false si vous ne souhaitez pas qu’il soit de nouveau écrasé au prochain changement de configuration.&lt;/p&gt;&#xA;&lt;h5&gt;10) Restaurer une base de données spécifique :&lt;/h5&gt;&#xA;&lt;p&gt;Si votre besoin est de restaurer une base de données spécifique plutôt que l’intégralité de l’instance, vous pouvez le préciser dans les paramètres de votre restauration.&lt;br /&gt;&#xA;Attention cependant, ce n’est pas une restauration comme le serais un pg_dump. Ici si vous restaurez simplement une seule base de données et pas le reste du cluster, les autres bases que vous n’avez pas choisit de restaurer deviendront inaccessibles.&lt;br /&gt;&#xA;Si nous voulons restaurer une base de données, et uniquement elle, voici la procédure :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;spec:&#xD;&#xA;backups:&#xD;&#xA;  pgbackrest:&#xD;&#xA;    restore:&#xD;&#xA;      enabled: true&#xD;&#xA;      repoName: repo1&#xD;&#xA;      options:&#xD;&#xA;        - --db-include=capdata&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Ici, on ne restaurera que la base de données capdata, et aucunes autres bases à partir de notre repo1.&lt;/p&gt;&#xA;&lt;h3&gt;PgBouncer :&lt;/h3&gt;&#xA;&lt;h4&gt;Utilité :&lt;/h4&gt;&#xA;&lt;p&gt;PgBouncer est un pooler de connexion pour PostgreSQL. Un pooler de connexion permet de maintenir ouvertes des sessions entre lui-même et le serveur, ce qui rend plus rapide l&amp;#8217;ouverture de sessions depuis les clients, une application Web par exemple.&lt;br /&gt;&#xA;PgBouncer permet aussi de mutualiser les sessions dans le serveur, économisant ainsi des ressources. PgBouncer propose plusieurs modes de partage : par requête (default), par transaction ou par session.&lt;/p&gt;&#xA;&lt;h4&gt;Mise en place :&lt;/h4&gt;&#xA;&lt;p&gt;Pour ajouter un bouncer à notre configuration c’est une réalité très simple. Il suffit d’ajouter dans notre fichier postgres.yaml la rubrique proxy :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;proxy:&#xD;&#xA;  pgBouncer:&#xD;&#xA;    image: registry.developers.crunchydata.com/crunchydata/crunchy-pgbouncer:ubi8-1.21-3&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Une fois que vous avez rajouté cela dans la configuration, il n’y a plus qu’à appliquer celle-ci :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt; kubectl apply -k kustomize/keycloak &lt;/pre&gt;&#xA;&lt;p&gt;Quand PGO créé un nouveau connexion pooler sur notre instance déployée, il modifier le fichier secrets de l’utilisateur.&lt;br /&gt;&#xA;On voit que plusieurs champs qui concerne pg_bouncer sont apparus. Ils constituent les informations qui vont vous permettre de vous connecter sur votre bouncer nouvellement créé :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;{&#xD;&#xA;    &amp;quot;apiVersion&amp;quot;: &amp;quot;v1&amp;quot;,&#xD;&#xA;    &amp;quot;data&amp;quot;: {&#xD;&#xA;        &amp;quot;dbname&amp;quot;: &amp;quot;cGdjbHVzdGVyMQ==&amp;quot;,&#xD;&#xA;        &amp;quot;host&amp;quot;: &amp;quot;cGdjbHVzdGVyMS1wcmltYXJ5LnBvc3RncmVzLW9wZXJhdG9yLnN2Yw==&amp;quot;,&#xD;&#xA;        &amp;quot;jdbc-uri&amp;quot;: &amp;quot;amRiYzpwb3N0Z3Jlc3FsOi8vcGdjbHVzdGVyMS1wcmltYXJ5LnBvc3RncmVzLW9wZXJhdG9yLnN2Yzo1NDMyL3BnY2x1c3RlcjE/cGFzc3dvcmQ9NXNSaSUzRCU1QmZZbSUzQ2lSSGslMkElNUIlM0VuWGhqaiU3Q1EmdXNlcj1wZ2NsdXN0ZXIx&amp;quot;,&#xD;&#xA;        &amp;quot;password&amp;quot;: &amp;quot;NXNSaT1bZlltPGlSSGsqWz5uWGhqanxR&amp;quot;,&#xD;&#xA;        &amp;quot;pgbouncer-host&amp;quot;: &amp;quot;cGdjbHVzdGVyMS1wZ2JvdW5jZXIucG9zdGdyZXMtb3BlcmF0b3Iuc3Zj&amp;quot;,&#xD;&#xA;        &amp;quot;pgbouncer-jdbc-uri&amp;quot;: &amp;quot;amRiYzpwb3N0Z3Jlc3FsOi8vcGdjbHVzdGVyMS1wZ2JvdW5jZXIucG9zdGdyZXMtb3BlcmF0b3Iuc3ZjOjU0MzIvcGdjbHVzdGVyMT9wYXNzd29yZD01c1JpJTNEJTVCZlltJTNDaVJIayUyQSU1QiUzRW5YaGpqJTdDUSZwcmVwYXJlVGhyZXNob2xkPTAmdXNlcj1wZ2NsdXN0ZXIx&amp;quot;,&#xD;&#xA;        &amp;quot;pgbouncer-port&amp;quot;: &amp;quot;NTQzMg==&amp;quot;,&#xD;&#xA;        &amp;quot;pgbouncer-uri&amp;quot;: &amp;quot;cG9zdGdyZXNxbDovL3BnY2x1c3RlcjE6NXNSaT0lNUJmWW0lM0NpUkhrJTJBJTVCJTNFblhoamolN0NRQHBnY2x1c3RlcjEtcGdib3VuY2VyLnBvc3RncmVzLW9wZXJhdG9yLnN2Yzo1NDMyL3BnY2x1c3RlcjE=&amp;quot;,&#xD;&#xA;        &amp;quot;port&amp;quot;: &amp;quot;NTQzMg==&amp;quot;,&#xD;&#xA;        &amp;quot;uri&amp;quot;: &amp;quot;cG9zdGdyZXNxbDovL3BnY2x1c3RlcjE6NXNSaT0lNUJmWW0lM0NpUkhrJTJBJTVCJTNFblhoamolN0NRQHBnY2x1c3RlcjEtcHJpbWFyeS5wb3N0Z3Jlcy1vcGVyYXRvci5zdmM6NTQzMi9wZ2NsdXN0ZXIx&amp;quot;,&#xD;&#xA;        &amp;quot;user&amp;quot;: &amp;quot;cGdjbHVzdGVyMQ==&amp;quot;,&#xD;&#xA;        &amp;quot;verifier&amp;quot;: &amp;quot;U0NSQU0tU0hBLTI1NiQ0MDk2OlgyQ3NQRU1FZjh3QkVlc05McDFJTkE9PSRKcDhKakl5Q0o1ZEpFRVhia1ptUERTNE5rR3d0V00rczdrMElsQmx0YkpvPTpEaHg3VzNCOE5vNDRYSHJ1Qm1RdENMQW9jNEtnSUZQa2dIeStUMkVWUUowPQ==&amp;quot;&#xD;&#xA;    },&#xD;&#xA;    &amp;quot;kind&amp;quot;: &amp;quot;Secret&amp;quot;,&#xD;&#xA;    &amp;quot;metadata&amp;quot;: {&#xD;&#xA;        &amp;quot;creationTimestamp&amp;quot;: &amp;quot;2024-04-09T16:37:36Z&amp;quot;,&#xD;&#xA;        &amp;quot;labels&amp;quot;: {&#xD;&#xA;            &amp;quot;postgres-operator.crunchydata.com/cluster&amp;quot;: &amp;quot;pgcluster1&amp;quot;,&#xD;&#xA;            &amp;quot;postgres-operator.crunchydata.com/pguser&amp;quot;: &amp;quot;pgcluster1&amp;quot;,&#xD;&#xA;            &amp;quot;postgres-operator.crunchydata.com/role&amp;quot;: &amp;quot;pguser&amp;quot;&#xD;&#xA;        },&#xD;&#xA;        &amp;quot;name&amp;quot;: &amp;quot;pgcluster1-pguser-pgcluster1&amp;quot;,&#xD;&#xA;        &amp;quot;namespace&amp;quot;: &amp;quot;postgres-operator&amp;quot;,&#xD;&#xA;        &amp;quot;ownerReferences&amp;quot;: [&#xD;&#xA;            {&#xD;&#xA;                &amp;quot;apiVersion&amp;quot;: &amp;quot;postgres-operator.crunchydata.com/v1beta1&amp;quot;,&#xD;&#xA;                &amp;quot;blockOwnerDeletion&amp;quot;: true,&#xD;&#xA;                &amp;quot;controller&amp;quot;: true,&#xD;&#xA;                &amp;quot;kind&amp;quot;: &amp;quot;PostgresCluster&amp;quot;,&#xD;&#xA;                &amp;quot;name&amp;quot;: &amp;quot;pgcluster1&amp;quot;,&#xD;&#xA;                &amp;quot;uid&amp;quot;: &amp;quot;7260b882-116f-4b02-b51a-18d4fe3a8038&amp;quot;&#xD;&#xA;            }&#xD;&#xA;        ],&#xD;&#xA;        &amp;quot;resourceVersion&amp;quot;: &amp;quot;9495&amp;quot;,&#xD;&#xA;        &amp;quot;uid&amp;quot;: &amp;quot;1fbdf1d2-48ea-4a45-b7d6-01248317dbee&amp;quot;&#xD;&#xA;    },&#xD;&#xA;    &amp;quot;type&amp;quot;: &amp;quot;Opaque&amp;quot;&#xD;&#xA;}&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Pour se connecter à notre pgbouncer, il suffit d’utiliser les informations fournies par le fichier de secret à la place de nos infos de connexion habituelles, et cela nous permet d’accéder directement au bouncer et non plus à l’instance elle-même.&lt;/p&gt;&#xA;&lt;p&gt;Cette connexion peut être facilement modifiée en utilisant la documentation de pgbouncer afin de pouvoir configurer à notre guise notre pgbouncer. Un exemple de configuration qu’on pourrais rencontrer serait :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;  proxy:&#xD;&#xA;    pgBouncer:&#xD;&#xA;      image: {{.Values.image.pgBouncer }}&#xD;&#xA;      config:&#xD;&#xA;        global:&#xD;&#xA;          default_pool_size: &amp;quot;100&amp;quot;&#xD;&#xA;          max_client_conn: &amp;quot;10000&amp;quot;&#xD;&#xA;          pool_mode: transaction&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Pour cet exemple on voit qu’on a définit un nombre de client maximum, la taille du pool à 100 et un mode transaction pour notre pool.&lt;/p&gt;&#xA;&lt;h3&gt;PGO et Prometheus&lt;/h3&gt;&#xA;&lt;h4&gt;Utilité :&lt;/h4&gt;&#xA;&lt;p&gt;Prometheus est une trousse à outils de surveillance et d&amp;#8217;alerte des systèmes en open source.&lt;br /&gt;&#xA;Prometheus collecte et stocke ses métriques sous forme de données de séries temporelles, c&amp;#8217;est-à-dire que les informations de métriques sont stockées avec le timestamp auquel elles ont été enregistrées, aux côtés de paires clé-valeur optionnelles appelées labels.&lt;br /&gt;&#xA;&amp;#8211; Un modèle de données multidimensionnel avec des données de séries temporelles identifiées par le nom de la métrique et des paires clé-valeur&lt;br /&gt;&#xA;&amp;#8211; PromQL, un langage de requête flexible pour exploiter cette dimensionnalité&lt;br /&gt;&#xA;&amp;#8211; Aucune dépendance sur le stockage distribué ; les nœuds de serveur individuels sont autonomes&lt;br /&gt;&#xA;&amp;#8211; La collecte de séries temporelles se fait via un modèle de tirage sur HTTP&lt;br /&gt;&#xA;&amp;#8211; La poussée de séries temporelles est prise en charge via une passerelle intermédiaire&lt;br /&gt;&#xA;&amp;#8211; Les cibles sont découvertes via la découverte de service ou la configuration statique&lt;br /&gt;&#xA;&amp;#8211; Prise en charge de plusieurs modes de graphiques et de tableaux de bord&lt;/p&gt;&#xA;&lt;h4&gt;Mise en place :&lt;/h4&gt;&#xA;&lt;p&gt;Pour pouvoir mettre en place une surveillance pour notre cluster, il est plus simple de télécharger et compléter le modèle fournit dans les exemples de pgo.&lt;br /&gt;&#xA;Ainsi, on peut récupérer les exemples à l’aide de git :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;YOUR_GITHUB_UN=&amp;quot;$YOUR_GITHUB_USERNAME&amp;quot;&#xD;&#xA;git clone --depth 1 &amp;quot;git@github.com:${YOUR_GITHUB_UN}/postgres-operator-examples.git&amp;quot;&#xD;&#xA;cd postgres-operator-examples&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Les différentes configurations se trouvent dans le dossier kustomize/monitoring.&lt;br /&gt;&#xA;Pour activer le monitoring de notre instance, il faut ajouter la balise monitoring à notre fichier postgres.yaml :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;monitoring:&#xD;&#xA;  pgmonitor:&#xD;&#xA;    exporter:&#xD;&#xA;      image: registry.developers.crunchydata.com/crunchydata/crunchy-postgres-exporter:ubi8-5.5.1-0&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Une fois notre configuration modifiée, on l’applique afin que PGO détecte les changements et configure tout seul l’exporter pour qu’il puisse se connecter à nos bases de données et récupérer les métriques.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;kubectl apply -k kustomize/postgres&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Il faut ensuite appliquer la configuration de base de pgmonitor pour qu’il créé lui-même les fichiers de configuration pour prometheus (il le fera en même temps pour Grafana et Alertmanager qui sont deux autres outils de surveillance). Pour cela on applique le kustomize présent dans le dossier monitoring :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$kubectl apply -k kustomize\postgres&#xD;&#xA;postgrescluster.postgres-operator.crunchydata.com/pgcluster1 configured&#xD;&#xA;$kubectl apply -k kustomize\monitoring&#xD;&#xA;serviceaccount/alertmanager created&#xD;&#xA;serviceaccount/grafana created&#xD;&#xA;serviceaccount/prometheus created&#xD;&#xA;clusterrole.rbac.authorization.k8s.io/prometheus created&#xD;&#xA;clusterrolebinding.rbac.authorization.k8s.io/prometheus created&#xD;&#xA;configmap/alert-rules-config created&#xD;&#xA;configmap/alertmanager-config created&#xD;&#xA;configmap/crunchy-prometheus created&#xD;&#xA;configmap/grafana-dashboards created&#xD;&#xA;configmap/grafana-datasources created&#xD;&#xA;secret/grafana-admin created&#xD;&#xA;service/crunchy-alertmanager created&#xD;&#xA;service/crunchy-grafana created&#xD;&#xA;service/crunchy-prometheus created&#xD;&#xA;persistentvolumeclaim/alertmanagerdata created&#xD;&#xA;persistentvolumeclaim/grafanadata created&#xD;&#xA;persistentvolumeclaim/prometheusdata created&#xD;&#xA;deployment.apps/crunchy-alertmanager created&#xD;&#xA;deployment.apps/crunchy-grafana created&#xD;&#xA;deployment.apps/crunchy-prometheus created&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Nos services ont été correctement déployés, il ne nous reste plus qu’à utiliser celui qui nous intéresse, ici service/crunchy-prometheus et lui indiquer de commencer à envoyer les informations sur notre prometheus :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$kubectl -n postgres-operator port-forward service/crunchy-prometheus 9090:9090&#xD;&#xA;Forwarding from 127.0.0.1:9090 -&amp;gt; 9090&#xD;&#xA;Forwarding from [::1]:9090 -&amp;gt; 9090&#xD;&#xA;Handling connection for 9090&#xD;&#xA;Handling connection for 9090&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Afin d’accéder à notre service prometheus, il ne nous reste plus qu’à se connecter avec l’adresse de notre machine, sur le port 9090 préalablement ouvert, pour voir apparaitre le dashboard de prometheus :&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.capdata.fr/wp-content/uploads/2024/05/Image2.jpg&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;alignnone size-medium wp-image-10567&#34; src=&#34;https://blog.capdata.fr/wp-content/uploads/2024/05/Image2-300x66.jpg&#34; alt=&#34;&#34; width=&#34;300&#34; height=&#34;66&#34; srcset=&#34;https://blog.capdata.fr/wp-content/uploads/2024/05/Image2-300x66.jpg 300w, https://blog.capdata.fr/wp-content/uploads/2024/05/Image2-1024x226.jpg 1024w, https://blog.capdata.fr/wp-content/uploads/2024/05/Image2-768x170.jpg 768w, https://blog.capdata.fr/wp-content/uploads/2024/05/Image2.jpg 1386w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3&gt;PGO Client :&lt;/h3&gt;&#xA;&lt;h4&gt;Utilité :&lt;/h4&gt;&#xA;&lt;p&gt;Pour pouvoir gérer plus facilement le cluster créé par PGO, CrunchyData à développé une surcouche à kubectl qui permet de faciliter les commandes que nous pouvons réaliser sur le cluster.&lt;br /&gt;&#xA;Cela permet de ne pas avoir à taper les longues lignes de commandes qui permettent par exemple de démarrer les sauvegardes unitaires.&lt;/p&gt;&#xA;&lt;h4&gt;Mise en place :&lt;/h4&gt;&#xA;&lt;p&gt;Pour pouvoir installer cette surcouche, il faut télécharger la version qui correspond au système d’exploitation à partir du GIT de pgo client :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;# wget https://github.com/CrunchyData/postgres-operator-client/releases/download/v0.4.1/kubectl-pgo-linux-arm64&#xD;&#xA;--2024-04-11 12:07:45--  https://github.com/CrunchyData/postgres-operator-client/releases/download/v0.4.1/kubectl-pgo-linux-arm64&#xD;&#xA;Resolving github.com (github.com)... 140.82.121.4&#xD;&#xA;Connecting to github.com (github.com)|140.82.121.4|:443... connected.&#xD;&#xA;HTTP request sent, awaiting response... 302 Found&#xD;&#xA;Resolving objects.githubusercontent.com (objects.githubusercontent.com)... 185.199.109.133, 185.199.111.133, 185.199.110.133, ...&#xD;&#xA;Connecting to objects.githubusercontent.com (objects.githubusercontent.com)|185.199.109.133|:443... connected.&#xD;&#xA;HTTP request sent, awaiting response... 200 OK&#xD;&#xA;Length: 47895849 (46M) [application/octet-stream]&#xD;&#xA;Saving to: ‘kubectl-pgo-linux-arm64’&#xD;&#xA;&#xD;&#xA;kubectl-pgo-linux-arm64                                     100%[========================================================================================================================================&amp;gt;]  45.68M  --.-KB/s    in 0.1s&#xD;&#xA;&#xD;&#xA;2024-04-11 12:07:45 (373 MB/s) - ‘kubectl-pgo-linux-arm64’ saved [47895849/47895849]&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;On renome le fichier téléchargé en kubectl-pgo et on le déplace dans nos bin pour pouvoir les utiliser :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;# mv kubectl-pgo-linux-arm64 kubectl-pgo&#xD;&#xA;# sudo mv kubectl-pgo /usr/local/bin/kubectl-pgo&#xD;&#xA;# sudo chmod +x /usr/local/bin/kubectl-pgo&#xD;&#xA;Une fois que ces actions sont réalisées, on peut tester le fonctionnement :&#xD;&#xA;# kubectl pgo version&#xD;&#xA;Client Version: v0.4.1&#xD;&#xA;Operator Version: v5.5.1&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Les commandes disponibles avec cette extension sont les suivantes :&lt;br /&gt;&#xA;&amp;#8211; backup : Backup cluster&lt;br /&gt;&#xA;&amp;#8211; create : Create a resource&lt;br /&gt;&#xA;&amp;#8211; delete : Delete a resource&lt;br /&gt;&#xA;&amp;#8211; help : Help about any command&lt;br /&gt;&#xA;&amp;#8211; restore : Restore cluster&lt;br /&gt;&#xA;&amp;#8211; show Show : PostgresCluster details&lt;br /&gt;&#xA;&amp;#8211; start : Start cluster&lt;br /&gt;&#xA;&amp;#8211; stop : Stop cluster&lt;br /&gt;&#xA;&amp;#8211; support : Crunchy Support commands for PGO&lt;br /&gt;&#xA;&amp;#8211; version : PGO client&lt;strong&gt;Continuez votre lecture sur le blog :&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul class=&#34;similar-posts&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/pgo-operateurs-kubernetes-pour-postgresql-la-suite/&#34; rel=&#34;bookmark&#34; title=&#34;6 juin 2023&#34;&gt;PGO : opérateurs kubernetes pour PostgreSQL, la suite !&lt;/a&gt; (David Baffaleuf) [ContainerDevopsPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/kubegres-loperateur-kubernetes-cle-en-main-pour-postgresql/&#34; rel=&#34;bookmark&#34; title=&#34;26 avril 2023&#34;&gt;Kubegres : l&amp;#8217;opérateur Kubernetes clé en main pour PostgreSQL&lt;/a&gt; (David Baffaleuf) [ContainerDevopsPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-sur-la-solution-kubernetes-locale-minikube/&#34; rel=&#34;bookmark&#34; title=&#34;29 mars 2023&#34;&gt;PostgreSQL sur la solution Kubernetes locale Minikube&lt;/a&gt; (Emmanuel RAMI) [ContainerPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-comparatif-entre-barman-et-pgbackrest/&#34; rel=&#34;bookmark&#34; title=&#34;4 février 2020&#34;&gt;PostgreSQL : Comparatif entre Barman et pgBackRest&lt;/a&gt; (Capdata team) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/sauvegardes-sql-server-dans-un-azure-blob-storage/&#34; rel=&#34;bookmark&#34; title=&#34;21 août 2018&#34;&gt;Sauvegardes SQL Server dans un Azure Blob Storage&lt;/a&gt; (Vincent Delabre) [AzureSQL Server]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;!-- Similar Posts took 3.200 ms --&gt;&lt;/p&gt;&#xA;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10562&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10562&amp;#038;title=PGO%20%3A%20la%20suite&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=PGO%20%3A%20la%20suite&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10562&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/pgo-la-suite/&#34;&gt;PGO : la suite&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.capdata.fr/index.php/pgo-la-suite/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;La gestion efficace des clusters PostgreSQL dans un environnement Kubernetes est un défi complexe auquel sont confrontées de nombreuses entreprises aujourd&amp;#8217;hui. PGO offre une solution déclarative qui automatise la gestion des clusters PostgreSQL, simplifiant ainsi le déploiement, la mise à&amp;#8230; &lt;a href=&#34;https://blog.capdata.fr/index.php/pgo-la-suite/&#34; class=&#34;more-link&#34;&gt;Continuer la lecture &lt;span class=&#34;meta-nav&#34;&gt;&amp;#8594;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/pgo-la-suite/&#34;&gt;PGO : la suite&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Emmanuel RAMI</name>
    </author>
  </entry>
  <entry>
    <title>pg_recursively_delete : Simplifier les suppressions récursives</title>
    <updated>2024-04-03T13:11:08Z</updated>
    <id>tag:blog.capdata.fr,2024-04-03:/index.php/pg_recursively_delete-simplifier-les-suppressions-recursives/</id>
    <content type="html">&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10505&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10505&amp;#038;title=pg_recursively_delete%20%3A%20Simplifier%20les%20suppressions%20r%C3%A9cursives&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=pg_recursively_delete%20%3A%20Simplifier%20les%20suppressions%20r%C3%A9cursives&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10505&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;Si vous avez été amené au fil de votre carrière à manipuler de gros volumes de données contenus dans plusieurs tables possédant des références croisées entre elles, dépendantes d&amp;#8217;autres tables, qui elles-mêmes dépendent d&amp;#8217;autres tables, vous savez à quel point il peut être compliqué de remonter l&amp;#8217;intégralité de l&amp;#8217;arbre de dépendance pour supprimer la moindre ligne. Cela peut être long et fastidieux.&lt;/p&gt;&#xA;&lt;p&gt;Vous ne savez pas vraiment ce que vous supprimez, dans quelles tables, et quels impacts cela peut avoir sur votre base de données. Si les dépendances sont nombreuses, il est d&amp;#8217;autant plus compliqué de tout retracer et d&amp;#8217;être sûr à 100 % de ce que votre DELETE va entraîner.&lt;/p&gt;&#xA;&lt;p&gt;Dans cet article, je vais vous présenter rapidement un petit outil sous la forme d&amp;#8217;une extension que je trouve pratique à utiliser dans ce cas de figure. L&amp;#8217;outil s&amp;#8217;appelle pg_recursively_delete, et il permet de tracer avant d&amp;#8217;exécuter l&amp;#8217;ordre de suppression de votre ligne, et d&amp;#8217;avoir une arborescence des différentes données que vous allez impacter.&lt;/p&gt;&#xA;&lt;h2&gt;Installation d&amp;#8217;un moteur et de l&amp;#8217;extension :&lt;/h2&gt;&#xA;&lt;p&gt;Pour cet article, j&amp;#8217;ai choisi d&amp;#8217;utiliser PostgreSQL en version 16 pour tester si l&amp;#8217;extension fonctionnait toujours.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root:~#sudo apt update &amp;amp;amp;&amp;amp;amp; sudo apt upgrade&#xD;&#xA;root:~#sudo sh -c &#39;echo &amp;quot;deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main&amp;quot; &amp;amp;gt; /etc/apt/sources.list.d/pgdg.list&#39;&#xD;&#xA;root:~#wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -&#xD;&#xA;root:~#sudo apt -y update&#xD;&#xA;root:~#sudo apt -y install postgresql-16&lt;/pre&gt;&#xA;&lt;p&gt;Notre moteur de base de données est installé, à présent il nous faut télécharger les sources de l&amp;#8217;extension, et l&amp;#8217;installer.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root:~# git clone https://github.com/trlorenz/PG-recursively_delete.git&#xD;&#xA;Cloning into &#39;PG-recursively_delete&#39;...&#xD;&#xA;remote: Enumerating objects: 155, done.&#xD;&#xA;remote: Counting objects: 100% (95/95), done.&#xD;&#xA;remote: Compressing objects: 100% (62/62), done.&#xD;&#xA;remote: Total 155 (delta 41), reused 74 (delta 29), pack-reused 60&#xD;&#xA;Receiving objects: 100% (155/155), 38.55 KiB | 3.21 MiB/s, done.&#xD;&#xA;Resolving deltas: 100% (70/70), done.&#xD;&#xA;root:~# cd PG-recursively_delete/&#xD;&#xA;root:~/PG-recursively_delete# make&#xD;&#xA;cp sql/recursively_delete.sql sql/recursively_delete--0.1.5.sql&#xD;&#xA;root:~/PG-recursively_delete# sudo make install&#xD;&#xA;/bin/mkdir -p &#39;/usr/share/postgresql/16/extension&#39;&#xD;&#xA;/bin/mkdir -p &#39;/usr/share/postgresql/16/extension&#39;&#xD;&#xA;/bin/mkdir -p &#39;/usr/share/doc/postgresql-doc-16/extension&#39;&#xD;&#xA;/usr/bin/install -c -m 644 .//recursively_delete.control &#39;/usr/share/postgresql/16/extension/&#39;&#xD;&#xA;/usr/bin/install -c -m 644 .//sql/recursively_delete--0.1.5.sql  &#39;/usr/share/postgresql/16/extension/&#39;&#xD;&#xA;/usr/bin/install -c -m 644 .//doc/changelog.md &#39;/usr/share/doc/postgresql-doc-16/extension/&#39;&lt;/pre&gt;&#xA;&lt;h2&gt;Mise en place de l&amp;#8217;environnement&lt;/h2&gt;&#xA;&lt;p&gt;Pour illustrer le fonctionnement de l&amp;#8217;extension, je vais utiliser la base de données de démonstration dvdrental. Nous allons donc la télécharger et la charger dans une toute nouvelle base de données que nous aurons créée sur notre instance fraîchement créée :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt; postgres:~$ wget https://www.postgresqltutorial.com/wp-content/uploads/2019/05/dvdrental.zip&#xD;&#xA;--2024-03-11 08:34:54--  https://www.postgresqltutorial.com/wp-content/uploads/2019/05/dvdrental.zip&#xD;&#xA;Resolving www.postgresqltutorial.com (www.postgresqltutorial.com)... 104.21.2.174, 172.67.129.129, 2606:4700:3037::6815:2ae, ...&#xD;&#xA;Connecting to www.postgresqltutorial.com (www.postgresqltutorial.com)|104.21.2.174|:443... connected.&#xD;&#xA;HTTP request sent, awaiting response... 200 OK&#xD;&#xA;Length: 550906 (538K) [application/zip]&#xD;&#xA;Saving to: ‘dvdrental.zip’&#xD;&#xA;&#xD;&#xA;dvdrental.zip                                               100%[========================================================================================================================================&amp;gt;] 537.99K  --.-KB/s    in 0.01s&#xD;&#xA;&#xD;&#xA;2024-03-11 08:34:54 (46.0 MB/s) - ‘dvdrental.zip’ saved [550906/550906]  &lt;/pre&gt;&#xA;&lt;p&gt;Une fois téléchargée, on la dezippe :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres:~$ ls -l&#xD;&#xA;total 544&#xD;&#xA;drwxr-xr-x 3 postgres postgres   4096 Mar 11 08:30 16&#xD;&#xA;-rw-rw-r-- 1 postgres postgres 550906 May 12  2019 dvdrental.zip&#xD;&#xA;postgres:~$ unzip dvdrental.zip&#xD;&#xA;Archive:  dvdrental.zip&#xD;&#xA;  inflating: dvdrental.tar&#xD;&#xA;postgres:~$ ls -l&#xD;&#xA;total 3316&#xD;&#xA;drwxr-xr-x 3 postgres postgres    4096 Mar 11 08:30 16&#xD;&#xA;-rw-rw-r-- 1 postgres postgres 2835456 May 12  2019 dvdrental.tar&#xD;&#xA;-rw-rw-r-- 1 postgres postgres  550906 May 12  2019 dvdrental.zip&lt;/pre&gt;&#xA;&lt;p&gt;On créé la base de données pour accueillir nos données, et on charge le fichier de sauvegarde :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres:~$ psql&#xD;&#xA;psql (16.2 (Ubuntu 16.2-1.pgdg22.04+1))&#xD;&#xA;Type &amp;quot;help&amp;quot; for help. &lt;/pre&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;postgres=# create database dvdrental;&#xD;&#xA;CREATE DATABASE&#xD;&#xA;postgres=# \l&#xD;&#xA;                                                   List of databases&#xD;&#xA;   Name    |  Owner   | Encoding | Locale Provider | Collate |  Ctype  | ICU Locale | ICU Rules |   Access privileges&#xD;&#xA;-----------+----------+----------+-----------------+---------+---------+------------+-----------+-----------------------&#xD;&#xA; dvdrental | postgres | UTF8     | libc            | C.UTF-8 | C.UTF-8 |            |           |&#xD;&#xA; postgres  | postgres | UTF8     | libc            | C.UTF-8 | C.UTF-8 |            |           |&#xD;&#xA; template0 | postgres | UTF8     | libc            | C.UTF-8 | C.UTF-8 |            |           | =c/postgres          +&#xD;&#xA;           |          |          |                 |         |         |            |           | postgres=CTc/postgres&#xD;&#xA; template1 | postgres | UTF8     | libc            | C.UTF-8 | C.UTF-8 |            |           | =c/postgres          +&#xD;&#xA;           |          |          |                 |         |         |            |           | postgres=CTc/postgres&#xD;&#xA;(4 rows)&lt;/pre&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres:~$ pg_restore -U postgres -d dvdrental dvdrental.tar&lt;/pre&gt;&#xA;&lt;p&gt;Une fois que c&amp;#8217;est fait, on peut se connecter pour vérifier que tout a bien été chargé :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres:~$ psql&#xD;&#xA;psql (16.2 (Ubuntu 16.2-1.pgdg22.04+1))&#xD;&#xA;Type &amp;quot;help&amp;quot; for help.&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;postgres=# \c dvdrental&#xD;&#xA;You are now connected to database &amp;quot;dvdrental&amp;quot; as user &amp;quot;postgres&amp;quot;.&#xD;&#xA;dvdrental=# \dt&#xD;&#xA;             List of relations&#xD;&#xA; Schema |     Name      | Type  |  Owner&#xD;&#xA;--------+---------------+-------+----------&#xD;&#xA; public | actor         | table | postgres&#xD;&#xA; public | address       | table | postgres&#xD;&#xA; public | category      | table | postgres&#xD;&#xA; public | city          | table | postgres&#xD;&#xA; public | country       | table | postgres&#xD;&#xA; public | customer      | table | postgres&#xD;&#xA; public | film          | table | postgres&#xD;&#xA; public | film_actor    | table | postgres&#xD;&#xA; public | film_category | table | postgres&#xD;&#xA; public | inventory     | table | postgres&#xD;&#xA; public | language      | table | postgres&#xD;&#xA; public | payment       | table | postgres&#xD;&#xA; public | rental        | table | postgres&#xD;&#xA; public | staff         | table | postgres&#xD;&#xA; public | store         | table | postgres&#xD;&#xA;(15 rows)&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;h2&gt;L&amp;#8217;extension :&lt;/h2&gt;&#xA;&lt;p&gt;Pour tester l&amp;#8217;extension, nous allons essayer de supprimer un client de la liste des clients.&lt;br /&gt;&#xA;Le schéma de la base de données dvdrental est le suivant :&lt;br /&gt;&#xA;&lt;a href=&#34;https://blog.capdata.fr/wp-content/uploads/2024/03/dvd-rental-sample-database-diagram.png&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;alignnone wp-image-10507&#34; src=&#34;https://blog.capdata.fr/wp-content/uploads/2024/03/dvd-rental-sample-database-diagram-238x300.png&#34; alt=&#34;&#34; width=&#34;336&#34; height=&#34;424&#34; srcset=&#34;https://blog.capdata.fr/wp-content/uploads/2024/03/dvd-rental-sample-database-diagram-238x300.png 238w, https://blog.capdata.fr/wp-content/uploads/2024/03/dvd-rental-sample-database-diagram.png 730w&#34; sizes=&#34;(max-width: 336px) 100vw, 336px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Si l&amp;#8217;on observe attentivement le schéma ci-dessus, en voulant supprimer une donnée de la table customer, cela devrait avoir un impact sur les tables rental et payment qui sont directement liées à la table customer. De plus, ces deux tables sont également liées entre elles, ce qui signifie que supprimer une donnée dans la table rental modifiera nécessairement la table payment.&lt;/p&gt;&#xA;&lt;p&gt;Prenons l&amp;#8217;exemple de la suppression du client numéro 1. Si nous recherchons les dépendances de ce client dans la table rental, nous obtenons 32 lignes associées au customer_id 1 :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt; dvdrental=# select count(*) from rental where customer_id = 1;&#xD;&#xA; count&#xD;&#xA;-------&#xD;&#xA;    32&#xD;&#xA;(1 row)&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Et si nous allons maintenant chercher toutes les occurrences de ce même client dans la table des paiements, nous obtenons :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select count(*) from payment where customer_id = 1;&#xD;&#xA; count&#xD;&#xA;-------&#xD;&#xA;    30&#xD;&#xA;(1 row) &lt;/pre&gt;&#xA;&lt;p&gt;À présent, avec l&amp;#8217;extension recursive_delete, nous allons chercher à obtenir le schéma de suppression pour vérifier si les résultats que nous avons trouvés sont corrects :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# create extension recursively_delete;&#xD;&#xA;CREATE EXTENSION&#xD;&#xA;dvdrental=# \set VERBOSITY terse&#xD;&#xA;dvdrental=# select recursively_delete(&#39;customer&#39;, 1);&#xD;&#xA;INFO:  DAMAGE PREVIEW (recursively_delete v0.1.5)&#xD;&#xA;INFO:&#xD;&#xA;INFO:          1     customer&#xD;&#xA;INFO:         30 r   | payment.[&amp;quot;customer_id&amp;quot;]&#xD;&#xA;INFO:         32 r   | rental.[&amp;quot;customer_id&amp;quot;]&#xD;&#xA;INFO:          ~ n   | | payment.[&amp;quot;rental_id&amp;quot;]&#xD;&#xA;INFO:&#xD;&#xA; recursively_delete&#xD;&#xA;--------------------&#xD;&#xA;                  0&#xD;&#xA;(1 row) &lt;/pre&gt;&#xA;&lt;p&gt;La fonction de suppression de l&amp;#8217;extension fonctionne avec les paramètres suivants :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Le nom de la table en premier paramètre&lt;/li&gt;&#xA;&lt;li&gt;La clause WHERE du DELETE en second paramètre, qui peut être de multiples types (des entiers, des chaînes de caractères, des listes, des UUID&amp;#8230;)&lt;/li&gt;&#xA;&lt;li&gt;Le mode de fonctionnement de l&amp;#8217;extension, par défaut à false, qui indique au programme de ne pas effectuer les suppressions, mais simplement de dresser le schéma. Le passer à true entraînerait les suppressions.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Pour interpréter le schéma, voici la composition de chaque nœud :&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;La première colonne correspond au nombre de lignes&lt;/li&gt;&#xA;&lt;li&gt;Le type de contraintes qui expliquent l&amp;#8217;implication de la table dans le schéma : &amp;#8216;a&amp;#8217;, &amp;#8216;r&amp;#8217;, &amp;#8216;c&amp;#8217;, &amp;#8216;n&amp;#8217;, ou &amp;#8216;d&amp;#8217; (&amp;#8216;no action&amp;#8217;, &amp;#8216;restrict&amp;#8217;, &amp;#8216;cascade&amp;#8217;, &amp;#8216;set null&amp;#8217;, ou &amp;#8216;set default&amp;#8217;)&lt;/li&gt;&#xA;&lt;li&gt;Un indicateur de si oui ou non le champ en question participe à une référence circulaire.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;En examinant le résultat renvoyé par notre extension, nous constatons que nous obtenons les mêmes résultats : 30 lignes pour payment et 32 lignes pour rental. Nous obtenons également une dernière ligne qui nous indique que payment possède une référence à rental dans sa structure, et qu&amp;#8217;il va lui aussi procéder à des suppressions en fonction du rental_id. Cela pourrait être par exemple le cas où une location effectuée par un client serait payée par un autre.&lt;/p&gt;&#xA;&lt;p&gt;Pour effectuer la suppression, il suffit simplement de préciser true en troisième paramètre.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select recursively_delete(&#39;customer&#39;, 1, true);&#xD;&#xA; recursively_delete&#xD;&#xA;--------------------&#xD;&#xA;                  1&#xD;&#xA;(1 row)&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Et à présent, si nous consultons notre table customer, la ligne 1 a disparu, ainsi que toutes les lignes qui la concernent dans d&amp;#8217;autres tables également.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;&#xD;&#xA;dvdrental=# select count(*) from customer where customer_id = 1;&#xD;&#xA; count&#xD;&#xA;-------&#xD;&#xA;     0&#xD;&#xA;(1 row)&#xD;&#xA;&#xD;&#xA;dvdrental=# select count(*) from rental where customer_id = 1;&#xD;&#xA; count&#xD;&#xA;-------&#xD;&#xA;     0&#xD;&#xA;(1 row)&#xD;&#xA;&#xD;&#xA;dvdrental=# select count(*) from payment where customer_id = 1;&#xD;&#xA; count&#xD;&#xA;-------&#xD;&#xA;     0&#xD;&#xA;(1 row)&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Nos lignes ont bel et bien disparu.&lt;/p&gt;&#xA;&lt;p&gt;Cette extension fonctionne également avec les clés primaires composites. Il suffit de préciser entre crochets les deux valeurs de notre clé primaire, et le tour est joué.&lt;/p&gt;&#xA;&lt;p&gt;Pour illustrer davantage le fonctionnement, je vais réaliser une suppression sur la table film. Cette table possède quelques dépendances.&lt;br /&gt;&#xA;Disons que nous souhaitons supprimer les 10 premiers films de notre liste, car ils ne sont plus loués étant trop anciens (plus personne n&amp;#8217;a de magnétoscope pour regarder de bonnes vieilles cassettes !).&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select recursively_delete(&#39;film&#39;, (SELECT array_agg(film_id) FROM film  WHERE film_id between 1 and 10));&#xD;&#xA;INFO:  DAMAGE PREVIEW (recursively_delete v0.1.5)&#xD;&#xA;INFO:&#xD;&#xA;INFO:         10     film&#xD;&#xA;INFO:         62 r   | film_actor.[&amp;quot;film_id&amp;quot;]&#xD;&#xA;INFO:         10 r   | film_category.[&amp;quot;film_id&amp;quot;]&#xD;&#xA;INFO:         52 r   | inventory.[&amp;quot;film_id&amp;quot;]&#xD;&#xA;INFO:        165 r   | | rental.[&amp;quot;inventory_id&amp;quot;]&#xD;&#xA;INFO:          ~ n   | | | payment.[&amp;quot;rental_id&amp;quot;]&#xD;&#xA;INFO:&#xD;&#xA; recursively_delete&#xD;&#xA;--------------------&#xD;&#xA;                  0&#xD;&#xA;(1 row)&lt;/pre&gt;&#xA;&lt;p&gt;Nous observons donc que notre suppression de 10 films (dans un array) entraîne la suppression d&amp;#8217;acteurs, de catégories, d&amp;#8217;inventaires, et par extension, de locations et de paiements&lt;/p&gt;&#xA;&lt;h2&gt;Conclusion :&lt;/h2&gt;&#xA;&lt;p&gt;En conclusion, l&amp;#8217;extension pg_recursively_delete offre une solution pratique pour supprimer récursivement des données dans PostgreSQL, simplifiant ainsi les tâches de maintenance et de nettoyage des bases de données. Cependant, malgré ses avantages, cette extension présente certaines limites en termes de performances.&lt;/p&gt;&#xA;&lt;p&gt;L&amp;#8217;une des principales limitations réside dans le fait que la suppression récursive peut entraîner des opérations coûteuses en termes de temps d&amp;#8217;exécution, surtout lorsque les données concernées sont fortement imbriquées ou que la base de données est volumineuse. Les performances peuvent également être affectées lorsque les tables impliquées dans la suppression ont des index complexes ou des contraintes de clés étrangères.&lt;/p&gt;&#xA;&lt;p&gt;De plus, il est crucial de reconnaître les risques associés à la suppression de données ayant de nombreuses dépendances dans une base de données. La suppression inconsidérée de telles données peut entraîner des incohérences dans la base de données, des erreurs d&amp;#8217;intégrité référentielle et même des pertes de données importantes. Il est donc essentiel de procéder avec prudence et de prendre en compte toutes les implications potentielles avant d&amp;#8217;utiliser cette extension.&lt;/p&gt;&#xA;&lt;p&gt;En résumé, bien que l&amp;#8217;extension pg_recursively_delete offre une fonctionnalité utile pour gérer les opérations de suppression récursive dans PostgreSQL, il est essentiel pour les utilisateurs de comprendre ses limites en termes de performances et les risques potentiels associés à la suppression de données avec de nombreuses dépendances. Une utilisation judicieuse et une évaluation minutieuse des scénarios d&amp;#8217;utilisation sont indispensables pour garantir l&amp;#8217;intégrité et la performance de la base de données.&lt;strong&gt;Continuez votre lecture sur le blog :&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul class=&#34;similar-posts&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/pg_dirtyread-ou-comment-reparer-facilement-un-delete-sauvage/&#34; rel=&#34;bookmark&#34; title=&#34;27 mars 2024&#34;&gt;pg_dirtyread où comment réparer facilement un delete sauvage&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/pyrseas-et-postgresql-comparer-facilement-des-schema-de-base-de-donnees/&#34; rel=&#34;bookmark&#34; title=&#34;3 janvier 2023&#34;&gt;Pyrseas et Postgresql : Comparer facilement des schémas de base de données&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-planifier-une-tache-avec-pg_cron/&#34; rel=&#34;bookmark&#34; title=&#34;24 septembre 2019&#34;&gt;PostgreSQL : planifier une tâche avec pg_cron&lt;/a&gt; (Emmanuel RAMI) [Non classéPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-anonymizer/&#34; rel=&#34;bookmark&#34; title=&#34;7 juillet 2022&#34;&gt;PostgreSQL Anonymizer&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/pseudonymisation-postgresql/&#34; rel=&#34;bookmark&#34; title=&#34;30 janvier 2024&#34;&gt;Pseudonymiser vos bases PostgreSQL&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;!-- Similar Posts took 1.925 ms --&gt;&lt;/p&gt;&#xA;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10505&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10505&amp;#038;title=pg_recursively_delete%20%3A%20Simplifier%20les%20suppressions%20r%C3%A9cursives&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=pg_recursively_delete%20%3A%20Simplifier%20les%20suppressions%20r%C3%A9cursives&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10505&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/pg_recursively_delete-simplifier-les-suppressions-recursives/&#34;&gt;pg_recursively_delete : Simplifier les suppressions récursives&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.capdata.fr/index.php/pg_recursively_delete-simplifier-les-suppressions-recursives/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Si vous avez été amené au fil de votre carrière à manipuler de gros volumes de données contenus dans plusieurs tables possédant des références croisées entre elles, dépendantes d&amp;#8217;autres tables, qui elles-mêmes dépendent d&amp;#8217;autres tables, vous savez à quel point&amp;#8230; &lt;a href=&#34;https://blog.capdata.fr/index.php/pg_recursively_delete-simplifier-les-suppressions-recursives/&#34; class=&#34;more-link&#34;&gt;Continuer la lecture &lt;span class=&#34;meta-nav&#34;&gt;&amp;#8594;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/pg_recursively_delete-simplifier-les-suppressions-recursives/&#34;&gt;pg_recursively_delete : Simplifier les suppressions récursives&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Emmanuel RAMI</name>
    </author>
  </entry>
  <entry>
    <title>pg_dirtyread où comment réparer facilement un delete sauvage</title>
    <updated>2024-03-27T14:24:14Z</updated>
    <id>tag:blog.capdata.fr,2024-03-27:/index.php/pg_dirtyread-ou-comment-reparer-facilement-un-delete-sauvage/</id>
    <content type="html">&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10494&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10494&amp;#038;title=pg_dirtyread%20o%C3%B9%20comment%20r%C3%A9parer%20facilement%20un%20delete%20sauvage&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=pg_dirtyread%20o%C3%B9%20comment%20r%C3%A9parer%20facilement%20un%20delete%20sauvage&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10494&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;Imaginez le scénario : nous sommes vendredi soir, en fin de journée, et pour une raison quelconque, un développeur qui a eu une semaine fatiguante se dit qu&amp;#8217;il serait bien de supprimer les lignes qu&amp;#8217;il a modifiées dans la base de données de développement, afin que lundi il puisse reprendre le travail à zéro. Il se connecte donc et, à l&amp;#8217;aide d&amp;#8217;une commande de suppression sur la table concernée, il efface ses quelques lignes&amp;#8230; Avant de se rendre compte qu&amp;#8217;il vient de le faire en production. &lt;/p&gt;&#xA;&lt;p&gt;Cela nous est arrivé à tous, au moins une fois dans notre carrière. Un manque d&amp;#8217;attention, une absence de sécurisation, une erreur est si vite arrivée. Oui, mais voilà. La solution pour pallier à ce genre de problèmes, c&amp;#8217;est généralement de recharger une sauvegarde de la base de données, pour ne surtout pas perdre cette ligne essentielle des paiements enregistrés&amp;#8230; C&amp;#8217;est long. La base est volumineuse&amp;#8230; Et puis, nous n&amp;#8217;avons pas un plan de sauvegarde fiable&amp;#8230; Au secours !&lt;/p&gt;&#xA;&lt;p&gt;Avant de céder à la panique, peut-être existe-t-il une autre solution à votre problème.&lt;/p&gt;&#xA;&lt;p&gt;L&amp;#8217;extension pg_dirtyread pourrait être une idée. Cette extension permet aux utilisateurs de lire des données supprimées dans les tables, ce qui est normalement impossible en temps normal. Cette extension est disponible gratuitement sur GIT, et elle peut vous sauver la vie dans le scénario évoqué juste avant. Nous allons voir ensemble comment l&amp;#8217;utiliser :&lt;/p&gt;&#xA;&lt;h2&gt;Installer PostgreSQL et pg_dirtyread :&lt;/h2&gt;&#xA;&lt;p&gt;C&amp;#8217;est assez rare pour le souligner, mais pg_dirtyread possède son propre package Ubuntu tout inclus. Ce package, si vous pouvez vous en servir, contient l&amp;#8217;installation du moteur, l&amp;#8217;installation des dépendances de développement de PostgreSQL, le client, et l&amp;#8217;extension elle-même. Cela simplifie grandement le travail. Vous n&amp;#8217;avez qu&amp;#8217;à télécharger le package dans la version qui vous intéresse. Pour cet article, j&amp;#8217;ai choisi de télécharger et installer la dernière version de PostgreSQL ainsi que la dernière version de l&amp;#8217;extension.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt; root:~/pg_dirtyread# sudo apt -y install postgresql-16-dirtyread&#xD;&#xA;Reading package lists... Done&#xD;&#xA;Building dependency tree... Done&#xD;&#xA;Reading state information... Done&#xD;&#xA;The following additional packages will be installed:&#xD;&#xA;  libcommon-sense-perl libjson-perl libjson-xs-perl libpq5 libsensors-config libsensors5 libtypes-serialiser-perl postgresql-16 postgresql-client-16 postgresql-client-common postgresql-common ssl-cert sysstat&#xD;&#xA;Suggested packages:&#xD;&#xA;  lm-sensors postgresql-doc-16 isag&#xD;&#xA;The following NEW packages will be installed:&#xD;&#xA;  libcommon-sense-perl libjson-perl libjson-xs-perl libpq5 libsensors-config libsensors5 libtypes-serialiser-perl postgresql-16 postgresql-16-dirtyread postgresql-client-16 postgresql-client-common postgresql-common ssl-cert sysstat&#xD;&#xA;0 upgraded, 14 newly installed, 0 to remove and 0 not upgraded.&#xD;&#xA;Need to get 21.3 MB of archives.&#xD;&#xA;...&#xD;&#xA;Running kernel seems to be up-to-date.&#xD;&#xA;&#xD;&#xA;No services need to be restarted.&#xD;&#xA;&#xD;&#xA;No containers need to be restarted.&#xD;&#xA;&#xD;&#xA;No user sessions are running outdated binaries.&#xD;&#xA;&#xD;&#xA;No VM guests are running outdated hypervisor (qemu) binaries on this host.&lt;/pre&gt;&#xA;&lt;p&gt;Il existe une autre méthode d&amp;#8217;installation, la plus classique. Il suffit de télécharger les sources depuis le dépôt GIT et de les compiler sur votre machine en utilisant les commandes &amp;#8216;make&amp;#8217; et &amp;#8216;make install&amp;#8217;.&lt;/p&gt;&#xA;&lt;h2&gt;Mise en place d&amp;#8217;un environnement :&lt;/h2&gt;&#xA;&lt;p&gt;Pour notre test, j&amp;#8217;ai choisit de me servir encore une fois de la base de données dvdrental, accessible à tous. Il me faut donc la télécharger :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt; postgres:~$ wget https://www.postgresqltutorial.com/wp-content/uploads/2019/05/dvdrental.zip&#xD;&#xA;--2024-03-11 08:34:54--  https://www.postgresqltutorial.com/wp-content/uploads/2019/05/dvdrental.zip&#xD;&#xA;Resolving www.postgresqltutorial.com (www.postgresqltutorial.com)... 104.21.2.174, 172.67.129.129, 2606:4700:3037::6815:2ae, ...&#xD;&#xA;Connecting to www.postgresqltutorial.com (www.postgresqltutorial.com)|104.21.2.174|:443... connected.&#xD;&#xA;HTTP request sent, awaiting response... 200 OK&#xD;&#xA;Length: 550906 (538K) [application/zip]&#xD;&#xA;Saving to: ‘dvdrental.zip’&#xD;&#xA;&#xD;&#xA;dvdrental.zip                                               100%[========================================================================================================================================&amp;gt;] 537.99K  --.-KB/s    in 0.01s&#xD;&#xA;&#xD;&#xA;2024-03-11 08:34:54 (46.0 MB/s) - ‘dvdrental.zip’ saved [550906/550906]  &lt;/pre&gt;&#xA;&lt;p&gt;Une fois téléchargée, on la dezippe :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres:~$ ls -l&#xD;&#xA;total 544&#xD;&#xA;drwxr-xr-x 3 postgres postgres   4096 Mar 11 08:30 16&#xD;&#xA;-rw-rw-r-- 1 postgres postgres 550906 May 12  2019 dvdrental.zip&#xD;&#xA;postgres:~$ unzip dvdrental.zip&#xD;&#xA;Archive:  dvdrental.zip&#xD;&#xA;  inflating: dvdrental.tar&#xD;&#xA;postgres:~$ ls -l&#xD;&#xA;total 3316&#xD;&#xA;drwxr-xr-x 3 postgres postgres    4096 Mar 11 08:30 16&#xD;&#xA;-rw-rw-r-- 1 postgres postgres 2835456 May 12  2019 dvdrental.tar&#xD;&#xA;-rw-rw-r-- 1 postgres postgres  550906 May 12  2019 dvdrental.zip&lt;/pre&gt;&#xA;&lt;p&gt;On créé la base de données pour accueillir nos données, et on charge le fichier de sauvegarde :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres:~$ psql&#xD;&#xA;psql (16.2 (Ubuntu 16.2-1.pgdg22.04+1))&#xD;&#xA;Type &amp;quot;help&amp;quot; for help. &lt;/pre&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;postgres=# create database dvdrental;&#xD;&#xA;CREATE DATABASE&#xD;&#xA;postgres=# \l&#xD;&#xA;                                                   List of databases&#xD;&#xA;   Name    |  Owner   | Encoding | Locale Provider | Collate |  Ctype  | ICU Locale | ICU Rules |   Access privileges&#xD;&#xA;-----------+----------+----------+-----------------+---------+---------+------------+-----------+-----------------------&#xD;&#xA; dvdrental | postgres | UTF8     | libc            | C.UTF-8 | C.UTF-8 |            |           |&#xD;&#xA; postgres  | postgres | UTF8     | libc            | C.UTF-8 | C.UTF-8 |            |           |&#xD;&#xA; template0 | postgres | UTF8     | libc            | C.UTF-8 | C.UTF-8 |            |           | =c/postgres          +&#xD;&#xA;           |          |          |                 |         |         |            |           | postgres=CTc/postgres&#xD;&#xA; template1 | postgres | UTF8     | libc            | C.UTF-8 | C.UTF-8 |            |           | =c/postgres          +&#xD;&#xA;           |          |          |                 |         |         |            |           | postgres=CTc/postgres&#xD;&#xA;(4 rows)&lt;/pre&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres:~$ pg_restore -U postgres -d dvdrental dvdrental.tar&lt;/pre&gt;&#xA;&lt;p&gt;Une fois que c&amp;#8217;est fait, on peut se connecter pour vérifier que tout a bien été chargé :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres:~$ psql&#xD;&#xA;psql (16.2 (Ubuntu 16.2-1.pgdg22.04+1))&#xD;&#xA;Type &amp;quot;help&amp;quot; for help.&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;postgres=# \c dvdrental&#xD;&#xA;You are now connected to database &amp;quot;dvdrental&amp;quot; as user &amp;quot;postgres&amp;quot;.&#xD;&#xA;dvdrental=# \dt&#xD;&#xA;             List of relations&#xD;&#xA; Schema |     Name      | Type  |  Owner&#xD;&#xA;--------+---------------+-------+----------&#xD;&#xA; public | actor         | table | postgres&#xD;&#xA; public | address       | table | postgres&#xD;&#xA; public | category      | table | postgres&#xD;&#xA; public | city          | table | postgres&#xD;&#xA; public | country       | table | postgres&#xD;&#xA; public | customer      | table | postgres&#xD;&#xA; public | film          | table | postgres&#xD;&#xA; public | film_actor    | table | postgres&#xD;&#xA; public | film_category | table | postgres&#xD;&#xA; public | inventory     | table | postgres&#xD;&#xA; public | language      | table | postgres&#xD;&#xA; public | payment       | table | postgres&#xD;&#xA; public | rental        | table | postgres&#xD;&#xA; public | staff         | table | postgres&#xD;&#xA; public | store         | table | postgres&#xD;&#xA;(15 rows)&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;h2&gt;Premier scénario : Suppression de lignes dans une table&lt;/h2&gt;&#xA;&lt;p&gt;Prenons ici le cas de la situation décrite dans l&amp;#8217;introduction. Une ou plusieurs lignes ont été supprimées d&amp;#8217;une ou plusieurs tables. Recharger l&amp;#8217;intégralité d&amp;#8217;une base de données juste pour ces quelques lignes, aussi essentielles soient-elles, demande un investissement énorme.&lt;/p&gt;&#xA;&lt;p&gt;Pour notre exemple, je vais supprimer un certain nombre de lignes de la table &amp;#8216;payment&amp;#8217;.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select * from payment limit 10;&#xD;&#xA; payment_id | customer_id | staff_id | rental_id | amount |        payment_date&#xD;&#xA;------------+-------------+----------+-----------+--------+----------------------------&#xD;&#xA;      17503 |         341 |        2 |      1520 |   7.99 | 2007-02-15 22:25:46.996577&#xD;&#xA;      17504 |         341 |        1 |      1778 |   1.99 | 2007-02-16 17:23:14.996577&#xD;&#xA;      17505 |         341 |        1 |      1849 |   7.99 | 2007-02-16 22:41:45.996577&#xD;&#xA;      17506 |         341 |        2 |      2829 |   2.99 | 2007-02-19 19:39:56.996577&#xD;&#xA;      17507 |         341 |        2 |      3130 |   7.99 | 2007-02-20 17:31:48.996577&#xD;&#xA;      17508 |         341 |        1 |      3382 |   5.99 | 2007-02-21 12:33:49.996577&#xD;&#xA;      17509 |         342 |        2 |      2190 |   5.99 | 2007-02-17 23:58:17.996577&#xD;&#xA;      17510 |         342 |        1 |      2914 |   5.99 | 2007-02-20 02:11:44.996577&#xD;&#xA;      17511 |         342 |        1 |      3081 |   2.99 | 2007-02-20 13:57:39.996577&#xD;&#xA;      17512 |         343 |        2 |      1547 |   4.99 | 2007-02-16 00:10:50.996577&#xD;&#xA;(10 rows)&#xD;&#xA;&#xD;&#xA;dvdrental=# delete from payment where payment_id between 17523 and 17532;&#xD;&#xA;DELETE 10&lt;/pre&gt;&#xA;&lt;div class=&#34;flex-1 overflow-hidden&#34;&gt;&#xA;&lt;div class=&#34;react-scroll-to-bottom--css-toqmf-79elbk h-full&#34;&gt;&#xA;&lt;div class=&#34;react-scroll-to-bottom--css-toqmf-1n7m0yu&#34;&gt;&#xA;&lt;div class=&#34;flex flex-col text-sm pb-9&#34;&gt;&#xA;&lt;div class=&#34;w-full text-token-text-primary&#34; data-testid=&#34;conversation-turn-17&#34;&gt;&#xA;&lt;div class=&#34;px-4 py-2 justify-center text-base md:gap-6 m-auto&#34;&gt;&#xA;&lt;div class=&#34;flex flex-1 text-base mx-auto gap-3 md:px-5 lg:px-1 xl:px-5 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem] group final-completion&#34;&gt;&#xA;&lt;div class=&#34;relative flex w-full flex-col agent-turn&#34;&gt;&#xA;&lt;div class=&#34;flex-col gap-1 md:gap-3&#34;&gt;&#xA;&lt;div class=&#34;flex flex-grow flex-col max-w-full&#34;&gt;&#xA;&lt;div class=&#34;min-h-[20px] text-message flex flex-col items-start gap-3 whitespace-pre-wrap break-words [.text-message+&amp;amp;]:mt-5 overflow-x-auto&#34; data-message-author-role=&#34;assistant&#34; data-message-id=&#34;107c8c40-0671-4f34-88f1-895d9fe2648b&#34;&gt;&#xA;&lt;div class=&#34;markdown prose w-full break-words dark:prose-invert light&#34;&gt;&#xA;&lt;p&gt;La bêtise est faite, les données ont disparu. Lorsque j&amp;#8217;essaie de les requêter pour voir si elles sont encore là, je me heurte à la réalité : elles ont été supprimées.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select * from payment where payment_id between 17523 and 17532;&#xD;&#xA; payment_id | customer_id | staff_id | rental_id | amount | payment_date&#xD;&#xA;------------+-------------+----------+-----------+--------+--------------&#xD;&#xA;(0 rows)&lt;/pre&gt;&#xA;&lt;p&gt;La première chose à faire, en toute urgence, c&amp;#8217;est de désactiver l&amp;#8217;auto-vacuum. C&amp;#8217;est votre pire ennemi dans notre scénario. C&amp;#8217;est même la première chose à faire lorsque vous vous rendez compte que l&amp;#8217;erreur a été commise :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# alter table payment set (autovacuum_enabled=false);&lt;/pre&gt;&#xA;&lt;p&gt;Si l&amp;#8217;auto-vacuum est passé sur la table avant que vous n&amp;#8217;ayez eu le temps de le désactiver, malheureusement, pg_dirtyread ne vous servira plus à rien. Une fois cela fait, on initialise l&amp;#8217;extension :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# CREATE EXTENSION pg_dirtyread;&#xD;&#xA;CREATE EXTENSION&lt;/pre&gt;&#xA;&lt;p&gt;L&amp;#8217;extension étant maintenant créée, on peut requêter les données perdues. La syntaxe d&amp;#8217;utilisation exige que vous rappeliez le schéma de la table en question au moment de requêter les lignes supprimées. Vous pouvez choisir de ne pas inclure toutes les colonnes, ou même d&amp;#8217;en ajouter, comme nous le verrons à la fin de l&amp;#8217;article. Dans notre exemple, la requête pour consulter les données effacées sera la suivante :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select * from pg_dirtyread(&#39;payment&#39;) AS t(payment_id integer, customer_id smallint, staff_id smallint, rental_id integer, amount numeric(5,2), payment_date timestamp without time zone);&#xD;&#xA; payment_id | customer_id | staff_id | rental_id | amount |        payment_date&#xD;&#xA;------------+-------------+----------+-----------+--------+----------------------------&#xD;&#xA;      17523 |         345 |        1 |      1457 |   4.99 | 2007-02-15 18:34:15.996577&#xD;&#xA;      17524 |         345 |        2 |      1550 |   0.99 | 2007-02-16 00:27:01.996577&#xD;&#xA;      17525 |         345 |        2 |      2766 |   4.99 | 2007-02-19 16:13:41.996577&#xD;&#xA;      17526 |         346 |        1 |      1994 |   5.99 | 2007-02-17 09:35:32.996577&#xD;&#xA;      17527 |         346 |        2 |      3372 |   2.99 | 2007-02-21 12:02:45.996577&#xD;&#xA;      17528 |         346 |        1 |      3421 |   2.99 | 2007-02-21 15:51:24.996577&#xD;&#xA;      17529 |         347 |        2 |      1711 |   8.99 | 2007-02-16 12:40:18.996577&#xD;&#xA;      17530 |         347 |        2 |      2274 |   0.99 | 2007-02-18 04:59:41.996577&#xD;&#xA;      17531 |         347 |        1 |      3026 |   4.99 | 2007-02-20 10:16:26.996577&#xD;&#xA;      17532 |         347 |        1 |      3092 |   8.99 | 2007-02-20 14:33:08.996577&#xD;&#xA;      17533 |         347 |        1 |      3326 |   7.99 | 2007-02-21 07:33:16.996577&#xD;&#xA;      17534 |         348 |        1 |      1654 |   2.99 | 2007-02-16 08:11:14.996577&#xD;&#xA;      17535 |         348 |        1 |      2041 |   8.99 | 2007-02-17 12:47:26.996577&#xD;&#xA;      17536 |         348 |        2 |      2499 |   0.99 | 2007-02-18 21:30:02.996577&lt;/pre&gt;&#xA;&lt;p&gt;On voit bien apparaître en début de liste nos lignes qui sont censées ne plus exister. Cela nous permet éventuellement d&amp;#8217;extraire les données qu&amp;#8217;elles contiennent pour pouvoir les réinjecter ensuite avec un INSERT. On peut également filtrer les données pour ne rechercher que celles que l&amp;#8217;on a supprimées :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select * from pg_dirtyread(&#39;payment&#39;) payment(payment_id integer, customer_id smallint, staff_id smallint, rental_id integer, amount numeric(5,2), dropped_6 timestamp without time zone) where payment_id = 17523;&#xD;&#xA; payment_id | customer_id | staff_id | rental_id | amount |         dropped_6&#xD;&#xA;------------+-------------+----------+-----------+--------+----------------------------&#xD;&#xA;      17523 |         345 |        1 |      1457 |   4.99 | 2007-02-15 18:34:15.996577&#xD;&#xA;(1 row)&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;h2&gt;Deuxième scénario : On a supprimé une colonne entière&lt;/h2&gt;&#xA;&lt;p&gt;Deuxième cas typique, sûrement plus rare, celui où une colonne entière est supprimée. Pour notre exemple, je vais supprimer la colonne contenant la date de paiement :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# alter table payment drop column payment_date;&#xD;&#xA;ALTER TABLE&lt;/pre&gt;&#xA;&lt;p&gt;pg_dirtyread nous permet de retrouver les informations de cette colonne à condition qu&amp;#8217;aucun VACUUM FULL ou CLUSTER n&amp;#8217;ait été exécuté. Pour ce faire, il faut connaître la position de la colonne dans l&amp;#8217;ordre des colonnes de la table. Pour notre exemple, la colonne de date est la dernière colonne de la table, donc en position 6. Pour retrouver nos données, on peut donc exécuter la commande suivante :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select * from pg_dirtyread(&#39;payment&#39;) payment(payment_id integer, customer_id smallint, staff_id smallint, rental_id integer, amount numeric(5,2), dropped_6 timestamp without time zone);&#xD;&#xA; payment_id | customer_id | staff_id | rental_id | amount |         dropped_6&#xD;&#xA;------------+-------------+----------+-----------+--------+----------------------------&#xD;&#xA;      17523 |         345 |        1 |      1457 |   4.99 | 2007-02-15 18:34:15.996577&#xD;&#xA;      17524 |         345 |        2 |      1550 |   0.99 | 2007-02-16 00:27:01.996577&#xD;&#xA;      17525 |         345 |        2 |      2766 |   4.99 | 2007-02-19 16:13:41.996577&#xD;&#xA;      17526 |         346 |        1 |      1994 |   5.99 | 2007-02-17 09:35:32.996577&#xD;&#xA;      17527 |         346 |        2 |      3372 |   2.99 | 2007-02-21 12:02:45.996577&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Le cas d&amp;#8217;une restauration d&amp;#8217;une colonne entière supprimée est compliqué à gérer. Il faudrait la recréer, puis modifier toutes les lignes une à une pour réajouter les valeurs de cette fameuse colonne. Cela peut s&amp;#8217;avérer un peu complexe à réaliser. Cependant, si vous ne disposez pas d&amp;#8217;une sauvegarde pg_dump, vous n&amp;#8217;aurez peut-être pas d&amp;#8217;autres alternatives que cela, à part recharger entièrement la base.&lt;/p&gt;&#xA;&lt;h2&gt;Bonus : Récupérer les informations système des lignes supprimées&lt;/h2&gt;&#xA;&lt;p&gt;Avec pg_dirtyread, il est possible de récupérer les informations système des lignes qui ont été supprimées. Pour ce faire, rien de plus simple : il suffit d&amp;#8217;indiquer dans la requête les informations que vous souhaitez récupérer. De plus, il existe une colonne qui indique si la ligne est supposément supprimée ou non, ce qui pourrait être pratique pour trier les différentes lignes selon leur état :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=#  SELECT * FROM pg_dirtyread(&#39;payment&#39;) AS t(tableoid oid, ctid tid, xmin xid, xmax xid, cmin cid, cmax cid, dead boolean);&#xD;&#xA; tableoid |   ctid    | xmin | xmax | cmin | cmax | dead&#xD;&#xA;----------+-----------+------+------+------+------+------&#xD;&#xA;    16505 | (0,21)    |  835 |  941 |    0 |    0 | f&#xD;&#xA;    16505 | (0,22)    |  835 |  941 |    0 |    0 | f&#xD;&#xA;    16505 | (0,23)    |  835 |  941 |    0 |    0 | f&#xD;&#xA;    16505 | (0,24)    |  835 |  941 |    0 |    0 | f&#xD;&#xA;    16505 | (0,25)    |  835 |  941 |    0 |    0 | f&#xD;&#xA;    16505 | (0,26)    |  835 |  941 |    0 |    0 | f&#xD;&#xA;    16505 | (0,27)    |  835 |  941 |    0 |    0 | f&#xD;&#xA;    16505 | (0,28)    |  835 |  941 |    0 |    0 | f&#xD;&#xA;    16505 | (0,29)    |  835 |  941 |    0 |    0 | f&#xD;&#xA;    16505 | (0,30)    |  835 |  941 |    0 |    0 | f&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;h2&gt;Conclusion :&lt;/h2&gt;&#xA;&lt;p&gt;En conclusion, l&amp;#8217;extension pg_dirtyread offre une solution précieuse pour accéder aux données supprimées dans une base de données PostgreSQL. Son utilisation peut être cruciale dans des cas d&amp;#8217;incidents critiques tels que la récupération de données perdues accidentellement ou la résolution d&amp;#8217;incohérences de données. Cependant, il est essentiel de rappeler que son application reste extrêmement situationnelle et que pour qu&amp;#8217;elle puisse être efficace, l&amp;#8217;autovacuum doit être désactivé, ce qui n&amp;#8217;est pas forcément recommandé.&lt;strong&gt;Continuez votre lecture sur le blog :&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul class=&#34;similar-posts&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/pg_recursively_delete-simplifier-les-suppressions-recursives/&#34; rel=&#34;bookmark&#34; title=&#34;3 avril 2024&#34;&gt;pg_recursively_delete : Simplifier les suppressions récursives&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/pyrseas-et-postgresql-comparer-facilement-des-schema-de-base-de-donnees/&#34; rel=&#34;bookmark&#34; title=&#34;3 janvier 2023&#34;&gt;Pyrseas et Postgresql : Comparer facilement des schémas de base de données&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-planifier-une-tache-avec-pg_cron/&#34; rel=&#34;bookmark&#34; title=&#34;24 septembre 2019&#34;&gt;PostgreSQL : planifier une tâche avec pg_cron&lt;/a&gt; (Emmanuel RAMI) [Non classéPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/aws-rds-les-extensions-postgresql/&#34; rel=&#34;bookmark&#34; title=&#34;21 janvier 2020&#34;&gt;AWS RDS : les extensions PostgreSQL&lt;/a&gt; (Emmanuel RAMI) [AWSPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/pseudonymisation-postgresql/&#34; rel=&#34;bookmark&#34; title=&#34;30 janvier 2024&#34;&gt;Pseudonymiser vos bases PostgreSQL&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;!-- Similar Posts took 3.417 ms --&gt;&lt;/p&gt;&#xA;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10494&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10494&amp;#038;title=pg_dirtyread%20o%C3%B9%20comment%20r%C3%A9parer%20facilement%20un%20delete%20sauvage&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=pg_dirtyread%20o%C3%B9%20comment%20r%C3%A9parer%20facilement%20un%20delete%20sauvage&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10494&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/pg_dirtyread-ou-comment-reparer-facilement-un-delete-sauvage/&#34;&gt;pg_dirtyread où comment réparer facilement un delete sauvage&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.capdata.fr/index.php/pg_dirtyread-ou-comment-reparer-facilement-un-delete-sauvage/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Imaginez le scénario : nous sommes vendredi soir, en fin de journée, et pour une raison quelconque, un développeur qui a eu une semaine fatiguante se dit qu&amp;#8217;il serait bien de supprimer les lignes qu&amp;#8217;il a modifiées dans la base&amp;#8230; &lt;a href=&#34;https://blog.capdata.fr/index.php/pg_dirtyread-ou-comment-reparer-facilement-un-delete-sauvage/&#34; class=&#34;more-link&#34;&gt;Continuer la lecture &lt;span class=&#34;meta-nav&#34;&gt;&amp;#8594;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/pg_dirtyread-ou-comment-reparer-facilement-un-delete-sauvage/&#34;&gt;pg_dirtyread où comment réparer facilement un delete sauvage&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Emmanuel RAMI</name>
    </author>
  </entry>
  <entry>
    <title>Pseudonymiser vos bases PostgreSQL</title>
    <updated>2024-01-30T17:54:28Z</updated>
    <id>tag:blog.capdata.fr,2024-01-30:/index.php/pseudonymisation-postgresql/</id>
    <content type="html">&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10377&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10377&amp;#038;title=Pseudonymiser%20vos%20bases%20PostgreSQL&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=Pseudonymiser%20vos%20bases%20PostgreSQL&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10377&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;Dans l&amp;#8217;ère numérique actuelle, où la sécurité des données occupe une place centrale, la pseudonymisation émerge comme une stratégie cruciale pour renforcer la confidentialité des informations stockées dans les bases de données. Cette approche, bien que semblable à l&amp;#8217;anonymisation, se distingue par son objectif spécifique de préserver l&amp;#8217;utilité des données tout en masquant l&amp;#8217;identité réelle des individus. Dans le contexte de PostgreSQL, la pseudonymisation offre un équilibre délicat entre protection des renseignements sensibles et préservation de la fonctionnalité des données.&lt;/p&gt;&#xA;&lt;h2&gt;Principe de la Pseudonymisation :&lt;/h2&gt;&#xA;&lt;p&gt;La pseudonymisation implique la substitution des données réelles par des données fictives, mais conservant leur structure originale. Contrairement à l&amp;#8217;anonymisation, qui supprime complètement toute référence à l&amp;#8217;identité d&amp;#8217;un individu, la pseudonymisation permet la réversibilité du processus. Ainsi, les données restent utilisables à des fins légitimes : l&amp;#8217;analyse statistique, ou la réalisation de tests, tout en garantissant la protection des informations confidentielles.&lt;/p&gt;&#xA;&lt;p&gt;L&amp;#8217;utilité fondamentale de la pseudonymisation réside dans sa capacité à concilier deux impératifs apparemment contradictoires : la protection de la vie privée des individus et la nécessité d&amp;#8217;accéder et de traiter des données. Dans un paysage où les fuites de données et les violations de la vie privée sont de plus en plus fréquentes, la pseudonymisation devient une réponse pragmatique aux exigences de conformité réglementaire tout en préservant la valeur analytique des données.&lt;/p&gt;&#xA;&lt;p&gt;Souvent confondue avec la pseudonymisation, l&amp;#8217;anonymisation diffère par son caractère irréversible. Alors que l&amp;#8217;anonymisation supprime toute possibilité de relier des données à une identité spécifique, la pseudonymisation offre une réversibilité calculée, permettant une utilisation future des données tout en maintenant un niveau élevé de sécurité. Cette distinction cruciale souligne l&amp;#8217;importance de choisir la méthode la plus appropriée en fonction des besoins spécifiques de sécurité et des objectifs opérationnels.&lt;/p&gt;&#xA;&lt;h1&gt;Etat de la pseudonymisation actuellement sur PostgreSQL :&lt;/h1&gt;&#xA;&lt;p&gt;Le seul outil actuellement disponible sur le marché permettant de réaliser une pseudonymisation sur PostgreSQL est une extension. Nous l&amp;#8217;avions déjà évoquée lors d&amp;#8217;un précédent article : PostgreSQL Anonymizer. Pour rappel, cette extension est développée par Dalibo, et contient également de nombreuses options d&amp;#8217;anonymisation.&lt;/p&gt;&#xA;&lt;p&gt;Dans cet article, nous allons rappeler l&amp;#8217;installation de cette extension puis nous la verrons à l&amp;#8217;œuvre dans quelques exemples de pseudonymisation de données.&lt;/p&gt;&#xA;&lt;h3&gt;Etape 1 : Installation&lt;/h3&gt;&#xA;&lt;p&gt;La machine choisie pour mon test est une Ubuntu. Il n&amp;#8217;y a pas de package prêt à l&amp;#8217;emploi sur ce système d&amp;#8217;exploitation. Nous devons donc réaliser nous même la compilation de l&amp;#8217;extension pour qu&amp;#8217;elle puisse fonctionner. Nous avons au préalable installé une version 15 de PostgreSQL sur notre machine.&lt;/p&gt;&#xA;&lt;p&gt;Nous commençons par installer les outils de développement de PostgreSQL :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@sarah:~# sudo apt-get install postgresql-server-dev-15&#xD;&#xA;Reading package lists... Done&#xD;&#xA;Building dependency tree&#xD;&#xA;Reading state information... Done&#xD;&#xA;...&#xD;&#xA;Setting up postgresql-server-dev-15 (13.7-1.pgdg18.04+1) ...&#xD;&#xA;Processing triggers for man-db (2.8.3-2ubuntu0.1) ...&#xD;&#xA;Processing triggers for mime-support (3.60ubuntu1) ...&#xD;&#xA;Processing triggers for ureadahead (0.100.0-21) ...&#xD;&#xA;Processing triggers for install-info (6.5.0.dfsg.1-2) ...&#xD;&#xA;Processing triggers for libc-bin (2.27-3ubuntu1.5) ...&#xD;&#xA;Processing triggers for systemd (237-3ubuntu10.53)&lt;/pre&gt;&#xA;&lt;p&gt;Puis on récupère depuis le git de Dalibo les sources à la dernière version disponible :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@sarah:~# git clone &amp;lt;a href=&amp;quot;https://gitlab.com/dalibo/postgresql_anonymizer.git&amp;quot;&amp;gt;https://gitlab.com/dalibo/postgresql_anonymizer.git&amp;lt;/a&amp;gt;&#xD;&#xA;Cloning into &#39;postgresql_anonymizer&#39;...&#xD;&#xA;remote: Enumerating objects: 5145, done.&#xD;&#xA;remote: Counting objects: 100% (487/487), done.&#xD;&#xA;remote: Compressing objects: 100% (271/271), done.&#xD;&#xA;remote: Total 5145 (delta 327), reused 277 (delta 216), pack-reused 4658&#xD;&#xA;Receiving objects: 100% (5145/5145), 25.71 MiB | 19.23 MiB/s, done.&#xD;&#xA;Resolving deltas: 100% (3304/3304), done. &lt;/pre&gt;&#xA;&lt;p&gt;Une fois les sources récupérées, on se positionne dans le répertoire créé par Git ou les sources ont été déposées et on fait un make extension :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@sarah:~/postgresql_anonymizer# make extension &#xD;&#xA;mkdir -p anon&#xD;&#xA;cp anon.sql anon/anon--1.1.0.sql&#xD;&#xA;cp data/*.csv anon/&#xD;&#xA;cp python/populate.py anon/ &lt;/pre&gt;&#xA;&lt;p&gt;Et enfin un Make install pour installer le tout. Il est important de préciser qu&amp;#8217;il est nécessaire que vous ayez installé gcc pour pouvoir compiler les sources de l&amp;#8217;extension (apt install gcc) :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@sarah:~/postgresql_anonymizer# sudo make install &#xD;&#xA;cp anon.sql anon/anon--1.1.0.sql&#xD;&#xA;cp data/*.csv anon/&#xD;&#xA;cp python/populate.py anon/&#xD;&#xA;gcc -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Werror=vla -Wendif-labels -Wmissing- format-attribute -Wimplicit-fallthrough=3 -Wformat-security -fno-strict-aliasing -fwrapv -fexcess-precision=standard -Wno- format-truncation -g -g -O2 -fstack-protector-strong -Wformat -Werror= format-security -fno-omit-frame-pointer -fPIC -Wno-unused-variable -I. -I./ -I/usr/include/postgresql/13/server -I/usr/include/postgresql/internal    -Wdate- time -D_FORTIFY_SOURCE=2 -D_GNU_SOURCE -I/usr/include/libxml2     -c -o anon.o anon.c&#xD;&#xA;gcc -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Werror=vla -Wendif-labels -Wmissing- format-attribute -Wimplicit-fallthrough=3 -Wformat-security -fno-strict-aliasing -fwrapv -fexcess-precision=standard -Wno- format-truncation -g -g -O2 -fstack-protector-strong -Wformat -Werror= format-security -fno-omit-frame-pointer -fPIC -Wno-unused-variable anon.o -L/usr/lib/x86_64-linux-gnu -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now -L/usr/lib/llvm-6.0/lib    -Wl,--as-needed  -shared -o anon.so&#xD;&#xA;/usr/bin/clang-6.0 -Wno-ignored-attributes -fno-strict-aliasing -fwrapv -Wno-unused- command-line-argument -O2  -I. -I./ -I/usr/include/postgresql/13/server -I/usr/include/postgresql/internal    -Wdate- time -D_FORTIFY_SOURCE=2 -D_GNU_SOURCE -I/usr/include/libxml2    -flto=thin -emit-llvm -c -o anon. bc anon.c&#xD;&#xA;/bin/mkdir -p  &#39;/usr/share/postgresql/15/extension&#39;&#xD;&#xA;/bin/mkdir -p  &#39;/usr/share/postgresql/15/extension/anon&#39;&#xD;&#xA;/bin/mkdir -p  &#39;/usr/lib/postgresql/15/lib&#39;&#xD;&#xA;install -d /usr/lib/postgresql/15/bin&#xD;&#xA;install -m 0755 bin/pg_dump_anon.sh /usr/lib/postgresql/15/bin&#xD;&#xA;/usr/bin/install -c -m 644 .//anon.control  &#39;/usr/share/postgresql/15/extension/&#39;&#xD;&#xA;/usr/bin/install -c -m 644 .//anon/*   &#39;/usr/share/postgresql/15/extension/anon/&#39;&#xD;&#xA;/usr/bin/install -c -m 755  anon.so  &#39;/usr/lib/postgresql/15/lib/&#39;&#xD;&#xA;/bin/mkdir -p  &#39;/usr/lib/postgresql/15/lib/bitcode/anon&#39;&#xD;&#xA;/bin/mkdir -p  &#39;/usr/lib/postgresql/15/lib/bitcode&#39;/anon/&#xD;&#xA;/usr/bin/install -c -m 644 anon. bc &#39;/usr/lib/postgresql/15/lib/bitcode&#39;/anon/./&#xD;&#xA;cd &#39;/usr/lib/postgresql/15/lib/bitcode&#39; &amp;amp;&amp;amp; /usr/lib/llvm-6.0/bin/llvm-lto -thinlto -thinlto-action=thinlink -o anon.index. bc anon/anon. bc&lt;/pre&gt;&#xA;&lt;p&gt;Pour ce test, j&amp;#8217;ai importé la base de données exemple dvdrental de PostgreSQL. Elle me permettra d&amp;#8217;illustrer la pseudonymisation facilement et sur une quantité respectable de données. Pour importer cette base de données, rien de plus simple :&lt;/p&gt;&#xA;&lt;p&gt;On la récupère en la téléchargeant sur le site d&amp;#8217;hébergement :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres@sarah:~$ wget https://www.postgresqltutorial.com/wp-content/uploads/2019/05/dvdrental.zip&#xD;&#xA;&#xD;&#xA;--2023-11-29 13:42:52-- https://www.postgresqltutorial.com/wp-content/uploads/2019/05/dvdrental.zip&#xD;&#xA;Resolving www.postgresqltutorial.com (www.postgresqltutorial.com)... 104.21.2.174, 172.67.129.129, 2606:4700:3037::6815:2ae, ...&#xD;&#xA;Connecting to www.postgresqltutorial.com (www.postgresqltutorial.com)|104.21.2.174|:443... connected.&#xD;&#xA;HTTP request sent, awaiting response... 200 OK&#xD;&#xA;Length: 550906 (538K) [application/zip]&#xD;&#xA;Saving to: ‘dvdrental.zip’&#xD;&#xA;&#xD;&#xA;dvdrental.zip 100%[========================================================================================================================================&amp;gt;] 537.99K --.-KB/s in 0.01s&#xD;&#xA;&#xD;&#xA;2023-11-29 13:42:52 (45.5 MB/s) - ‘dvdrental.zip’ saved [550906/550906] &lt;/pre&gt;&#xA;&lt;p&gt;On la dézippe ensuite :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres@sarah:~$ unzip dvdrental.zip&#xD;&#xA;Archive: dvdrental.zip&#xD;&#xA;inflating: dvdrental.tar&lt;/pre&gt;&#xA;&lt;p&gt;On obtient ainsi une archive qu&amp;#8217;on peut utiliser avec un pg_restore pour charger la base de données. Je me suis d&amp;#8217;abbord connectée sur l&amp;#8217;instance pour créer une base de données que j&amp;#8217;ai appelé dvdrental:&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres@ip-172-44-2-72:~$ psql&#xD;&#xA;psql (15.5 (Ubuntu 15.5-1.pgdg22.04+1))&#xD;&#xA;Type &amp;quot;help&amp;quot; for help.&lt;/pre&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;postgres=# create database dvdrental;&#xD;&#xA;CREATE DATABASE&lt;/pre&gt;&#xA;&lt;p&gt;Puis j&amp;#8217;ai restauré la base :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres@ip-172-44-2-72:~$ pg_restore -U postgres -d dvdrental dvdrental.tar&lt;/pre&gt;&#xA;&lt;p&gt;Nous sommes donc prêts à commencer.&lt;/p&gt;&#xA;&lt;p&gt;Il existe un petit nombre de fonctions de pseudonymisation dans PostgreSQL anonymiser. Elles fonctionnent comme les fonctions d&amp;#8217;anonymisation et peuvent être utilisée en masquage statique ou en masquage dynamique.&lt;/p&gt;&#xA;&lt;p&gt;Les fonctions disponibles sont les suivantes :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;anon.pseudo_first_name(&#39;seed&#39;,&#39;salt&#39;)&lt;/code&gt;qui retourne un prénom générique&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;anon.pseudo_last_name(&#39;seed&#39;,&#39;salt&#39;)&lt;/code&gt; qui retourne un nom de famille générique&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;anon.pseudo_email(&#39;seed&#39;,&#39;salt&#39;)&lt;/code&gt; qui retourne une adresse email générique et existante&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;anon.pseudo_city(&#39;seed&#39;,&#39;salt&#39;)&lt;/code&gt; qui retourne le nom d&amp;#8217;une ville existante&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;anon.pseudo_country(&#39;seed&#39;,&#39;salt&#39;)&lt;/code&gt; qui retourne un pays existant&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;anon.pseudo_company(&#39;seed&#39;,&#39;salt&#39;)&lt;/code&gt; qui retourne un nom de société générique&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;anon.pseudo_iban(&#39;seed&#39;,&#39;salt&#39;)&lt;/code&gt; qui retourne un IBAN valide&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;anon.pseudo_siret(&#39;seed&#39;,&#39;salt&#39;) qui retourne un SIRET valide&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Il est important de définir un &lt;em&gt;salt&lt;/em&gt; différent pour chaque base de données. Si un utilisateur quelconque trouve le &lt;em&gt;salt&lt;/em&gt; de votre base de données, il sera ensuite capable de procéder à une attaque par force brute sur toutes les autres données afin de les révéler.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# alter database dvdrental set anon.salt = &#39;This_is_a_salt&#39;;&lt;/pre&gt;&#xA;&lt;p&gt;Pour prendre un exemple, nous pouvons tenter de pseudonymiser les données des clients de notre base dvdrental :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select * from customer limit 5;&#xD;&#xA;customer_id | store_id | first_name | last_name | email | address_id | activebool | create_date | last_update | active&#xD;&#xA;-------------+----------+------------+-----------+-------------------------------------+------------+------------+-------------+-------------------------+--------&#xD;&#xA;524 | 1 | Jared | Ely | jared.ely@sakilacustomer.org | 530 | t | 2006-02-14 | 2013-05-26 14:49:45.738 | 1&#xD;&#xA;1 | 1 | Mary | Smith | mary.smith@sakilacustomer.org | 5 | t | 2006-02-14 | 2013-05-26 14:49:45.738 | 1&#xD;&#xA;2 | 1 | Patricia | Johnson | patricia.johnson@sakilacustomer.org | 6 | t | 2006-02-14 | 2013-05-26 14:49:45.738 | 1&#xD;&#xA;3 | 1 | Linda | Williams | linda.williams@sakilacustomer.org | 7 | t | 2006-02-14 | 2013-05-26 14:49:45.738 | 1&#xD;&#xA;4 | 2 | Barbara | Jones | barbara.jones@sakilacustomer.org | 8 | t | 2006-02-14 | 2013-05-26 14:49:45.738 | 1&#xD;&#xA;(5 rows)&lt;/pre&gt;&#xA;&lt;p&gt;Lors d&amp;#8217;un premier essai, en suivant la documentation officielle disponible &lt;a href=&#34;https://postgresql-anonymizer.readthedocs.io/en/stable/&#34;&gt;ici&lt;/a&gt;, j&amp;#8217;ai utilisé la fonction suivante :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# SECURITY LABEL FOR anon ON COLUMN customer.first_name is &#39;MASKED WITH FUNCTION anon.pseudo_first_name(&#39;seed&#39;, &#39;salt&#39;)&#39;;&#xD;&#xA;SECURITY LABEL&lt;/pre&gt;&#xA;&lt;p&gt;Au moment d&amp;#8217;utiliser le masquage pour pseudonymiser mes données, je suis tombée sur l&amp;#8217;erreur suivante :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# SECURITY LABEL FOR anon ON COLUMN customer.first_name IS &#39;MASKED WITH FUNCTION anon.pseudo_first_name(&#39;seed&#39;,&#39;salt&#39;)&#39;;&#xD;&#xA;ERROR: syntax error at or near &amp;quot;seed&amp;quot; LINE 2: IS &#39;MASKED WITH FUNCTION anon.pseudo_first_name(&#39;seed&#39;,&#39;salt...&lt;/pre&gt;&#xA;&lt;p&gt;Il faut le savoir, car ce n&amp;#8217;est pas forcément bien explicité dans la documentation : le simple guillemet ne permet pas d&amp;#8217;échapper correctement les caractères. Il est donc nécessaire d&amp;#8217;ajouter d&amp;#8217;autres caractères d&amp;#8217;échappement. Dans ce cas, j&amp;#8217;ai choisi d&amp;#8217;utiliser le symbole &amp;#8220;$&amp;#8221;.&lt;br /&gt;&#xA;Ainsi, au deuxième essai, cela m&amp;#8217;a donné :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# SECURITY LABEL FOR anon ON COLUMN customer.first_name is &#39;MASKED WITH FUNCTION anon.pseudo_first_name($$seed$$, $$salt$$)&#39;;&#xD;&#xA;SECURITY LABEL&lt;/pre&gt;&#xA;&lt;p&gt;Ca avait l&amp;#8217;air de fonctionner, j&amp;#8217;ai donc lancé mon anonymisation pour vérifier :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# SELECT anon.anonymize_database();&#xD;&#xA;DEBUG: Anonymize table public.customer with first_name = anon.pseudo_first_name($$seed$$)&#xD;&#xA;ERROR: could not determine polymorphic type because input has type unknown&#xD;&#xA;CONTEXT: SQL statement &amp;quot;UPDATE public.customer SET first_name = anon.pseudo_first_name($$seed$$)&amp;quot;&#xD;&#xA;PL/pgSQL function anon.anonymize_table(regclass) line 38 at EXECUTE&#xD;&#xA;SQL function &amp;quot;anonymize_database&amp;quot; statement 1 &lt;/pre&gt;&#xA;&lt;p&gt;Il s&amp;#8217;avère que la documentation ne précise pas qu&amp;#8217;il faut typer les deux champs qu&amp;#8217;on utilise pour notre fonction, sinon PostgreSQL ne sait pas quoi en faire. Cela donne donc :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# SECURITY LABEL FOR anon ON COLUMN customer.first_name is &#39;MASKED WITH FUNCTION anon.pseudo_first_name(CAST($$seed$$ as text), cast($$salt$$ as text))&#39;;&#xD;&#xA;SECURITY LABEL&lt;/pre&gt;&#xA;&lt;p&gt;Et on applique ensuite les différentes fonctions :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# SELECT anon.anonymize_database();&#xD;&#xA;DEBUG: Anonymize table public.customer with first_name = anon.pseudo_first_name(CAST($$seed$$ as text), cast($$salt$$ as text))&#xD;&#xA;anonymize_database&#xD;&#xA;--------------------&#xD;&#xA;t&#xD;&#xA;(1 row)&lt;/pre&gt;&#xA;&lt;p&gt;On va ensuite vérifier nos données dans la table pour voir si cela a été appliqué :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select * from customer limit 5;&#xD;&#xA;customer_id | store_id | first_name | last_name | email | address_id | activebool | create_date | last_update | active&#xD;&#xA;-------------+----------+------------+-----------+-----------------------------------+------------+------------+-------------+----------------------------+--------&#xD;&#xA;524 | 1 | Taniya | Ely | jared.ely@sakilacustomer.org | 530 | t | 2006-02-14 | 2024-01-29 09:26:48.268084 | 1&#xD;&#xA;15 | 1 | Taniya | Harris | helen.harris@sakilacustomer.org | 19 | t | 2006-02-14 | 2024-01-29 09:26:48.268084 | 1&#xD;&#xA;16 | 2 | Taniya | Martin | sandra.martin@sakilacustomer.org | 20 | t | 2006-02-14 | 2024-01-29 09:26:48.268084 | 0&#xD;&#xA;17 | 1 | Taniya | Thompson | donna.thompson@sakilacustomer.org | 21 | t | 2006-02-14 | 2024-01-29 09:26:48.268084 | 1&#xD;&#xA;18 | 2 | Taniya | Garcia | carol.garcia@sakilacustomer.org | 22 | t | 2006-02-14 | 2024-01-29 09:26:48.268084 | 1&#xD;&#xA;(5 rows)&lt;/pre&gt;&#xA;&lt;p&gt;On se rend alors compte que toutes les données pseudonymisées l&amp;#8217;ont été avec le même résultat.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select distinct first_name from customer;&#xD;&#xA;first_name&#xD;&#xA;------------&#xD;&#xA;Taniya&#xD;&#xA;(1 row)&lt;/pre&gt;&#xA;&lt;p&gt;Il est en effet précisé dans la documentation que si on voulait obtenir des pseudo différents pour chaque ligne, il fallait ajouter un custom dataset d&amp;#8217;un nombre supérieur de ligne au nombres d&amp;#8217;entrées dans notre table.&lt;/p&gt;&#xA;&lt;p&gt;Il existe un dataset fournit par dalibo (en français uniquement), disponible à l&amp;#8217;adresse &lt;a href=&#34;https://gitlab.com/dalibo/postgresql_anonymizer/-/packages&#34;&gt;suivante &lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Pour pouvoir l&amp;#8217;intégrer dans votre extension, il vous faut le télécharger sur votre serveur, le placer dans le dossier de votre choix, et utiliser la commande :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=#SELECT anon.init(&#39;/path/to/custom_csv_files/&#39;)&lt;/pre&gt;&#xA;&lt;p&gt;Vous pouvez également créer votre propre dataset sous la forme d&amp;#8217;un fichier csv avec un script par exemple, pour peupler vos exemples avec vos propres données personnalisées.&lt;/p&gt;&#xA;&lt;p&gt;On peut tenter de réaliser la même opération mais pour une autre donnée. On voit en effet que notre adresse email contient toujours les noms de familles des personnes, ils n&amp;#8217;ont pas été pseudonymisés. On va donc changer cela :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# security label for anon on column customer.email is &#39;MASKED WITH FUNCTION anon.pseudo_email(CAST($$seed$$ as text), cast($$salt$$ as text))&#39;;&#xD;&#xA;SECURITY LABEL &lt;/pre&gt;&#xA;&lt;p&gt;Et une fois appliqué on obtient les données suivantes :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select * from customer limit 5;&#xD;&#xA;customer_id | store_id | first_name | last_name | email | address_id | activebool | create_date | last_update | active&#xD;&#xA;-------------+----------+------------+-----------+----------------------------+------------+------------+-------------+----------------------------+--------&#xD;&#xA;524 | 1 | Taniya | Ely | rowesally@kelly-dorsey.com | 530 | t | 2006-02-14 | 2024-01-29 09:42:03.560633 | 1&#xD;&#xA;235 | 1 | Taniya | Lynch | rowesally@kelly-dorsey.com | 239 | t | 2006-02-14 | 2024-01-29 09:42:03.560633 | 1&#xD;&#xA;15 | 1 | Taniya | Harris | rowesally@kelly-dorsey.com | 19 | t | 2006-02-14 | 2024-01-29 09:42:03.560633 | 1&#xD;&#xA;16 | 2 | Taniya | Martin | rowesally@kelly-dorsey.com | 20 | t | 2006-02-14 | 2024-01-29 09:42:03.560633 | 0&#xD;&#xA;17 | 1 | Taniya | Thompson | rowesally@kelly-dorsey.com | 21 | t | 2006-02-14 | 2024-01-29 09:42:03.560633 | 1&#xD;&#xA;(5 rows)&lt;/pre&gt;&#xA;&lt;h2&gt;Les limites de la pseudonymisation Postgres :&lt;/h2&gt;&#xA;&lt;p&gt;Actuellement il n&amp;#8217;existe qu&amp;#8217;une seule extension permettant de faire de la pseudonymisation sur PostgreSQL. Et elle présente plusieurs limites :&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Les fonctions de pseudonymisation de postgresql anonymizer sont déterministes. C&amp;#8217;est à dire que pour deux valeurs identiques, elles donneront toujours le même résultat.&lt;/li&gt;&#xA;&lt;li&gt;Les données pseudonymisée restent des données personnes ! Le &lt;strong&gt;RGPD&lt;/strong&gt; précise très clairement que : « les données à caractère personnel qui ont fait l’objet d’une pseudonymisation […] devraient être considérées comme des informations concernant une personne physique identifiable. »&lt;/li&gt;&#xA;&lt;li&gt;Les coûts en performance, comme évoqué dans mon précédent article pour cette même extension, sont élevés. C&amp;#8217;est quelque chose à considérer quand on veut utiliser cette méthode.&lt;/li&gt;&#xA;&lt;li&gt;Il faut pouvoir gérer correctement les clés qu&amp;#8217;on utilises pour la pseudonymisation, c&amp;#8217;est une charge supplémentaire.&lt;/li&gt;&#xA;&lt;li&gt;La documentation n&amp;#8217;est pas forcément tout à fait bien mise à jour, et certaines choses ne sont pas évidentes à appréhender.&lt;/li&gt;&#xA;&lt;li&gt;L&amp;#8217;extension est toujours en développement et en changements constants, nous ne sommes pas à l&amp;#8217;abris de rencontrer des bugs au fil des versions. Pour écrire cet article, j&amp;#8217;ai du contacter directement le développeur car au début de sa rédaction, les fonctions de pseudonymisation ne fonctionnaient pas.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2&gt;Conclusion :&lt;/h2&gt;&#xA;&lt;p&gt;En conclusion, la pseudonymisation des données dans PostgreSQL se révèle être une stratégie de protection de la vie privée et de conformité réglementaire particulièrement robuste. En adoptant cette approche, les entreprises peuvent tirer parti des avantages significatifs tels que la préservation de la confidentialité des données tout en permettant l&amp;#8217;analyse et le traitement des informations sensibles.&lt;/p&gt;&#xA;&lt;p&gt;D&amp;#8217;un côté, la pseudonymisation offre une solution efficace pour équilibrer la nécessité d&amp;#8217;accéder aux données avec le respect des réglementations de confidentialité. Les données pseudonymisées demeurent utiles pour les analyses internes tout en limitant le risque d&amp;#8217;exploitation malveillante.&lt;/p&gt;&#xA;&lt;p&gt;Cependant, il est crucial de reconnaître que la pseudonymisation n&amp;#8217;est pas une panacée. Elle peut présenter des défis en termes de gestion des clés de pseudonymisation, de complexité accrue dans la maintenance des bases de données, et de potentielles vulnérabilités si elle est mal mise en œuvre.&lt;/p&gt;&#xA;&lt;p&gt;Dans une perspective plus large, il est également pertinent de considérer l&amp;#8217;anonymisation des données comme une alternative. Bien que l&amp;#8217;anonymisation puisse offrir un niveau supérieur de protection, elle peut également rendre les données moins utiles pour certaines applications, limitant ainsi leur valeur pour les analyses internes.&lt;/p&gt;&#xA;&lt;p&gt;En définitive, le choix entre la pseudonymisation et l&amp;#8217;anonymisation dépend des besoins spécifiques de chaque organisation, du contexte réglementaire et des compromis acceptables entre la protection de la vie privée et l&amp;#8217;utilité des données. En élaborant une stratégie de gestion des données judicieuse, les entreprises peuvent naviguer avec succès dans le paysage complexe de la confidentialité des données dans PostgreSQL.&lt;strong&gt;Continuez votre lecture sur le blog :&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul class=&#34;similar-posts&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-anonymizer/&#34; rel=&#34;bookmark&#34; title=&#34;7 juillet 2022&#34;&gt;PostgreSQL Anonymizer&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/pg_recursively_delete-simplifier-les-suppressions-recursives/&#34; rel=&#34;bookmark&#34; title=&#34;3 avril 2024&#34;&gt;pg_recursively_delete : Simplifier les suppressions récursives&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/pg_dirtyread-ou-comment-reparer-facilement-un-delete-sauvage/&#34; rel=&#34;bookmark&#34; title=&#34;27 mars 2024&#34;&gt;pg_dirtyread où comment réparer facilement un delete sauvage&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-planifier-une-tache-avec-pg_cron/&#34; rel=&#34;bookmark&#34; title=&#34;24 septembre 2019&#34;&gt;PostgreSQL : planifier une tâche avec pg_cron&lt;/a&gt; (Emmanuel RAMI) [Non classéPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/hypopg-et-les-index-hypothetiques/&#34; rel=&#34;bookmark&#34; title=&#34;5 août 2022&#34;&gt;HypoPG et les index hypothétiques&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;!-- Similar Posts took 2.254 ms --&gt;&lt;/p&gt;&#xA;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10377&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10377&amp;#038;title=Pseudonymiser%20vos%20bases%20PostgreSQL&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=Pseudonymiser%20vos%20bases%20PostgreSQL&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10377&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/pseudonymisation-postgresql/&#34;&gt;Pseudonymiser vos bases PostgreSQL&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.capdata.fr/index.php/pseudonymisation-postgresql/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dans l&amp;#8217;ère numérique actuelle, où la sécurité des données occupe une place centrale, la pseudonymisation émerge comme une stratégie cruciale pour renforcer la confidentialité des informations stockées dans les bases de données. Cette approche, bien que semblable à l&amp;#8217;anonymisation, se&amp;#8230; &lt;a href=&#34;https://blog.capdata.fr/index.php/pseudonymisation-postgresql/&#34; class=&#34;more-link&#34;&gt;Continuer la lecture &lt;span class=&#34;meta-nav&#34;&gt;&amp;#8594;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/pseudonymisation-postgresql/&#34;&gt;Pseudonymiser vos bases PostgreSQL&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Emmanuel RAMI</name>
    </author>
  </entry>
  <entry>
    <title>OrioleDB : la promesse d’un No-Vacuum</title>
    <updated>2023-10-11T10:27:27Z</updated>
    <id>tag:blog.capdata.fr,2023-10-11:/index.php/orioledb-la-promesse-dun-no-vacuum/</id>
    <content type="html">&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10248&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10248&amp;#038;title=OrioleDB%20%3A%20la%20promesse%20d%E2%80%99un%20No-Vacuum&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=OrioleDB%20%3A%20la%20promesse%20d%E2%80%99un%20No-Vacuum&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10248&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;La gestion efficace de l&amp;#8217;espace disque dans PostgreSQL est une préoccupation constante pour les administrateurs de bases de données. C&amp;#8217;est là qu&amp;#8217;intervient le processus de &amp;#8220;vacuum&amp;#8221;, une fonctionnalité puissante et complexe qui peut jouer un rôle déterminant dans la performance et la stabilité de votre base de données PostgreSQL. Cependant, comme toute arme à double tranchant, le vacuum apporte à la fois des avantages considérables et des défis potentiels.&lt;/p&gt;&#xA;&lt;p&gt;Le principal reproche que l&amp;#8217;on peut adresser au système de vacuum (et à l&amp;#8217;auto-vacuum par extension) est sa consommation importante de ressources. C&amp;#8217;est l&amp;#8217;une des raisons majeures évoquées par les grandes entreprises qui optent pour un autre SGBD, &lt;a href=&#34;https://www.uber.com/blog/postgres-to-mysql-migration/&#34;&gt;comme Uber, qui a migré vers MySQL pour remplacer PostgreSQL&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/orioledb/orioledb&#34;&gt;OrioleDB &lt;/a&gt;nous propose une approche novatrice de la gestion de la fragmentation (bloat) et de l&amp;#8217;espace disque de vos tables PostgreSQL. La principale promesse de ce nouveau moteur développé par la société Oriole est d&amp;#8217;éliminer le besoin de vacuum régulier et de longues périodes de maintenance pour nos bases de données.&lt;/p&gt;&#xA;&lt;p&gt;Cette innovation s&amp;#8217;articule autour de journaux d&amp;#8217;annulation au niveau de la ligne et du bloc, ainsi que de la fusion automatique des pages. Les journaux d&amp;#8217;annulation au niveau des lignes et des blocs offrent un contrôle plus précis, permettant une gestion plus efficace des modifications de données. La fonction de fusion automatique des pages travaille en arrière-plan pour regrouper les données fragmentées, améliorant ainsi encore davantage l&amp;#8217;efficacité du système. Le moteur est actuellement disponible en version bêta sur le site d&amp;#8217;OrioleDB.&lt;/p&gt;&#xA;&lt;p&gt;Dans cet article, je vais vous montrer comment installer OrioleDB et réaliser un test comparatif entre une instance classique et une instance OrioleDB en termes d&amp;#8217;espace disque occupé. Je vais utiliser &lt;a href=&#34;https://capdata.fr/dbadistance&#34;&gt;notre agent AllDB de supervision des bases de données &lt;/a&gt;pour générer des graphiques de la consommation d&amp;#8217;espace disque.&lt;/p&gt;&#xA;&lt;h2&gt;Installation d&amp;#8217;OrioleDB :&lt;/h2&gt;&#xA;&lt;p&gt;Pour pouvoir tester le nouveau moteur, il nous faut l&amp;#8217;installer. Pour cela, deux solutions s&amp;#8217;offrent à nous. On peut choisir de le compiler nous-mêmes à partir du code source fourni par Oriole, ou on peut choisir d&amp;#8217;utiliser le conteneur Docker mis à notre disposition.&lt;/p&gt;&#xA;&lt;p&gt;Pour des raisons de rapidité de mise en place, j&amp;#8217;ai choisi d&amp;#8217;utiliser le conteneur fourni.&lt;/p&gt;&#xA;&lt;p&gt;Pour commencer, j&amp;#8217;installe Docker sur ma machine.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@ip-172-44-2-190:~$ sudo apt-get update&#xD;&#xA;(...)&#xD;&#xA;Reading package lists... Done&#xD;&#xA;root@ip-172-44-2-190:~$ sudo apt-get install ca-certificates curl gnupg&#xD;&#xA;Reading package lists... Done&#xD;&#xA;(...)&#xD;&#xA;No VM guests are running outdated hypervisor (qemu) binaries on this host.&#xD;&#xA;root@ip-172-44-2-190:~$ sudo install -m 0755 -d /etc/apt/keyrings&#xD;&#xA;root@ip-172-44-2-190:~$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg&#xD;&#xA;root@ip-172-44-2-190:~$ sudo chmod a+r /etc/apt/keyrings/docker.gpg&#xD;&#xA;root@ip-172-44-2-190:~$ echo \&#xD;&#xA;&amp;quot;deb [arch=&amp;quot;$(dpkg --print-architecture)&amp;quot; signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \&#xD;&#xA;&amp;quot;$(. /etc/os-release &amp;amp;amp;&amp;amp;amp; echo &amp;quot;$VERSION_CODENAME&amp;quot;)&amp;quot; stable&amp;quot; | \&#xD;&#xA;sudo tee /etc/apt/sources.list.d/docker.list &amp;amp;gt; /dev/null&#xD;&#xA;sudo apt-get update&#xD;&#xA;Hit:1 http://eu-west-3.ec2.archive.ubuntu.com/ubuntu jammy InRelease&#xD;&#xA;Hit:2 http://eu-west-3.ec2.archive.ubuntu.com/ubuntu jammy-updates InRelease&#xD;&#xA;(...)&#xD;&#xA;No VM guests are running outdated hypervisor (qemu) binaries on this host.&lt;/pre&gt;&#xA;&lt;p&gt;Pour tester que mon installation fonctionne correctement, je peux démarrer l&amp;#8217;image hello-world par défaut de Docker.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@ip-172-44-2-190:~$ sudo docker run hello-world&#xD;&#xA;Unable to find image &#39;hello-world:latest&#39; locally&#xD;&#xA;latest: Pulling from library/hello-world&#xD;&#xA;719385e32844: Pull complete&#xD;&#xA;Digest: sha256:4f53e2564790c8e7856ec08e384732aa38dc43c52f02952483e3f003afbf23db&#xD;&#xA;Status: Downloaded newer image for hello-world:latest&#xD;&#xA;&#xD;&#xA;Hello from Docker!&#xD;&#xA;This message shows that your installation appears to be working correctly.&#xD;&#xA;&#xD;&#xA;To generate this message, Docker took the following steps:&#xD;&#xA;1. The Docker client contacted the Docker daemon.&#xD;&#xA;2. The Docker daemon pulled the &amp;quot;hello-world&amp;quot; image from the Docker Hub.&#xD;&#xA;(amd64)&#xD;&#xA;3. The Docker daemon created a new container from that image which runs the&#xD;&#xA;executable that produces the output you are currently reading.&#xD;&#xA;4. The Docker daemon streamed that output to the Docker client, which sent it&#xD;&#xA;to your terminal.&#xD;&#xA;&#xD;&#xA;To try something more ambitious, you can run an Ubuntu container with:&#xD;&#xA;$ docker run -it ubuntu bash&#xD;&#xA;&#xD;&#xA;Share images, automate workflows, and more with a free Docker ID:&#xD;&#xA;https://hub.docker.com/&#xD;&#xA;&#xD;&#xA;For more examples and ideas, visit:&#xD;&#xA;https://docs.docker.com/get-started/&lt;/pre&gt;&#xA;&lt;p&gt;Docker est correctement installé, nous pouvons à présent aller récupérer l&amp;#8217;image Oriole depuis les dépôts (repositories). J&amp;#8217;ai choisi de récupérer l&amp;#8217;image &amp;#8220;latest&amp;#8221; de la version 14, avec laquelle je vais effectuer mes tests.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@ip-172-44-2-190:~# docker pull orioledb/orioledb:latest-pg14&#xD;&#xA;latest-pg14: Pulling from orioledb/orioledb&#xD;&#xA;7264a8db6415: Pull complete&#xD;&#xA;4e0888d8a332: Pull complete&#xD;&#xA;4b0510894ae7: Pull complete&#xD;&#xA;dc5da57566a1: Pull complete&#xD;&#xA;9611602787a1: Pull complete&#xD;&#xA;8f68f9452236: Pull complete&#xD;&#xA;5c92ed25d025: Pull complete&#xD;&#xA;11bb162cfe7a: Pull complete&#xD;&#xA;6f375d990892: Pull complete&#xD;&#xA;6ac166496e68: Pull complete&#xD;&#xA;Digest: sha256:4d408916e929ff0bcea11fee91ca5e69b0929be1afa58b5dbbcddcce340089ef&#xD;&#xA;Status: Downloaded newer image for orioledb/orioledb:latest-pg14&#xD;&#xA;docker.io/orioledb/orioledb:latest-pg14&lt;/pre&gt;&#xA;&lt;p&gt;On vérifie que notre image est bien présente, et on l&amp;#8217;éxecute :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@ip-172-44-2-190:~# docker image ls --all&#xD;&#xA;REPOSITORY TAG IMAGE ID CREATED SIZE&#xD;&#xA;orioledb/orioledb latest-pg14 cd7f629f705e 10 days ago 270MB&#xD;&#xA;hello-world latest 9c7a54a9a43c 4 months ago 13.3kB &lt;/pre&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@ip-172-44-2-190:~# docker run -e POSTGRES_PASSWORD=password cd7f629f705e&#xD;&#xA;The files belonging to this database system will be owned by user &amp;quot;postgres&amp;quot;.&#xD;&#xA;This user must also own the server process.&#xD;&#xA;&#xD;&#xA;The database cluster will be initialized with locale &amp;quot;en_US.utf8&amp;quot;.&#xD;&#xA;The default database encoding has accordingly been set to &amp;quot;UTF8&amp;quot;.&#xD;&#xA;The default text search configuration will be set to &amp;quot;english&amp;quot;.&#xD;&#xA;&#xD;&#xA;Data page checksums are disabled.&#xD;&#xA;&#xD;&#xA;fixing permissions on existing directory /var/lib/postgresql/data ... ok&#xD;&#xA;creating subdirectories ... ok&#xD;&#xA;selecting dynamic shared memory implementation ... posix&#xD;&#xA;selecting default max_connections ... 100&#xD;&#xA;selecting default shared_buffers ... 128MB&#xD;&#xA;selecting default time zone ... UTC&#xD;&#xA;creating configuration files ... ok&#xD;&#xA;running bootstrap script ... ok&#xD;&#xA;performing post-bootstrap initialization ... sh: locale: not found&#xD;&#xA;2023-09-21 09:51:08.177 UTC [30] WARNING: no usable system locales were found&#xD;&#xA;ok&#xD;&#xA;syncing data to disk ... ok&#xD;&#xA;&#xD;&#xA;Success. You can now start the database server using:&#xD;&#xA;&#xD;&#xA;pg_ctl -D /var/lib/postgresql/data -l logfile start&#xD;&#xA;&#xD;&#xA;initdb: warning: enabling &amp;quot;trust&amp;quot; authentication for local connections&#xD;&#xA;You can change this by editing pg_hba.conf or using the option -A, or&#xD;&#xA;--auth-local and --auth-host, the next time you run initdb.&#xD;&#xA;waiting for server to start....2023-09-21 09:51:09.294 UTC [36] LOG: OrioleDB public beta 2 started&#xD;&#xA;2023-09-21 09:51:09.295 UTC [36] LOG: starting PostgreSQL 14.9 OrioleDB public beta 2 PGTAG=patches14_16 alpine:3.18+clang-15 build:2023-09-10T16:41:50+00:00 on x86_64-pc-linux-musl, compiled by Alpine clang version 15.0.7, 64-bit&#xD;&#xA;2023-09-21 09:51:09.300 UTC [36] LOG: listening on Unix socket &amp;quot;/var/run/postgresql/.s.PGSQL.5432&amp;quot;&#xD;&#xA;2023-09-21 09:51:09.316 UTC [37] LOG: database system was shut down at 2023-09-21 09:51:08 UTC&#xD;&#xA;2023-09-21 09:51:09.316 UTC [38] LOG: orioledb background writer started&#xD;&#xA;2023-09-21 09:51:09.323 UTC [36] LOG: database system is ready to accept connections&#xD;&#xA;done&#xD;&#xA;server started&#xD;&#xA;&#xD;&#xA;/usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/*&#xD;&#xA;&#xD;&#xA;waiting for server to shut down...2023-09-21 09:51:09.350 UTC [36] LOG: received fast shutdown request&#xD;&#xA;.2023-09-21 09:51:09.353 UTC [36] LOG: aborting any active transactions&#xD;&#xA;2023-09-21 09:51:09.354 UTC [38] LOG: orioledb bgwriter is shut down&#xD;&#xA;2023-09-21 09:51:09.357 UTC [36] LOG: background worker &amp;quot;logical replication launcher&amp;quot; (PID 44) exited with exit code 1&#xD;&#xA;2023-09-21 09:51:09.357 UTC [39] LOG: shutting down&#xD;&#xA;2023-09-21 09:51:09.360 UTC [39] LOG: orioledb checkpoint 1 started&#xD;&#xA;2023-09-21 09:51:09.601 UTC [39] LOG: orioledb checkpoint 1 complete&#xD;&#xA;2023-09-21 09:51:09.631 UTC [36] LOG: database system is shut down&#xD;&#xA;done&#xD;&#xA;server stopped&#xD;&#xA;&#xD;&#xA;PostgreSQL init process complete; ready for start up.&#xD;&#xA;&#xD;&#xA;2023-09-21 09:51:09.712 UTC [1] LOG: OrioleDB public beta 2 started&#xD;&#xA;2023-09-21 09:51:09.764 UTC [1] LOG: starting PostgreSQL 14.9 OrioleDB public beta 2 PGTAG=patches14_16 alpine:3.18+clang-15 build:2023-09-10T16:41:50+00:00 on x86_64-pc-linux-musl, compiled by Alpine clang version 15.0.7, 64-bit&#xD;&#xA;2023-09-21 09:51:09.764 UTC [1] LOG: listening on IPv4 address &amp;quot;0.0.0.0&amp;quot;, port 5432&#xD;&#xA;2023-09-21 09:51:09.764 UTC [1] LOG: listening on IPv6 address &amp;quot;::&amp;quot;, port 5432&#xD;&#xA;2023-09-21 09:51:09.770 UTC [1] LOG: listening on Unix socket &amp;quot;/var/run/postgresql/.s.PGSQL.5432&amp;quot;&#xD;&#xA;2023-09-21 09:51:09.778 UTC [49] LOG: database system was shut down at 2023-09-21 09:51:09 UTC&#xD;&#xA;2023-09-21 09:51:09.778 UTC [50] LOG: orioledb background writer started&#xD;&#xA;2023-09-21 09:51:09.785 UTC [1] LOG: database system is ready to accept connections&#xD;&#xA;2023-09-21 09:54:23.633 UTC [68] FATAL: role &amp;quot;root&amp;quot; does not exist&#xD;&#xA;2023-09-21 09:56:09.884 UTC [51] LOG: orioledb checkpoint 2 started&#xD;&#xA;2023-09-21 09:56:10.100 UTC [51] LOG: orioledb checkpoint 2 complete &lt;/pre&gt;&#xA;&lt;p&gt;Notre serveur est correctement démarré. Nous pouvons maintenant nous y connecter à partir d&amp;#8217;un autre terminal et préparer le cas de test. Pour ce faire, nous allons créer une nouvelle base de données sur laquelle nous effectuerons un test de charge avec pg_bench.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@ip-172-44-2-190:~# docker ps&#xD;&#xA;CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES&#xD;&#xA;11c0860b7abc cd7f629f705e &amp;quot;docker-entrypoint.s…&amp;quot; 2 minutes ago Up 2 minutes 5432/tcp funny_hellman&#xD;&#xA;root@ip-172-44-2-190:~# docker exec -it 11c0860b7abc bash&#xD;&#xA;11c0860b7abc:/# su - postgres&#xD;&#xA;11c0860b7abc:~$ psql&#xD;&#xA;psql (14.9 OrioleDB public beta 2 PGTAG=patches14_16 alpine:3.18+clang-15 build:2023-09-10T16:41:50+00:00)&#xD;&#xA;Type &amp;quot;help&amp;quot; for help.&lt;/pre&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;postgres=# create database pg_bench;&#xD;&#xA;CREATE DATABASE&#xD;&#xA;postgres=# \c pg_bench&#xD;&#xA;You are now connected to database &amp;quot;pg_bench&amp;quot; as user &amp;quot;postgres&amp;quot;.&#xD;&#xA;pg_bench=# CREATE TABLE test (&#xD;&#xA;pg_bench(# id integer primary key,&#xD;&#xA;pg_bench(# value1 float8 not null,&#xD;&#xA;pg_bench(# value2 float8 not null,&#xD;&#xA;pg_bench(# value3 float8 not null,&#xD;&#xA;pg_bench(# value4 float8 not null,&#xD;&#xA;pg_bench(# ts timestamp not null&#xD;&#xA;pg_bench(# );&#xD;&#xA;CREATE TABLE&#xD;&#xA;pg_bench=# CREATE INDEX test_value1_idx ON test (value1);&#xD;&#xA;CREATE INDEX&#xD;&#xA;pg_bench=# CREATE INDEX test_value2_idx ON test (value2);&#xD;&#xA;CREATE INDEX&#xD;&#xA;pg_bench=# CREATE INDEX test_value3_idx ON test (value3);&#xD;&#xA;CREATE INDEX&#xD;&#xA;pg_bench=# CREATE INDEX test_value4_idx ON test (value4);&#xD;&#xA;CREATE INDEX&#xD;&#xA;pg_bench=# CREATE INDEX test_ts_idx ON test (ts);&#xD;&#xA;CREATE INDEX &lt;/pre&gt;&#xA;&lt;p&gt;Notre environnement de test est prêt. Afin de pouvoir comparer les performances avec une instance PostgreSQL plus traditionnelle, j&amp;#8217;ai également installé une version legacy en local sur la machine que j&amp;#8217;utilise. J&amp;#8217;ai créé la même table et les mêmes index que dans mon conteneur Docker. Pour réaliser ce test, j&amp;#8217;ai repris le script pg_bench de test fourni par Oriole.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;11c0860b7abc:~$ cat test.sql&#xD;&#xA;\set id random(1, 10000000)&#xD;&#xA;INSERT INTO test VALUES(:id, random(), random(), random(), random(), now() - random() * random() * 1800 * interval &#39;1 second&#39;)&#xD;&#xA;ON CONFLICT (id) DO UPDATE SET ts = now();&lt;/pre&gt;&#xA;&lt;p&gt;Ce petit script de test permet de lancer des insertions successives de données dans notre table de test. Il est conçu pour maximiser les chances de fragmentation à mesure que nous insérons des données dans notre table, car les doublons de clé primaire entraînent la mise à jour d&amp;#8217;anciennes lignes. Cela devrait donc nous permettre de constater la différence d&amp;#8217;espace disque entre une version standard de PostgreSQL et la version du moteur développée par Oriole.&lt;/p&gt;&#xA;&lt;h2&gt;Résultats des test :&lt;/h2&gt;&#xA;&lt;p&gt;Mes tests sont réalisés sur une machine Amazon EC2 de type &amp;#8220;large&amp;#8221;, équipée de 7 gigaoctets de RAM et de 2 unités de traitement central (CPU).&lt;/p&gt;&#xA;&lt;p&gt;Voici la capture d&amp;#8217;écran de l&amp;#8217;occupation de l&amp;#8217;espace disque pour le premier test, celui concernant l&amp;#8217;instance OrioleDB :&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.capdata.fr/wp-content/uploads/2023/10/OrioleDB.png&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; src=&#34;https://blog.capdata.fr/wp-content/uploads/2023/10/OrioleDB.png&#34; alt=&#34;&#34; width=&#34;1261&#34; height=&#34;345&#34; class=&#34;aligncenter size-full wp-image-10306&#34; srcset=&#34;https://blog.capdata.fr/wp-content/uploads/2023/10/OrioleDB.png 1261w, https://blog.capdata.fr/wp-content/uploads/2023/10/OrioleDB-300x82.png 300w, https://blog.capdata.fr/wp-content/uploads/2023/10/OrioleDB-1024x280.png 1024w, https://blog.capdata.fr/wp-content/uploads/2023/10/OrioleDB-768x210.png 768w&#34; sizes=&#34;(max-width: 1261px) 100vw, 1261px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;On peut observer que la progression de la taille de l&amp;#8217;instance est régulière et très modérée. Pendant le test, j&amp;#8217;ai surveillé l&amp;#8217;utilisation de la RAM de la machine, qui atteignait un pic à 95 % et demeurait relativement stable pendant toute la durée du test. Conformément à la promesse du moteur, aucun processus d&amp;#8217;autovacuum n&amp;#8217;a été constaté pendant le processus.&lt;/p&gt;&#xA;&lt;p&gt;En comparaison, le graphique de la base de données non Oriole présente une nette différence :&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.capdata.fr/wp-content/uploads/2023/10/nonOrioleDB.png&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; src=&#34;https://blog.capdata.fr/wp-content/uploads/2023/10/nonOrioleDB.png&#34; alt=&#34;&#34; width=&#34;1268&#34; height=&#34;345&#34; class=&#34;aligncenter size-full wp-image-10308&#34; srcset=&#34;https://blog.capdata.fr/wp-content/uploads/2023/10/nonOrioleDB.png 1268w, https://blog.capdata.fr/wp-content/uploads/2023/10/nonOrioleDB-300x82.png 300w, https://blog.capdata.fr/wp-content/uploads/2023/10/nonOrioleDB-1024x279.png 1024w, https://blog.capdata.fr/wp-content/uploads/2023/10/nonOrioleDB-768x209.png 768w&#34; sizes=&#34;(max-width: 1268px) 100vw, 1268px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;On observe notamment de nombreux pics et chutes fréquents dus aux vacuums organisés régulièrement. Le tracé n&amp;#8217;est pas linéaire.&lt;/p&gt;&#xA;&lt;p&gt;De plus, en surveillant les valeurs d&amp;#8217;utilisation CPU, à la différence d&amp;#8217;Oriole où les valeurs étaient constantes car il était toujours en train d&amp;#8217;ajouter des données, les moments de vacuum de la base provoquent d&amp;#8217;importantes montées de charge, suivies de chutes lorsque ces processus sont terminés sur notre instance de base.&lt;/p&gt;&#xA;&lt;h2&gt;Conclusion :&lt;/h2&gt;&#xA;&lt;p&gt;Sur le blog d&amp;#8217;OrioleDB, les graphiques affichés sont le résultat de l&amp;#8217;injection de 80 gigaoctets de données dans leur base de données à l&amp;#8217;aide de pg_bench. Cependant, lorsque l&amp;#8217;on examine les spécifications de la machine qu&amp;#8217;ils ont utilisée pour leurs tests, on se rend compte qu&amp;#8217;elle n&amp;#8217;est pas à la portée de toutes les bourses. La machine utilisée comprend en effet 72 CPU et dispose d&amp;#8217;un total de 144 Go de RAM, une configuration que très peu de personnes, principalement en raison du coût élevé de ce type de matériel, pourraient envisager pour leur infrastructure.&lt;/p&gt;&#xA;&lt;p&gt;Oriole fonctionne, comme nous l&amp;#8217;avons vu sur les graphiques que j&amp;#8217;ai commentés précédemment. Cependant, il s&amp;#8217;agit d&amp;#8217;un outil conçu pour les architectures de très grande envergure et les besoins importants en termes d&amp;#8217;entrées/sorties de données. Les gains ne sont pas aussi significatifs sur des machines de plus petite taille, qui correspondent davantage à la réalité de nombreuses entreprises actuelles.&lt;strong&gt;Continuez votre lecture sur le blog :&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul class=&#34;similar-posts&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/containeriser-une-base-de-donnees-postgresql-avec-docker/&#34; rel=&#34;bookmark&#34; title=&#34;23 septembre 2021&#34;&gt;Containeriser PostgreSQL avec Docker !&lt;/a&gt; (Emmanuel RAMI) [ContainerPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/pyrseas-et-postgresql-comparer-facilement-des-schema-de-base-de-donnees/&#34; rel=&#34;bookmark&#34; title=&#34;3 janvier 2023&#34;&gt;Pyrseas et Postgresql : Comparer facilement des schémas de base de données&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/cybertec-migrator-une-alternative-a-ora2pg/&#34; rel=&#34;bookmark&#34; title=&#34;10 mai 2023&#34;&gt;Cybertec Migrator : une alternative à ora2pg ?&lt;/a&gt; (Sarah FAVEERE) [OraclePostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/pg_recursively_delete-simplifier-les-suppressions-recursives/&#34; rel=&#34;bookmark&#34; title=&#34;3 avril 2024&#34;&gt;pg_recursively_delete : Simplifier les suppressions récursives&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/comparatif-des-gestionnaires-de-vip-dans-un-cluster-patroni-episode-1-keepalived/&#34; rel=&#34;bookmark&#34; title=&#34;6 mars 2022&#34;&gt;Comparatif des gestionnaires de VIP dans un cluster Patroni : épisode 1 (KEEPALIVED)&lt;/a&gt; (David Baffaleuf) [ContainerPostgreSQL]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;!-- Similar Posts took 2.985 ms --&gt;&lt;/p&gt;&#xA;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10248&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10248&amp;#038;title=OrioleDB%20%3A%20la%20promesse%20d%E2%80%99un%20No-Vacuum&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=OrioleDB%20%3A%20la%20promesse%20d%E2%80%99un%20No-Vacuum&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10248&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/orioledb-la-promesse-dun-no-vacuum/&#34;&gt;OrioleDB : la promesse d&amp;#8217;un No-Vacuum&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.capdata.fr/index.php/orioledb-la-promesse-dun-no-vacuum/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;La gestion efficace de l&amp;#8217;espace disque dans PostgreSQL est une préoccupation constante pour les administrateurs de bases de données. C&amp;#8217;est là qu&amp;#8217;intervient le processus de &amp;#8220;vacuum&amp;#8221;, une fonctionnalité puissante et complexe qui peut jouer un rôle déterminant dans la performance&amp;#8230; &lt;a href=&#34;https://blog.capdata.fr/index.php/orioledb-la-promesse-dun-no-vacuum/&#34; class=&#34;more-link&#34;&gt;Continuer la lecture &lt;span class=&#34;meta-nav&#34;&gt;&amp;#8594;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/orioledb-la-promesse-dun-no-vacuum/&#34;&gt;OrioleDB : la promesse d&amp;#8217;un No-Vacuum&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Emmanuel RAMI</name>
    </author>
  </entry>
  <entry>
    <title>Gestion des permissions sous PostgreSQL</title>
    <updated>2024-06-28T05:00:00Z</updated>
    <id>tag:blog.dalibo.com,2024-06-28://2024/06/28/permission.html</id>
    <link href="https://blog.dalibo.com//2024/06/28/permission.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;em&gt;Vallée de Munster, 28 juin 2024&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La gestion des permissions sous PostgreSQL peut parfois être la source&#xA;de certaines (mauvaises) surprises. Nous vous proposons un article qui a&#xA;pour objectif de donner quelques informations sur la gestion des droits,&#xA;et certaines problématiques rencontrées par certains clients qui&#xA;souhaitent permettre l’accès à une base à plusieurs rôles.&lt;/p&gt;&#xA;&#xA;&lt;!--MORE--&gt;&#xA;&#xA;&lt;figure style=&#34;float: right;padding: 10px;width: 200px;&#34;&gt;&#xA;  &lt;img style=&#34;padding: 0;&#34; src=&#34;/img/2024_keyboard.png&#34; alt=&#34;Clavier et clé&#34; /&gt;&#xA;  &lt;figcaption style=&#34;font-size: 10px;text-align: center; font-style: italic;&#34;&gt;Image by &lt;a href=&#34;https://pixabay.com/users/jeongguhyeok-645950/?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=621830&#34;&gt;GuHyeok Jeong&lt;/a&gt; from &lt;a href=&#34;https://pixabay.com//?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=621830&#34;&gt;Pixabay&lt;/a&gt;&lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h3 id=&#34;mise-en-place&#34;&gt;Mise en place&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Imaginons qu’il est demandé à un DBA (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt;) de donner l’accès à un&#xA;schéma (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v&lt;/code&gt; dans nos exemples) d’une base (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;db2&lt;/code&gt;) à plusieurs&#xA;rôles &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;daniel&lt;/code&gt;, &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt; et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Notre DBA va dans un premier temps initialiser une base, le schéma et&#xA;les rôles. Pour ce faire, il peut utiliser les commandes suivantes :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cat &lt;/span&gt;init.sql&#xA;&lt;span class=&#34;gp&#34;&gt;CREATE ROLE owner WITH LOGIN;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;CREATE DATABASE db2 OWNER owner;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;CREATE ROLE daniel WITH LOGIN;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;CREATE ROLE michel WITH LOGIN;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&#xA;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;psql &lt;span class=&#34;nt&#34;&gt;-f&lt;/span&gt; init.sql&#xA;&lt;span class=&#34;go&#34;&gt;CREATE ROLE&#xA;CREATE DATABASE&#xA;CREATE ROLE&#xA;CREATE ROLE&#xA;CREATE ROLE&#xA;GRANT ROLE&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Le rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt; peut maintenant créer un schéma au sein de la base &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;db2&lt;/code&gt;&#xA;(car il en est le propriétaire) :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;CREATE schema v&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;CREATE SCHEMA&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Et y créer une table qui va être utilisée pour nos tests :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;CREATE TABLE v.weather&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;city VARCHAR&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;50&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;CREATE TABLE&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Pour l’attribution des permissions, notre DBA a plusieurs options. Nous&#xA;vous proposons d’en voir quelques-unes dans la suite de l’article.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;donner-des-permissions-sur-les-objets-existants&#34;&gt;Donner des permissions sur les objets existants&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Après avoir validé ces accès, &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt; (qui est propriétaire de la base)&#xA;va créer des tables ou d’autres objets, et donner (avec la commande&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;GRANT&lt;/code&gt;) des accès aux autres rôles en fonction de ces besoins.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Par exemple, pour donner le droit de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SELECT&lt;/code&gt; sur notre table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;weather&lt;/code&gt;,&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt; peut utiliser la commande suivante :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GRANT SELECT ON TABLE v.weather TO daniel&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;GRANT&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Lorsque le rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;daniel&lt;/code&gt; essaye de lire le contenu de la table&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v.weather&lt;/code&gt;, PostgreSQL va lui renvoyer l’erreur suivante :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;daniel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;SELECT &lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; from v.weather&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;ERROR:  permission denied for schema v&#xA;LINE 1: SELECT * from v.weather&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;En effet, en complément du droit de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SELECT&lt;/code&gt; sur la table, le&#xA;propriétaire du schéma (ou un &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SUPERUSER&lt;/code&gt;) doit aussi permettre&#xA;l’utilisation de ce dernier. Cette modification se fait de la façon&#xA;suivante :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GRANT USAGE ON SCHEMA v TO daniel,michel&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;GRANT&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Après cette manipulation, l’utilisateur &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;daniel&lt;/code&gt; est maintenant en mesure&#xA;de consulter la table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v.weather&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;daniel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;SELECT &lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; from v.weather&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt; city &#xA;------&#xA;(0 rows)&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Nonobstant, l’ajout (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;INSERT&lt;/code&gt;) reste bien évidement (et heureusement)&#xA;impossible pour ce rôle :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;daniel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;INSERT INTO v.weather VALUES&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;x&#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;ERROR:  permission denied for table weather&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;h3 id=&#34;donner-des-permissions-sur-plusieurs-objets-dans-un-schéma&#34;&gt;Donner des permissions sur plusieurs objets dans un schéma&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Comme nous l’avons vu, la commande &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;GRANT&lt;/code&gt; permet de donner des droits&#xA;sur un ou plusieurs objets précis, en spécifiant le type de droit et le&#xA;schéma contenant lesdits objets.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Dans certains cas, on souhaite donner un ou plusieurs privilèges pour&#xA;l’ensemble des tables d’un schéma. (Par exemple, permettre à un ou&#xA;plusieurs rôles de lire les tables d’une application qui utilise un&#xA;schéma spécifique.) Pour répondre à ce besoin, PostgreSQL propose les&#xA;options du style &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;ALL &amp;lt;OBJECT&amp;gt; IN SCHEMA&lt;/code&gt;, où &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;OBJECT&lt;/code&gt; peut prendre&#xA;différentes valeurs (par exemple &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;TABLES&lt;/code&gt;, &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;FUNCTIONS&lt;/code&gt;, …).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Imaginons que notre DBA &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt; souhaite permettre à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;daniel&lt;/code&gt; de&#xA;consulter toutes les tables du schéma &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v&lt;/code&gt;, il peut donc lancer la&#xA;requête suivante (on ajoute au passage une table pour l’exercice) :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;CREATE TABLE v.country&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;name VARCHAR&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;50&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;CREATE TABLE&#xA;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GRANT SELECT ON ALL TABLES IN SCHEMA v TO daniel&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;GRANT&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;On constate que l’ajout des permissions fonctionne sans surprise :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;daniel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;SELECT &lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; from v.weather&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt; name&#xA;------&#xA;(0 rows)&#xA;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;daniel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;SELECT &lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; from v.country&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt; name&#xA;------&#xA;(0 rows)&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Mais que se passe-t-il lors de l’ajout d’une table dans notre schéma ?&#xA;Le rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;daniel&lt;/code&gt; pourra-t-il consulter une nouvelle table ?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Ajoutons une table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v.province&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;CREATE TABLE v.province&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;name VARCHAR&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;50&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;CREATE TABLE&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Et observons le comportement lors d’une tentative de lecture :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;daniel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;SELECT &lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; FROM v.province&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;ERROR:  permission denied for table province&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Cette erreur semble surprenante et incohérente. Surtout au regard de la&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/current/sql-grant.html&#34;&gt;documentation&lt;/a&gt;&#xA;qui ne semble pas loquace concernant ce fonctionnement déroutant :&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;em&gt;There is also an option to grant privileges on all objects of the&#xA;same type within one or more schemas. This functionality is currently&#xA;supported only for tables, sequences, functions, and procedures. ALL&#xA;TABLES also affects views and foreign tables, just like the&#xA;specific-object GRANT command. ALL FUNCTIONS also affects aggregate&#xA;and window functions, but not procedures, again just like the&#xA;specific-object GRANT command. Use ALL ROUTINES to include&#xA;procedures.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;En réalité, la commande &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;GRANT&lt;/code&gt; s’applique uniquement aux objets déjà en&#xA;place. Pour modifier les permissions des objets à venir, il est&#xA;nécessaire de modifier les privilèges par défaut en utilisant la&#xA;commande &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;ALTER DEFAULT PRIVILEGES&lt;/code&gt;. En s’appuyant uniquement sur la&#xA;commande &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;GRANT&lt;/code&gt;, les permissions devront évoluer à mesure des&#xA;évolutions (de contenu) du schéma.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;donner-des-accès-sur-tous-les-objets-existants-et-à-venir&#34;&gt;Donner des accès sur tous les objets (existants et à venir)&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Vu notre récente expérience avec l’ajout d’une table dans un schéma, et&#xA;la non-accessibilité de cette dernière par un rôle qui, pourtant,&#xA;s’était vu accorder le droit en lecture sur &lt;strong&gt;toutes les tables du&#xA;schéma (avec &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;ALL TABLES IN &amp;lt;mon_schema&amp;gt;&lt;/code&gt;)&lt;/strong&gt;, voyons comment pallier ce&#xA;problème via la commande &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;ALTER DEFAULT PRIVILEGES&lt;/code&gt; et les implications&#xA;possibles lorsque plusieurs rôles ont accès à un schéma.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Imaginons que notre DBA &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt; souhaite donner des accès à une table&#xA;(ou d’autres objets) déjà existante, mais aussi aux tables (objets)&#xA;futures. Pour cela l’utilisateur propriétaire (ou un &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SUPERUSER&lt;/code&gt;) doit&#xA;utiliser une combinaison de commandes &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;GRANT&lt;/code&gt; et&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;ALTER DEFAULT PRIVILEGES&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Par exemple, &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt; peut donner des privilèges (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SELECT&lt;/code&gt; pour les&#xA;tables existantes et à venir dans le schéma &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v&lt;/code&gt;) avec les commandes&#xA;suivantes :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GRANT SELECT ON ALL TABLES IN SCHEMA v TO daniel,michel&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ALTER DEFAULT PRIVILEGES IN SCHEMA v&#xA;&lt;span class=&#34;gp&#34;&gt;    GRANT SELECT ON TABLES TO daniel,michel;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;ALTER DEFAULT PRIVILEGES&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;On constate que les rôles &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;daniel&lt;/code&gt; et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt; peuvent lire le contenu&#xA;de cette table :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;daniel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;SELECT &lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; FROM v.weather&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt; city&#xA;------&#xA;(0 rows)&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;michel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;SELECT &lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; FROM v.weather&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt; city&#xA;------&#xA;(0 rows)&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Mais aussi des nouvelles tables ajoutées par &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;CREATE TABLE v.pays&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;city VARCHAR&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;50&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;CREATE TABLE&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;michel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;SELECT &lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; FROM v.pays&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt; city&#xA;------&#xA;(0 rows)&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Sur la base de ces tests, nous pouvons légitimement nous demander quel va&#xA;être le comportement si notre DBA &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt; donne la possibilité à&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt; d’écrire dans notre schéma &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Pour permettre la création de tables par &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt; dans le schéma &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v&lt;/code&gt;,&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt; doit lancer la commande suivante :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GRANT CREATE ON SCHEMA v TO michel&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;On constate ensuite que &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt; peut (toujours) lire le contenu de la&#xA;table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v.weather&lt;/code&gt;, mais aussi créer une nouvelle table dans le schéma&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;michel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;SELECT &lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; FROM v.weather&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt; city&#xA;------&#xA;(0 rows)&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;michel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;CREATE TABLE v.capital&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;name VARCHAR&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;50&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;CREATE TABLE&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Nous pouvons essayer de lire le contenu de cette nouvelle table avec le&#xA;rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;daniel&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;daniel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;SELECT &lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; FROM v.capital&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;ERROR:  permission denied for table capital&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Et constater de façon déroutante, que notre requête &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SELECT&lt;/code&gt;&#xA;dysfonctionne pour un problème de permission non accordée sur la table.&#xA;Cela peut paraître surprenant étant donné que &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt; a bien modifié les&#xA;privilèges par défaut pour permettre le &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SELECT&lt;/code&gt; sur les tables du&#xA;schéma &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v&lt;/code&gt; à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;daniel&lt;/code&gt; et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;En réalité cet accès n’est pas autorisé et ce pour plusieurs raisons :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;Le rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt; n’est pas propriétaire de la table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v.capital&lt;/code&gt;&#xA;    &lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\d&lt;/span&gt;t v.&lt;span class=&#34;k&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;         List of relations&#xA; Schema |   Name   | Type  | Owner&#xA;--------+----------+-------+--------&#xA; v      | capital  | table | michel&#xA; v      | country  | table | owner&#xA; v      | province | table | owner&#xA; v      | weather  | table | owner&#xA;(4 rows)&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;&#xA;  &lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;ALTER DEFAULT PRIVILEGES&lt;/code&gt; utilise de façon implicite le paramètre&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;FOR ROLE&lt;/code&gt; avec pour valeur (par défaut) le rôle connecté à la base&#xA;(dans notre cas, il s’agissait de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt;). Ce paramètre permet&#xA;d’indiquer qu’on modifie les privilèges par défaut pour les objets&#xA;créés uniquement par ce rôle. Dans notre cas, lors de la&#xA;modification des privilèges par défaut par &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt;, on aurait pu&#xA;expliciter cette valeur comme ceci :&#xA;    &lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ALTER DEFAULT PRIVILEGES FOR ROLE owner IN SCHEMA v&#xA;&lt;span class=&#34;gp&#34;&gt;    GRANT SELECT ON TABLES TO daniel,michel;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;&#xA;  &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Pour permettre à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;daniel&lt;/code&gt; de lire la table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v.capital&lt;/code&gt; ajoutée par&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt;, il existe plusieurs options :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;soit &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt; ou un &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SUPERUSER&lt;/code&gt; change les privilèges sur la table,&#xA;ou l’ensemble des tables du schéma, après création de ladite table&#xA;en utilisant la commande &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;GRANT&lt;/code&gt; ;&lt;/li&gt;&#xA;  &lt;li&gt;soit le rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt; (ou toujours un &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SUPERUSER&lt;/code&gt;) modifie les&#xA;privilèges par défaut &lt;strong&gt;avant&lt;/strong&gt; de créer sa table pour permettre aux&#xA;autres rôles de consulter ses tables en exécutant un&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;ALTER DEFAULT PRIVILEGES&lt;/code&gt; avec ou sans l’option &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;FOR ROLE&lt;/code&gt; en&#xA;fonction de qui est connecté à la base.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;À noter que, même si l’utilisateur &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;owner&lt;/code&gt; ne peut pas lire la table&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;capital&lt;/code&gt; créée par &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;SELECT &lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; FROM v.capital&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;ERROR:  permission denied for table capital&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;il reste propriétaire du schéma &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v&lt;/code&gt; et peut donc supprimer cette table :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;DROP TABLE v.capital&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;DROP TABLE&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;h3 id=&#34;groupes-de-rôles&#34;&gt;Groupes de rôles&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Une autre solution pour faciliter la gestion des permissions est&#xA;d’utiliser l’appartenance d’un rôle à un autre rôle (équivalent à un ou&#xA;des groupes). Par exemple, on pourrait imaginer un rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;write&lt;/code&gt; avec la&#xA;permission de créer des objets dans le schéma &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;v&lt;/code&gt;, et un second rôle&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;read&lt;/code&gt; avec le droit de lecture (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SELECT&lt;/code&gt;) sur les tables.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Sur base de ces rôles, on pourrait donner des permissions à nos DBA&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt; et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;daniel&lt;/code&gt; sans modifier directement leurs permissions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Par exemple pour créer les rôles (groupes) :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;postgres@~=#&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;CREATE ROLE write NOLOGIN&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;gp&#34;&gt;postgres@~=#&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;CREATE ROLE &lt;span class=&#34;nb&#34;&gt;read &lt;/span&gt;NOLOGIN&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GRANT USAGE ON SCHEMA v TO &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;GRANT&#xA;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GRANT CREATE,USAGE ON SCHEMA v TO write&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;GRANT&#xA;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;owner@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ALTER DEFAULT PRIVILEGES IN SCHEMA v&#xA;&lt;span class=&#34;gp&#34;&gt;    GRANT SELECT ON TABLES TO read;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;On peut maintenant ajouter nos rôles dans les rôles (groupes) &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;read&lt;/code&gt; et&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;write&lt;/code&gt; en fonction de nos besoins :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;postgres@~=#&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;GRANT write TO michel&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;GRANT&#xA;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;postgres@~=#&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;GRANT &lt;span class=&#34;nb&#34;&gt;read &lt;/span&gt;TO daniel&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;GRANT&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Cette solution, qui simplifie la vie des DBA, vient aussi avec certaines&#xA;contraintes. Par exemple, dans certaines situations les utilisateurs&#xA;doivent utiliser la commande &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SET ROLE&lt;/code&gt; pour modifier le rôle connecté,&#xA;afin de profiter des avantages de cette approche.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Par exemple :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;michel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;SET ROLE write&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &#xA;&lt;span class=&#34;gp&#34;&gt;michel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;CREATE TABLE v.state&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;city VARCHAR&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;50&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;gp&#34;&gt;michel@db2=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\d&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;         List of relations&#xA; Schema |  Name   | Type  | Owner&#xA;--------+---------+-------+--------&#xA; v      | state   | table | write&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Si &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt; oublie d’utiliser la commande &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SET ROLE&lt;/code&gt; à la création d’un&#xA;objet, il ne sera pas utilisable (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SELECT&lt;/code&gt; dans notre cas) par les&#xA;membres du rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;read&lt;/code&gt;, car la table appartiendra au rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt;, et&#xA;non au rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;write&lt;/code&gt;. Pour changer ce fonctionnement, il est possible&#xA;d’utiliser l’option &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;INHERIT&lt;/code&gt; (ou &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;NOINHERIT&lt;/code&gt;) lors de la création des&#xA;rôles : elle force en quelque sorte l’utilisation de la commande&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SET ROLE&lt;/code&gt; pour créer ou lire des objets (tables) avec le bon rôle.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Il est possible de combiner le paramètre &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;NOINHERIT&lt;/code&gt; avec l’utilisation&#xA;des commandes suivantes afin de forcer le passage par un rôle spécifique&#xA;lors de la connexion à une base :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;postgres@~=#&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ALTER ROLE michel IN DATABASE db2 SET ROLE write&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;ALTER&#xA;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;postgres@~=#&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ALTER ROLE daniel IN DATABASE db2 SET ROLE &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;go&#34;&gt;ALTER&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Ce qui aura pour effet de forcer l’utilisation du rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;write&lt;/code&gt; pour&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt; lors de la connexion à la base, et du rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;read&lt;/code&gt; pour&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;daniel&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Bien que cette solution semble plus élégante que distribuer des&#xA;permissions à un grand nombre de rôles, elle est aussi source de&#xA;quelques contraintes dont il faut tenir compte lors de la conception de&#xA;notre stratégie de définition des permissions :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;il n’est pas possible de prendre en charge des profils différents en&#xA;fonction du schéma, cette option semble uniquement paramétrable au&#xA;niveau de la base ;&lt;/li&gt;&#xA;  &lt;li&gt;la propriété des objets est « masquée » par le ou les rôles de&#xA;rôles. Dans notre exemple, lorsque &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;michel&lt;/code&gt; crée une table, elle&#xA;sera vue comme appartenant au rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;write&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;La gestion des permissions sous PostgreSQL va se complexifier, au fur et&#xA;à mesure que vos instances prendront une place de plus en plus&#xA;importante au sein de votre système d’information. Notre SGBD favori&#xA;offre un large éventail d’options pour paramétrer et définir les accès&#xA;et permissions. De par la complexité inhérente à toutes ces&#xA;possibilités, ne pas tomber dans un piège ou sur une configuration&#xA;inadaptée demande rigueur et maitrise de tous ces concepts.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Nous vous proposerons bientôt un second article pour présenter quelques&#xA;solutions afin de simplifier l’automatisation de l’attribution des&#xA;permissions. Nous y évoquerons entre autre les rôles prédéfinis&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_read_all_data&lt;/code&gt; et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_write_all_data&lt;/code&gt; disponibles depuis la version&#xA;14 de PostgreSQL.&lt;/p&gt;</summary>
    <author>
      <name>blog.dalibo.com</name>
    </author>
  </entry>
  <entry>
    <title>Les mains dans le cambouis #4 - Journaux de transactions</title>
    <updated>2024-06-14T05:00:00Z</updated>
    <id>tag:blog.dalibo.com,2024-06-14://2024/06/14/wal.html</id>
    <link href="https://blog.dalibo.com//2024/06/14/wal.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;em&gt;Lyon, le 14 juin 2024&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Notre série d’articles concernant le moteur PostgreSQL continue. Au programme&#xA;aujourd’hui : les journaux de transactions. Éléments incontournables de PostgreSQL,&#xA;les journaux de transactions (ou fichiers &lt;em&gt;WAL&lt;/em&gt;) sont essentiels au bon&#xA;fonctionnement d’une instance mais sont également au cœur du mécanisme de &#xA;sauvegarde PITR (Point In Time Recovery) et de réplication. Mais que contiennent-ils&#xA;exactement ?&lt;/p&gt;&#xA;&#xA;&lt;!--MORE--&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/img/2024-cambouis.jpg&#34; alt=&#34;moteur&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Plongeons dans les entrailles des journaux de transactions avec &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_waldump&lt;/code&gt; !&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;quésaco-&#34;&gt;Quésaco ?&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Le mécanisme de &lt;em&gt;Write-Ahead Logging&lt;/em&gt; (ou &lt;em&gt;WAL&lt;/em&gt;) est implémenté dans le moteur de&#xA;PostgreSQL. Le principe est assez simple : il s’agit de consigner l’ensemble &#xA;des modifications effectuées sur les données dans une série de journaux de&#xA;transactions, les &lt;em&gt;WAL&lt;/em&gt;. Chaque écriture est donc réalisée en mémoire, puis&#xA;consignée dans ces journaux. PostgreSQL les applique dans les fichiers de données&#xA;en tâche de fond, en lot et de manière régulière. Aussi, dans l’éventualité d’un &#xA;&lt;em&gt;crash&lt;/em&gt; où le contenu de la mémoire est alors perdu, il est possible de lire ces&#xA;journaux pour rejouer les opérations et revenir à un état cohérent de l’instance.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Belle présentation, n’est-ce pas ? Mais concrètement, qu’est-ce que c’est qu’un&#xA;&lt;em&gt;WAL&lt;/em&gt; ?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Commençons par ce qui est le plus simple. Un fichier WAL est un segment de 16 Mo&#xA;et se trouve par défaut dans le dossier &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_wal&lt;/code&gt; du &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;$PGDATA&lt;/code&gt;. Il est composé de&#xA;24 caractères.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-plaintext highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;ls -lh /var/lib/pgsql/16/data/pg_wal/&#xA;total 17M&#xA;-rw------- 1 postgres postgres  16M May 17 07:40 000000010000000000000001&#xA;drwx------ 2 postgres postgres 4.0K May 17 07:36 archive_status&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Le nom d’un segment comporte son numéro de &lt;em&gt;timeline&lt;/em&gt;, le numéro du WAL de 4&#xA;Go dont il fait partie et son numéro propre, le tout en hexadécimal. Si&#xA;nous prenons par exemple le premier fichier ci-dessus, nous trouvons :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;00000001&lt;/code&gt; : qui correspond à la &lt;em&gt;timeline&lt;/em&gt; &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;1&lt;/code&gt; ;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;00000000&lt;/code&gt; : qui correspond au journal &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;0&lt;/code&gt; de 4 Go ;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;00000001&lt;/code&gt; : qui correspond au segment &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;1&lt;/code&gt; du journal &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;0&lt;/code&gt;, de 16 Mo.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Il est possible de retrouver les informations du fichier WAL en cours&#xA;d’utilisation grâce aux fonctions &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_current_wal_lsn()&lt;/code&gt; et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_walfile_name()&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;postgres&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_current_wal_lsn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;pg_current_wal_lsn&lt;/span&gt; &#xA;&lt;span class=&#34;c1&#34;&gt;--------------------&lt;/span&gt;&#xA; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;D6FD8&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&#xA;&lt;span class=&#34;n&#34;&gt;postgres&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_walfile_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;0/19D6FD8&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;     &lt;span class=&#34;n&#34;&gt;pg_walfile_name&lt;/span&gt;      &#xA;&lt;span class=&#34;c1&#34;&gt;--------------------------&lt;/span&gt;&#xA; &lt;span class=&#34;mi&#34;&gt;000000010000000000000001&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Le résultat de la première fonction peut se lire de la manière suivante :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;0&lt;/code&gt; : est le numéro du WAL de 4 Go ;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;/1&lt;/code&gt; : est le numéro de segment (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;0x19D6FD8 / 0x1000000&lt;/code&gt;) ;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;9D6FD8&lt;/code&gt; : est l’emplacement de la prochaine écriture dans le segment (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;0x19D6FD8 % 0x1000000&lt;/code&gt;).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Comme expliqué un peu plus haut, les écritures sont faites de manière&#xA;séquentielle dans les fichiers WAL. Il est donc nécessaire de connaître&#xA;l’emplacement de la prochaine insertion dans le fichier WAL.&lt;/p&gt;&#xA;&#xA;&lt;!-- ![Cache PostgreSQL de 128 ko](/img/cambouis/strategie-acces-1.png) --&gt;&#xA;&#xA;&lt;h3 id=&#34;analyse-avec-loutil-pg_waldump&#34;&gt;Analyse avec l’outil &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_waldump&lt;/code&gt;&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Insérons une nouvelle ligne dans une table déjà existante et ne contenant &#xA;qu’une colonne de type entier : &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;insert into t1 values (1)&lt;/code&gt;. L’outil &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_waldump&lt;/code&gt;&#xA;va nous permettre de comprendre un peu plus ce qu’il se passe avec les WALs. Il&#xA;s’utilise de la manière suivante, où &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;000000010000000000000001&lt;/code&gt; est le nom du&#xA;fichier WAL courant et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;-f&lt;/code&gt; l’option qui permet de suivre en temps réel les&#xA;modifications.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-bash highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;/usr/pgsql-16/bin/pg_waldump &lt;span class=&#34;nt&#34;&gt;-f&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$PGDATA&lt;/span&gt;/pg_wal/000000010000000000000001&#xA;&#xA;&lt;span class=&#34;c&#34;&gt;# insert into t1 values (1);&lt;/span&gt;&#xA;rmgr: Heap        len &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;rec/tot&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;:     54/   186, tx:        745, lsn: 0/019D7010, prev 0/019D6FD8, desc: INSERT off: 3, flags: 0x00, blkref &lt;span class=&#34;c&#34;&gt;#0: rel 1663/16384/16385 blk 0 FPW&lt;/span&gt;&#xA;rmgr: Transaction len &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;rec/tot&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;:     34/    34, tx:        745, lsn: 0/019D70D0, prev 0/019D7010, desc: COMMIT 2024-05-17 07:44:16.298141 UTC&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Regardons la première ligne du &lt;em&gt;WAL&lt;/em&gt; après l’insertion. Plusieurs éléments sont&#xA;intéressants :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;745&lt;/code&gt; est l’identifiant de la transaction qui a effectué l’&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;INSERT&lt;/code&gt; ;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;lsn&lt;/code&gt; signifie &lt;em&gt;Log Segment Number&lt;/em&gt;. La valeur correspond bien à ce qui avait&#xA;été donné par &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_current_wal_lsn()&lt;/code&gt;. Il est suivi par le précédant &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;lsn&lt;/code&gt; &#xA;(&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;prev&lt;/code&gt;) ;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;desc&lt;/code&gt; indique l’opération exécutée ;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;off&lt;/code&gt; (pour &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;offset&lt;/code&gt;) détermine l’emplacement de l’écriture dans le bloc de&#xA;donnée ;&lt;/li&gt;&#xA;  &lt;li&gt;enfin, le champ &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;rel 1663/16384/16385&lt;/code&gt; est très intéressant car il indique&#xA;concrètement quel fichier est concerné par cette modification.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Sur les autres lignes d’autres éléments peuvent être notés, comme par exemple&#xA;l’horodatage du &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;COMMIT&lt;/code&gt; : &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;COMMIT 2024-05-17 07:44:16.298141 UTC&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Nous avons retrouvé l’identifiant de transaction grâce à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_waldump&lt;/code&gt;. Cette&#xA;valeur se retrouve également dans la colonne &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;xmin&lt;/code&gt; de la table en question. La&#xA;colonne &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;xmin&lt;/code&gt;, comme &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;xmax&lt;/code&gt;, est cachée par défaut, mais vous pouvez les&#xA;retrouver en les mentionnant explicitement.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;d1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;xmin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;xmax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;xmin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;xmax&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &#xA;&lt;span class=&#34;c1&#34;&gt;------+------+---&lt;/span&gt;&#xA;  &lt;span class=&#34;mi&#34;&gt;745&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;    &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Elle correspond à l’identifiant de la transaction qui a créé cette version de&#xA;la ligne. Si vous souhaitez en savoir plus sur cette mécanique de version de&#xA;ligne et de snapshot, allez jeter un œil sur notre module de formation&#xA;&lt;a href=&#34;https://public.dalibo.com/exports/formation/manuels/formations/dba2/dba2.handout.html#pr%C3%A9sentation-de-mvcc&#34;&gt;juste ici&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Ces journaux contiennent donc toutes les modifications, survenant dans&#xA;tous les fichiers de données et à quels emplacements. Pour reconstruire&#xA;une instance, il suffit de demander à PostgreSQL d’appliquer les &#xA;enregistrements contenus dans les journaux.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;influence-du-paramètre-wal_level&#34;&gt;Influence du paramètre wal_level&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Selon les besoins (réplication logique, sauvegarde &lt;em&gt;PITR&lt;/em&gt;), il est nécessaire de&#xA;modifier la quantité d’informations présentes dans ces fichiers WAL. Cette&#xA;configuration se fait grâce au paramètre &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;wal_level&lt;/code&gt;. Il peut prendre trois&#xA;valeurs : &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;minimal&lt;/code&gt;, &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;replica&lt;/code&gt; ou &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;logical&lt;/code&gt;. Par défaut, ce paramètre est&#xA;configuré à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;replica&lt;/code&gt;, ce qui est adapté pour la mise en place d’une réplication&#xA;physique, ou d’une sauvegarde &lt;em&gt;PITR&lt;/em&gt;.&#xA;Lorsque ce paramètre est positionné à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;logical&lt;/code&gt;, la quantité de données écrites dans&#xA;les &lt;em&gt;WAL&lt;/em&gt; est nettement supérieure. C’est l’objet de notre test de benchmark.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;benchmark&#34;&gt;Benchmark&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Encore une fois, l’outil &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pgbench&lt;/code&gt; est utilisé pour effectuer ce test.&#xA;L’idée est d’effectuer le même test de charge une première fois avec le&#xA;paramètre &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;wal_level&lt;/code&gt; positionné à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;minimal&lt;/code&gt;, puis à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;replica&lt;/code&gt; et enfin à&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;logical&lt;/code&gt;, puis de comparer la volumétrie de &lt;em&gt;WAL&lt;/em&gt; générée dans chacun des cas.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La base de données utilisée fait environ 50 Go et a été initialisée grâce à la&#xA;commande &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pgbench&lt;/code&gt; suivante :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-bash highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;pgbench &lt;span class=&#34;nt&#34;&gt;-i&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;-s&lt;/span&gt; 3400&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Le test s’est déroulé sur des périodes de 5 minutes (option &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;--time&lt;/code&gt; de la&#xA;commande) et avec la simulation de 10 clients (option &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;--client&lt;/code&gt;).&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-bash highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;pgbench &lt;span class=&#34;nt&#34;&gt;--time&lt;/span&gt; 300 &lt;span class=&#34;nt&#34;&gt;--client&lt;/span&gt; 10&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Les résultats de nos tests sont les suivants. Une augmentation de 4.5% d’espace&#xA;disque est à noter entre la configuration &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;minimal&lt;/code&gt; et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;replica&lt;/code&gt;. Une&#xA;augmentation d’environ 7.5% est à relever entre le mode &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;replica&lt;/code&gt; et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;logical&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/img/cambouis/wal-1.png&#34; alt=&#34;resultats&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;La configuration du paramètre &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;wal_level&lt;/code&gt; est incontournable lors de&#xA;l’installation de votre instance. Choisissez le paramètre qui vous convient selon&#xA;vos besoins. Ne le positionnez pas à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;logical&lt;/code&gt; si votre seul besoin est de&#xA;pouvoir retrouver votre instance après un crash (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;recovery&lt;/code&gt;), &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;minimal&lt;/code&gt; suffira&#xA;dans ce cas là.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Un certain adage dit que “Qui peut le plus, peut le moins !” … certes,&#xA;mais à quel prix ? Des écarts importants existent entre la volumétrie de WAL&#xA;générée selon le paramétrage de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;wal_level&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Cet article, un peu moins technique que les précédents, fait office d’une belle&#xA;piqûre de rappel sur ce qu’est un journal de transactions et de son utilité.&#xA;Savez-vous que les journaux de transactions sont intimement liés aux&#xA;&lt;em&gt;checkpoints&lt;/em&gt; ? Notre &lt;a href=&#34;https://dali.bo/202401_cambouis&#34;&gt;premier article&lt;/a&gt; donne quelques&#xA;détails là dessus. N’hésitez à aller le (re)lire.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Des questions, des commentaires ? &lt;a href=&#34;mailto:guillaume.lelarge@dalibo.com,pierrick.chovelon@dalibo.com?subject=[BLOG - commentaire] les mains dans le cambouis - wal&#34;&gt;Écrivez-nous !&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</summary>
    <author>
      <name>blog.dalibo.com</name>
    </author>
  </entry>
  <entry>
    <title>Sortie de PostgreSQL 17 bêta 1</title>
    <updated>2024-05-28T05:00:00Z</updated>
    <id>tag:blog.dalibo.com,2024-05-28://2024/05/28/pg17beta1.html</id>
    <link href="https://blog.dalibo.com//2024/05/28/pg17beta1.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;em&gt;Pont-à-Mousson, le 28 mai 2024&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La semaine dernière, le PostgreSQL Global Development Group a annoncé la sortie de la &lt;strong&gt;première version bêta de la version majeure 17&lt;/strong&gt;. Jetons un œil sur ce que contient cette nouvelle version.&lt;/p&gt;&#xA;&#xA;&lt;!--MORE--&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/img/portrait_guillaume.jpg&#34; alt=&#34;portrait de Guillaume&#34; style=&#34;float: right; padding:10px;&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;les-nouveautés&#34;&gt;Les nouveautés&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Parmi les nouveautés attendues sur les performances, notons des améliorations sur les opérations de maintenance (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;VACUUM&lt;/code&gt; et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;ANALYZE&lt;/code&gt;). Les requêtes utilisant des CTE sont optimisées. Les index B-Tree et BRIN profitent aussi de belles améliorations, les premiers lorsqu’ils sont utilisés pour des clauses &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;IN&lt;/code&gt;, les seconds pour des constructions parallélisées. Les contraintes &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;NOT NULL&lt;/code&gt; sont mieux prises en compte pour optimiser l’exécution des requêtes.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Le standard SQL/JSON a évolué avec l’ajout des fonctionnalités de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;SQL_TABLE&lt;/code&gt; et l’ajout du constructeur SQL/JSON. Ces fonctionnalités étaient prévues pour la version 15 mais ont dû attendre suite à des soucis sur leur design à l’époque. La commande &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;MERGE&lt;/code&gt; permet enfin d’utiliser la clause &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;RETURNING&lt;/code&gt; et gère en plus les vues.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Au niveau de la sécurité, le rôle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_maintain&lt;/code&gt;, qui a été recalé de la version 16, apparaît enfin pour donner à des utilisateurs simples le droit d’exécuter des opérations de maintenance comme &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;VACUUM&lt;/code&gt;, &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;ANALYZE&lt;/code&gt;, &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;REINDEX&lt;/code&gt;, etc.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La supervision n’est pas en reste avec une nouvelle vue, appelée &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_stat_checkpointer&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Dans les fonctionnalités qui m’intéressent le plus, je note :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;la nouvelle option &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;ON_ERROR&lt;/code&gt; de la commande &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;COPY&lt;/code&gt; qui permet de continuer un batch d’insertion, y compris en cas d’erreur sur quelques lignes ;&lt;/li&gt;&#xA;  &lt;li&gt;les sauvegardes incrémentales avec l’outil &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_basebackup&lt;/code&gt; ;&lt;/li&gt;&#xA;  &lt;li&gt;le fournisseur de collation interne (sémantique identique à la collation &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;C&lt;/code&gt; mais sur un encodage &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;UTF-8&lt;/code&gt; ;&lt;/li&gt;&#xA;  &lt;li&gt;la vue &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_stat_progress_vacuum&lt;/code&gt; indique enfin la progression dans le traitement des index.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Évidemment, ce ne sont que quelques nouveautés (certes, les plus importantes). L’&lt;a href=&#34;https://www.postgresql.org/about/news/postgresql-17-beta-1-released-2865/&#34;&gt;annonce officielle&lt;/a&gt; donne plus de détails. Et pour les curieux, les &lt;a href=&#34;https://www.postgresql.org/docs/17/release-17.html&#34;&gt;Release Notes de la version 17&lt;/a&gt; sont évidemment la source la plus complète.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;dalibo-et-la-version-17&#34;&gt;Dalibo et la version 17&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;En ce qui concerne Dalibo, nous allons entamer cet été un effort pour nous mettre à jour sur cette version. Comme chaque année, cela se passe en deux étapes :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;la création d’un workshop sur les nouveautés de la version 17,&lt;/li&gt;&#xA;  &lt;li&gt;et la mise à jour de nos modules de formation.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;La version 17 finale devrait être disponible en septembre ou octobre 2024.&lt;/p&gt;</summary>
    <author>
      <name>blog.dalibo.com</name>
    </author>
  </entry>
  <entry>
    <title>Les mains dans le cambouis #3 - Les stratégies d&#39;accès aux buffers</title>
    <updated>2024-03-26T05:00:00Z</updated>
    <id>tag:blog.dalibo.com,2024-03-26://2024/03/26/strategies-acces.html</id>
    <link href="https://blog.dalibo.com//2024/03/26/strategies-acces.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;em&gt;Lyon, le 26 mars 2024&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Voici le troisième article de notre série pour essayer de comprendre davantage&#xA;le moteur PostgreSQL. Après avoir décortiqué le mécanisme de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;TOAST&lt;/code&gt; (voir notre&#xA;précédent &lt;a href=&#34;https://dali.bo/202402_cambouis2&#34;&gt;article&lt;/a&gt;), attardons-nous sur quelque chose de plus &lt;em&gt;pointu&lt;/em&gt; : l’accès aux &lt;em&gt;buffers&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;!--MORE--&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/img/2024-cambouis.jpg&#34; alt=&#34;moteur&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Nous allons voir comment PostgreSQL fait en sorte que l’accès aux &lt;em&gt;buffers&lt;/em&gt; ne&#xA;soit pas trop chaotique en se focalisant sur les &lt;strong&gt;stratégies d’accès&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/img/portrait_pierrick-nb.png&#34; alt=&#34;Pierrick Chovelon&#34; style=&#34;float: right; padding:10px; width:120px;&#34; /&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;quésaco-&#34;&gt;Quésaco ?&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Une &lt;strong&gt;stratégie d’accès&lt;/strong&gt; est un moyen mis en œuvre pour contrôler l’utilisation&#xA;des &lt;em&gt;buffers&lt;/em&gt; de la mémoire partagée (&lt;em&gt;shared buffers&lt;/em&gt;) de PostgreSQL.&#xA;Le principe est de limiter le nombre de blocs du cache utilisables par une&#xA;opération afin qu’elle n’impacte pas trop les autres opérations en train de&#xA;s’exécuter. Par opération, il s’agit de tout processus qui nécessite d’accéder,&#xA;en lecture ou écriture, au cache de PostgreSQL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Prenons un exemple assez simple d’un cache PostgreSQL de 128 ko (taille&#xA;minimale acceptée par le paramètre &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;shared_buffers&lt;/code&gt;). Représentons le de la&#xA;manière suivante :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/img/cambouis/strategie-acces-1.png&#34; alt=&#34;Cache PostgreSQL de 128 ko&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;et prenons l’exemple d’un &lt;em&gt;client backend&lt;/em&gt; exécutant une opération devant&#xA;accéder à quelques &lt;em&gt;buffers&lt;/em&gt;. D’autres processus (d’autres clients, notamment) accèdent également aux&#xA;&lt;em&gt;buffers&lt;/em&gt; restants.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/img/cambouis/strategie-acces-2.png&#34; alt=&#34;Utilisation des _buffers_&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Supposons que ce &lt;em&gt;client backend&lt;/em&gt; lise beaucoup de blocs, qui se retrouvent dans le cache&#xA;mémoire. Si aucune limite n’est appliquée, cela impacterait le&#xA;cache disponible pour les autres processus. Nous comprenons facilement que les&#xA;autres processus seraient fortement impactés (temps d’exécution plus longs, demandes de&#xA;lectures sur disques plus nombreuses…).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/img/cambouis/strategie-acces-3.png&#34; alt=&#34;Monopolisation des ressources par le _client backend_&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Pour parer à cela, PostgreSQL peut appliquer une « stratégie&#xA;d’accès ». Elle définit un nombre limité de blocs en&#xA;cache destinés à être réutilisés cycliquement (on parle aussi de &lt;em&gt;ring buffer&lt;/em&gt;).&#xA;Jusqu’à la version 15, PostgreSQL limite l’accès à 256 ko du cache au &lt;em&gt;client backend&lt;/em&gt;. Dans notre exemple, on considère la valeur de 64ko, soit la moitié de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;shared_buffers&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/img/cambouis/strategie-acces-4.png&#34; alt=&#34;Limitation de l&#39;accès&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Les autres processus ne verront donc pas leurs ressources leur être retirées.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Si le &lt;em&gt;client backend&lt;/em&gt; a besoin de charger de nouvelles données alors qu’il&#xA;utilise déjà les 64 ko alloués, il devra d’abord recycler un bloc.&#xA;Ce recyclage pourra mener à une écriture sur disque des données (&lt;em&gt;flush&lt;/em&gt;).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;PostgreSQL n’applique une stratégie d’accès aux &lt;em&gt;buffers&lt;/em&gt; que pour certaines&#xA;opérations bien définies, comme des opérations de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;VACUUM&lt;/code&gt;, de&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;COPY&lt;/code&gt;, ou de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;Seq Scan&lt;/code&gt; sur des tables volumineuses. Les stratégies ne sont pas&#xA;tout à fait les mêmes selon l’opération, mais le principe reste le même :&#xA;éviter qu’une opération utilisant de nombreux blocs n’en remplisse le cache.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;paramètre-vacuum_buffer_usage_limit&#34;&gt;Paramètre &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;vacuum_buffer_usage_limit&lt;/code&gt;&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;La version 16 embarque une nouveauté très intéressante qui permet de configurer&#xA;la stratégie d’accès aux &lt;em&gt;buffers&lt;/em&gt; pour les opérations de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;VACUUM&lt;/code&gt; et&#xA;d’&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;ANALYZE&lt;/code&gt; : le paramètre &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;vacuum_buffer_usage_limit&lt;/code&gt;. Vous pouvez retrouver le&#xA;&lt;em&gt;commit&lt;/em&gt; associé à cette nouveauté&#xA;&lt;a href=&#34;https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=1cbbee03385763b066ae3961fc61f2cd01a0d0d7&#34;&gt;ici&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Par défaut à 256 ko, cette valeur peut être configurée jusqu’à 16 Go. Il est&#xA;toutefois impossible de le configurer à plus de 1/8ᵉ du paramètre&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;shared_buffers&lt;/code&gt;. Si c’est le cas, PostgreSQL le reconfigure&#xA;silencieusement pour respecter cette limite. Enfin, il est possible de le&#xA;positionner à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;0&lt;/code&gt;. Dans ce cas là, aucune limite n’existe et l’opération pourra&#xA;utiliser autant de &lt;em&gt;buffers&lt;/em&gt; du cache PostgreSQL qu’elle le souhaite.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Ouvrons une rapide parenthèse concernant le risque de &lt;em&gt;wraparound&lt;/em&gt; des identifiants de&#xA;transactions. Depuis la version 14 de PostgreSQL, il existe un mécanisme de&#xA;protection (&lt;em&gt;failsafe&lt;/em&gt;) qui permet d’exécuter un &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;VACUUM&lt;/code&gt; si l’identifiant le plus ancien&#xA;d’une table est trop loin dans le passé (le &lt;em&gt;commit&lt;/em&gt; associé à cette nouveauté&#xA;peut être retrouvé&#xA;&lt;a href=&#34;https://git.postgresql.org/gitweb/?p=postgresql.git;a=commitdiff;h=1e55e7d1755cefbb44982fbacc7da461fa8684e6&#34;&gt;ici&lt;/a&gt;).&#xA;En version 16, lorsque ce mécanisme se déclenche, la stratégie d’accès est&#xA;désactivée et autorise donc l’opération à accéder à tous les &lt;em&gt;buffers&lt;/em&gt;&#xA;disponibles pour se faire au plus vite.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;When the failsafe is triggered, any cost-based delay that is in effect will no&#xA;longer be applied, further non-essential maintenance tasks (such as index&#xA;vacuuming) are bypassed, and any Buffer Access Strategy in use will be&#xA;disabled resulting in VACUUM being free to make use of all of shared buffers.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;h3 id=&#34;benchmark&#34;&gt;Benchmark&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;L’idée de notre test est de voir l’influence de ce paramètre (qu’elle soit&#xA;positive ou négative) sur une opération de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;VACUUM&lt;/code&gt;. Ce paramètre est ajustable&#xA;avec l’option &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;BUFFER_USAGE_LIMIT&lt;/code&gt; de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;VACUUM&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;L’outil &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pgbench&lt;/code&gt; a été utilisé pour créer une base de données de&#xA;test et avoir une situation de départ identique pour chaque test.&#xA;30 millions de lignes sont insérées et un tiers sont mises à jour pour que &#xA;l’opération de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;VACUUM&lt;/code&gt; ait une bonne raison de travailler.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Le &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;VACUUM&lt;/code&gt; a été lancé avec l’option &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;BUFFER_USAGE_LIMIT&lt;/code&gt; positionnée à 0, 256,&#xA;1024 et enfin 4096. Pour chaque test, des statistiques sur les I/O et les&#xA;journaux de transaction (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;WAL&lt;/code&gt;) ont été rélevées.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Voici les résultats obtenus :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/img/cambouis/strategie-acces-res-1.png&#34; alt=&#34;Temps d&#39;exécution&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Première conclusion évidente : plus la mémoire attribuée à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;VACUUM&lt;/code&gt; est grande,&#xA;plus le temps d’exécution est rapide.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/img/cambouis/strategie-acces-res-2.png&#34; alt=&#34;Statistiques I/O&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Le compteur &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;WRITES&lt;/code&gt; (extrait de la vue &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_stat_io&lt;/code&gt;) montre que lorsque l’accès&#xA;aux &lt;em&gt;buffers&lt;/em&gt; n’est pas limité, il est moins nécessaire de demander au système&#xA;des écritures disques (&lt;em&gt;flush&lt;/em&gt;). Pour les autres cas, les nombres de demandes&#xA;sont identiques.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/img/cambouis/strategie-acces-res-3.png&#34; alt=&#34;Statistiques WALs&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;wal_sync&lt;/code&gt; (de la vue &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_stat_wal&lt;/code&gt;) indique le nombre de fois où les fichiers de&#xA;transactions ont été synchronisés sur disque. Là encore, une nette différence&#xA;est présente lorsqu’aucune limite n’est appliquée. 49&#x9;opérations &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;fsync&lt;/code&gt; ont été&#xA;nécessaires lorsque &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;BUFFER_USAGE_LIMIT&lt;/code&gt; est à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;0&lt;/code&gt; contre 12018 avec la&#xA;configuration par défaut. Comme souvent avec PostgreSQL, il est possible d’en&#xA;savoir un peu plus grâce aux commentaires du code source. En l’occurrence, le&#xA;fichier &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;postgresql/src/backend/storage/buffer/README&lt;/code&gt; apporte une explication&#xA;sur le résultat obtenu :&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;em&gt;VACUUM uses a ring like sequential scans, however, the size of this ring is&#xA;controlled by the vacuum_buffer_usage_limit GUC.  Dirty pages are not removed&#xA;from the ring.  Instead, WAL is flushed if needed to allow reuse of the&#xA;_buffers.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Les journaux de transaction associés aux écritures d’un VACUUM sont synchronisés sur disque lorsqu’il faut réutiliser les buffers correspondants en mémoire partagée. Plus grand est le &lt;em&gt;ring buffer&lt;/em&gt;, moins fréquentes sont ces synchronisations.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Ces résultats montrent que l’exécution de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;VACUUM&lt;/code&gt; peut être améliorée en&#xA;modifiant le paramètre contrôlant l’accès aux &lt;em&gt;shared_buffers&lt;/em&gt;. Pour autant, il&#xA;ne faut pas oublier qu’en ne limitant pas l’accès aux &lt;em&gt;shared_buffers&lt;/em&gt;, les&#xA;autres requêtes et traitements seront impactées et leurs performances dégradées.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Il est tout à fait imaginable de positionner ce paramètre à 0 dans le cas d’une&#xA;plage de maintenance où il serait possible d’utiliser le maximum de mémoire&#xA;partagée pour des opérations de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;VACUUM&lt;/code&gt;. Aussi, après une restauration d’une&#xA;grande quantité de données, lancer un &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;ANALYZE&lt;/code&gt; est une bonne pratique. Ce&#xA;traitement pourrait être accéléré en modifiant &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;BUFFER_USAGE_LIMIT&lt;/code&gt;. Voilà une&#xA;idée de benchmark que vous pouvez faire.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Et voilà, c’est la fin de cet article &lt;strong&gt;des mains dans le cambouis&lt;/strong&gt;. Nous&#xA;venons d’appréhender une nouvelle partie du moteur PostgreSQL. &#xA;Les &lt;strong&gt;stratégies d’accès&lt;/strong&gt; sont essentielles au bon fonctionnement de&#xA;l’instance. En profitant d’une nouveauté apportée par la version 16, nous avons&#xA;vu qu’il est possible d’améliorer le traitement de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;VACUUM&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Des questions, des commentaires ? &lt;a href=&#34;mailto:guillaume.lelarge@dalibo.com,pierrick.chovelon@dalibo.com?subject=[BLOG - commentaire] les mains dans le cambouis - buffers&#34;&gt;Écrivez-nous !&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</summary>
    <author>
      <name>blog.dalibo.com</name>
    </author>
  </entry>
  <entry>
    <title>Les mains dans le cambouis #2 - Le mécanisme de TOAST</title>
    <updated>2024-02-27T06:00:00Z</updated>
    <id>tag:blog.dalibo.com,2024-02-27://2024/02/27/toast.html</id>
    <link href="https://blog.dalibo.com//2024/02/27/toast.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;em&gt;Lyon, le 27 février 2024&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Nouvel article dans notre série &lt;strong&gt;Les mains dans le cambouis&lt;/strong&gt; !&#xA;Après avoir évoqué les &lt;em&gt;checkpoints&lt;/em&gt; lors du premier article (si vous ne l’avez&#xA;pas lu, vous pouvez le retrouver&#xA;&lt;a href=&#34;https://dali.bo/202401_cambouis&#34;&gt;ici&lt;/a&gt;), nous vous &#xA;proposons aujourd’hui de mettre les mains dans le cambouis du&#xA;mécanisme de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;TOAST&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;!--MORE--&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/img/2024-cambouis.jpg&#34; alt=&#34;moteur&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/img/portrait_pierrick-nb.png&#34; alt=&#34;Pierrick Chovelon&#34; style=&#34;float: right; padding:10px; width:120px;&#34; /&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;quésaco-&#34;&gt;Quésaco ?&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;TOAST&lt;/code&gt; est le raccourci de &lt;em&gt;The Oversized-Attribute Storage Technique&lt;/em&gt;.&#xA;Essayons, rien qu’à la lecture de ces mots, de comprendre de quoi il pourrait&#xA;s’agir :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;&lt;em&gt;Oversized-Attribute&lt;/em&gt; : il est question d’un attribut. Sa taille dépasserait&#xA;un certain seuil puisque qu’il est qualifié de &lt;em&gt;Oversized&lt;/em&gt; ;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;em&gt;Storage&lt;/em&gt; : on comprend que cela va traiter du stockage des&#xA;données, donc très probablement sur disque ;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;em&gt;Technique&lt;/em&gt; : laisse penser qu’un mécanisme a été trouvé pour arriver à&#xA;stocker ces données qui seraient trop &lt;em&gt;volumineuses&lt;/em&gt; .&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Nous avons vu dans le précédent article que PostgreSQL travaille avec des blocs&#xA;mémoire de 8 ko pour les &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;shared_buffers&lt;/code&gt;. C’est également le cas avec les blocs&#xA;de données. Vérifions cette dernière affirmation avec la création d’une table et&#xA;regardons, après une insertion, la taille du fichier sur le disque.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;postgres&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;create&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Le fichier associé dans l’arborescence de la base est le fichier &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;17253&lt;/code&gt;. À sa&#xA;création, sa taille est nulle, mais après l’insertion d’un entier, 8 ko&#xA;sont utilisés.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-bash highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;nv&#34;&gt;$ &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;-alh&lt;/span&gt; 17253 &#xA;&lt;span class=&#34;nt&#34;&gt;-rw-------&lt;/span&gt; 1 pierrick pierrick 8,0K janv. 12 14:39 17253&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;En plus de travailler avec des blocs de 8 ko, PostgreSQL n’autorise pas à ce&#xA;qu’une ligne puisse être sur plusieurs blocs en même temps. Peu d’applications&#xA;pourraient fonctionner avec une telle limite… &#xA;&lt;!-- dire qu&#39;on ne va pas parler de cet choix là ? --&gt;&#xA;Comment faire, donc, pour stocker des lignes pour lesquelles des éléments de&#xA;plusieurs kilo-octets doivent être stockés ?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Il existerait bien un moyen pour arriver à cela : par exemple il suffit de&#xA;supprimer les octets en trop… mais bon, c’est sûrement un peu trop radical 😅.&#xA;Blague à part, dans PostgreSQL deux méthodes permettent de réduire&#xA;la taille des données :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;la compression ;&lt;/li&gt;&#xA;  &lt;li&gt;le découpage en &lt;em&gt;tranches&lt;/em&gt; plus petites (tranches - toast, vous avez le lien ? 🍞).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Le choix de la méthode de réduction se fait grâce à la politique de stockage utilisée.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;politiques-de-stockage&#34;&gt;Politiques de stockage&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Chaque type de donnée (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;integer&lt;/code&gt;, &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;varchar&lt;/code&gt;, &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;text&lt;/code&gt;…) possède une politique&#xA;de stockage. Pour certains types, elle est immuable (type de données à taille fixe),&#xA;pour d’autres, il est possible de la modifier. Selon la politique de stockage,&#xA;PostgreSQL va compresser les données et, si la taille n’est toujours pas passée&#xA;en dessous du seuil limite, décidera de les découper. La politique de stockage&#xA;d’un type peut être trouvée dans la colonne &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;typstorage&lt;/code&gt; de la table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_type&lt;/code&gt;.&#xA;La voici pour quelques types bien connus :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-plaintext highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt; typname | typstorage &#xA;---------+------------&#xA; int4    | p&#xA; text    | x&#xA; json    | x&#xA; varchar | x&#xA; numeric | m&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Il en existe quatre différentes (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;p&lt;/code&gt;, &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;m&lt;/code&gt;, &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;e&lt;/code&gt; et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;x&lt;/code&gt;) et chaque politique permet&#xA;certaines choses. Voici un tableau résumé de ce qu’elles permettent de faire :&lt;/p&gt;&#xA;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;Lettre&lt;/th&gt;&#xA;      &lt;th style=&#34;text-align: center&#34;&gt;Compression&lt;/th&gt;&#xA;      &lt;th style=&#34;text-align: center&#34;&gt;Découpage&lt;/th&gt;&#xA;    &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;td&gt;p : Plain&lt;/td&gt;&#xA;      &lt;td style=&#34;text-align: center&#34;&gt;Non&lt;/td&gt;&#xA;      &lt;td style=&#34;text-align: center&#34;&gt;Non&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;td&gt;m : Main&lt;/td&gt;&#xA;      &lt;td style=&#34;text-align: center&#34;&gt;&lt;strong&gt;Oui&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;td style=&#34;text-align: center&#34;&gt;&lt;strong&gt;Oui&lt;/strong&gt;*&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;td&gt;e : External&lt;/td&gt;&#xA;      &lt;td style=&#34;text-align: center&#34;&gt;Non&lt;/td&gt;&#xA;      &lt;td style=&#34;text-align: center&#34;&gt;&lt;strong&gt;Oui&lt;/strong&gt;&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;td&gt;x : Extended&lt;/td&gt;&#xA;      &lt;td style=&#34;text-align: center&#34;&gt;&lt;strong&gt;Oui&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;td style=&#34;text-align: center&#34;&gt;&lt;strong&gt;Oui&lt;/strong&gt;&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Bien que les politiques &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;main&lt;/code&gt; et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;extended&lt;/code&gt; permettent la compression et le&#xA;découpage, des différences existent. L’une d’entre elles est le fait qu’une&#xA;colonne &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;main&lt;/code&gt; sera découpée qu’en dernier recours, donc après des colonnes&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;extended&lt;/code&gt;.&lt;/em&gt; &#xA;&lt;!-- &#xA;https://www.postgresql.org/message-id/21018.1189175470%40sss.pgh.pa.us&#xA;--&gt;&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;compression&#34;&gt;Compression&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Pour les politiques qui le permettent, la compression peut être déclenchée sur&#xA;la donnée à insérer. &#xA;&lt;!-- fixme expliquer quand elle se déclenche ?--&gt;&#xA;Il existe actuellement deux méthodes de compression supportées par PostgreSQL :&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pglz&lt;/code&gt; (défaut) et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;lz4&lt;/code&gt; (cette dernière depuis la version 14). L’idée de ce qui va suivre est de voir les&#xA;différences notables entre ces deux méthodes de compression.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Prenons l’exemple d’une simple insertion de 8192 caractères dans un champ&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;text&lt;/code&gt; qui a comme politique de stockage &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;plain&lt;/code&gt;. Cette politique impose que&#xA;toutes les données soient stockées dans la table et sans compression comme&#xA;l’indique le tableau du paragraphe précédent.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;postgres&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;create&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;database&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;DATABASE&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;postgres&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;You&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;are&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;now&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;connected&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;database&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;demo&#34;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;postgres&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;create&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;alter&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;alter&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;column&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;storage&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;plain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;insert&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;into&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;repeat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8192&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;ERROR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;too&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;big&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8224&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maximum&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8160&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;En forçant la politique de stockage à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;plain&lt;/code&gt;, le mécanisme de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;TOAST&lt;/code&gt; n’est pas&#xA;mis en oeuvre. Comme PostgreSQL ne travaille qu’avec des blocs de 8 ko,&#xA;l’insertion est refusée car elle nécessite trop de place.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Essayons cette fois-ci une insertion de seulement 8000 caractères et regardons la&#xA;place prise grâce à la fonction &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_column_size()&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;insert&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;into&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;repeat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_column_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;pg_column_size&lt;/span&gt; &#xA;&lt;span class=&#34;c1&#34;&gt;----------------&lt;/span&gt;&#xA;           &lt;span class=&#34;mi&#34;&gt;8004&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;!-- ??? varlena avec le premier de 4 octets https://github.com/postgres/postgres/blob/ee1bfd168390bc843c6704d16e909692c0a79f27/src/include/c.h#L675 --&gt;&#xA;&lt;p&gt;Quatre octets supplémentaires sont présents. Ils correspondent à quatre octets&#xA;d’en-tête précisant la taille de la donnée texte.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Passons maintenant à la politique de stockage à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;main&lt;/code&gt; et regardons la&#xA;taille de la colonne après une nouvelle insertion. &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;main&lt;/code&gt; autorise la&#xA;compression des données si PostgreSQL estime que le gain est suffisant par&#xA;rapport au coût de cette opération.&#xA;&lt;!-- &#xA;fixme parler de cette &#xA;estimation / tests sur premiers octets ?&#xA;--&gt;&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;alter&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;alter&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;column&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;storage&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;insert&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;into&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;repeat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_column_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;pg_column_size&lt;/span&gt; &#xA;&lt;span class=&#34;c1&#34;&gt;----------------&lt;/span&gt;&#xA;           &lt;span class=&#34;mi&#34;&gt;8004&lt;/span&gt;&#xA;            &lt;span class=&#34;mi&#34;&gt;103&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Il ne faut désormais plus que 103 octects pour stocker les données&#xA;et ce, grâce à la compression faite automatiquement par PostgreSQL. C’est&#xA;nettement plus efficace en termes de place occupée. Par défaut, la méthode&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pglz&lt;/code&gt; est utilisée. Depuis la version 14, il est possible d’utiliser &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;lz4&lt;/code&gt; pour&#xA;la compression. La commande &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;ALTER&lt;/code&gt; sur la colonne permet de choisir la&#xA;compression souhaitée :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;alter&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;alter&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;compression&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lz4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;insert&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;into&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;repeat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_column_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;pg_column_size&lt;/span&gt; &#xA;&lt;span class=&#34;c1&#34;&gt;----------------&lt;/span&gt;&#xA;           &lt;span class=&#34;mi&#34;&gt;8004&lt;/span&gt;&#xA;            &lt;span class=&#34;mi&#34;&gt;103&lt;/span&gt;&#xA;             &lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Pour notre exemple (hyper simpliste, on vous l’accorde) de 8000 caractères &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;a&lt;/code&gt;,&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;lz4&lt;/code&gt; permet de descendre à 50 octets de données, soit un gain de place de plus&#xA;de 99%.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Il est possible de connaître à posteriori l’algorithme de compression utilisé&#xA;grâce à la fonction &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_column_compression()&lt;/code&gt;. Elle renvoie &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;NULL&lt;/code&gt; si la&#xA;colonne n’a pas été compressée.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_column_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_column_compression&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;pg_column_size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_column_compression&lt;/span&gt; &#xA;&lt;span class=&#34;c1&#34;&gt;----------------+-----------------------&lt;/span&gt;&#xA;           &lt;span class=&#34;mi&#34;&gt;8004&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &#xA;            &lt;span class=&#34;mi&#34;&gt;103&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pglz&lt;/span&gt;&#xA;             &lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lz4&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Ouvrons une parenthèse pour expliquer comment cette fonction sait quel&#xA;est l’algorithme de compression utilisé. Elle fait appel à la fonction&#xA;&lt;a href=&#34;https://github.com/postgres/postgres/blob/ee1bfd168390bc843c6704d16e909692c0a79f27/src/backend/utils/adt/varlena.c#L5087&#34;&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;toast_get_compression_id()&lt;/code&gt;&lt;/a&gt;&#xA;qui va retourner l’id de la méthode de compression. Cet id est contenu dans les&#xA;deux premiers bits de la donnée compressée, stockée dans une variable de type&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;varlena&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Comme souvent avec PostgreSQL, les commentaires du code&#xA;permettent de trouver des détails sur ce que l’on cherche. Le &lt;a href=&#34;https://github.com/postgres/postgres/blob/ee1bfd168390bc843c6704d16e909692c0a79f27/src/include/access/toast_compression.h#L26&#34;&gt;commentaire&#xA;suivant&lt;/a&gt;&#xA;indique que les deux premiers bits de la données sont utilisés pour&#xA;coder la méthode de compression.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Fermons cette parenthèse pour évoquer enfin le découpage des données et les&#xA;deux dernières politiques de stockage, à savoir &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;external&lt;/code&gt; et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;extended&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;découpage&#34;&gt;Découpage&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Depuis le début de l’article, on évoque une taille limite qui, si elle est&#xA;dépassée, déclenche le découpage de la donnée. Cette taille correspond au&#xA;paramètre &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;TOAST_TUPLE_THRESHOLD&lt;/code&gt; positionné à 2 ko. La donnée est découpée de&#xA;sorte que le nouveau morceau fasse au plus &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;TOAST_MAX_CHUNK_SIZE&lt;/code&gt; octets (par&#xA;défaut 2000 octets). Le découpage de la donnée se fait jusqu’à ce que la taille&#xA;restante soit en dessous de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;TOAST_TUPLE_TARGET&lt;/code&gt;. Ce paramètre peut être modifié&#xA;au niveau de la table avec la commande&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;ALTER TABLE t1 SET (toast_tuple_target = n)&lt;/code&gt;.&#xA;&lt;!-- fixme quand faire ce genre de modif ? --&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Prenons l’exemple d’une table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;t1&lt;/code&gt; qui contiendrait des images au format&#xA;binaire. Dès lors qu’une table avec une colonne &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;TOAST-able&lt;/code&gt; est créée, une&#xA;table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;toast&lt;/code&gt; est créée et lui est associée. Pour illustrer uniquement le&#xA;découpage des données, la politique d’extension sera positionnée à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;external&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;create&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bytea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;alter&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t2&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;alter&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;column&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;storage&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;insert&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;into&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t2&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;values&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pg_read_binary_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;/tmp/image.jpg&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;L’image insérée a une taille de 834 ko. Regardons la taille de la table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;t2&lt;/code&gt;&#xA;maintenant que l’image a été insérée :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_relation_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;t2&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;pg_relation_size&lt;/span&gt; &#xA;&lt;span class=&#34;c1&#34;&gt;------------------&lt;/span&gt;&#xA;             &lt;span class=&#34;mi&#34;&gt;8192&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;8192 octets… Comment expliquer cette taille ? Et puis 8 ko, c’est étonnant de&#xA;retrouver exactement la taille d’un bloc ! Comme dit plus haut, une table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;toast&lt;/code&gt;&#xA;existe et est associée à notre table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;t2&lt;/code&gt;. C’est celle-ci qui contient en fait&#xA;toutes les données.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;c1&#34;&gt;-- recherche de la table toast associée&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c_toast&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;relname&lt;/span&gt;&#xA;          &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_class&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c_toast&lt;/span&gt;&#xA;          &lt;span class=&#34;k&#34;&gt;JOIN&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_class&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c_heap&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;ON&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c_heap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reltoastrelid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c_toast&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;oid&lt;/span&gt;&#xA;          &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c_heap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;relname&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;t2&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;relname&lt;/span&gt;     &#xA;&lt;span class=&#34;c1&#34;&gt;----------------&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;pg_toast_17286&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_size_pretty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pg_relation_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;pg_toast.pg_toast_17286&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;pg_size_pretty&lt;/span&gt; &#xA;&lt;span class=&#34;c1&#34;&gt;----------------&lt;/span&gt;&#xA; &lt;span class=&#34;mi&#34;&gt;856&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;kB&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Pour vous montrer que les données se trouvent dans la table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;toast&lt;/code&gt;,&#xA;on a volontairement utilisé la fonction &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_relation_size()&lt;/code&gt; sur la table&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;toast&lt;/code&gt;. Il est plus judicieux d’utiliser la fonction &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_table_size()&lt;/code&gt; qui&#xA;donne la taille de la table et de sa table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;toast&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_table_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;t2&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;pg_table_size&lt;/span&gt; &#xA;&lt;span class=&#34;c1&#34;&gt;---------------&lt;/span&gt;&#xA;        &lt;span class=&#34;mi&#34;&gt;942080&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;On peut vérifier au passage la taille des lignes de la table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;toast&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_column_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chunk_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_toast&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pg_toast_17286&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;group&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;by&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA; &lt;span class=&#34;k&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_column_size&lt;/span&gt; &#xA;&lt;span class=&#34;c1&#34;&gt;-------+----------------&lt;/span&gt;&#xA;     &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;mi&#34;&gt;1728&lt;/span&gt;&#xA;   &lt;span class=&#34;mi&#34;&gt;427&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;mi&#34;&gt;2000&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Elles font toutes 2000 octets sauf une, très certainement la dernière, qui elle&#xA;n’a nécessité que 1728 octets.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Maintenant que le concept du &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;TOAST&lt;/code&gt; a été expliqué (politique, compression,&#xA;découpage), essayons de voir concrêtement les différences qui existerait entre&#xA;les modes de compression.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;benchmarks&#34;&gt;Benchmarks&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Nous avons voulu comparer les performances (en temps et taille sur disque) des&#xA;deux algorithmes de compression avec l’insertion d’un même jeu de données.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Le premier test consistait à l’ajout de données dans une colonne de type &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;text&lt;/code&gt;,&#xA;avec par défaut la politique &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;extended&lt;/code&gt;. Le premier graphique montre que, pour des&#xA;insertions de données déclenchant une compression, &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;lz4&lt;/code&gt; est tout le temps plus&#xA;rapide que &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pglz&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/img/2024-toast-1.png&#34; alt=&#34;resultats1&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Le graphique suivant nous permet de conclure que, là aussi, &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;lz4&lt;/code&gt; est plus&#xA;performant que &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pglz&lt;/code&gt; en termes de volumétrie gagnée.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/img/2024-toast-2.png&#34; alt=&#34;resultats2&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;!-- Fixme a temriner&#xA;le second test a, quant à lui, consisté à une intégration de fichiers `.txt` dans&#xA;la base. La volumétrie totale était de 1020 Mo. Là encore l&#39;idée était &#xA;&#xA;&lt;!-- conclure par un mot sur le choix de l&#39;algo --&gt;&#xA;&#xA;&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;C’est donc la fin de notre article &lt;strong&gt;Les mains dans le cambouis&lt;/strong&gt; sur&#xA;le mécanisme de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;TOAST&lt;/code&gt;, le second de notre série.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Ce mécanisme, bien qu’invisible aux utilisateurs ou aux&#xA;développeurs, est essentiel au fonctionnement de PostgreSQL. Les développeurs&#xA;doivent garder en tête que, pour stocker de larges données, il ne leur est pas&#xA;nécessaire de découper eux-mêmes les éléments. Laissez faire PostgreSQL, il sait&#xA;très bien faire cela.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La compression joue également un rôle dans le stockage des données comme nous&#xA;avons pu le voir avec notre benchmark. Testez vous aussi les deux algorithmes de&#xA;compression pour voir lequel des deux est le plus efficace pour stocker vos données.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Dans quelques semaines, le troisième article sera publié. Au programme, &lt;em&gt;ring&#xA;buffer&lt;/em&gt; : décodage logique ou plongeons dans les journaux de transactions ? Les&#xA;idées sont là, mais on va garder la surprise pour nous ^^.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Des questions, des commentaires ? &lt;a href=&#34;mailto:guillaume.lelarge@dalibo.com,pierrick.chovelon@dalibo.com?subject=[BLOG-commentaire] les mains dans le cambouis - toast&#34;&gt;Écrivez-nous !&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</summary>
    <author>
      <name>blog.dalibo.com</name>
    </author>
  </entry>
  <entry>
    <title>Les mains dans le cambouis #1 - Les checkpoints</title>
    <updated>2024-01-05T06:00:00Z</updated>
    <id>tag:blog.dalibo.com,2024-01-05://2024/01/05/cambouis.html</id>
    <link href="https://blog.dalibo.com//2024/01/05/cambouis.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;em&gt;Lyon, le 5 janvier 2024&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Voici le premier numéro d’une série d’articles concernant le fonctionnement de&#xA;PostgreSQL. Nommée « &lt;strong&gt;Les mains dans le cambouis&lt;/strong&gt; », elle consistera, &#xA;comme son titre le laisse suggérer, à détailler et comprendre le fonctionnement&#xA;du moteur de PostgreSQL.&lt;/p&gt;&#xA;&#xA;&lt;!--MORE--&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/img/2024-cambouis.jpg&#34; alt=&#34;moteur&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Et pour ce premier article, nous avons choisi de parler du sujet des&#xA;&lt;em&gt;checkpoints&lt;/em&gt;, de leur utilité, de leur lien avec le cache et des paramètres&#xA;qui existent pour les configurer.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;quésaco-&#34;&gt;Quésaco ?&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Un petit tour sur la documentation de PostgreSQL nous permet de trouver la bonne&#xA;définition d’un &lt;em&gt;checkpoint&lt;/em&gt; (voir &#xA;&lt;a href=&#34;https://docs.postgresql.fr/16/wal-configuration.html&#34;&gt;wal-configuration&lt;/a&gt;). Il&#xA;s’agit d’un instant précis, dans la &lt;em&gt;timeline&lt;/em&gt; d’une instance, à partir&#xA;duquel on peut considérer que les fichiers sur disque sont bien à jour avec ce&#xA;qui a été enregistré dans les journaux de transactions jusqu’au début de l’exécution du &lt;em&gt;checkpoint&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;C’est le processus &lt;em&gt;checkpointer&lt;/em&gt; de l’instance qui se charge de cela en&#xA;déclenchant aussi souvent que possible des &lt;em&gt;checkpoints&lt;/em&gt;. Il existe également la&#xA;commande SQL &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;CHECKPOINT&lt;/code&gt; qui permet d’en déclencher manuellement. D’autres activités de l’instance déclenchent aussi des &lt;em&gt;checkpoints&lt;/em&gt; automatiques, comme l’arrêt de l’instance, une sauvegarde PITR, etc.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Rappelons que, dans son fonctionnement normal, PostgreSQL n’écrit pas directement&#xA;sur disque dans les fichiers de données, mais le fait dans des journaux de transaction.&#xA;Les fichiers de données sont modifiés dans le cache, donc en mémoire. C’est le&#xA;processus &lt;em&gt;checkpointer&lt;/em&gt; qui va régulièrement les écrire sur disque pour nettoyer le&#xA;cache.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;cache-partagé&#34;&gt;Cache partagé&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Pour comprendre ce qu’il se cache derrière “nettoyer le cache”, il est&#xA;nécessaire de se pencher sur le cache de PostgreSQL. La taille de ce dernier est configurée&#xA;grâce au paramètre &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;shared_buffers&lt;/code&gt;, positionné par défaut à 128 Mo.&#xA;PostgreSQL travaille avec des blocs de 8 ko, cela revient donc à 16384 blocs de&#xA;données alloués au cache partagé.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Le module &lt;a href=&#34;https://docs.postgresql.fr/16/pgbuffercache.html&#34;&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_buffercache&lt;/code&gt;&lt;/a&gt;&#xA;permet d’examiner son contenu et son état.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Cette extension fournit la vue &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_buffercache&lt;/code&gt; qui permet de voir facilement&#xA;le contenu du cache en retournant une ligne par bloc. Pour chaque bloc de 8 ko,&#xA;les informations dont on dispose sont les suivantes :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;Expanded&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;display&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_buffercache&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RECORD&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;----+------&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;bufferid&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;-- ID du bloc&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;relfilenode&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1262&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;-- numéro du fichier sur disque&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;reltablespace&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1664&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;-- OID du tablespace où se trouve la relation&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;reldatabase&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;-- OID de la base de données où se trouve la relation&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;relforknumber&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;-- numéro du fork dans la relation&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;relblocknumber&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;-- numéro du bloc de la relation&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;isdirty&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;-- est ce que le bloc est modifié (dirty dans la VO)&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;usagecount&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;-- compteur lié au clock-sweep&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;pinning_backends&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;-- nombre de processus utilisant ce bloc&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Plusieurs éléments sont intéressants dans ces informations, mais limitons-nous&#xA;pour le moment à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;isdirty&lt;/code&gt;. Il indique si le bloc en question a été écrit sur&#xA;disque (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;false&lt;/code&gt;) ou si sa version modifiée n’est présente que dans le cache (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;true&lt;/code&gt;). Les blocs&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;dirty&lt;/code&gt; verront leur contenu être écrit sur disque lors du prochain passage d’un&#xA;&lt;em&gt;checkpoint&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Partons d’une instance tout juste installée et créons une nouvelle base &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;demo&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;postgres&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;create&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;database&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;DATABASE&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;postgres&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt; &#xA;&lt;span class=&#34;n&#34;&gt;You&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;are&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;now&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;connected&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;database&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;demo&#34;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;postgres&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;create&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;extension&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_buffercache&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXTENSION&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Créons une nouvelle table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;t1&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;create&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;L’extension &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_buffercache&lt;/code&gt; permet de remonter&#xA;que 16 blocs du cache ont été modifiés.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_buffercache&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;where&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;isdirty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA; &lt;span class=&#34;k&#34;&gt;count&lt;/span&gt; &#xA;&lt;span class=&#34;c1&#34;&gt;-------&lt;/span&gt;&#xA;    &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;En effet, la création d’une table va écrire des données dans différents&#xA;catalogues systèmes (&lt;em&gt;pg_class&lt;/em&gt;, &lt;em&gt;pg_attribute&lt;/em&gt; pour ne citer que les deux&#xA;plus évidents). Ces 16 blocs concernent donc les catalogues systèmes. Si&#xA;nous forçons le passage d’un &lt;em&gt;checkpoint&lt;/em&gt;, ces blocs-là seront écrits sur&#xA;disque.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;CHECKPOINT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;CHECKPOINT&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_buffercache&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;where&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;isdirty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA; &lt;span class=&#34;k&#34;&gt;count&lt;/span&gt; &#xA;&lt;span class=&#34;c1&#34;&gt;-------&lt;/span&gt;&#xA;    &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Dès lors qu’une opération est faite sur la table, par exemple une insertion,&#xA;PostgreSQL aura besoin de blocs du cache, qui seront alors considérés comme &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;dirty&lt;/code&gt;.&#xA;Insérons plusieurs entiers dans la table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;t1&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;insert&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;into&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;generate_series&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10000&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_buffercache&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;where&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;isdirty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA; &lt;span class=&#34;k&#34;&gt;count&lt;/span&gt; &#xA;&lt;span class=&#34;c1&#34;&gt;-------&lt;/span&gt;&#xA;   &lt;span class=&#34;mi&#34;&gt;49&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;49 blocs du cache ont été utilisés pour l’opération d’&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;INSERT&lt;/code&gt;. Ils sont donc&#xA;marqués comme &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;dirty&lt;/code&gt;. &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;CHECKPOINT&lt;/code&gt; permet de nettoyer le cache. Plus aucun bloc&#xA;n’est considéré &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;dirty&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;CHECKPOINT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;CHECKPOINT&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_buffercache&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;where&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;isdirty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA; &lt;span class=&#34;k&#34;&gt;count&lt;/span&gt; &#xA;&lt;span class=&#34;c1&#34;&gt;-------&lt;/span&gt;&#xA;     &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;“Plus aucun bloc n’est considéré &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;dirty&lt;/code&gt;“&lt;/em&gt;, cela ne signifie pas que les blocs ont&#xA;disparu du cache. Bien au contraire, ils restent là tant que PostgreSQL estime&#xA;en avoir besoin. La partie &lt;em&gt;Notions essentielles de gestion du cache&lt;/em&gt; de notre formation&#xA;&lt;a href=&#34;https://public.dalibo.com/exports/formation/manuels/formations/dba2/dba2.handout.html#shared-buffers&#34;&gt;DBA2&lt;/a&gt;&#xA;décrit les notions et mécanismes à ce sujet.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sql highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;relname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;isdirty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bufferid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;blocs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;pg_size_pretty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bufferid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;current_setting&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;block_size&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;taille&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_buffercache&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;INNER&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;JOIN&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_class&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;ON&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;relfilenode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;relfilenode&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;relname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;t1&#39;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;BY&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;relname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;isdirty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&#xA; &lt;span class=&#34;n&#34;&gt;relname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;isdirty&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;blocs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;taille&lt;/span&gt; &#xA;&lt;span class=&#34;c1&#34;&gt;---------+---------+-------+--------&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;    &lt;span class=&#34;mi&#34;&gt;49&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;392&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;kB&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Les traces de l’instance montrent en détail ce qu’il s’est passé lors du&#xA;&lt;em&gt;checkpoint&lt;/em&gt;. Le paramètre &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;log_checkpoints&lt;/code&gt; doit être configuré à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;on&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code class=&#34;language-log&#34;&gt;2023-12-27 16:18:49.315 CET [68301] LOG:  checkpoint starting: immediate force wait&#xA;2023-12-27 16:18:49.327 CET [68301] LOG:  checkpoint complete: wrote 50 buffers (0.3%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.003 s, sync=0.003 s, total=0.013 s; sync files=4, longest=0.002 s, average=0.001 s; distance=630 kB, estimate=1853 kB; lsn=0/1B971D0, redo lsn=0/1B97198&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;checkpoint starting: immediate force wait&lt;/code&gt; indique que le &lt;em&gt;checkpoint&lt;/em&gt; a été&#xA;démarré car forcé manuellement ;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;checkpoint complete&lt;/code&gt; indique que l’opération s’est bien terminée et donne des&#xA;détails supplémentaires, notamment :&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;wrote 50 buffers (0.3%)&lt;/code&gt; qui indique le nombre de &lt;em&gt;buffers&lt;/em&gt; écrits et indique&#xA;également qu’ils correspondent à 0,3% du cache partagé de l’instance ;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;lsn=0/1AF3E48&lt;/code&gt; qui indique le &lt;em&gt;Log Segment Number&lt;/em&gt; lors de la fin du&#xA;&lt;em&gt;checkpoint&lt;/em&gt; ;&lt;/li&gt;&#xA;      &lt;li&gt;et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;redo lsn=0/1AF3E10&lt;/code&gt; qui indique le &lt;em&gt;Log Segment Number&lt;/em&gt; au début du&#xA;&lt;em&gt;checkpoint&lt;/em&gt;. C’est à partir de cet instant là qu’il faudra rejouer les&#xA;journaux de transactions.&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;  &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;En plus de faire le ménage dans le cache partagé (suppression du &lt;em&gt;flag&lt;/em&gt; &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;dirty&lt;/code&gt;)&#xA;et d’écrire dans les fichiers de données, un &lt;em&gt;checkpoint&lt;/em&gt; va également&#xA;ajouter un enregistrement &lt;em&gt;checkpoint&lt;/em&gt; dans les journaux de transactions et sa position dans&#xA;le fichier &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;global/pg_control&lt;/code&gt; de l’instance.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;L’utilitaire &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_controldata&lt;/code&gt; permet de retrouver ces informations là sans&#xA;devoir lire le fichier de traces :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-sh highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;nv&#34;&gt;$ &lt;/span&gt;pg_controldata &lt;span class=&#34;nb&#34;&gt;.&lt;/span&gt; | &lt;span class=&#34;nb&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;-E&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;(Latest checkpoint location)|(Latest checkpoint&#39;s REDO)&#34;&lt;/span&gt;&#xA;Latest checkpoint location:           0/1B971D0&#xA;Latest checkpoint&lt;span class=&#34;s1&#34;&gt;&#39;s REDO location:    0/1B97198&#xA;Latest checkpoint&#39;&lt;/span&gt;s REDO WAL file:    000000010000000000000001&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;La troisième ligne indique quel journal de transactions est associé au &#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;redo lsn&lt;/code&gt;. Tous les journaux antérieurs à celui-ci ne sont donc désormais plus&#xA;utiles et pourront être recyclés automatiquement par PostgreSQL.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;paramétrage-des-checkpoints&#34;&gt;Paramétrage des &lt;em&gt;checkpoints&lt;/em&gt;&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Nous avons vu en quoi consiste une opération de &lt;em&gt;checkpoint&lt;/em&gt; et&#xA;en avons lancé manuellement. Comme dit précédement, un processus serveur&#xA;(&lt;em&gt;checkpointer&lt;/em&gt;) est dédié à l’exécution de cette opération. Il s’agit en fait&#xA;d’une &lt;a href=&#34;https://github.com/postgres/postgres/blob/master/src/backend/postmaster/checkpointer.c#L334&#34;&gt;boucle d’exécution&lt;/a&gt; &#xA;qui va s’exécuter puis dormir pendant un certain temps et pourra être interrompue&#xA;à la réception de certains &lt;a href=&#34;https://github.com/postgres/postgres/blob/master/src/backend/postmaster/checkpointer.c#L180&#34;&gt;signaux&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Plusieurs paramètres influencent le comportement du &lt;em&gt;checkpointer&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Tout d’abord, le paramètre &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;checkpoint_timeout&lt;/code&gt; indique le temps maximal entre&#xA;deux &lt;em&gt;checkpoints&lt;/em&gt;. Par défaut, il est configuré à 5 minutes. Nous verrons plus&#xA;tard que réduire au minimum cette durée n’est pas une bonne idée mais que l’augmenter pourrait être intéressant.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;PostgreSQL calcule le temps passé entre les deux derniers &lt;em&gt;checkpoints&lt;/em&gt;&#xA;et applique la valeur du paramètre &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;checkpoint_completion_target&lt;/code&gt; (0,9 par&#xA;défaut). La durée obtenue indique le temps que doit passer le &lt;em&gt;checkpointer&lt;/em&gt; à&#xA;écrire sur disque les blocs du cache considérés comme &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;dirty&lt;/code&gt;. L’idée est de&#xA;lisser au mieux les écritures sur disque pour permettre aux autres processus&#xA;d’accéder plus rapidement aux disques.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;max_wal_size&lt;/code&gt; indique la taille maximale d’écriture dans les journaux de&#xA;transactions entre deux &lt;em&gt;checkpoints&lt;/em&gt;. Si elle est dépassée avant l’expiration&#xA;du délai &lt;em&gt;checkpoint_timeout&lt;/em&gt;, un &lt;em&gt;checkpoint&lt;/em&gt;&#xA;est déclenché. De ce fait, un &lt;em&gt;checkpoint&lt;/em&gt; peut être déclenché de deux&#xA;manières :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;par expiration du temps (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;time&lt;/code&gt;) ;&lt;/li&gt;&#xA;  &lt;li&gt;ou par dépassement de cette volumétrie (&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;wal&lt;/code&gt;).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h3 id=&#34;lien-entre-les-checkpoints-et-la-taille-de-pg_wal&#34;&gt;Lien entre les &lt;em&gt;checkpoints&lt;/em&gt; et la taille de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_wal&lt;/code&gt;&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Nous avons vu qu’un passage de &lt;em&gt;checkpoint&lt;/em&gt; permet de savoir quels journaux de&#xA;transaction ne sont plus utiles. Intuitivement, on comprend donc que plus les&#xA;&lt;em&gt;checkpoints&lt;/em&gt; sont éloignés, plus on conservera de journaux. Cette conclusion a&#xA;une importance en cas de restauration de l’instance. En effet, le temps de&#xA;restauration sera d’autant plus rallongé que le nombre de journaux est important.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;On aurait donc envie de réduire au minimum le paramètre &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;checkpoint_timeout&lt;/code&gt;&#xA;pour accélérer la reprise. Oui, mais … non. Ce n’est pas une si bonne idée que&#xA;cela.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Dans le cas où le paramètre &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;full_page_writes&lt;/code&gt; est configuré à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;on&lt;/code&gt; (ce qui est par&#xA;défaut le cas et ne doit être changé que pour des cas très précis en connaissance de cause),&#xA;il reste un autre facteur à considérer. Ce paramètre force&#xA;PostgreSQL à écrire intégralement, dans le journal de transaction en cours, le&#xA;bloc complet lors de sa première modification après un &lt;em&gt;checkpoint&lt;/em&gt;. Ceci afin de s’assurer&#xA;que ce bloc puisse être entièrement restauré en cas de crash. Une explication&#xA;plus détaillée se trouve sur la page&#xA;&lt;a href=&#34;https://wiki.postgresql.org/wiki/Full_page_writes&#34;&gt;wiki&lt;/a&gt; du projet PostgreSQL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Dans ce cas-là donc, un intervalle de &lt;em&gt;checkpoints&lt;/em&gt; plus petit augmentera le&#xA;volume d’écriture des journaux de transaction, annulant en partie l’intérêt&#xA;d’utiliser cet intervalle plus petit et générant plus de sollications disques.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Pour illustrer nos propos, voici les résultats d’un test montrant le lien entre&#xA;le paramètre &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;checkpoint_timeout&lt;/code&gt; (abscisses) et la volumétrie de journaux&#xA;générés (ordonnées). Chaque test individuel a duré environ une heure, le test global a donc pris 5 heures. L’outil utilisé pour générer de l’activité est &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_bench&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/img/2024-checkpoint-1.png&#34; alt=&#34;resultats1&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Ce qui a été dit juste avant se vérifie parfaitement avec ce graphique : avec un&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;checkpoint_timeout&lt;/code&gt; à &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;1min&lt;/code&gt;, le volume de journaux atteint presque 30 Go&#xA;tandis qu’avec &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;30min&lt;/code&gt;, la volumétrie est inférieure à 5 Go. La différence est&#xA;très marquée et mérite d’être signalée : moins d’écritures disques, moins de journaux&#xA;à archiver pour les sauvegardes PITR, moins de données à envoyer (en flux ou par&#xA;segment) aux serveurs secondaires dans le cas d’une réplication. Les avantages sont&#xA;conséquents, et les inconvénients mineurs. Si l’instance PostgreSQL se trouve&#xA;installée sur un serveur avec des capacités de stockage réduites, il pourrait&#xA;être intéressant d’utiliser un &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;checkpoint_timeout&lt;/code&gt; élevé (dans ce cas-là, ne pas&#xA;oublier de faire suivre &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;max_wal_size&lt;/code&gt;). Pour autant, les journaux de&#xA;transactions seront conservés plus longtemps et le temps de reprise en cas de&#xA;crash sera également allongé.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Comme souvent avec PostgreSQL, il faut faire preuve d’équilibre pour trouver la&#xA;configuration qui convient le plus à la charge de travail.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Et voilà, c’est la fin de notre premier article &lt;strong&gt;Les mains dans le cambouis&lt;/strong&gt; sur&#xA;les &lt;em&gt;checkpoints&lt;/em&gt;. Nous venons de découvrir une (petite) partie du moteur&#xA;PostgreSQL. Les &lt;em&gt;checkpoints&lt;/em&gt; sont essentiels au bon fonctionnement de l’instance&#xA;et méritent d’être compris et configurés correctement. Le prochain sujet&#xA;technique n’est pas encore déterminé.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Des questions, des commentaires ? &lt;a href=&#34;mailto:guillaume.lelarge@dalibo.com,pierrick.chovelon@dalibo.com?subject=[BLOG-commentaire] les mains dans le cambouis - checkpoints&#34;&gt;Écrivez-nous !&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</summary>
    <author>
      <name>blog.dalibo.com</name>
    </author>
  </entry>
  <entry>
    <title>On analyse la nouvelle collation de PostgreSQL 17</title>
    <updated>2024-06-07T11:40:12Z</updated>
    <id>tag:blog-postgresql.verite.pro,2024-06-07:/2024/06/07/pg17-utf8-collation.html</id>
    <link href="https://blog-postgresql.verite.pro/2024/06/07/pg17-utf8-collation.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PostgreSQL 17 est sorti en version bêta le 23 mai dernier, et dans ce billet on&#xA;va détailler une de ses nouveautés: une collation interne gérant l’UTF-8 avec des&#xA;comparaisons de texte en binaire.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Les rapports de bugs de Postgres en 2023</title>
    <updated>2024-01-24T10:23:10Z</updated>
    <id>tag:blog-postgresql.verite.pro,2024-01-24:/2024/01/24/pgsql-bugs-annee-2023.html</id>
    <link href="https://blog-postgresql.verite.pro/2024/01/24/pgsql-bugs-annee-2023.html" rel="alternate"></link>
    <summary type="html">Une revue quantitative des rapports de bugs de Postgres en 2023</summary>
  </entry>
  <entry>
    <title>Classification des caractères avec ICU</title>
    <updated>2023-06-11T14:32:00Z</updated>
    <id>tag:blog-postgresql.verite.pro,2023-06-11:/2023/06/11/caracteres-icu.html</id>
    <link href="https://blog-postgresql.verite.pro/2023/06/11/caracteres-icu.html" rel="alternate"></link>
    <summary type="html">Avec PostgreSQL 16 où ICU devient le fournisseur de collations par défaut, il y a quelques différences sémantiques à anticiper dans la classification des caractères. Cet article en détaille quelques-unes.</summary>
  </entry>
  <entry>
    <title>Isolation Repeatable Read avec PostgreSQL versus MySQL</title>
    <updated>2020-02-10T17:50:00Z</updated>
    <id>tag:blog-postgresql.verite.pro,2020-02-10:/2020/02/10/isolation-postgresql-vs-mysql.html</id>
    <link href="https://blog-postgresql.verite.pro/2020/02/10/isolation-postgresql-vs-mysql.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Les moteurs SQL permettent aux transactions concurrentes d’être&#xA;isolées les unes des autres pour éviter les interférences.&#xA;Cette propriété d’isolation correspond à la lettre I de l’acronyme&#xA;bien connu &lt;a href=&#34;https://fr.wikipedia.org/wiki/Propri%C3%A9t%C3%A9s_ACID&#34;&gt;“ACID”&lt;/a&gt;,&#xA;les autres propriétés étant Atomicité, Cohérence&#xA;(&lt;em&gt;Consistency&lt;/em&gt; en anglais) et Durabilité.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Recherche et remplacement multiple avec plperl</title>
    <updated>2020-01-22T09:05:14Z</updated>
    <id>tag:blog-postgresql.verite.pro,2020-01-22:/2020/01/22/multi-replace.html</id>
    <link href="https://blog-postgresql.verite.pro/2020/01/22/multi-replace.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Remplacer une chaîne par une autre dans une chaîne plus large est simple&#xA;en SQL, avec la fonction &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;replace&lt;/code&gt;:&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Les collations non déterministes</title>
    <updated>2019-10-16T16:32:15Z</updated>
    <id>tag:blog-postgresql.verite.pro,2019-10-16:/2019/10/16/collations-non-deterministes.html</id>
    <link href="https://blog-postgresql.verite.pro/2019/10/16/collations-non-deterministes.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Depuis la version 12, les collations de PostgreSQL peuvent être créées&#xA;avec un paramètre nommé &lt;strong&gt;deterministic&lt;/strong&gt;, qui peut être vrai&#xA;ou faux, si bien que les collations  sont maintenant&#xA;soit &lt;strong&gt;déterministes&lt;/strong&gt; (ce qu’elles sont par défaut), soit&#xA;&lt;strong&gt;non déterministes&lt;/strong&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>De retour du pgDay Paris 2024.</title>
    <updated>2024-03-18T09:39:28Z</updated>
    <id>tag:blog.anayrat.info,2024-03-18:/2024/03/18/de-retour-du-pgday-paris-2024./</id>
    <link href="https://blog.anayrat.info/2024/03/18/de-retour-du-pgday-paris-2024./" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Me voilà rentré du pgDay Paris. J’ai beaucoup aimé cette édition. J’étais déjà venu à celle de &lt;a href=&#34;https://www.postgresql.eu/events/pgdayparis2019/schedule/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019&lt;/a&gt; et je dois dire que je n’ai pas été déçu. Pour rappel, le pgDay Paris est une conférence internationale. Les présentations sont en anglais et permettent d’attirer des orateurs et un public plus anglophone.&lt;/p&gt;&#xA;&lt;p&gt;Je vois souvent cette conférence comme un petit &lt;a href=&#34;https://www.postgresql.eu/events/series/pgconfeu-1/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PGConf Europe&lt;/a&gt; : on retrouve un contenu assez riche avec la dimension internationale.&lt;/p&gt;&#xA;&lt;p&gt;On croise des têtes déjà connues : public, orateurs, bénévoles, contributeurs : Tout ce petit monde qui fait vivre la communauté Postgres.&lt;/p&gt;&#xA;&lt;p&gt;Puis, c’est l’occasion de mettre des visages sur des noms que l’on croise en lisant des articles ou les mailing-list Postgres.&lt;/p&gt;&#xA;&lt;p&gt;Voici un petit retour sur les conférences auxquelles j’ai assisté :&lt;/p&gt;&#xA;&lt;h1 id=&#34;elephant-in-a-nutshell---navigating-the-postgres-community-101&#34;&gt;Elephant in a nutshell - Navigating the Postgres community 101&lt;/h1&gt;&#xA;&lt;p&gt;Avec &lt;a href=&#34;https://2024.pgday.paris/organization/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Carole et Stéphanie&lt;/a&gt;, on a pensé que ce serait bien d’avoir cette conférence en introduction.&lt;/p&gt;&#xA;&lt;p&gt;Je l’ai trouvé très complète. Elle parle de Postgres, mais aussi et surtout de sa communauté. C’est ce qui fait sa force.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.postgresql.eu/events/pgdayparis2024/sessions/session/5293/slides/481/pgDay%20Paris_Valeria%27s%20talk%20-%20Elephant%20in%20a%20nutshell.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Les slides sont disponibles.&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;sustainable-database-performance-profiling-in-postgresql&#34;&gt;Sustainable Database Performance profiling in PostgreSQL&lt;/h1&gt;&#xA;&lt;p&gt;Postgres dispose de nombreuses vues statistiques apportant des informations sur son fonctionnement.&lt;/p&gt;&#xA;&lt;p&gt;Elles peuvent être natives (&lt;em&gt;pg_stat_statements&lt;/em&gt; …) ou via des extensions &lt;em&gt;pg_stat_kcache&lt;/em&gt;, &lt;em&gt;pg_wait_sampling&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Cependant, et c’est ce que souligne cette conférence, elles apportent une vue à un instant T.&lt;/p&gt;&#xA;&lt;p&gt;Pour les exploiter, il faut les historiser. L’orateur présente un outil basé sur ce qui se fait sur Oracle : &lt;a href=&#34;https://github.com/zubkov-andrei/pg_profile&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pg_profile&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;En revanche, il le présente comme l’unique outil permettant d’exploiter ces informations. Une personne dans le public lui a fait remarquer qu’il existait un autre projet : &lt;a href=&#34;https://powa.readthedocs.io/en/latest/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PoWA&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Les deux outils ne fournissent pas les mêmes fonctions, &lt;em&gt;pg_profile&lt;/em&gt; génère un rapport HTML. Il est plutôt facile à installer, il ne nécessite pas de librairies externe car il est écrit en pl/pgsql.&lt;/p&gt;&#xA;&lt;p&gt;PoWA apporte des graphes, de la suggestion d’index… mais est plus lourd à installer.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.postgresql.eu/events/pgdayparis2024/sessions/session/5067/slides/482/20240314_dkrautschick_PGdayParis_SustainableDatabasePerformanceProfilingInPostgreSQL.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Les slides sont disponibles&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;postgresql-without-permanent-local-data-storage&#34;&gt;PostgreSQL without permanent local data storage&lt;/h1&gt;&#xA;&lt;p&gt;Là, on rentre dans une conférence très technique. Matthias travaille sur le projet &lt;a href=&#34;https://neon.tech/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Neon&lt;/a&gt; et il participe régulièrement sur les &lt;a href=&#34;https://www.postgresql.org/list/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mailing-list Postgres&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Neon est un fork opensource de Postgres visant à séparer le &lt;em&gt;compute&lt;/em&gt; et le &lt;em&gt;storage&lt;/em&gt;. C’est ce qu’a fait AWS avec le projet Aurora.&lt;/p&gt;&#xA;&lt;p&gt;Heikki Linnakangas, un des co-fondateurs de Neon et committer de Postgres a fait plusieurs présentations :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=rES0yzeERns&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Neon: Serverless PostgreSQL! (Heikki Linnakangas)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://neon.tech/blog/architecture-decisions-in-neon&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Architecture decisions in Neon&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Matthias a présenté les différents problèmes que cela posait de vouloir séparer le stockage du reste du moteur. C’est clairement un projet très ambitieux. Pour le moment, il est difficile de savoir si ce fork perdurera ou non.&lt;/p&gt;&#xA;&lt;p&gt;Cependant, on peut souligner que les personnes travaillant dessus ont une très grande connaissance du moteur. On peut espérer que ça ait des implications positives dans le projet Postgres.&lt;/p&gt;&#xA;&lt;p&gt;Affaire à suivre…&lt;/p&gt;&#xA;&lt;h1 id=&#34;lightning-talks&#34;&gt;Lightning Talks!&lt;/h1&gt;&#xA;&lt;p&gt;Les Lightning Talks sont une bonne occasion de balayer certains sujets un peu plus légers. Ca passe plutôt bien après le repas. C’est assez divertissant. J’ai bien aimé la présentation de Léo Unbekandt sur l’architecture des instances Postgres à Scalingo. Pas de K8S, une architecture simple et éprouvée.&lt;/p&gt;&#xA;&lt;p&gt;J’ai aussi aimé la présentation de Chris Ellis où il fabrique un objet décoratif lumineux avec de l’ESP32 dedans.&lt;/p&gt;&#xA;&lt;h1 id=&#34;multi-tenant-database-the-good-the-bad-the-ugly&#34;&gt;Multi-tenant database: the good, the bad, the ugly.&lt;/h1&gt;&#xA;&lt;p&gt;Après, les Lightning Talks, on retourne dans le vif du sujet avec cette présentation de Pierre Ducroquet.&lt;/p&gt;&#xA;&lt;p&gt;Je connais bien Pierre, la première fois que je l’ai croisé, c’était au pgDay France 2016. Il avait fait une très bonne présentation sur &lt;a href=&#34;https://2016.pgday.fr/programme.html#comprendre-requete-lente&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Comprendre pourquoi une requête est lente, et comment régler le soucis&lt;/a&gt;. Ensuite, ça a été mon collègue de travail pendant quelques années où on a rencontré les problèmes que pouvaient poser les bases de données &lt;em&gt;multi-tenant&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Il présente différentes façons de faire du &lt;em&gt;multi-tenant&lt;/em&gt; avec les contraintes que cela implique. Il donne des chiffres assez impressionnants comme plus de 200 000 tables!&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.pinaraf.info/2024/03/look-ma-i-wrote-a-new-jit-compiler-for-postgresql/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Quelque chose me dit qu’on ne va pas tarder à le revoir&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;beyond-b-trees-looking-at-columnar-storage-and-lsm-trees&#34;&gt;Beyond B-trees looking at Columnar Storage and LSM trees&lt;/h1&gt;&#xA;&lt;p&gt;Une autre conférence assez bas niveau sur le stockage colonne et les LSM Tree.&lt;/p&gt;&#xA;&lt;p&gt;Ce type de stockage peut effectivement faire partie du futur de Postgres. Le moteur commence à être utilisé pour de plus en plus de projets analytiques où on manipule de gros volumes de données.&lt;/p&gt;&#xA;&lt;p&gt;Il faut donc des méthodes de stockage capable d’encaisse des écritures rapides.&lt;/p&gt;&#xA;&lt;h1 id=&#34;postgres-16-highlight-logical-decoding-on-standby&#34;&gt;Postgres 16 highlight: Logical decoding on standby&lt;/h1&gt;&#xA;&lt;p&gt;Une nouveauté assez attendue sur Postgres 16 : La possibilité de faire du décodage logique sur un secondaire.&lt;/p&gt;&#xA;&lt;p&gt;Qui mieux qu’un des auteurs de cette fonctionnalité pour en parler ?&lt;/p&gt;&#xA;&lt;p&gt;Bertrand présente les difficultés pour faire un décodage logique sur un secondaire, et comment elles ont été résolues.&lt;/p&gt;&#xA;&lt;p&gt;Il a aussi fait une démonstration. C’est vraiment impressionnant, car c’est un sujet assez compliqué.&lt;/p&gt;&#xA;&lt;p&gt;Point bonus, il explique aussi une nouveauté de Postres 17 : la synchronisation des slots de réplication.&lt;/p&gt;&#xA;&lt;p&gt;Actuellement, on peut difficilement “raccrocher” une réplication logique en cas de bascule. Il y a un risque de perte de transaction.&lt;/p&gt;&#xA;&lt;p&gt;Postgres 17 devrait permettre de synchroniser un slot de réplication. En cas de bascule, on peut reprendre la réplication.&#xA;On est chanceux, il vient tout juste d’écrire un article sur le sujet : &lt;a href=&#34;https://bdrouvot.github.io/2024/03/16/postgres-17-highlight-logical-replication-slots-synchronization/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Postgres 17 highlight: Logical replication slots synchronization&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.postgresql.eu/events/pgdayparis2024/sessions/session/5122/slides/483/pgdayParis2024.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Les slides sont disponibles&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;closing&#34;&gt;Closing&lt;/h1&gt;&#xA;&lt;p&gt;C’était la dernière conférence de la journée. On a pu se retrouver pour le social event.&lt;/p&gt;&#xA;&lt;p&gt;C’est un moment que j’affectionne particulièrement. Car au-delà des conférences, c’est surtout une occasion d’échanger entre passionnés. De retrouver des connaissances et amis de longue date.&lt;/p&gt;&#xA;&lt;p&gt;J’ai réalisé que j’avais un peu délaissé les conférences, entre le covid, mon passage en freelance etc… A l’avenir, j’essaierai d’être plus présent sur ce genre d’évènement (si je peux prendre le train).&lt;/p&gt;&#xA;&lt;h1 id=&#34;merci&#34;&gt;Merci&lt;/h1&gt;&#xA;&lt;p&gt;J’en profite aussi pour remercier les &lt;a href=&#34;https://2024.pgday.paris/organization/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;organisateurs et bénévoles&lt;/a&gt;. On a du mal à réaliser l’investissement que ça demande. Un grand merci à eux pour cet évènement !&lt;/p&gt;&#xA;&lt;p&gt;On se verra sûrement au pgDay 2025 !&lt;/p&gt;</summary>
    <author>
      <name>blog.anayrat.info</name>
    </author>
  </entry>
  <entry>
    <title>Recommandations de lectures pour améliorer ses connaissances en base de données et PostgreSQL</title>
    <updated>2024-02-12T08:00:00Z</updated>
    <id>tag:blog.anayrat.info,2024-02-12:/2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/</id>
    <link href="https://blog.anayrat.info/2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/" rel="alternate"></link>
    <summary type="html">&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;&#xA;  &lt;summary class=&#34;font-weight-bold&#34;&gt;Table des matières&lt;/summary&gt;&#xA;  &lt;nav id=&#34;TableOfContents&#34;&gt;&#xA;  &lt;ul&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#fondamentaux-des-bases-de-données&#34;&gt;Fondamentaux des bases de données&lt;/a&gt;&#xA;      &lt;ul&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#the-manga-guide-to-databases&#34;&gt;The Manga Guide to Databases&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#database-design-for-mere-mortals&#34;&gt;Database Design for Mere Mortals&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#sql-antipatterns&#34;&gt;SQL Antipatterns&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#sql-for-smarties&#34;&gt;SQL for Smarties&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#the-art-of-sql&#34;&gt;The Art Of SQL&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;/ul&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#performance&#34;&gt;Performance&lt;/a&gt;&#xA;      &lt;ul&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#sql-performance-explained&#34;&gt;SQL Performance Explained&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#indexing-beyond-the-basics&#34;&gt;Indexing Beyond the Basics&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;/ul&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#postgresql&#34;&gt;PostgreSQL&lt;/a&gt;&#xA;      &lt;ul&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#practical-sql&#34;&gt;Practical SQL&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#postgresql---architecture-et-notions-avancées&#34;&gt;PostgreSQL - Architecture et notions avancées&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#learn-postgresql&#34;&gt;Learn PostgreSQL&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#postgresql-14-internals&#34;&gt;PostgreSQL 14 Internals&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;/ul&gt;&#xA;    &lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/nav&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;Je ne vais lister que quelques livres, mais je pourrais en citer pleins d&amp;rsquo;autres &amp;#x1f603; . J&amp;rsquo;espère que ça permettra à plus de développeurs, DBA, DEVOPS, CTO &amp;hellip; de mieux comprendre les bases de données et leurs enjeux.&lt;/p&gt;&#xA;&lt;h1 id=&#34;fondamentaux-des-bases-de-données&#34;&gt;Fondamentaux des bases de données&lt;/h1&gt;&#xA;&lt;h2 id=&#34;the-manga-guide-to-databases&#34;&gt;The Manga Guide to Databases&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;figure  id=&#34;figure-the-manga-guide-to-databases&#34;&gt;&#xA;  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;&#xA;    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;manga&#34; srcset=&#34;&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/manga_hu5aa70ea30ae3275c65d27c3d87d1e70c_108868_79a33cb973abaedb22e66948cdc60d80.webp 400w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/manga_hu5aa70ea30ae3275c65d27c3d87d1e70c_108868_c3accdb2c9ecf2675e6df1dee150cd9e.webp 760w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/manga_hu5aa70ea30ae3275c65d27c3d87d1e70c_108868_1200x1200_fit_q75_h2_lanczos_2.webp 1200w&#34;&#xA;               src=&#34;https://blog.anayrat.info/2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/manga_hu5aa70ea30ae3275c65d27c3d87d1e70c_108868_79a33cb973abaedb22e66948cdc60d80.webp&#34;&#xA;               width=&#34;474&#34;&#xA;               height=&#34;626&#34;&#xA;               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;&#xA;  &lt;/div&gt;&lt;figcaption&gt;&#xA;      The Manga Guide to Databases&#xA;    &lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Niveau : Débutant&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://nostarch.com/mg_databases.htm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Manga Guide to Databases&lt;/a&gt; est celui que je recommande dans la plupart de mes rapports d&amp;rsquo;audit.&lt;/p&gt;&#xA;&lt;p&gt;Il est vraiment génial, facile à lire et pour autant, il ne sacrifie pas le fond à la forme.&lt;/p&gt;&#xA;&lt;p&gt;Il couvre un peu tous les aspects importants :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Modélisation&lt;/li&gt;&#xA;&lt;li&gt;Écriture de requêtes simples&lt;/li&gt;&#xA;&lt;li&gt;Grands principes des bases de données : transaction, isolation&amp;hellip;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;database-design-for-mere-mortals&#34;&gt;Database Design for Mere Mortals&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;figure  id=&#34;figure-database-design-for-mere-mortals&#34;&gt;&#xA;  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;&#xA;    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;design&#34; srcset=&#34;&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/design_hue35134dfe8ede24af1874bb4631ce208_182026_721347960fb63df78ab2314199294f15.webp 400w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/design_hue35134dfe8ede24af1874bb4631ce208_182026_2a81b8ec12f19038971875854feca26c.webp 760w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/design_hue35134dfe8ede24af1874bb4631ce208_182026_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;&#xA;               src=&#34;https://blog.anayrat.info/2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/design_hue35134dfe8ede24af1874bb4631ce208_182026_721347960fb63df78ab2314199294f15.webp&#34;&#xA;               width=&#34;616&#34;&#xA;               height=&#34;760&#34;&#xA;               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;&#xA;  &lt;/div&gt;&lt;figcaption&gt;&#xA;      Database Design for Mere Mortals&#xA;    &lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Niveau : Intermédiaire&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.informit.com/store/database-design-for-mere-mortals-25th-anniversary-edition-9780136788041&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Database Design for Mere Mortals&lt;/a&gt; de &lt;em&gt;Michael J. Hernandez&lt;/em&gt; est, comme son nom l&amp;rsquo;indique, orienté sur la modélisation.&lt;/p&gt;&#xA;&lt;p&gt;C&amp;rsquo;est un gros pavé de plus de 600 pages, mais il ne faut pas se laisser impressionner. Il se lit très bien, c&amp;rsquo;est bien vulgarisé et l&amp;rsquo;auteur a fait attention  à éviter de s&amp;rsquo;embarquer dans la théorie qui peut parfois être indigeste.&lt;/p&gt;&#xA;&lt;p&gt;J&amp;rsquo;ai beaucoup aimé le processus d&amp;rsquo;interviews pour construire le modèle de données, l&amp;rsquo;accent mis sur la documentation du modèle. Il  parle peu des formes normales, c&amp;rsquo;est un parti pris. Cependant, si on suit son processus, le modèle respecte bien les formes normales.&lt;/p&gt;&#xA;&lt;h2 id=&#34;sql-antipatterns&#34;&gt;SQL Antipatterns&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;figure  id=&#34;figure-sql-antipatterns&#34;&gt;&#xA;  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;&#xA;    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;antipatterns&#34; srcset=&#34;&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/antipatterns_hu78d2e974f3c547630262f79e552a0ea6_2096124_c320047c4b1f0cff61ce38e7e7f6d3dc.webp 400w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/antipatterns_hu78d2e974f3c547630262f79e552a0ea6_2096124_0d0faf00cb44ab3739d2b4e20f0b205e.webp 760w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/antipatterns_hu78d2e974f3c547630262f79e552a0ea6_2096124_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;&#xA;               src=&#34;https://blog.anayrat.info/2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/antipatterns_hu78d2e974f3c547630262f79e552a0ea6_2096124_c320047c4b1f0cff61ce38e7e7f6d3dc.webp&#34;&#xA;               width=&#34;633&#34;&#xA;               height=&#34;760&#34;&#xA;               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;&#xA;  &lt;/div&gt;&lt;figcaption&gt;&#xA;      SQL Antipatterns&#xA;    &lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pragprog.com/titles/bksap1/sql-antipatterns-volume-1/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SQL Antipatterns&lt;/a&gt; est un bon livre pour identifier les &lt;em&gt;anti-patterns&lt;/em&gt; et apporte des solutions.&#xA;Je m&amp;rsquo;en sers régulièrement quand j&amp;rsquo;ai besoin d&amp;rsquo;expliquer ce qui ne va pas dans un modèle ou une requête.&lt;/p&gt;&#xA;&lt;h2 id=&#34;sql-for-smarties&#34;&gt;SQL for Smarties&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;figure  id=&#34;figure-sql-for-smarties&#34;&gt;&#xA;  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;&#xA;    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;smarties&#34; srcset=&#34;&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/smarties_hua93406d09d9e5354756184b8dd00daf0_137495_c6c3d9973032c4ac34459909ff559894.webp 400w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/smarties_hua93406d09d9e5354756184b8dd00daf0_137495_ca4d66cca791addd71955b48a3f29c2c.webp 760w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/smarties_hua93406d09d9e5354756184b8dd00daf0_137495_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;&#xA;               src=&#34;https://blog.anayrat.info/2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/smarties_hua93406d09d9e5354756184b8dd00daf0_137495_c6c3d9973032c4ac34459909ff559894.webp&#34;&#xA;               width=&#34;616&#34;&#xA;               height=&#34;760&#34;&#xA;               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;&#xA;  &lt;/div&gt;&lt;figcaption&gt;&#xA;      SQL for Smarties&#xA;    &lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Niveau : Avancé&lt;/p&gt;&#xA;&lt;p&gt;Comment ne pas mentionner les livres de &lt;a href=&#34;https://en.wikipedia.org/wiki/Joe_Celko&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Joe Celko&lt;/a&gt;.&#xA;Il a participé au standard SQL et écrit de &lt;a href=&#34;https://www.oreilly.com/pub/au/1919&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;nombreux livres&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sciencedirect.com/book/9780128007617/joe-celkos-sql-for-smarties&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SQL for Smarties&lt;/a&gt; fait partie&#xA;des références en matière de SQL. La première édition date de 1995&amp;hellip; oui&amp;hellip; presque 30 ans quand j&amp;rsquo;écris ces lignes !&#xA;La cinquième édition date de 2015, malgré ces 10 ans, le contenu est toujours d&amp;rsquo;actualité. On trouve même des ordres assez récents comme &lt;code&gt;LATERAL&lt;/code&gt;, les &lt;em&gt;window functions&lt;/em&gt;, &lt;code&gt;CTE&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;On est aussi sur un gros pavé de plus de 800 pages, le livre est très complet, assez exhaustif. Je dirai réservé à ceux qui veulent vraiment approfondir leurs connaissances en SQL.&lt;/p&gt;&#xA;&lt;p&gt;À noter qu&amp;rsquo;il existe une version en français basé sur la seconde édition qui date de 2000, elle accuse un peu l&amp;rsquo;age : &lt;a href=&#34;https://www.decitre.fr/livres/sql-avance-9782711786367.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SQL Avancé&lt;/a&gt;. On peut le trouver &lt;a href=&#34;https://www.momox-shop.fr/joe-celko-sql-avance-taschenbuch-M02841801411.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;d&amp;rsquo;occasion&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-art-of-sql&#34;&gt;The Art Of SQL&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;figure  id=&#34;figure-the-art-of-sql&#34;&gt;&#xA;  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;&#xA;    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;art&#34; srcset=&#34;&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/art_hu3e5eba633759e8230aa87338f68d1a3b_220155_2bb5db8f1a45e313260bc7467bf92c17.webp 400w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/art_hu3e5eba633759e8230aa87338f68d1a3b_220155_ad989b301e7ba70987c52db0c9c535e3.webp 760w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/art_hu3e5eba633759e8230aa87338f68d1a3b_220155_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;&#xA;               src=&#34;https://blog.anayrat.info/2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/art_hu3e5eba633759e8230aa87338f68d1a3b_220155_2bb5db8f1a45e313260bc7467bf92c17.webp&#34;&#xA;               width=&#34;579&#34;&#xA;               height=&#34;760&#34;&#xA;               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;&#xA;  &lt;/div&gt;&lt;figcaption&gt;&#xA;      The Art Of SQL&#xA;    &lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Niveau : Avancé&lt;/p&gt;&#xA;&lt;p&gt;Avec &lt;a href=&#34;https://www.oreilly.com/library/view/the-art-of/0596008945/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Art of SQL&lt;/a&gt; de &lt;a href=&#34;https://www.oreilly.com/pub/au/2005&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Stephane Faroult&lt;/a&gt;, on change de catégorie. Là, on est sur du SQL plus avancé.&#xA;Le livre va être orienté performances, bonnes pratiques. Malgré ses 18 ans, son contenu est toujours d&amp;rsquo;actualité. C&amp;rsquo;est un livre très puissant, il vous faudra du temps pour le lire et assimiler chaque page.&lt;/p&gt;&#xA;&lt;h1 id=&#34;performance&#34;&gt;Performance&lt;/h1&gt;&#xA;&lt;h2 id=&#34;sql-performance-explained&#34;&gt;SQL Performance Explained&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;figure  id=&#34;figure-sql-performance-explained&#34;&gt;&#xA;  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;&#xA;    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;luke&#34; srcset=&#34;&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/luke_hu753ac19229e8013f92d2513650643829_89166_d25868af42f9fe155d70736822260a43.webp 400w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/luke_hu753ac19229e8013f92d2513650643829_89166_c361959935046d9adedd33681287b70f.webp 760w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/luke_hu753ac19229e8013f92d2513650643829_89166_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;&#xA;               src=&#34;https://blog.anayrat.info/2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/luke_hu753ac19229e8013f92d2513650643829_89166_d25868af42f9fe155d70736822260a43.webp&#34;&#xA;               width=&#34;480&#34;&#xA;               height=&#34;737&#34;&#xA;               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;&#xA;  &lt;/div&gt;&lt;figcaption&gt;&#xA;      SQL Performance Explained&#xA;    &lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Niveau : Intermédiaire&lt;/p&gt;&#xA;&lt;p&gt;Impossible de ne pas mentionner l&amp;rsquo;excellent livre de &lt;a href=&#34;https://winand.at/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Markus Winand&lt;/a&gt;, &lt;a href=&#34;https://sql-performance-explained.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SQL Performance Explained&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Comme son titre l&amp;rsquo;indique, on va parler performance, indexation, écriture de requêtes. À noter qu&amp;rsquo;il a également été traduit en plusieurs langues : Allemand, Espagnol, Japonais et Français grâce à Guillaume Lelarge &lt;a href=&#34;https://sql-au-coeur-des-performances.fr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SQL : Au cœur des performances&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Le contenu du livre est également disponible sur son site &lt;a href=&#34;https://use-the-index-luke.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Use the Index, Luke !&lt;/a&gt;. Markus est aussi l&amp;rsquo;auteur d&amp;rsquo;un excellent site sur les fonctionnalités avancés du SQL : &lt;a href=&#34;https://modern-sql.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Modern SQL&lt;/a&gt;. Lors de l&amp;rsquo;émission &lt;a href=&#34;https://youtu.be/mGqqQg-dG-w?si=he4R6eTC_2VckAVA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Modern SQL sur Postgres.FM&lt;/a&gt;, il a annoncé la volonté d&amp;rsquo;en faire un livre. J&amp;rsquo;ai hâte ! Il a aussi fait de nombreuses &lt;a href=&#34;https://winand.at/sql-slides-for-developers&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;présentations&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;indexing-beyond-the-basics&#34;&gt;Indexing Beyond the Basics&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;figure  id=&#34;figure-indexing-beyond-the-basics&#34;&gt;&#xA;  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;&#xA;    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;indexing&#34; srcset=&#34;&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/indexing_hu4ec3b1968fb5d81fd5627bea5287bed7_530622_cd04fe528416e6d69ed46ae57835a97e.webp 400w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/indexing_hu4ec3b1968fb5d81fd5627bea5287bed7_530622_7b7f71022bce674d799dc5af2cfdb5cb.webp 760w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/indexing_hu4ec3b1968fb5d81fd5627bea5287bed7_530622_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;&#xA;               src=&#34;https://blog.anayrat.info/2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/indexing_hu4ec3b1968fb5d81fd5627bea5287bed7_530622_cd04fe528416e6d69ed46ae57835a97e.webp&#34;&#xA;               width=&#34;668&#34;&#xA;               height=&#34;760&#34;&#xA;               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;&#xA;  &lt;/div&gt;&lt;figcaption&gt;&#xA;      Indexing Beyond the Basics&#xA;    &lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Niveau : Débutant - Intermédiaire&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://sqlfordevs.com/ebooks/indexing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Indexing Beyond the Basics&lt;/a&gt; est un e-book orienté sur les index. Un point intéressant est qu&amp;rsquo;il mentionne aussi pourquoi le moteur n&amp;rsquo;utilise pas un index.&lt;/p&gt;&#xA;&lt;h1 id=&#34;postgresql&#34;&gt;PostgreSQL&lt;/h1&gt;&#xA;&lt;h2 id=&#34;practical-sql&#34;&gt;Practical SQL&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;figure  id=&#34;figure-practical-sql&#34;&gt;&#xA;  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;&#xA;    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;practical&#34; srcset=&#34;&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/practical_hu01f19f83ea7b9b959997133246dda201_161098_c3df0446f9f62391d13c57dd10ec2e89.webp 400w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/practical_hu01f19f83ea7b9b959997133246dda201_161098_f2aecb321cb118f7fb40dddd50422be5.webp 760w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/practical_hu01f19f83ea7b9b959997133246dda201_161098_1200x1200_fit_q75_h2_lanczos_2.webp 1200w&#34;&#xA;               src=&#34;https://blog.anayrat.info/2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/practical_hu01f19f83ea7b9b959997133246dda201_161098_c3df0446f9f62391d13c57dd10ec2e89.webp&#34;&#xA;               width=&#34;477&#34;&#xA;               height=&#34;630&#34;&#xA;               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;&#xA;  &lt;/div&gt;&lt;figcaption&gt;&#xA;      Practical SQL&#xA;    &lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Niveau : Débutant - intermédiaire&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://nostarch.com/practical-sql-2nd-edition/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Practical SQL&lt;/a&gt; est un super livre pour quelqu&amp;rsquo;un qui débute sur Postgres. Il parle d&amp;rsquo;un peu de tout, du SQL jusqu&amp;rsquo;aux types avancés. Comment utiliser le SQL pour analyser des données, faire du &lt;em&gt;full text search&lt;/em&gt;, opération d&amp;rsquo;administration&amp;hellip;&lt;/p&gt;&#xA;&lt;h2 id=&#34;postgresql---architecture-et-notions-avancées&#34;&gt;PostgreSQL - Architecture et notions avancées&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;figure  id=&#34;figure-postgresql---architecture-et-notions-avancées&#34;&gt;&#xA;  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;&#xA;    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;architecture&#34; srcset=&#34;&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/architecture_hu4e070f54fbcfe012d689b7262a78d531_408340_8da2fb9ff08beb89b92a47f2af0154cc.webp 400w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/architecture_hu4e070f54fbcfe012d689b7262a78d531_408340_504568017e4d0ef28b5f0f36871185ec.webp 760w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/architecture_hu4e070f54fbcfe012d689b7262a78d531_408340_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;&#xA;               src=&#34;https://blog.anayrat.info/2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/architecture_hu4e070f54fbcfe012d689b7262a78d531_408340_8da2fb9ff08beb89b92a47f2af0154cc.webp&#34;&#xA;               width=&#34;559&#34;&#xA;               height=&#34;760&#34;&#xA;               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;&#xA;  &lt;/div&gt;&lt;figcaption&gt;&#xA;      PostgreSQL - Architecture et notions avancées&#xA;    &lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Niveau : Intermédiaire - avancé&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.d-booker.fr/bases-de-donnees/805-1338-postgresql-architecture-et-notions-avancees-5ed.html#/21-option-consultation_en_ligne&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PostgreSQL - Architecture et notions avancées&lt;/a&gt; par Guillaume Lelarge et Julien Rouhaud est &lt;strong&gt;le&lt;/strong&gt; livre que je recommande pour qui veut comprendre comment fonctionne Postgres. Mon seul regret est qu&amp;rsquo;il ne soit pas traduit en anglais pour en faire profiter plus de lecteurs.&lt;/p&gt;&#xA;&lt;p&gt;À noter aussi qu&amp;rsquo;il est mis à jour tous les ans.&lt;/p&gt;&#xA;&lt;h2 id=&#34;learn-postgresql&#34;&gt;Learn PostgreSQL&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;figure  id=&#34;figure-learn-postgresql&#34;&gt;&#xA;  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;&#xA;    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;learn&#34; srcset=&#34;&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/learn_hu00fe0c0efabc0ae6d85710a22f715230_111765_2e08c564415b06ee6ac817f7ac0914b0.webp 400w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/learn_hu00fe0c0efabc0ae6d85710a22f715230_111765_c22b1c79c1fe1d43eb51d2ce83b5ee11.webp 760w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/learn_hu00fe0c0efabc0ae6d85710a22f715230_111765_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;&#xA;               src=&#34;https://blog.anayrat.info/2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/learn_hu00fe0c0efabc0ae6d85710a22f715230_111765_2e08c564415b06ee6ac817f7ac0914b0.webp&#34;&#xA;               width=&#34;616&#34;&#xA;               height=&#34;760&#34;&#xA;               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;&#xA;  &lt;/div&gt;&lt;figcaption&gt;&#xA;      Learn PostgreSQL&#xA;    &lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.packtpub.com/product/learn-postgresql-second-edition/9781837635641&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Learn PostgreSQL&lt;/a&gt; par Lucas Ferrari et Enrico Pirozzi est un livre très complet sur l&amp;rsquo;administration de Postgres. Un &lt;em&gt;must have&lt;/em&gt; pour un DBA.&lt;/p&gt;&#xA;&lt;p&gt;Pour les francophones, vous pouvez vous orienter vers &lt;a href=&#34;https://www.editions-eni.fr/livre/postgresql-administration-et-exploitation-de-vos-bases-de-donnees-4e-edition-9782409011467&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PostgreSQL Administration et exploitation de vos bases de données&lt;/a&gt; de Sébastien Lardière.&lt;/p&gt;&#xA;&lt;h2 id=&#34;postgresql-14-internals&#34;&gt;PostgreSQL 14 Internals&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;figure  id=&#34;figure-postgresql-14-internals&#34;&gt;&#xA;  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;&#xA;    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;internals&#34; srcset=&#34;&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/internals_hu8a8cf4e0b43f0fa4f74d2b36d2f27852_60433_8639f0d8b0e15fe8fb464f6e5412e100.webp 400w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/internals_hu8a8cf4e0b43f0fa4f74d2b36d2f27852_60433_3d76ec668fd76ab0113449dbb278d740.webp 760w,&#xA;               /2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/internals_hu8a8cf4e0b43f0fa4f74d2b36d2f27852_60433_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;&#xA;               src=&#34;https://blog.anayrat.info/2024/02/12/recommandations-de-lectures-pour-ameliorer-ses-connaissances-en-base-de-donnees-et-postgresql/internals_hu8a8cf4e0b43f0fa4f74d2b36d2f27852_60433_8639f0d8b0e15fe8fb464f6e5412e100.webp&#34;&#xA;               width=&#34;384&#34;&#xA;               height=&#34;552&#34;&#xA;               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;&#xA;  &lt;/div&gt;&lt;figcaption&gt;&#xA;      PostgreSQL 14 Internals&#xA;    &lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://postgrespro.com/community/books/internals&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PostgreSQL 14 Internals&lt;/a&gt; par Egor Rogov est un livre sur les entrailles de Postgres. Il est vraiment très complet. Un grand merci à lui de le mettre à disposition en accès libre.&lt;/p&gt;&#xA;&lt;p&gt;Dans le même style, il existe un site &lt;a href=&#34;https://www.interdb.jp/pg/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Internals of PostgreSQL&lt;/a&gt; par Hironobu SUZUKI.&lt;/p&gt;</summary>
    <author>
      <name>blog.anayrat.info</name>
    </author>
  </entry>
  <entry>
    <title>Postgres à nouveau élu SGBD de l&#39;année en 2023, mais je suis inquiet</title>
    <updated>2024-02-05T08:00:00Z</updated>
    <id>tag:blog.anayrat.info,2024-02-05:/2024/02/05/postgres-a-nouveau-elu-sgbd-de-lannee-en-2023-mais-je-suis-inquiet/</id>
    <link href="https://blog.anayrat.info/2024/02/05/postgres-a-nouveau-elu-sgbd-de-lannee-en-2023-mais-je-suis-inquiet/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cette année encore, Postgres a été élu SGBD de l&amp;rsquo;année par &lt;a href=&#34;https://db-engines.com/en/blog_post/106&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DB-Engines&lt;/a&gt;. Même si ce n&amp;rsquo;est qu&amp;rsquo;un classement, cela donne une tendance. Cela fait aussi plusieurs années qu&amp;rsquo;il est reconnu selon&#xA;les sondages de Stackoverflow : &lt;a href=&#34;https://survey.stackoverflow.co/2023/#section-most-popular-technologies-databases&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Most popular Databases&lt;/a&gt;.&#xA;C&amp;rsquo;est un SGBD très apprécié, tant par les développeurs, que par les DBA chevronnés&amp;hellip; Mais aussi par les directeurs qui y trouvent une stabilité&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Postgres a tout pour séduire :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Année après année, de nouvelles fonctionnalités sont rajoutées. Je pense notamment à : la parallélisation, le partitionnement, la réplication logique&amp;hellip;&lt;/li&gt;&#xA;&lt;li&gt;Il a su, depuis toujours, garder sa fiabilité.&lt;/li&gt;&#xA;&lt;li&gt;Sa communauté n&amp;rsquo;a fait que grandir. Les conférences dédiées à Postgres battent des records d&amp;rsquo;affluence tous les ans.&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;&#xA;&lt;li&gt;C&amp;rsquo;est devenu un standard, même pour les autres logiciels : les éditeurs rajoutent même le support du protocole Postgres pour faciliter leur intégration : Aurora, AlloyDB, QuestDB&amp;hellip;&lt;/li&gt;&#xA;&lt;li&gt;C&amp;rsquo;est un des rares projets de cette envergure à être communautaire. On a pu voir qu&amp;rsquo;il ne suffit pas que le projet soit opensource, il faut aussi compter sur la communauté et son écosystème.&lt;/li&gt;&#xA;&lt;li&gt;Il est supporté par les gros acteurs : les GAFAM emploient de nombreux committers et contributeurs. Ils sponsorisent également les conférences. Par exemple, le prochain &lt;a href=&#34;https://2024.pgday.paris/sponsors/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pgDay Paris est sponsorisé par Microsoft&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Cependant, je suis un peu inquiet pour le futur. Non pas pour PostgreSQL. Bruce Momjian a fait plusieurs présentations sur ce sujet :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://momjian.us/main/writings/pgsql/challenges.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Future Postgres Challenges&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://momjian.us/main/writings/pgsql/forever.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Will Postgres Live Forever?&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://momjian.us/main/writings/pgsql/past_present_future.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PostgreSQL: Past, Present, and Future&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;C&amp;rsquo;est même le sujet de la Keynote d&amp;rsquo;ouverture du dernier PGConf Europe : &lt;a href=&#34;https://www.youtube.com/watch?v=8W-J36IxYv4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Simon Riggs: The Next 20 Years (PGConf.EU 2023)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Non, je suis plutôt inquiet sur la perte de connaissance du métier de DBA.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;A quoi servira Postgres si on ne sait pas l&amp;rsquo;utiliser correctement ?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;&#xA;  &lt;summary class=&#34;font-weight-bold&#34;&gt;Table des matières&lt;/summary&gt;&#xA;  &lt;nav id=&#34;TableOfContents&#34;&gt;&#xA;  &lt;ul&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#un-peu-dhistoire&#34;&gt;Un peu d&amp;rsquo;histoire&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#quest-ce-quon-oublie-&#34;&gt;Qu&amp;rsquo;est-ce qu&amp;rsquo;on oublie ?&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#oui-mais-le-cloud&#34;&gt;Oui, mais le cloud!&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#on-oublie-le-métier-de-dba&#34;&gt;On oublie le métier de DBA&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#on-oublie-le-passé&#34;&gt;On oublie le passé&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#le-code-change-la-donnée-reste&#34;&gt;Le code change, la donnée reste&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#il-faut-quelques-minutes-pour-prendre-une-mauvaise-décision-sur-une-base-de-donnée&#34;&gt;Il faut quelques minutes pour prendre une mauvaise décision sur une base de donnée&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#lusage-du-cloud&#34;&gt;L&amp;rsquo;usage du cloud&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#ce-quil-faudrait-changer&#34;&gt;Ce qu&amp;rsquo;il faudrait changer&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#pour-conclure&#34;&gt;Pour conclure&lt;/a&gt;&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/nav&gt;&#xA;&lt;/details&gt;&#xA;&lt;h1 id=&#34;un-peu-dhistoire&#34;&gt;Un peu d&amp;rsquo;histoire&lt;/h1&gt;&#xA;&lt;p&gt;Par le passé, il y avait une spécialisation forte des compétences : développeurs, testeurs, DBA étude, DBA prod, ingénieur système, ingénieur stockage, ingénieur sauvegarde&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;Chaque spécialité évoluait un peu dans sa bulle, ce qui compliquait la collaboration avec des cycles de développement longs.&lt;/p&gt;&#xA;&lt;p&gt;Cette organisation a laissé place à une nouvelle façon de travailler : développeurs &lt;em&gt;fullstack&lt;/em&gt;, &lt;em&gt;DEVOPS/SRE&lt;/em&gt;, des data &amp;ldquo;quelque chose&amp;rdquo; (engineer, analyst, steward&amp;hellip;).&lt;/p&gt;&#xA;&lt;p&gt;Les compétences se sont diluées sur les différents métiers. Je croise de plus en plus rarement des DBA.&lt;/p&gt;&#xA;&lt;p&gt;A la place, la base de donnée est &lt;em&gt;gérée&lt;/em&gt; par les développeurs. Ou, si on a un peu de chance, par des &amp;ldquo;data engineer&amp;rdquo; ou &amp;ldquo;data analyst&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;Après plusieurs années, alors que je baigne dedans, j&amp;rsquo;ai encore du mal à définir ces métiers.&lt;/p&gt;&#xA;&lt;p&gt;Le constat : bonne connaissance du python, monte des pipelines, on assemble en quelque sorte des Legos avec pleins d&amp;rsquo;outils : airflow, dbt&amp;hellip; Puis, on envoie ces données dans du Redshift, Biquery, Snowflake&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;Cependant, j&amp;rsquo;ai l&amp;rsquo;impression que la connaissance du SQL s&amp;rsquo;appauvrit à cause des couches d&amp;rsquo;abstraction.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Du moment où on manipule de la donnée, la première des compétences à avoir, devrait être la maitrise du SQL.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;quest-ce-quon-oublie-&#34;&gt;Qu&amp;rsquo;est-ce qu&amp;rsquo;on oublie ?&lt;/h1&gt;&#xA;&lt;p&gt;J&amp;rsquo;ai le sentiment, qu&amp;rsquo;année après année, on oublie le métier de DBA.&lt;/p&gt;&#xA;&lt;p&gt;Pour rappel, ce dernier va être à la croisée de plusieurs chemins :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Il a des compétences pures sur la base de données :&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Modélisation.&lt;/li&gt;&#xA;&lt;li&gt;Maitrise du SQL.&lt;/li&gt;&#xA;&lt;li&gt;Maitrise du SGBD : connait le fonctionnement du moteur (&lt;em&gt;vacuum&lt;/em&gt;, &lt;em&gt;checkpoint&lt;/em&gt; &amp;hellip;). Comprend les mécanismes de verrouillages (&lt;em&gt;MVCC&lt;/em&gt;, &lt;em&gt;locks&lt;/em&gt;&amp;hellip;).&lt;/li&gt;&#xA;&lt;li&gt;Conserve une veille technique : le Postgres que j&amp;rsquo;ai connu à mes débuts est très loin du Postgres actuel.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Mais également des compétences plus transverses :&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Avoir une bonne connaissance système pour investiguer sur les problèmes de performance, dimensionner les ressources.&lt;/li&gt;&#xA;&lt;li&gt;Un vernis en développement pour comprendre les besoins des développeurs et pouvoir les accompagner.&lt;/li&gt;&#xA;&lt;li&gt;De la culture &amp;ldquo;computer science&amp;rdquo;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;oui-mais-le-cloud&#34;&gt;Oui, mais le cloud!&lt;/h1&gt;&#xA;&lt;p&gt;On pourrait penser que le cloud a rebattu les cartes et qu&amp;rsquo;on n&amp;rsquo;a plus besoin de DBA. Dans la liste que j&amp;rsquo;ai donnée ci-dessus, quelles compétences sont couvertes par le cloud ?&lt;/p&gt;&#xA;&lt;p&gt;Le cloud résout une partie des besoins : hébergement, maintenance, réseau, monitoring (qu&amp;rsquo;il faut souvent compléter avec un APM ou un Datadog like).&#xA;Et il rajoute d&amp;rsquo;autres problèmes :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Il faut rajouter un métier de &lt;a href=&#34;https://lota.cloud/finops-cloud-2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;FinOps&lt;/a&gt; pour maitriser et optimiser les dépenses.&lt;/li&gt;&#xA;&lt;li&gt;C&amp;rsquo;est parfois une boite noire et il peut être difficile d&amp;rsquo;investiguer sur des problèmes de performance&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Cet excellent article de Markus Winand présente aussi d&amp;rsquo;autres inconvénients : &lt;a href=&#34;https://winand.at/newsletter/2024-01/clouds-bring-rain&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sometimes Clouds Bring Rain&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Changer de cloud provider est difficile. Je dirais même que c&amp;rsquo;est volontaire de leur part.&lt;/li&gt;&#xA;&lt;li&gt;Les coûts peuvent changer &lt;em&gt;Just because it is cheap today doesn’t mean it will be cheap forever&lt;/em&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Il faut prévoir un plan de sortie : éviter les services propriétaires, conserver un faible nombre de services.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Car une fois dans le cloud, qui s&amp;rsquo;occupe de : la modélisation, l&amp;rsquo;optimisation des requêtes, l&amp;rsquo;indexation, la veille technique sur le SGBD&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;, l&amp;rsquo;investigation sur les performances, comprendre les problèmes de verrouillages, l&amp;rsquo;accompagnement des développeurs ?&lt;/p&gt;&#xA;&lt;p&gt;Ceci est confirmé dans mes audits, je vois régulièrement des problèmes très basiques :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Absence de clé primaire.&lt;/li&gt;&#xA;&lt;li&gt;Pas d&amp;rsquo;index sur des cas très simples.&lt;/li&gt;&#xA;&lt;li&gt;Aucun respect des formes normales, même les plus basiques. Le JSON n&amp;rsquo;a pas arrangé les choses.&lt;/li&gt;&#xA;&lt;li&gt;Requêtes spaghetti.&lt;/li&gt;&#xA;&lt;li&gt;Des jointures façon SQL-89 alors que ça fait plus de 30 ans que le mot clé &lt;code&gt;JOIN&lt;/code&gt; existe.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;S&amp;rsquo;il faut retenir une chose : &lt;strong&gt;Le cloud ne permet pas de s&amp;rsquo;affranchir du DBA. Ce n&amp;rsquo;est pas parce qu&amp;rsquo;on peut obtenir les clés d&amp;rsquo;un avion, qu&amp;rsquo;on sait le piloter.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Un article intéressant sur le nombre de DBA dont vous avez besoin : &lt;a href=&#34;https://www.bytebase.com/blog/how-many-dbas-should-a-company-hire/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How many DBAs should a company hire?&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;on-oublie-le-métier-de-dba&#34;&gt;On oublie le métier de DBA&lt;/h1&gt;&#xA;&lt;p&gt;On pourrait naïvement penser qu&amp;rsquo;on confie ces tâches à des DBA experts, mais j&amp;rsquo;ai de plus en plus de doutes. J&amp;rsquo;ai l&amp;rsquo;impression &amp;ldquo;qu&amp;rsquo;on&amp;rdquo; est en train de perdre la connaissance d&amp;rsquo;un métier.&#xA;J&amp;rsquo;ai déjà croisé des développeurs expérimentés qui ne savaient même pas que le métier de DBA existait.&#xA;Des recruteurs qui me demandaient si en tant que DBA, je savais optimiser des requêtes et si je connaissais le SQL. C&amp;rsquo;est mon métier ! C&amp;rsquo;est un peu comme demander à un plombier s&amp;rsquo;il sait changer un robinet !&lt;/p&gt;&#xA;&lt;p&gt;Ce qui est d&amp;rsquo;autant plus alarmant, c&amp;rsquo;est que je crains qu&amp;rsquo;il y ait aussi des CTO qui ont aussi cette méconnaissance de la donnée.&lt;/p&gt;&#xA;&lt;p&gt;La conséquence est qu&amp;rsquo;en cas de problème de performance, on ne fait qu&amp;rsquo;augmenter les ressources des instances.&#xA;Avec le cloud, la facture croît linéairement avec la taille de l&amp;rsquo;instance.&#xA;Si la croissance de la charge est exponentielle, il faudra scaler la base et la facture qui va avec. On se retrouve avec une facture exponentielle.&lt;/p&gt;&#xA;&lt;p&gt;Quand on n&amp;rsquo;arrive plus à s&amp;rsquo;en sortir, on va accuser l&amp;rsquo;outil ou le modèle, donc on va changer de SGBD ou aller vers du NoSQL. Spoiler : ça ne résoudra pas vos problèmes.&lt;/p&gt;&#xA;&lt;h1 id=&#34;on-oublie-le-passé&#34;&gt;On oublie le passé&lt;/h1&gt;&#xA;&lt;p&gt;Pendant un temps, j&amp;rsquo;ai voulu écrire un livre pour parler optimisation de requête, des erreurs courantes que je rencontre, etc.&lt;/p&gt;&#xA;&lt;p&gt;En regardant ma bibliothèque, elle est pleine de livres de ce genre. Ils ont pour la plupart entre 10 et 30 ans et le contenu est toujours d&amp;rsquo;actualité. A quoi servirait un énième livre s&amp;rsquo;il n&amp;rsquo;est pas connu ?&lt;/p&gt;&#xA;&lt;p&gt;J&amp;rsquo;ai un autre exemple en tête : les data warehouse (DWH). Ce terme devient de plus en plus galvaudé.&#xA;La construction d&amp;rsquo;un DWH est complexe, il faut passer par une phase de modélisation afin de stocker correctement les données. Cela permet de bonnes performances et facilite l&amp;rsquo;écriture&#xA;des requêtes analytiques.&lt;/p&gt;&#xA;&lt;p&gt;Maintenant, je croise régulièrement des &amp;ldquo;data warehouse&amp;rdquo; qui se résument à envoyer toutes les données dans un SGBD spécialisé (redshift, biquery &amp;hellip;). Sans travail de modélisation et avec des requêtes très mal écrites, parfois générées, car les utilisateurs ne savent pas faire du SQL.&lt;/p&gt;&#xA;&lt;p&gt;Ces services coûtent très cher et ne font pas de miracle s&amp;rsquo;il n&amp;rsquo;y a pas eu un travail approfondi de modélisation et d&amp;rsquo;optimisation.&lt;/p&gt;&#xA;&lt;p&gt;Pourtant, les livres sur les DWH et le SQL ont entre 10 et 30 ans. A cette époque, le cloud n&amp;rsquo;existait pas, les SSD non plus, les CPU avec plusieurs coeurs non plus.&#xA;Pourtant, on savait construire des DWH, faire des sites performants&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Il ne faudrait pas que le cloud nous fasse oublier tout cet héritage. Sinon, on risque de payer la dette technique et la perte de connaissance très cher, avec les intérêts en plus.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Il faut avoir en tête que même si le SQL a évolué, les SGBD gagnés en fonctionnalités, &lt;strong&gt;les principes fondateurs sont toujours justes&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;le-code-change-la-donnée-reste&#34;&gt;Le code change, la donnée reste&lt;/h1&gt;&#xA;&lt;p&gt;J&amp;rsquo;ai eu un super manager, ancien DBA, qui expliquait aux développeurs : tu n&amp;rsquo;es pas ici pour &amp;ldquo;produire du code&amp;rdquo; =&amp;gt; yeux écarquillés du développeur.&#xA;&amp;ldquo;tu es là pour produire et manipuler de la donnée.&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;Lorsqu&amp;rsquo;il y avait une décision compliquée. Par exemple, prendre plus de temps pour revoir le code applicatif, faire une migration plus compliquée, plutôt qu&amp;rsquo;une solution&#xA;&amp;ldquo;quick win&amp;rdquo;. Ce même manager expliquait :&amp;quot;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;D&amp;rsquo;ici 5-10 ans, ton code aura été réécrit plusieurs fois, peut-être même dans un autre langage.&#xA;Nous, la donnée, dans 50 ans, elle sera toujours là. C&amp;rsquo;est notre devoir de nous assurer qu&amp;rsquo;elle sera toujours exploitable.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;il-faut-quelques-minutes-pour-prendre-une-mauvaise-décision-sur-une-base-de-donnée&#34;&gt;Il faut quelques minutes pour prendre une mauvaise décision sur une base de donnée&lt;/h1&gt;&#xA;&lt;p&gt;&lt;em&gt;Et parfois plusieurs mois / années pour la corriger.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Il m&amp;rsquo;est arrivé de faire des audits où le modèle était catastrophique. Il avait évolué de solutions à court terme en d&amp;rsquo;autres solutions à court terme.&#xA;&amp;ldquo;On corrigera plus tard, il faut faire passer cette fonctionnalité dans le sprint&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;Un DBA peut corriger le modèle de données à coup de grosses migrations (encore faut-il avoir un DBA, difficile si on ignore que ce métier existe&amp;hellip;).&#xA;Au-delà de ça, le problème va se poser autour : il faut réécrire une grosse partie du code applicatif (qui est souvent dans le même état que la base).&lt;/p&gt;&#xA;&lt;p&gt;Parfois, la complexité est quadratique ou exponentielle. Il vaut mieux tout jeter pour tout recommencer.&lt;/p&gt;&#xA;&lt;p&gt;On se retrouve face à plusieurs dilemmes :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Augmenter la taille des instances.&lt;/li&gt;&#xA;&lt;li&gt;Parfois, cette solution n&amp;rsquo;est pas suffisante. J&amp;rsquo;explique : &amp;ldquo;là, vous pouvez faire encore fois dix sur la taille de l&amp;rsquo;instance, mais vous ne pourrez jouer cette carte qu&amp;rsquo;une fois&amp;rdquo;. Notez que cette solution est inutile si le traitement ne peut pas être parallélisé.&lt;/li&gt;&#xA;&lt;li&gt;Tout jeter pour tout recommencer. Là aussi, le coût ou la perte peut être démentielle.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Alors qu&amp;rsquo;il aurait suffi des conseils d&amp;rsquo;un DBA à quelques moments de la vie du projet pour éviter de partir dans une mauvaise direction.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;On ne bâtit pas un château sur du sable&lt;/strong&gt;. J&amp;rsquo;ai une anecdote en tête, une personne de mon entourage m&amp;rsquo;a raconté une histoire d&amp;rsquo;un bâtiment qui avait été contrôlé au moment de la livraison :&lt;/p&gt;&#xA;&lt;p&gt;Un prélèvement avait été fait dans les murs et il n&amp;rsquo;y avait pas assez de ciment, le bâtiment, &lt;strong&gt;neuf&lt;/strong&gt;, pouvait s&amp;rsquo;écrouler. Il venait d&amp;rsquo;être totalement terminé, électricité, plomberie, menuiseries&amp;hellip; Tout était terminé.&#xA;Il a dû être rasé complètement. Autant il existe des assurances dans le bâtiment, mais pas pour le développement&amp;hellip;&#xA;Je pense que certaines sociétés ne survivent pas si la dette technique est trop importante.&lt;/p&gt;&#xA;&lt;h1 id=&#34;lusage-du-cloud&#34;&gt;L&amp;rsquo;usage du cloud&lt;/h1&gt;&#xA;&lt;p&gt;Le cloud a de nombreux avantages :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;On peut rapidement obtenir des bases de données avec une installation relativement propre.&lt;/li&gt;&#xA;&lt;li&gt;Le cloud provider vous obligera à rester sur des versions supportées.&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;Écologiquement&amp;rdquo;, cela permet de mutualiser des ressources physiques. Mais c&amp;rsquo;est aussi une faiblesse. L&amp;rsquo;accès facile à ces ressources peut aussi entrainer un gaspillage. On peut facilement déployer&#xA;une centaine d&amp;rsquo;instances. Là, où avec une infrastructure &lt;em&gt;on-premise&lt;/em&gt;, il faut concilier avec les ressources physiques à disposition : puissance des serveurs, puissance électrique, espace dans les baies&amp;hellip;&lt;/li&gt;&#xA;&lt;li&gt;On paye ce qu&amp;rsquo;on consomme. On peut facilement identifier combien coute un service. Qu&amp;rsquo;une requête est responsable de 80% de la facture. Ce qui peut inciter à l&amp;rsquo;optimiser, le gain financier est immédiat. Encore faut-il qu&amp;rsquo;il y ait des personnes qui s&amp;rsquo;y intéressent.&#xA;Je n&amp;rsquo;ai pas l&amp;rsquo;impression qu&amp;rsquo;il y ait beaucoup de FinOps. S&amp;rsquo;il y en a, est-ce que ces derniers pensent à optimiser la base ?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Mais il y a aussi de vrais inconvénients :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Perte de souveraineté numérique. A cela s&amp;rsquo;ajoute des risques juridiques. Comment garantir que vos données ne sont pas stockées ailleurs ? Si vous avez choisi un service managé, comment en sortir si la législation vous impose d&amp;rsquo;être sur le sol Français ou d&amp;rsquo;un autre pays ?&lt;/li&gt;&#xA;&lt;li&gt;Perte de compétences.&lt;/li&gt;&#xA;&lt;li&gt;Dépendance à un cloud provider : encore que sur ce point, on voit émerger de nouvelles offres &amp;ldquo;cloud agnostique&amp;rdquo; : Des sociétés créent un cloud par-dessus un autre cloud.&#xA;Je pense notamment à &lt;a href=&#34;https://aiven.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Aiven&lt;/a&gt;, &lt;a href=&#34;https://www.enterprisedb.com/docs/biganimal/latest/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;EDB BigAnimal&lt;/a&gt;, &lt;a href=&#34;https://www.crunchydata.com/products/crunchy-bridge&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Crunchy Bridge&lt;/a&gt; et j&amp;rsquo;en oublie certainement&amp;hellip;&lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;&#xA;&lt;li&gt;Les couts décollent quand l&amp;rsquo;infrastructure est importante. Certains commencent à quitter le cloud. Je pense notamment à Basecamp :&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://world.hey.com/dhh/why-we-re-leaving-the-cloud-654b47e0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Why we&amp;rsquo;re leaving the cloud&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://world.hey.com/dhh/we-stand-to-save-7m-over-five-years-from-our-cloud-exit-53996caa&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;We stand to save $7m over five years from our cloud exit&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://world.hey.com/dhh/the-big-cloud-exit-faq-20274010&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Big Cloud Exit FAQ&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;ce-quil-faudrait-changer&#34;&gt;Ce qu&amp;rsquo;il faudrait changer&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Redonner de la valeur à la donnée : des sociétés rechignent à faire appel à des DBA ou prendre des contrats de supports sur leur base. Quel est le cout d&amp;rsquo;une indisponibilité de service, d&amp;rsquo;une corruption de donnée, d&amp;rsquo;une perte de la base ?&lt;/li&gt;&#xA;&lt;li&gt;Réinvestir le champ des compétences en base de donnée : SQL, modélisation&lt;sup id=&#34;fnref:6&#34;&gt;&lt;a href=&#34;#fn:6&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;. A ce sujet, j&amp;rsquo;aime beaucoup le titre de Markus Winand : &lt;a href=&#34;https://winand.at/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SQL Renaissance Ambassador&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;S&amp;rsquo;attarder un peu plus sur l&amp;rsquo;usage des ressources : la consommation du numérique est importante, si les serveurs et l&amp;rsquo;électricité étaient plus chers, on serait contraint d&amp;rsquo;optimiser.&lt;/li&gt;&#xA;&lt;li&gt;Surveiller les dépenses sur les bases. Que ça soit dans le cloud, mais également on-premise. Pour cela, il faut avoir des indicateurs de couts.&lt;/li&gt;&#xA;&lt;li&gt;Penser pas à faire appel à des DBA pour anticiper les problèmes et investiguer sur les problèmes de performance : J&amp;rsquo;ai audité des bases dans un état catastrophique, ça aurait pu être évité si un DBA était intervenu dans la phase de modélisation. Sur les problèmes de performance, il m&amp;rsquo;est déjà arrivé de diviser des factures de cloud par 10 ou de baisser la charge moyenne de 80% à 5% avec un suivi régulier.&lt;/li&gt;&#xA;&lt;li&gt;Il ne faut pas se résigner à payer de grosses factures cloud plutôt que d&amp;rsquo;investir dans de la compétence de DBA.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;pour-conclure&#34;&gt;Pour conclure&lt;/h1&gt;&#xA;&lt;p&gt;C&amp;rsquo;est un article moins technique par rapport à ce que vous avez l&amp;rsquo;habitude de lire sur mon blog.&#xA;Cependant, c&amp;rsquo;est un des plus importants que j&amp;rsquo;ai été amené à écrire.&#xA;Ca fait plus de dix ans que je fais du Postgres et je réalise que la tendance ne va pas dans la bonne direction.&#xA;J&amp;rsquo;espère qu&amp;rsquo;il y aura une prise de conscience pour un avenir plus durable des bases de données.&lt;/p&gt;&#xA;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;&#xA;&lt;hr&gt;&#xA;&lt;ol&gt;&#xA;&lt;li id=&#34;fn:1&#34;&gt;&#xA;&lt;p&gt;Ainsi que dans le public, il est dans le &lt;a href=&#34;https://code.gouv.fr/data/sill.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Socle interministériel de logiciels libres&lt;/a&gt;.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li id=&#34;fn:2&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/pgconfeu/status/1734860251390750980&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;720 personnes à la PGEurope 2023&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li id=&#34;fn:3&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.datadoghq.com/blog/aws-ebs-latency-and-iops-the-surprising-truth/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AWS EBS latency and IOPS: The surprising truth&lt;/a&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Ultimately, due to AWS’ opacity, there is simply no way to know how much throughput (from the physical disks and from the network that sits in-between) to expect for a given EBS volume. Provisioned IOPS only offer a partial solution to this issue, at a higher hourly cost.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li id=&#34;fn:4&#34;&gt;&#xA;&lt;p&gt;Le Postgres actuel est très loin du Postgres avec lequel j&amp;rsquo;ai débuté :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Nouvelles fonctionnalités liées au standard SQL : JSONPath par exemple. &lt;a href=&#34;https://winand.at/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Markus Winand&lt;/a&gt; est l&amp;rsquo;auteur d&amp;rsquo;un super site à ce sujet: &lt;a href=&#34;https://modern-sql.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Modern SQL&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Nouvelles fonctionnalités sur le moteur : parallélisme, partitionnement, nouveaux noeuds d&amp;rsquo;exécution, réplication logique&amp;hellip;&lt;/li&gt;&#xA;&lt;li&gt;La conséquence est un nombre de paramètres qui augmente au fur et à mesure.&lt;/li&gt;&#xA;&lt;li&gt;De nouvelles extensions.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li id=&#34;fn:5&#34;&gt;&#xA;&lt;p&gt;Je n&amp;rsquo;ai pas travaillé avec ces offres, je n&amp;rsquo;ai pas de recul dessus. On peut néanmoins souligner que ces sociétés emploient des développeurs qui contribuent à Postgres.&amp;#160;&lt;a href=&#34;#fnref:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li id=&#34;fn:6&#34;&gt;&#xA;&lt;p&gt;Il y a quelques années, un article était tiré d&amp;rsquo;une conférence.&lt;/p&gt;&#xA;&lt;p&gt;Le titre est particulièrement juste : &lt;a href=&#34;https://www.citusdata.com/blog/2018/03/19/postgres-database-constraints&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Database constraints in Postgres: The last line of defense&lt;/a&gt;.&#xA;Voici la vidéo de la conférence : &lt;a href=&#34;https://www.youtube.com/watch?v=hWh8QoV8z8k&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Constraints: a Developer&amp;rsquo;s Secret Weapon - Will Leinweber&lt;/a&gt;&#xA;et ses &lt;a href=&#34;https://www.postgresql.eu/events/pgdayparis2018/sessions/session/1835/slides/70/2018-03-15%20constraints%20a%20developers%20secret%20weapon%20pgday%20paris.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;slides&lt;/a&gt;.&amp;#160;&lt;a href=&#34;#fnref:6&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;</summary>
    <author>
      <name>blog.anayrat.info</name>
    </author>
  </entry>
  <entry>
    <title>Optimisation du GROUP BY</title>
    <updated>2024-01-26T09:00:00Z</updated>
    <id>tag:blog.anayrat.info,2024-01-26:/2024/01/26/optimisation-du-group-by/</id>
    <link href="https://blog.anayrat.info/2024/01/26/optimisation-du-group-by/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Un commit a attiré mon attention lors de ma veille technique :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;commit 0452b461bc405e6d35d8a14c02813c15e28ae516&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Author:     Alexander Korotkov &amp;lt;akorotkov@postgresql.org&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;AuthorDate: Sun Jan 21 22:21:36 2024 +0200&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Commit:     Alexander Korotkov &amp;lt;akorotkov@postgresql.org&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CommitDate: Sun Jan 21 22:21:36 2024 +0200&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Explore alternative orderings of group-by pathkeys during optimization.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    When evaluating a query with a multi-column GROUP BY clause, we can minimize&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    sort operations or avoid them if we synchronize the order of GROUP BY clauses&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    with the ORDER BY sort clause or sort order, which comes from the underlying&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    query tree. Grouping does not imply any ordering, so we can compare&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    the keys in arbitrary order, and a Hash Agg leverages this. But for Group Agg,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    we simply compared keys in the order specified in the query. This commit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    explores alternative ordering of the keys, trying to find a cheaper one.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    The ordering of group keys may interact with other parts of the query, some of&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    which may not be known while planning the grouping. For example, there may be&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    an explicit ORDER BY clause or some other ordering-dependent operation higher up&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    in the query, and using the same ordering may allow using either incremental&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    sort or even eliminating the sort entirely.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    The patch always keeps the ordering specified in the query, assuming the user&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    might have additional insights.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    This introduces a new GUC enable_group_by_reordering so that the optimization&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    may be disabled if needed.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Discussion: https://postgr.es/m/7c79e6a5-8597-74e8-0671-1c39d124c9d6%40sigaev.ru&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Author: Andrei Lepikhov, Teodor Sigaev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Reviewed-by: Tomas Vondra, Claudio Freire, Gavin Flower, Dmitry Dolgov&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Reviewed-by: Robert Haas, Pavel Borisov, David Rowley, Zhihong Yu&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Reviewed-by: Tom Lane, Alexander Korotkov, Richard Guo, Alena Rybakina&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;On remarque le message du commit assez explicite en mentionnant les personnes impliquées (12 relecteurs!) ainsi que le lien vers la discussion :&#xA;&lt;a href=&#34;https://www.postgresql.org/message-id/flat/7c79e6a5-8597-74e8-0671-1c39d124c9d6%40sigaev.ru&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;POC: GROUP BY optimization&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Les travaux ont commencé en 2018! Il aura fallu 5 ans et demi pour aboutir à ce commit. C&amp;rsquo;est le fruit de nombreux échanges afin de parvenir à un consensus en prenant en compte les multiples idées.&lt;/p&gt;&#xA;&lt;p&gt;Pour tester ce patch, j&amp;rsquo;ai compilé Postgres depuis les sources. Prenons un exemple tout simple :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;insert&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;into&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;generate_series&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_000_000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;vacuum&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;analyze&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;On obtient une table de 422Mo et un index de 66Mo.&#xA;Vous noterez au passage que j&amp;rsquo;ai utilisé une nouveauté de Postgres 16 en utilisant des &amp;ldquo;underscore&amp;rdquo; dans le &lt;em&gt;generate_series&lt;/em&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Si on fait un &lt;code&gt;GROUP BY&lt;/code&gt; sur &lt;em&gt;c1,c2&lt;/em&gt;, on obtient un parcours d&amp;rsquo;index :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;explain (settings, analyze,buffers) select count(*),c1,c2 from t1 group by c1,c2 order by c1,c2;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                                                    QUERY PLAN&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; GroupAggregate  (cost=0.43..235342.27 rows=100000 width=16) (actual time=3.605..3501.887 rows=1000 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Group Key: c1, c2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Buffers: shared hit=10447&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   -&amp;gt;  Index Only Scan using t1_c1_c2_idx on t1  (cost=0.43..159340.96 rows=10000175 width=8) (actual time=0.070..1900.730 rows=10000000 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Heap Fetches: 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Buffers: shared hit=10447&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Settings: enable_group_by_reordering = &amp;#39;off&amp;#39;, random_page_cost = &amp;#39;1.1&amp;#39;, max_parallel_workers_per_gather = &amp;#39;0&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Planning:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Buffers: shared hit=1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Planning Time: 0.191 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Execution Time: 3502.036 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Vous remarquerez que j&amp;rsquo;ai volontairement désactivé la fonctionnalité dans un premier temps (enable_group_by_reordering=off). J&amp;rsquo;ai également désactivé la parallélisation pour plus de clarté.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;On a le plan attendu, le moteur va lire 10447 blocs avec un parcours &lt;em&gt;Index Only Scan&lt;/em&gt;. Le moteur va chercher le plan qui manipule le moins de blocs possible.&lt;/p&gt;&#xA;&lt;p&gt;En revanche, si on change l&amp;rsquo;ordre du group by :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;explain (settings, analyze,buffers) select count(*),c1,c2 from t1 group by c2,c1 order by c1,c2;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                                          QUERY PLAN&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;------------------------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Sort  (cost=602422.32..602672.32 rows=100000 width=16) (actual time=5393.446..5393.503 rows=1000 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Sort Key: c1, c2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Sort Method: quicksort  Memory: 79kB&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Buffers: shared hit=96 read=53959&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   -&amp;gt;  HashAggregate  (cost=514992.50..594117.50 rows=100000 width=16) (actual time=5392.351..5392.894 rows=1000 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Group Key: c2, c1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Batches: 1  Memory Usage: 3217kB&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Buffers: shared hit=96 read=53959&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         -&amp;gt;  Seq Scan on t1  (cost=0.00..154055.00 rows=10000000 width=8) (actual time=0.033..1186.171 rows=10000000 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               Buffers: shared hit=96 read=53959&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Settings: enable_group_by_reordering = &amp;#39;off&amp;#39;, random_page_cost = &amp;#39;1.1&amp;#39;, max_parallel_workers_per_gather = &amp;#39;0&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Planning:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Buffers: shared hit=1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Planning Time: 0.189 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Execution Time: 5394.566 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dans ce cas, le moteur va lire toute la table (&lt;em&gt;seqscan&lt;/em&gt;) et faire un tri, alors que le résultat est identique.&lt;/p&gt;&#xA;&lt;p&gt;Le moteur lit 422Mo de données contre 80Mo, soit 5 fois plus. Le résultat peut être désastreux suivant les performances du stockage.&#xA;Là, on a de la &amp;ldquo;chance&amp;rdquo;, mon instance est dans un ramdisk donc la requête n&amp;rsquo;est pas beaucoup plus lente.&#xA;Avec du stockage mécanique ou des disques cloud, le temps de réponse peut augmenter drastiquement.&lt;/p&gt;&#xA;&lt;p&gt;L&amp;rsquo;ordre des colonnes dans un group by est important, c&amp;rsquo;est une optimisation assez simple pour peu qu&amp;rsquo;on connaisse le schéma de la base et qu&amp;rsquo;on maitrise les requêtes exécutées sur le serveur.&lt;/p&gt;&#xA;&lt;p&gt;Malheureusement, avec les ORM, on peut perdre cette maitrise ou rater des corrections.&#xA;C&amp;rsquo;est là où cette fonctionnalité est intéressante. Voyons son effet :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;postgres=# set enable_group_by_reordering to on;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SET&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;postgres=# explain (settings, analyze,buffers) select count(*),c1,c2 from t1 group by c2,c1 order by c1,c2;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                                                    QUERY PLAN&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; GroupAggregate  (cost=0.43..235338.33 rows=100000 width=16) (actual time=4.502..3658.168 rows=1000 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Group Key: c1, c2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Buffers: shared hit=10447&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   -&amp;gt;  Index Only Scan using t1_c1_c2_idx on t1  (cost=0.43..159338.33 rows=10000000 width=8) (actual time=0.081..1923.553 rows=10000000 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Heap Fetches: 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Buffers: shared hit=10447&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Settings: random_page_cost = &amp;#39;1.1&amp;#39;, max_parallel_workers_per_gather = &amp;#39;0&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Planning:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Buffers: shared hit=1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Planning Time: 0.230 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Execution Time: 3658.337 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;On retrouve le premier plan bien plus performant.&lt;/p&gt;&#xA;&lt;p&gt;C&amp;rsquo;est une fonctionnalité assez simple qui devrait améliorer les temps d&amp;rsquo;exécutions de certaines requêtes dont la clause group by n&amp;rsquo;a pas été optimisée.&lt;/p&gt;&#xA;&lt;p&gt;C&amp;rsquo;est une demande assez récurrente d&amp;rsquo;améliorer le planificateur afin de gérer des cas en apparence simple. Il faut avoir en tête que le risque est de d&amp;rsquo;augmenter&#xA;les opérations de calculs dans le planificateur. Or, on veut que cette étape soit la plus rapide possible La réponse est souvent résumée à : &amp;ldquo;on ne veut pas alourdir le planificateur alors qu&amp;rsquo;on peut corriger la requête&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;Cependant, ce type d&amp;rsquo;optimisation peut être acceptée si on sait que ça ne sera pas couteux pour le planificateur.&lt;/p&gt;&#xA;&lt;p&gt;Il n&amp;rsquo;y a plus qu&amp;rsquo;à espérer que cette fonctionnalité ne soit pas retirée d&amp;rsquo;ici la sortie de Postgres 17 :)&lt;/p&gt;&#xA;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;&#xA;&lt;hr&gt;&#xA;&lt;ol&gt;&#xA;&lt;li id=&#34;fn:1&#34;&gt;&#xA;&lt;p&gt;Petite anecdote, pour ajouter cette fonctionnalité, l&amp;rsquo;auteur a fait évoluer le standard SQL : &lt;a href=&#34;http://peter.eisentraut.org/blog/2023/09/20/grouping-digits-in-sql&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Grouping digits in SQL&lt;/a&gt; .&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;</summary>
    <author>
      <name>blog.anayrat.info</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL compression du TOAST et toast_tuple_target</title>
    <updated>2022-02-14T07:00:00Z</updated>
    <id>tag:blog.anayrat.info,2022-02-14:/2022/02/14/postgresql-compression-du-toast-et-toast_tuple_target/</id>
    <link href="https://blog.anayrat.info/2022/02/14/postgresql-compression-du-toast-et-toast_tuple_target/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Quelques rappels sur le TOAST et présentation d&amp;rsquo;un changement apparu avec PostgreSQL 11.&lt;/p&gt;&#xA;&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;&#xA;  &lt;summary class=&#34;font-weight-bold&#34;&gt;Table des matières&lt;/summary&gt;&#xA;  &lt;nav id=&#34;TableOfContents&#34;&gt;&#xA;  &lt;ul&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#quest-ce-que-le-toast-&#34;&gt;Qu&amp;rsquo;est-ce que le TOAST ?&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#exemple-avec-le-jsonb&#34;&gt;Exemple avec le JSONB&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#paramétrage-avancé&#34;&gt;Paramétrage avancé&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#bonus&#34;&gt;Bonus&lt;/a&gt;&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/nav&gt;&#xA;&lt;/details&gt;&#xA;&lt;h1 id=&#34;quest-ce-que-le-toast-&#34;&gt;Qu&amp;rsquo;est-ce que le TOAST ?&lt;/h1&gt;&#xA;&lt;p&gt;Vous êtes-vous déjà posé la question sur comment Postgres fait pour stocker des lignes dépassant la taille d&amp;rsquo;un bloc? Pour rappel, la taille par défaut d&amp;rsquo;un bloc est de 8Ko.&lt;/p&gt;&#xA;&lt;p&gt;Postgres utilise un mécanisme appelé TOAST pour &lt;a href=&#34;https://www.postgresql.org/docs/current/storage-toast.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Oversized-Attribute Storage Technique&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Lorsqu&amp;rsquo;un enregistrement devient trop gros pour être stocké dans un bloc, le moteur va le stocker &amp;ldquo;à part&amp;rdquo;, dans une table de toast.&#xA;L&amp;rsquo;enregistrement sera découpé en &lt;em&gt;chunks&lt;/em&gt;, ainsi la table principale (appelée &lt;em&gt;heap&lt;/em&gt;) contiendra un pointeur (&lt;em&gt;chunk_id&lt;/em&gt;) pointant vers le bon &lt;em&gt;chunk&lt;/em&gt; dans la table de toast.&lt;/p&gt;&#xA;&lt;p&gt;Ce &lt;em&gt;chunk&lt;/em&gt; sera stocké sur plusieurs lignes, pour un &lt;em&gt;chunk_id&lt;/em&gt; on peut avoir plusieurs lignes dans cette table de toast.&#xA;Ainsi, cette table de toast est composée de 3 colonnes:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;chunk_id&lt;/em&gt; : Numéro du chunk référencé dans la heap&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;chunk_seq&lt;/em&gt; : Numéro de chaque segment d&amp;rsquo;un chunk&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;chunk_data&lt;/em&gt; : Partie données de chaque segment&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;La réalité est un peu plus complexe, en vrai le moteur va tenter d&amp;rsquo;éviter de stocker la donnée dans la table toast.&#xA;Si la ligne dépasse &lt;code&gt;TOAST_TUPLE_THRESHOLD&lt;/code&gt; (2Ko), il va tenter de compresser les colonnes pour essayer de faire rentrer la ligne dans le bloc.&#xA;Plus précisément, il faut que la taille soit inférieure à &lt;code&gt;TOAST_TUPLE_TARGET&lt;/code&gt; (2Ko par défaut, on va en reparler).&lt;/p&gt;&#xA;&lt;p&gt;Si on a de la chance, la ligne compressée rentre dans la heap. Sinon, il va tenter de compresser les colonnes,&#xA;de la plus grande à la plus petite et les stocker dans la partie toast jusqu&amp;rsquo;à ce que les colonnes restantes rentrent dans une ligne de la heap. &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;&lt;p&gt;A noter également que si le gain en compression est trop faible, il considère qu&amp;rsquo;il est inutile de dépenser&#xA;de la ressource de calcul à tenter de compresser. Il stocke donc la donnée sans compression. &lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;&lt;p&gt;Avez-vous déjà prêté attention à la colonne &amp;ldquo;Storage&amp;rdquo; lorsque vous affichez les caractéristiques d&amp;rsquo;une table à l&amp;rsquo;aide de la méta commande &lt;code&gt;\d+ table&lt;/code&gt; ?&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;stackoverflow=# \d+ posts&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                   Table &amp;#34;public.posts&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Column     |  Type   | Collation | Nullable | Default | Storage  |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---------------+---------+-----------+----------+---------+----------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; id            | integer |           | not null |         | plain    |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; posttypeid    | integer |           | not null |         | plain    |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; score         | integer |           |          |         | plain    |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; viewcount     | integer |           |          |         | plain    |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; body          | text    |           |          |         | extended |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dans cet exemple, la colonne prend comme valeur &lt;em&gt;plain&lt;/em&gt; ou &lt;em&gt;extended&lt;/em&gt;. En réalité, il existe 4 valeurs possibles selon le type de donnée :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;plain&lt;/em&gt; : la colonne est stockée dans la heap uniquement et sans compression.&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;extended&lt;/em&gt; : la colonne peut être compressée et stockée dans le toast si nécessaire.&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;external&lt;/em&gt; : la colonne peut être stockée dans le toast mais uniquement sans compression. Parfois on peut utiliser ce mode pour avoir un gain en performance (évite la compression/décompression)&#xA;au prix d&amp;rsquo;une consommation plus importante de l&amp;rsquo;espace disque.&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;main&lt;/em&gt; : La colonne est stockée dans la heap uniquement mais contrairement au mode &lt;em&gt;plain&lt;/em&gt;, on autorise la compression.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Au premier abord, on peut penser que l&amp;rsquo;intérêt est surtout sur la possibilité de stocker&#xA;des lignes dépassant la taille d&amp;rsquo;un bloc et de compresser la donnée pour gagner de l&amp;rsquo;espace disque.&lt;/p&gt;&#xA;&lt;p&gt;Il y a un autre intérêt : lors d&amp;rsquo;une mise à jour d&amp;rsquo;une ligne, si les colonnes &amp;ldquo;toastées&amp;rdquo; ne sont pas modifiées, le moteur n&amp;rsquo;a pas besoin de modifier la table toast.&#xA;On va ainsi éviter de devoir décompresser et recompresser le toast et écrire tout ça dans des journaux de transaction.&lt;/p&gt;&#xA;&lt;p&gt;Nous allons voir qu&amp;rsquo;un autre avantage est que le moteur peut éviter de lire le toast si ce n&amp;rsquo;est pas nécessaire.&lt;/p&gt;&#xA;&lt;h1 id=&#34;exemple-avec-le-jsonb&#34;&gt;Exemple avec le JSONB&lt;/h1&gt;&#xA;&lt;p&gt;Pour étudier ça, on va utiliser le type JSONB. De manière générale, je déconseille l&amp;rsquo;usage de ce type :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;On perd les avantages d&amp;rsquo;avoir un schéma :&#xA;&lt;ul&gt;&#xA;&lt;li&gt;vérification des types&lt;/li&gt;&#xA;&lt;li&gt;contraintes d&amp;rsquo;intégrité&lt;/li&gt;&#xA;&lt;li&gt;pas de clés étrangères&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;L&amp;rsquo;écriture des requêtes devient plus complexe&lt;/li&gt;&#xA;&lt;li&gt;Absence des statistiques sur les clés d&amp;rsquo;un champ json&lt;/li&gt;&#xA;&lt;li&gt;Perte d&amp;rsquo;efficacité du stockage vu qu&amp;rsquo;on stocke les clés pour chaque ligne&lt;/li&gt;&#xA;&lt;li&gt;Pas de mise à jour partielle du JSONB. Si on modifie une clé on est obligé de &lt;em&gt;detoaster&lt;/em&gt; et &lt;em&gt;toaster&lt;/em&gt; tout le JSONB&lt;/li&gt;&#xA;&lt;li&gt;Pas de &lt;em&gt;detoast&lt;/em&gt; partiel : si on souhaite lire une seule clé du JSONB, on est contraint de &lt;em&gt;detoaster&lt;/em&gt; tout le JSONB &lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Cependant, il y a quelques exceptions où le JSON peut être utile :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Lorsqu&amp;rsquo;on n&amp;rsquo;a pas besoin de chercher dans de multiples champs et qu&amp;rsquo;on récupère le json via une autre colonne. (Statistiques sur les clés du json inutiles).&lt;/li&gt;&#xA;&lt;li&gt;Et, lorsqu&amp;rsquo;il serait très difficile de faire rentrer le json dans un schéma relationnel. Certains cas impliqueraient d&amp;rsquo;avoir énormément de colonnes et la plupart à &lt;code&gt;NULL&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Par exemple, pour stocker des caractéristiques de produit où une version normalisée entrainerait l&amp;rsquo;usage de beaucoup de colonnes dont la plupart seraient à &lt;code&gt;NULL&lt;/code&gt;.&#xA;Imaginons que vous stockez des produits, une télévision aurait des caractéristiques spécifiques (type d&amp;rsquo;écran, taille etc). Une machine à laver aurait aussi d&amp;rsquo;autre caractéristiques spécifiques (vitesse essorage, poids accepté&amp;hellip;).&lt;/p&gt;&#xA;&lt;p&gt;On pourrait ainsi envisager d&amp;rsquo;avoir des colonnes &amp;ldquo;normales&amp;rdquo; comprenant le modèle, son prix, sa référence etc, et une colonne contenant toutes les caractéristiques.&#xA;On accèderait à la ligne via la référence et ainsi on récupèrerait toutes les caractéristiques du produit stockées dans le json.&lt;/p&gt;&#xA;&lt;p&gt;Je vais réutiliser la table des posts de Stackoverflow en déplaçant quelques colonnes dans une colonne de type jsonb (colonne &lt;em&gt;jsonfield&lt;/em&gt; dans cet exemple):&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;\d posts&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            Unlogged table &amp;#34;public.posts&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        Column         |            Type             | Collation | Nullable | Default&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-----------------------+-----------------------------+-----------+----------+---------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; id                    | integer                     |           | not null |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; posttypeid            | integer                     |           | not null |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; acceptedanswerid      | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; parentid              | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; creationdate          | timestamp without time zone |           | not null |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; score                 | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; viewcount             | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; body                  | text                        |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; owneruserid           | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; lasteditoruserid      | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; lasteditordisplayname | text                        |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; lasteditdate          | timestamp without time zone |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; lastactivitydate      | timestamp without time zone |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; title                 | text                        |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; tags                  | text                        |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; answercount           | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; commentcount          | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; favoritecount         | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; closeddate            | timestamp without time zone |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; communityowneddate    | timestamp without time zone |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; jsonfield             | jsonb                       |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Voici une requête toute simple d&amp;rsquo;agrégation :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;viewcount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;answercount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commentcount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;favoritecount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;posts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                                          QUERY PLAN&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-------------------------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Aggregate  (cost=10265135.77..10265135.78 rows=1 width=128) (actual time=170221.557..170221.558 rows=1 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Buffers: shared hit=1 read=9186137&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   I/O Timings: read=138022.290&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   -&amp;gt;  Seq Scan on posts  (cost=0.00..9725636.88 rows=53949888 width=16) (actual time=0.014..153665.913 rows=53949886 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Buffers: shared hit=1 read=9186137&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         I/O Timings: read=138022.290&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Planning Time: 0.240 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Execution Time: 170221.627 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(8 rows)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;La requête lit 70 Go de données et met environ 2min 50s à s&amp;rsquo;exécuter.&lt;/p&gt;&#xA;&lt;p&gt;Maintenant la même requête, mais cette fois en utilisant les clés présentes dans le json.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jsonfield&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ViewCount&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jsonfield&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;AnswerCount&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jsonfield&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;CommentCount&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jsonfield&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;FavoriteCount&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;posts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                           QUERY PLAN&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Aggregate  (cost=11883632.41..11883632.42 rows=1 width=128)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            (actual time=520917.028..520917.030 rows=1 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Buffers: shared hit=241116554 read=13625756&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   -&amp;gt;  Seq Scan on posts  (cost=0.00..9725636.88 rows=53949888 width=570)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                          (actual time=0.972..70569.365 rows=53949886 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Buffers: shared read=9186138&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Planning Time: 0.118 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Execution Time: 520945.395 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(10 rows)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;La requête met environ 8min 40s à s&amp;rsquo;exécuter. En revanche le nombre de blocs lus semble un peu délirant :&lt;/p&gt;&#xA;&lt;p&gt;Le Seq Scan indique comme tout à l&amp;rsquo;heure 70Go. En revanche, le nœud parent indique plus de 1.9 To lus!&lt;/p&gt;&#xA;&lt;p&gt;Voici la taille de la table avec le paramétrage par défaut. Il faut savoir que pour certains enregistrements,&#xA;le moteur va, soit compresser la ligne dans la heap, soit la compresser et la placer dans le toast.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SELECT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  pg_size_pretty(pg_relation_size(oid)) table_size,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  pg_size_pretty(pg_relation_size(reltoastrelid)) toast_size&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;FROM pg_class&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;WHERE relname = &amp;#39;posts&amp;#39;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; table_size | toast_size&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;------------+-----------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 70 GB      | 33 GB&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(1 row)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Comment expliquer les 1.9 To lus ?&lt;/p&gt;&#xA;&lt;p&gt;Par curiosité, j&amp;rsquo;ai fait la même requête, mais avec une seule agrégation et j&amp;rsquo;obtiens environ 538 Go.&lt;/p&gt;&#xA;&lt;p&gt;On peut se poser plusieurs questions :&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Comment savoir si le moteur va lire le toast ?&lt;/li&gt;&#xA;&lt;li&gt;Pourquoi un tel écart de temps d&amp;rsquo;exécution entre la version &amp;ldquo;colonne standard&amp;rdquo; et champ jsonb?&lt;/li&gt;&#xA;&lt;li&gt;A quoi correspondent les compteurs dans le nœud &lt;code&gt;Aggregate&lt;/code&gt; ?&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Pour répondre à la première question, il suffit de lire la vue &lt;code&gt;pg_statio_user_tables&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Avant exécution de la requête :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;select relid,schemaname,relname,heap_blks_read,heap_blks_hit,toast_blks_read,toast_blks_hit from pg_statio_all_tables where relname in (&amp;#39;posts&amp;#39;,&amp;#39;pg_toast_26180851&amp;#39;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  relid   | schemaname |      relname      | heap_blks_read | heap_blks_hit | toast_blks_read | toast_blks_hit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;----------+------------+-------------------+----------------+---------------+-----------------+----------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 26180851 | public     | posts             |      422018238 |      87673549 |       129785076 |      628153337&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 26180854 | pg_toast   | pg_toast_26180851 |      129785076 |     628153337 |                 |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(2 rows)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Après :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  relid   | schemaname |      relname      | heap_blks_read | heap_blks_hit | toast_blks_read | toast_blks_hit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;----------+------------+-------------------+----------------+---------------+-----------------+----------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 26180851 | public     | posts             |      431204376 |      87673549 |       134156898 |      686299551&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 26180854 | pg_toast   | pg_toast_26180851 |      134156898 |     686299551 |                 |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(2 rows)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ce qui nous fait :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pg_size_pretty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;431204376&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;87673549&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;422018238&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;87673549&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;bigint&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;heap_buffers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pg_size_pretty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;134156898&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;686299551&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;129785076&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;628153337&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;bigint&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;toast_buffers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;heap_buffers&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;toast_buffers&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--------------+---------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;70&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GB&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;477&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GB&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Le moteur va bien lire le toast. En revanche les compteurs laissent penser que le moteur va lire plusieurs fois le toast.&lt;/p&gt;&#xA;&lt;p&gt;Si je fais le même calcul, mais cette fois en effectuant l&amp;rsquo;agrégation que sur un seul champ, j&amp;rsquo;obtiens 119 Go (~ 477 Go / 4)&#xA;J&amp;rsquo;imagine que le moteur lit le toast pour chaque fonction.&lt;/p&gt;&#xA;&lt;p&gt;Ensuite, l&amp;rsquo;écart du temps d&amp;rsquo;exécution s&amp;rsquo;explique par plusieurs facteurs :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Le moteur va devoir lire et &lt;em&gt;detoaster&lt;/em&gt; (décompresser) le toast&lt;/li&gt;&#xA;&lt;li&gt;Faire des opérations supplémentaires sur le jsonb pour accéder à la valeur&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Avec la première requête, le moteur n&amp;rsquo;avait pas à lire le toast. D&amp;rsquo;une part, il a moins de données à lire,&#xA;d&amp;rsquo;autre part, il n&amp;rsquo;a pas à manipuler le json pour identifier la clé et extraire la valeur à calculer.&lt;/p&gt;&#xA;&lt;p&gt;Enfin, les compteurs du nœud aggregate doivent correspondre aux données décompressées pour chaque fonction qui va lire dans le json.&#xA;En effet, si on prend le total moins le &lt;em&gt;seqscan&lt;/em&gt; de la table, donc que la partie &lt;em&gt;toast&lt;/em&gt;, on a :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;468 Go pour un seul champ&lt;/li&gt;&#xA;&lt;li&gt;936 Go, le double pour deux champs&lt;/li&gt;&#xA;&lt;li&gt;1873 Go pour les 4 champs (donc environ 4 x 468 Go)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;C&amp;rsquo;est ce qui explique pourquoi on obtient une valeur aussi élevée.&lt;/p&gt;&#xA;&lt;h1 id=&#34;paramétrage-avancé&#34;&gt;Paramétrage avancé&lt;/h1&gt;&#xA;&lt;p&gt;Maintenant, on va encourager Postgres à placer le maximum de données dans le toast grâce à l&amp;rsquo;option &lt;em&gt;toast_tuple_target&lt;/em&gt; apparue avec la version 11 de Postgres.&lt;/p&gt;&#xA;&lt;p&gt;Cette option permet de manipuler le seuil à partir duquel les données sont stockée dans le &lt;em&gt;toast&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Par ailleurs, étant sous Postgres 14, j&amp;rsquo;en ai profité pour utiliser l&amp;rsquo;algorithme de compression lz4 (paramètre &lt;em&gt;default_toast_compression&lt;/em&gt;).&#xA;Cet algorithme offre un ratio de compression similaire à pglz, cependant, il est beaucoup plus rapide (Voir &lt;a href=&#34;https://www.postgresql.fastware.com/blog/what-is-the-new-lz4-toast-compression-in-postgresql-14&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;What is the new LZ4 TOAST compression in PostgreSQL 14, and how fast is it?&lt;/a&gt;).&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;posts_toast&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WITH&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;toast_tuple_target&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;posts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Voici la taille de la table obtenue.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SELECT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  pg_size_pretty(pg_relation_size(oid)) table_size,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  pg_size_pretty(pg_relation_size(reltoastrelid)) toast_size&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;FROM pg_class&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;WHERE relname = &amp;#39;posts_toast&amp;#39;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; table_size | toast_size&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;------------+------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 59 GB      | 52 GB&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Au total, la table avec le toast fait grosso-modo la même taille. Dans l&amp;rsquo;exemple avec la première table,&#xA;il faut savoir que le moteur compresse aussi les données dans la heap.&lt;/p&gt;&#xA;&lt;p&gt;Rejouons notre requête d&amp;rsquo;agrégation :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;viewcount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;answercount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commentcount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;favoritecount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;posts_toast&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Cette fois la requête lit 59 Go de données et met 2min 17 secondes.&#xA;On a gagné environ 20% de temps d&amp;rsquo;exécution sur cet exemple.&lt;/p&gt;&#xA;&lt;p&gt;On pourrait gagner beaucoup plus si la partie stockée en toast était plus importante. Le volume de donnée à lire dans la heap serait beaucoup plus réduit.&lt;/p&gt;&#xA;&lt;p&gt;Par curiosité, j&amp;rsquo;ai aussi exécuté la requête qui fait l&amp;rsquo;agrégation depuis les données du champ json. J&amp;rsquo;obtiens un temps d&amp;rsquo;exécution de 7min 17s.&lt;/p&gt;&#xA;&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;&#xA;&lt;p&gt;Résumé en quelques chiffres :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Agrégation type standard, stockage standard : 2min 50s&lt;/li&gt;&#xA;&lt;li&gt;Agrégation type jsonb, stockage standard : 8min 40s&lt;/li&gt;&#xA;&lt;li&gt;Agrégation type standard, stockage avec &lt;em&gt;toast_tuple_target&lt;/em&gt; = 128 : 2min 17s&lt;/li&gt;&#xA;&lt;li&gt;Agrégation type jsonb, stockage avec &lt;em&gt;toast_tuple_target&lt;/em&gt; = 128 : 7min 17s&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;On constate que l&amp;rsquo;usage du JSON est bien plus couteux que d&amp;rsquo;utiliser les types standards. Le moteur doit faire plus d&amp;rsquo;opérations pour accéder à la valeur d&amp;rsquo;une clé json.&lt;/p&gt;&#xA;&lt;p&gt;Par ailleurs, il est obligé de décompresser les données dans le toast pour y accéder. Néanmoins, on peut aussi jouer avec le paramètre &lt;code&gt;toast_tuple_target&lt;/code&gt; pour pousser plus&#xA;d&amp;rsquo;informations dans le toast. Ainsi, dans certains cas, cela peut permettre de réduire la quantité de données lues en évitant de lire le toast.&lt;/p&gt;&#xA;&lt;h1 id=&#34;bonus&#34;&gt;Bonus&lt;/h1&gt;&#xA;&lt;p&gt;Comment souvent dans Postgres, tout évolue au fil des versions. Le TOAST n&amp;rsquo;échappe pas à cette règle.&#xA;Ainsi, quelques nouveautés pourraient apparaitre dans les prochaines versions :&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Un premier patch a été proposé pour avoir plus de statistiques sur le toast : &lt;a href=&#34;https://commitfest.postgresql.org/37/3457/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pg_stat_toast&lt;/a&gt;.&#xA;L&amp;rsquo;idée, est d&amp;rsquo;avoir des statistiques sur la compression : gain compression, stockage inline ou séparé dans le toast&amp;hellip;&lt;/li&gt;&#xA;&lt;li&gt;Un second patch appelé &lt;a href=&#34;https://commitfest.postgresql.org/37/3490/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pluggable toaster&lt;/a&gt;. Celui-ci est beaucoup plus important. Il propose d&amp;rsquo;étendre le &lt;em&gt;&amp;ldquo;toaster&amp;rdquo;&lt;/em&gt;.&#xA;L&amp;rsquo;idée serait de pouvoir proposer différents &lt;em&gt;&amp;ldquo;toaster&amp;rdquo;&lt;/em&gt; selon le type de donnée (notamment le JSONB).&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;&#xA;&lt;hr&gt;&#xA;&lt;ol&gt;&#xA;&lt;li id=&#34;fn:1&#34;&gt;&#xA;&lt;p&gt;Voir &lt;a href=&#34;https://git.postgresql.org/gitweb/?p=postgresql.git;a=blob;f=src/backend/access/heap/heaptoast.c;h=55bbe1d584760a849960871296dfbdd7447b2b67;hb=refs/heads/REL_14_STABLE#l160&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;heap_toast_insert_or_update&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li id=&#34;fn:2&#34;&gt;&#xA;&lt;p&gt;Il existe deux algorithmes de compression supportés : &lt;em&gt;pglz&lt;/em&gt; (historique et intégré dans Postgres) et &lt;em&gt;lz4&lt;/em&gt; (depuis Postgres 14).&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Pour &lt;em&gt;pglz&lt;/em&gt;, voir &lt;a href=&#34;https://git.postgresql.org/gitweb/?p=postgresql.git;a=blob;f=src/include/common/pg_lzcompress.h;h=3e53fbe97bd0a10e3fbf7ed4396924084f657868;hb=refs/heads/REL_14_STABLE#l25&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PGLZ_Strategy&lt;/a&gt;&#xA;et &lt;a href=&#34;https://git.postgresql.org/gitweb/?p=postgresql.git;a=blob;f=src/common/pg_lzcompress.c;h=a30a2c2eb83a71725754d8dd680621a02e7557e9;hb=refs/heads/REL_14_STABLE#l223&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;strategy_default_data&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Pour &lt;em&gt;lz4&lt;/em&gt;, il s&amp;rsquo;agit d&amp;rsquo;une librarie externe. Voir &lt;a href=&#34;https://github.com/lz4/lz4/blob/dev/lib/lz4.h#L145&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LZ4_compress_default&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li id=&#34;fn:3&#34;&gt;&#xA;&lt;p&gt;Voir les slides de la conférence d&amp;rsquo;Oleg Bartunov et Nikita Glukhov : &lt;a href=&#34;http://www.sai.msu.su/~megera/postgres/talks/jsonb-nizhny-2021.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;json or not json that is the question&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;</summary>
    <author>
      <name>blog.anayrat.info</name>
    </author>
  </entry>
  <entry>
    <title>Cas d&#39;usages du partitionnement natif dans PostgreSQL</title>
    <updated>2021-09-01T07:00:00Z</updated>
    <id>tag:blog.anayrat.info,2021-09-01:/2021/09/01/cas-dusages-du-partitionnement-natif-dans-postgresql/</id>
    <link href="https://blog.anayrat.info/2021/09/01/cas-dusages-du-partitionnement-natif-dans-postgresql/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Après une période d&amp;rsquo;inactivité, je reprends l&amp;rsquo;écriture d&amp;rsquo;articles techniques sur Postgres. C&amp;rsquo;est aussi pour moi l&amp;rsquo;occasion de vous annoncer mon changement d&amp;rsquo;activité. Depuis courant 2021 je suis passé freelance pour permettre aux entreprises de bénéficier de mon expérience sur Postgres.&lt;/p&gt;&#xA;&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;&#xA;  &lt;summary class=&#34;font-weight-bold&#34;&gt;Table des matières&lt;/summary&gt;&#xA;  &lt;nav id=&#34;TableOfContents&#34;&gt;&#xA;  &lt;ul&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#histoire-du-partitionnement-dans-postgresql&#34;&gt;Histoire du partitionnement dans PostgreSQL&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#erreurs-courantes&#34;&gt;Erreurs courantes&lt;/a&gt;&#xA;      &lt;ul&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#il-faut-partitionner-dès-que-la-volumétrie-est-importante&#34;&gt;&amp;ldquo;Il faut partitionner dès que la volumétrie est importante&amp;rdquo;&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#il-faut-partitionner-pour-répartir-les-données-sur-plusieurs-disques&#34;&gt;&amp;ldquo;Il faut partitionner pour répartir les données sur plusieurs disques&amp;rdquo;&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;/ul&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#cas-dusages-du-partitionnement&#34;&gt;Cas d&amp;rsquo;usages du partitionnement&lt;/a&gt;&#xA;      &lt;ul&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#partitionner-pour-gérer-la-rétention&#34;&gt;Partitionner pour gérer la rétention&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#partitionner-pour-contrôler-la-fragmentation-des-index&#34;&gt;Partitionner pour contrôler la fragmentation des index&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#partitionner-pour-faciliter-lexécution-de-requête-lorsque-la-cardinalité-est-faible&#34;&gt;Partitionner pour faciliter l&amp;rsquo;exécution de requête lorsque la cardinalité est faible&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#partitionner-pour-obtenir-de-meilleures-statistiques&#34;&gt;Partitionner pour obtenir de meilleures statistiques&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#partitionwise-join--partitionwise-aggregate&#34;&gt;partitionwise join &amp;amp; partitionwise aggregate&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#stockage-avec-tiering&#34;&gt;Stockage avec tiering&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;/ul&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/nav&gt;&#xA;&lt;/details&gt;&#xA;&lt;h1 id=&#34;histoire-du-partitionnement-dans-postgresql&#34;&gt;Histoire du partitionnement dans PostgreSQL&lt;/h1&gt;&#xA;&lt;p&gt;PostgreSQL permet depuis très longtemps de partitionner des tables en exploitant l&amp;rsquo;héritage de table. Toutefois, cette méthode était assez lourde à mettre en oeuvre : elle impliquait de mettre en place soi-même des triggers pour rediriger les écritures (moins performant que le partitionnement natif), le temps de planification pouvait augmenter fortement au-delà d&amp;rsquo;une centaine de partitions&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;Le partitionnement natif est arrivé avec la version 10. C&amp;rsquo;est depuis cette version que le moteur est capable (entre autres) de diriger lui-même les écritures vers les bonnes tables, lire seulement les tables concernées, d&amp;rsquo;utiliser des algorithmes exploitant le partitionnement etc.&#xA;Il offre ainsi de meilleures performances et une facilité d&amp;rsquo;exploitation. On peut entre autres :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Partitionner :&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Par liste&lt;/li&gt;&#xA;&lt;li&gt;Par hashage&lt;/li&gt;&#xA;&lt;li&gt;Par intervalles&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Faire des partitionnements à plusieurs niveaux&lt;/li&gt;&#xA;&lt;li&gt;Partitionner sur plusieurs colonnes&lt;/li&gt;&#xA;&lt;li&gt;Utiliser des clés primaires et clés étrangères&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Toutes ces fonctionnalités sont intéressantes, mais on en vient à se poser une question toute bête : quand mettre en oeuvre le partitionnement?&lt;/p&gt;&#xA;&lt;p&gt;Je vais vous présenter plusieurs cas d&amp;rsquo;usages que j&amp;rsquo;ai pu rencontrer. Mais avant, voici quelques erreurs courantes sur le partitionnement.&lt;/p&gt;&#xA;&lt;h1 id=&#34;erreurs-courantes&#34;&gt;Erreurs courantes&lt;/h1&gt;&#xA;&lt;h2 id=&#34;il-faut-partitionner-dès-que-la-volumétrie-est-importante&#34;&gt;&amp;ldquo;Il faut partitionner dès que la volumétrie est importante&amp;rdquo;&lt;/h2&gt;&#xA;&lt;p&gt;Déjà, qu&amp;rsquo;est-ce qu&amp;rsquo;une volumétrie &amp;ldquo;importante&amp;rdquo;?&lt;/p&gt;&#xA;&lt;p&gt;Certains diront que c&amp;rsquo;est au-delà de plusieurs centaines de Go, d&amp;rsquo;autres au-delà du téraoctet, d&amp;rsquo;autres encore au-delà du pétaoctet&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;Il n&amp;rsquo;existe pas vraiment de réponse à cette question et globalement ça va dépendre du type d&amp;rsquo;activité : ratio INSERT/UPDATE/DELETE, type de SELECT (OLTP, OLAP&amp;hellip;).&#xA;Ca dépendra également du matériel. Il y a 10 ans, quand les serveurs n&amp;rsquo;avaient que quelques Go de RAM avec des disques mécaniques, il était probable qu&amp;rsquo;une base de quelques centaines de Go soit perçue comme une grosse base.&#xA;Maintenant il n&amp;rsquo;est pas rare de voir des serveurs avec plus d&amp;rsquo;un téraoctet de RAM, des disques NVMe.&lt;/p&gt;&#xA;&lt;p&gt;Ainsi, une base de quelques centaines de Go n&amp;rsquo;est plus considérée comme une grosse base. Mais plutôt comme une base de taille modeste.&lt;/p&gt;&#xA;&lt;p&gt;Petite anecdote, pour se rassurer, un client m&amp;rsquo;a questionné si Postgres était déjà utilisé pour des volumétries &amp;ldquo;importantes&amp;rdquo;. On parlait alors d&amp;rsquo;une base d&amp;rsquo;une quarantaine de Go sur un serveur qui disposait de 64Go de RAM. Toutes les lectures se faisaient depuis le cache&amp;hellip; :). J&amp;rsquo;ai pu le rassurer sur la taille de sa base qui était relativement modeste.&lt;/p&gt;&#xA;&lt;p&gt;Il peut tout à fait être superflu de partitionner une base de quelques To comme il peut être nécessaire de partitionner une base de quelques centaines de Go. Par exemple, si l&amp;rsquo;activité consiste juste à ajouter des lignes à des tables et que les requêtes se résument à de simple &lt;code&gt;WHERE colonne = 4&lt;/code&gt; qui retournent quelques lignes. Un simple Btree fera l&amp;rsquo;affaire. Et si la requête retourne un nombre assez important de lignes, il est possible d&amp;rsquo;utiliser les index BRIN ou les bloom filter.&lt;/p&gt;&#xA;&lt;p&gt;Les index BRIN présentent des bénéfices proches du partitionnement ou sharding en évitant la complexité de mise en oeuvre&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;il-faut-partitionner-pour-répartir-les-données-sur-plusieurs-disques&#34;&gt;&amp;ldquo;Il faut partitionner pour répartir les données sur plusieurs disques&amp;rdquo;&lt;/h2&gt;&#xA;&lt;p&gt;L&amp;rsquo;idée serait de créer des partitions et des tablespaces sur différents disques afin de répartir les opérations d&amp;rsquo;entrées/sorties.&lt;/p&gt;&#xA;&lt;p&gt;Pour PostgreSQL, un tablespace n&amp;rsquo;est ni plus, ni moins qu&amp;rsquo;un chemin vers un répertoire. Il est tout à fait possible&#xA;de gérer le stockage au niveau du système d&amp;rsquo;exploitation et d&amp;rsquo;agréger plusieurs disques (en RAID10) par exemple.&#xA;Ensuite, il suffit de stocker la table sur le volume créé. Ainsi, on peut répartir les I/O sur un ensemble de disques.&lt;/p&gt;&#xA;&lt;p&gt;Dans ce cas, il n&amp;rsquo;est donc pas nécessaire de mettre en oeuvre le partitionnement. Toutefois, nous verrons un cas où il pourrait avoir du sens.&lt;/p&gt;&#xA;&lt;p&gt;Maintenant nous allons nous intéresser à des cas d&amp;rsquo;usage &amp;ldquo;légitimes&amp;rdquo; du partitionnement.&lt;/p&gt;&#xA;&lt;h1 id=&#34;cas-dusages-du-partitionnement&#34;&gt;Cas d&amp;rsquo;usages du partitionnement&lt;/h1&gt;&#xA;&lt;h2 id=&#34;partitionner-pour-gérer-la-rétention&#34;&gt;Partitionner pour gérer la rétention&lt;/h2&gt;&#xA;&lt;p&gt;A cause du modèle MVCC, la suppression massive de données entraine de la fragmentation dans les tables.&lt;/p&gt;&#xA;&lt;p&gt;Un cas d&amp;rsquo;usage possible est de partitionner par date. Supprimer les anciennes données revient à supprimer une partition complète. L&amp;rsquo;opération sera rapide et les tables ne seront pas fragmentées&lt;/p&gt;&#xA;&lt;h2 id=&#34;partitionner-pour-contrôler-la-fragmentation-des-index&#34;&gt;Partitionner pour contrôler la fragmentation des index&lt;/h2&gt;&#xA;&lt;p&gt;L&amp;rsquo;ajout et modification de données dans une table fragmente les index au fil du temps. Pour faire simple, on ne peut pas récupérer l&amp;rsquo;espace libre dans un bloc tant qu&amp;rsquo;il n&amp;rsquo;est pas vide. Avec le temps les splits d&amp;rsquo;index créent du &amp;ldquo;vide&amp;rdquo; dans ce dernier et le seul moyen de récupérer cet espace est de reconstruire l&amp;rsquo;index.&lt;/p&gt;&#xA;&lt;p&gt;On appelle cela le &amp;ldquo;bloat&amp;rdquo;. Il y a eu de nombreuses améliorations sur les dernières versions de Postgres:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Version 12, on peut lire dans les &lt;a href=&#34;https://www.postgresql.org/docs/12/release-12.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Releases Notes&lt;/a&gt;:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Improve performance and space utilization of btree indexes with many duplicates (Peter Geoghegan, Heikki Linnakangas)&lt;/p&gt;&#xA;&lt;p&gt;Previously, duplicate index entries were stored unordered within their duplicate groups. This caused overhead during index inserts, wasted space due to excessive page splits, and it reduced VACUUM&amp;rsquo;s ability to recycle entire pages. Duplicate index entries are now sorted in heap-storage order.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Version 13, on peut lire dans les &lt;a href=&#34;https://www.postgresql.org/docs/13/release-13.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Releases Notes&lt;/a&gt;:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;More efficiently store duplicates in B-tree indexes (Anastasia Lubennikova, Peter Geoghegan)&lt;/p&gt;&#xA;&lt;p&gt;This allows efficient B-tree indexing of low-cardinality columns by storing duplicate keys only once. Users upgrading with pg_upgrade will need to use REINDEX to make an existing index use this feature.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Version 14, on peut lire dans les &lt;a href=&#34;https://www.postgresql.org/docs/14/release-14.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Releases Notes&lt;/a&gt;:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Allow btree index additions to remove expired index entries to prevent page splits (Peter Geoghegan)&lt;/p&gt;&#xA;&lt;p&gt;This is particularly helpful for reducing index bloat on tables whose indexed columns are frequently updated.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Pour contrôler le bloat, on pourrait reconstruire l&amp;rsquo;index à intervalles réguliers (merci &lt;code&gt;REINDEX CONCURRENTLY&lt;/code&gt; arrivé en version 12). Cette solution serait contraignante, car il faudrait régulièrement reconstruire l&amp;rsquo;intégralité de l&amp;rsquo;index.&lt;/p&gt;&#xA;&lt;p&gt;Si la majorité des modifications sont faites sur les données récentes, par exemple: table de logs, commandes clients, rendez-vous&amp;hellip; On pourrait imaginer un partitionnement par mois. Ainsi, à chaque début de mois on part sur une table &amp;ldquo;neuve&amp;rdquo; et on peut ré-indexer la précédente table pour supprimer le bloat.&lt;/p&gt;&#xA;&lt;p&gt;On peut aussi en profiter pour faire un &lt;code&gt;CLUSTER&lt;/code&gt; sur la table pour avoir une bonne corrélation des données avec le stockage.&lt;/p&gt;&#xA;&lt;h2 id=&#34;partitionner-pour-faciliter-lexécution-de-requête-lorsque-la-cardinalité-est-faible&#34;&gt;Partitionner pour faciliter l&amp;rsquo;exécution de requête lorsque la cardinalité est faible&lt;/h2&gt;&#xA;&lt;p&gt;Petit à petit on va voir des cas d&amp;rsquo;usages un peu plus compliqués :)&lt;/p&gt;&#xA;&lt;p&gt;Prenons un exemple : une table de commande comprenant un statut de livraison, au bout de quelques années 99% des commandes sont livrées (on l&amp;rsquo;espère!) et très peu en cours de paiement ou livraison.&lt;/p&gt;&#xA;&lt;p&gt;Imaginons qu&amp;rsquo;on souhaite récupérer 100 commandes en cours de livraison. On va créer un index sur le statut et l&amp;rsquo;utiliser pour récupérer les enregistrements.&#xA;En étant un peu astucieux, on peut créer un index partiel sur ce statut particulier. Problème, cet index va se fragmenter assez vite au fur et à mesure que les commandes seront livrées.&lt;/p&gt;&#xA;&lt;p&gt;Dans ce cas on pourrait faire un partitionnement sur le statut. Ainsi, récupérer 100 commandes en cours de livraison revient à lire 100 enregistrements de la partition.&lt;/p&gt;&#xA;&lt;h2 id=&#34;partitionner-pour-obtenir-de-meilleures-statistiques&#34;&gt;Partitionner pour obtenir de meilleures statistiques&lt;/h2&gt;&#xA;&lt;p&gt;Pour déterminer le meilleur plan d&amp;rsquo;exécution, Postgres prend des décisions à partir des statistiques d&amp;rsquo;une table. Ces statistiques sont obtenues à partir d&amp;rsquo;un échantillon de la table (le &lt;code&gt;default_statistic_target&lt;/code&gt; qui vaut 100 par défaut).&lt;/p&gt;&#xA;&lt;p&gt;Par défaut le moteur va collecter 300 x &lt;code&gt;default_statistic_target&lt;/code&gt; lignes, soit 30 000 lignes. Avec une table de plusieurs centaines de millions de lignes, cet échantillon est parfois trop petit.&lt;/p&gt;&#xA;&lt;p&gt;On peut augmenter de manière drastique la taille de l&amp;rsquo;échantillon, mais cette approche présente quelques inconvénients:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Ca alourdis le temps de planification&lt;/li&gt;&#xA;&lt;li&gt;Ca alourdis le &lt;code&gt;ANALYZE&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Parfois ce n&amp;rsquo;est pas suffisant si les données sont mal réparties. Par exemple si on prend quelques centaines de milliers de lignes sur une table qui comprend plusieurs centaines de millions, on peut rater les lignes dont le statut est en livraison.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Avec le partitionnement on pourrait avoir un même échantillon, mais par partition, ce qui permet de gagner en précision.&lt;/p&gt;&#xA;&lt;p&gt;Ce serait également utile quand on a des données corrélées entre colonnes. Je vais reprendre l&amp;rsquo;exemple des commandes. On a une année entière de commandes: toutes les commandes qui ont plus d&amp;rsquo;un mois sont livrées, celles du dernier mois sont livrées à 90% (10% sont en cours de livraison).&lt;/p&gt;&#xA;&lt;p&gt;Intuitivement, si je cherche une commande en cours de livraison il y a plus de 6 mois je ne devrais pas avoir de résultat. Inversement, si je cherche des commandes en cours de livraison sur le dernier mois, je devrais obtenir 10% de la table. Or, le moteur ne le sait pas, pour lui les commandes en cours de livraison sont réparties sur toute la table.&lt;/p&gt;&#xA;&lt;p&gt;Avec un partitionnement par date, il peut estimer qu&amp;rsquo;il n&amp;rsquo;y a pas de commande en cours de livraisons de plus d&amp;rsquo;un mois. Ce type d&amp;rsquo;approche permet surtout de réduire une erreur d&amp;rsquo;estimation dans un plan d&amp;rsquo;exécution.&lt;/p&gt;&#xA;&lt;p&gt;Voici un exemple avec cette table de commandes, &lt;code&gt;orders_p&lt;/code&gt; est la version partitionnée par mois de la table &lt;code&gt;orders&lt;/code&gt;. Les données étant identiques dans les deux tables.&lt;/p&gt;&#xA;&lt;p&gt;On peut remarquer que l&amp;rsquo;estimation est bien meilleure dans le cas où la table est partitionnée, le moteur ayant des statistiques par partition.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;19&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;22&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;25&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;EXPLAIN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ANALYZE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;BETWEEN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-01-01&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-01-31&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                                                  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;QUERY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PLAN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_13_state_idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_13&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;42&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;45&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Cond&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-01-01&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-01-31&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Planning&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;120&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Execution&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;059&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;EXPLAIN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ANALYZE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;BETWEEN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-01-01&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-01-31&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                                                  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;QUERY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PLAN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;---------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_state_idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;44&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;13168&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3978&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Cond&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-01-01&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-01-31&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Rows&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Removed&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;by&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100161&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Planning&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;188&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Execution&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;141&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;571&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;Maintenant prenons la même requête sur le dernier mois:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;19&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;22&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;26&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;EXPLAIN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ANALYZE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;BETWEEN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-07-01&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-07-31&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                                                       &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;QUERY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PLAN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;-------------------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_19_state_idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_19&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;43&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2417&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;19215&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20931&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Cond&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-07-01&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-07-31&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Planning&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;297&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Execution&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;618&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;EXPLAIN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ANALYZE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;BETWEEN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-07-01&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-07-31&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                                                     &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;QUERY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PLAN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--------------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_state_idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;44&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;13168&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15008&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20931&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Cond&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-07-01&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-07-31&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Rows&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Removed&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;by&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;79230&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Planning&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;173&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Execution&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;146&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;326&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;Ici aussi on peut remarquer que l&amp;rsquo;estimation est meilleure.&lt;/p&gt;&#xA;&lt;h2 id=&#34;partitionwise-join--partitionwise-aggregate&#34;&gt;partitionwise join &amp;amp; partitionwise aggregate&lt;/h2&gt;&#xA;&lt;p&gt;Un autre intérêt du partitionnement est de bénéficier de meilleurs algorithmes pour les jointures et agrégation.&lt;/p&gt;&#xA;&lt;p&gt;Le &lt;code&gt;partitionwise aggregate&lt;/code&gt; permet de faire une agregation ou un regroupement partition par partition. Un exemple vaut mieux qu&amp;rsquo;un long discours:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;16&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;21&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;explain&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;analyze&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timing&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;group&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;by&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                                                  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;QUERY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PLAN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HashAggregate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;508361&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;508365&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;45&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;365&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;365&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Group&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Append&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;408317&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;35&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20008890&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20000000&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_01&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;70&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1270&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_02&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;70&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1270&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[...]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_19&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;45308&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;04&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2941004&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2941004&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_20&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;131708&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8549421&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8549421&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Planning&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;576&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Execution&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5273&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;217&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;enable_partitionwise_aggregate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;explain&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;analyze&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timing&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;group&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;by&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                                                  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;QUERY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PLAN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Append&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;05&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;408343&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;83&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1765&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;365&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HashAggregate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;05&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;05&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Group&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_01&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;70&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1270&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HashAggregate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;05&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;05&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Group&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_02&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_02&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;70&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1270&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[...]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HashAggregate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;60013&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;06&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;60013&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;37&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Group&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_19&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;45308&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;04&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2941004&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2941004&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HashAggregate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;174455&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;174455&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;55&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Group&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_20&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;131708&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8549421&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8549421&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Planning&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;461&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Execution&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4669&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;315&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;63&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;Dans le premier cas l&amp;rsquo;agrégation se fait une fois pour toutes les tables, alors que dans le second exemple, on fait l&amp;rsquo;agrégation par partition.&#xA;On peut également remarquer que le coût total est inférieur dans le plan avec agrégation par partition.&lt;/p&gt;&#xA;&lt;p&gt;Le &lt;code&gt;partitionwise join&lt;/code&gt; fonctionne sur le même principe, on fait une jointure partition par partition. C&amp;rsquo;est utile pour joindre deux tables partitionnées.&lt;/p&gt;&#xA;&lt;h2 id=&#34;stockage-avec-tiering&#34;&gt;Stockage avec tiering&lt;/h2&gt;&#xA;&lt;p&gt;Enfin, un autre cas d&amp;rsquo;usage serait de vouloir stocker une partie de la table sur un stockage différent:&lt;/p&gt;&#xA;&lt;p&gt;On peut stocker une table partitionnée dans des tablespaces différents. Par exemple les données récentes sur un tablespace rapide sur SSD NVMe.&#xA;Puis les données plus rarement accédées sur un autre tablespace, avec des disques mécaniques moins couteux.&lt;/p&gt;&#xA;&lt;p&gt;Cette approche peut aussi avoir du sens à l&amp;rsquo;heure du cloud où le stockage est très onéreux.&lt;/p&gt;&#xA;&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;&#xA;&lt;p&gt;Voilà, je pense avoir fait le tour des principaux cas d&amp;rsquo;usages qui me venaient en tête.&lt;/p&gt;&#xA;&lt;p&gt;Evidemment, la mise en oeuvre du partitionnement implique une plus grande complexité (gestion des partitions&amp;hellip;)&#xA;et des limitations qu&amp;rsquo;il faudra étudier en amont.&lt;/p&gt;&#xA;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;&#xA;&lt;hr&gt;&#xA;&lt;ol&gt;&#xA;&lt;li id=&#34;fn:1&#34;&gt;&#xA;&lt;p&gt;&amp;ldquo;BRIN indexes provide similar benefits to horizontal partitioning or sharding but without needing to explicitly declare partitions.&amp;rdquo; - &lt;a href=&#34;https://en.wikipedia.org/wiki/Block_Range_Index&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://en.wikipedia.org/wiki/Block_Range_Index&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;</summary>
    <author>
      <name>blog.anayrat.info</name>
    </author>
  </entry>
  <entry>
    <title>Mesurer facilement la latence I/O avec PostgreSQL 16</title>
    <updated>2023-09-02T16:30:00Z</updated>
    <id>tag:pgphil.ovh,2023-09-02:/traqueur_16_01.php</id>
    <link href="http://pgphil.ovh/traqueur_16_01.php" rel="alternate"></link>
    <summary type="html">Démonstration avec le traqueur d&#39;une nouvelle fonctionnalité PostgreSQL 16 facilitant le suivi des performances et le diagnostic des ralentissements</summary>
    <author>
      <name>pgphil.ovh</name>
    </author>
  </entry>
  <entry>
    <title>Mettre à jour PostgreSQL pour améliorer les performances</title>
    <updated>2023-05-21T09:00:00Z</updated>
    <id>tag:pgphil.ovh,2023-05-21:/migration_performance_14_15_01.php</id>
    <link href="http://pgphil.ovh/migration_performance_14_15_01.php" rel="alternate"></link>
    <summary type="html">Pagination, ex aequo...obtenez vos résultats triés bien plus rapidement avec PostgreSQL 15</summary>
    <author>
      <name>pgphil.ovh</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL inspire les autres SGBD ?</title>
    <updated>2023-04-12T09:00:00Z</updated>
    <id>tag:pgphil.ovh,2023-04-12:/oracle23c_ou_oracle23p_comme_postgresql.php</id>
    <link href="http://pgphil.ovh/oracle23c_ou_oracle23p_comme_postgresql.php" rel="alternate"></link>
    <summary type="html">Oracle 23c ou 23p comme PostgreSQL ?</summary>
    <author>
      <name>pgphil.ovh</name>
    </author>
  </entry>
  <entry>
    <title>CYCLE</title>
    <updated>2022-12-03T15:00:00Z</updated>
    <id>tag:pgphil.ovh,2022-12-03:/nocycle_15_01.php</id>
    <link href="http://pgphil.ovh/nocycle_15_01.php" rel="alternate"></link>
    <summary type="html">Nouveautés autour des requêtes hiérarchiques avec PostgreSQL 14 et versions supérieures</summary>
    <author>
      <name>pgphil.ovh</name>
    </author>
  </entry>
  <entry>
    <title>MERGE</title>
    <updated>2022-03-29T17:30:00Z</updated>
    <id>tag:pgphil.ovh,2022-03-29:/upsert_15_devel_01.php</id>
    <link href="http://pgphil.ovh/upsert_15_devel_01.php" rel="alternate"></link>
    <summary type="html">Introduction de la commande MERGE par PostgreSQL 15</summary>
    <author>
      <name>pgphil.ovh</name>
    </author>
  </entry>
  <entry>
    <title>Limitations du planner (optimiseur) de PostgreSQL</title>
    <updated>2022-03-06T18:45:00Z</updated>
    <id>tag:pgphil.ovh,2022-03-06:/limitations_planner_13_01.php</id>
    <link href="http://pgphil.ovh/limitations_planner_13_01.php" rel="alternate"></link>
    <summary type="html">Est-il toujours possible en 2022 de faire trébucher l&#39;optimiseur statistique de PostgreSQL ? Comment y remédier ?</summary>
    <author>
      <name>pgphil.ovh</name>
    </author>
  </entry>
  <entry>
    <title>[Infographie] PostgreSQL</title>
    <updated>2021-02-11T11:23:13Z</updated>
    <id>tag:blog.atolcd.com,2021-02-11:/infographie-postgresql/</id>
    <content type="html">&#xA;&lt;p&gt;PostgreSQL est un SGBD que nous affectionnons particulièrement chez Atol CD ! Retrouvez dans cette infographie quelques caractéristiques techniques, des chiffres-clé, son histoire mais aussi pourquoi nous l&amp;rsquo;aimons et notre Top5 des fonctionnalités côté développement.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-gallery columns-1 is-cropped wp-block-gallery-1 is-layout-flex wp-block-gallery-is-layout-flex&#34;&gt;&lt;ul class=&#34;blocks-gallery-grid&#34;&gt;&lt;li class=&#34;blocks-gallery-item&#34;&gt;&lt;figure&gt;&lt;img fetchpriority=&#34;high&#34; decoding=&#34;async&#34; width=&#34;866&#34; height=&#34;2560&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-scaled.jpg&#34; alt=&#34;&#34; data-id=&#34;4477&#34; data-full-url=&#34;https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-scaled.jpg&#34; data-link=&#34;https://blog.atolcd.com/infographie-postgresql/infographie_postgresql/&#34; class=&#34;wp-image-4477&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-scaled.jpg 866w, https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-101x300.jpg 101w, https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-346x1024.jpg 346w, https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-768x2271.jpg 768w, https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-520x1536.jpg 520w, https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-693x2048.jpg 693w, https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-600x1774.jpg 600w, https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-945x2794.jpg 945w&#34; sizes=&#34;(max-width: 866px) 100vw, 866px&#34; /&gt;&lt;/figure&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/figure&gt;&#xA;&lt;p&gt;Cet article &lt;a href=&#34;https://blog.atolcd.com/infographie-postgresql/&#34;&gt;[Infographie] PostgreSQL&lt;/a&gt; est apparu en premier sur &lt;a href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.atolcd.com/infographie-postgresql/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=infographie-postgresql" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PostgreSQL est un SGBD que nous affectionnons particulièrement chez Atol CD ! Retrouvez dans cette infographie quelques caractéristiques techniques, des chiffres-clé, son histoire mais aussi pourquoi nous l&amp;#8217;aimons et notre Top5 des fonctionnalités côté développement.&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a href=&#34;https://blog.atolcd.com/infographie-postgresql/&#34;&gt;[Infographie] PostgreSQL&lt;/a&gt; est apparu en premier sur &lt;a href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Caroline Chanlon</name>
    </author>
  </entry>
  <entry>
    <title>Sortie de PostgreSQL 13</title>
    <updated>2020-09-24T05:54:57Z</updated>
    <id>tag:blog.atolcd.com,2020-09-24:/sortie-de-postgresql-13/</id>
    <content type="html">&#xA;&lt;p&gt;&lt;span style=&#34;font-weight: 400;&#34;&gt;&lt;img decoding=&#34;async&#34; class=&#34;alignnone size-full wp-image-4130&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2020/09/pg13.jpg&#34; alt=&#34;&#34; width=&#34;960&#34; height=&#34;540&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2020/09/pg13.jpg 960w, https://blog.atolcd.com/wp-content/uploads/2020/09/pg13-300x169.jpg 300w, https://blog.atolcd.com/wp-content/uploads/2020/09/pg13-768x432.jpg 768w, https://blog.atolcd.com/wp-content/uploads/2020/09/pg13-600x338.jpg 600w, https://blog.atolcd.com/wp-content/uploads/2020/09/pg13-945x532.jpg 945w&#34; sizes=&#34;(max-width: 960px) 100vw, 960px&#34; /&gt;Malgré des actualités plutôt moroses au Botswana concernant nos chers éléphants, il y en a un qui se porte bien et est encore plus fort à savoir PostgreSQL qui sort en version 13 stable ce jeudi 24 septembre 2020. &lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;span style=&#34;font-weight: 400;&#34;&gt;Après seulement 3 versions Bêta et une RC le voilà dans les starting blocks pour débarquer sur vos serveurs ! Et comme à chaque nouvelle version son&lt;/span&gt; &lt;span style=&#34;font-weight: 400;&#34;&gt;lot de nouveautés&lt;/span&gt;&lt;span style=&#34;font-weight: 400;&#34;&gt;.&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;span style=&#34;font-weight: 400;&#34;&gt;Un petit rappel qui peut parfois éviter bien des catastrophes, si vous avez prévu de migrer vers PostgreSQL 13, vous devriez jeter un oeil sur &lt;a href=&#34;https://www.postgresql.org/docs/13/release-13.html#id-1.11.6.5.4&#34;&gt;les potentielles incompatibilités avec les précédentes versions&lt;/a&gt;  (et aussi sur les versions intermédiaires si vous faite un gap de plusieurs versions d&amp;rsquo;un coup), il est toujours préférable d&amp;rsquo;identifier ces légers changements en amont plutôt qu&amp;rsquo;une fois en production. Mais rassurez-vous, dans cette version pas de quoi freiner significativement une migration.&lt;/span&gt;&lt;/p&gt;&#xA;&lt;h1&gt;Partitionnement&lt;/h1&gt;&#xA;&lt;p&gt;Des améliorations sont ajoutées sur le partitionnement de tables, tant au niveau performance avec l&amp;rsquo;ajout de cas où une jointure directe entre partition peut être utilisée dans une requête, mais aussi de fonctionnalités telles que  la gestion des triggers avec le support de la clause BEFORE ou bien encore la réplication logique sans avoir besoin de publier chaque partition.&lt;/p&gt;&#xA;&lt;h1&gt;Index&lt;/h1&gt;&#xA;&lt;p&gt;Là aussi des améliorations de performances mais aussi des gains d&amp;rsquo;espace disque sur les index B-tree surtout pour ceux contenant des doublons, mais si vous passez par un pg_upgrade il voudra passer par un reindex pour bénéficier de ces changements.&lt;/p&gt;&#xA;&lt;h1&gt;Planificateur&lt;/h1&gt;&#xA;&lt;p&gt;Le planificateur de requête PostgreSQL a lui aussi eu le droit à quelques améliorations notamment au niveau des statistiques ce qui peut améliorer les plans d&amp;rsquo;exécution et donc les performances.&lt;/p&gt;&#xA;&lt;h1&gt;Performance générale&lt;/h1&gt;&#xA;&lt;p&gt;Les performances ne sont pas en reste dans cette nouvelle version, avec l&amp;rsquo;ajout du &lt;span style=&#34;font-weight: 400;&#34;&gt;tri incrémentiel ce qui accélère le tri des données dans certains cas,  sur les agrégations de hachage qui peuvent désormais utiliser le stockage sur disque dans le cadre de grands ensembles d&amp;rsquo;agrégation, sur la conversion de type entier vers texte.&lt;/span&gt;&lt;/p&gt;&#xA;&lt;h1&gt;Vues système&lt;/h1&gt;&#xA;&lt;p&gt;De nouvelles vues système font leur apparition :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/13/progress-reporting.html#BASEBACKUP-PROGRESS-REPORTING&#34;&gt;pg_stat_progress_basebackup &lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/13/progress-reporting.html#ANALYZE-PROGRESS-REPORTING&#34;&gt;pg_stat_progress_analyze &lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/13/view-pg-shmem-allocations.html&#34;&gt;pg_shmem_allocations &lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/13/monitoring-stats.html#MONITORING-PG-STAT-SLRU-VIEW&#34;&gt;pg_stat_slru&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;la vue &lt;a href=&#34;https://www.postgresql.org/docs/13/monitoring-stats.html#PG-STAT-ACTIVITY-VIEW&#34;&gt;pg_stat_activity&lt;/a&gt; se voit elle ajoutée une colonne leader_pid ce qui permet de retrouver rapidement tous les processus impliqués dans une requête parallèle.&lt;/p&gt;&#xA;&lt;h1&gt;Fonctionnalités&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ajout de la fonctionnalité &lt;a href=&#34;https://www.postgresql.org/docs/13/sql-select.html#SQL-LIMIT&#34;&gt;FETCH FIRST WITH TIES&lt;/a&gt; (vous trouverez &lt;a href=&#34;http://pgphil.ovh/topn_13_beta_01.php&#34;&gt;ici&lt;/a&gt; un exemple)&lt;/li&gt;&#xA;&lt;li&gt;Ajout de la fonction gen_random_uuid() utilisable sans activer d’extensions&lt;/li&gt;&#xA;&lt;li&gt;Ajout de la possibilité de renommer une colonne d&amp;rsquo;une vue :&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;ALTER VIEW [ IF EXISTS ] name RENAME [ COLUMN ] column_name TO new_column_name&lt;/pre&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Ajout de la fonction .datetime() dans les jsonpath pour convertir automatique une chaîne en date ou horodatage&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1&gt;Client psql&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Ajout de nouvelles commandes pour afficher la description de classe d&amp;rsquo;opérateur et famille d&amp;rsquo;opérateur&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a class=&#34;link&#34; title=&#34;Meta-Commands&#34; href=&#34;https://www.postgresql.org/docs/13/app-psql.html#APP-PSQL-META-COMMANDS&#34;&gt;&lt;code class=&#34;literal&#34;&gt;\dAc&lt;/code&gt;&lt;/a&gt;, &lt;code class=&#34;literal&#34;&gt;\dAf&lt;/code&gt;, &lt;code class=&#34;literal&#34;&gt;\dAo&lt;/code&gt;, et &lt;code class=&#34;literal&#34;&gt;\dAp&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Ajout du statut de la transaction dans le prompt &lt;br /&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;* dans une transaction&lt;/li&gt;&#xA;&lt;li&gt;! dans un échec de transaction&lt;/li&gt;&#xA;&lt;li&gt;? pour un état indéterminé de la transaction&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1&gt;Administration&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Ajout de la capacité de la commande VACUUM à traiter des index en parallèle&lt;/li&gt;&#xA;&lt;li&gt;la commande reindexdb peut aussi paralléliser les tâches&lt;/li&gt;&#xA;&lt;li&gt;introduction de la notion de « trusted extension » qui permet à un super utilisateur de définir les extensions qu’un utilisateur a le droit d&amp;rsquo;installer dans sa base de données en ayant le droit CREATE.&lt;/li&gt;&#xA;&lt;li&gt;Ajout pour pg_dump de l&amp;rsquo;option &amp;#8211;include-foreign-data pour inclure dans la sauvegarde les données de serveurs distants&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;La liste des nouveautés dans cette version est grande, toutes les nouveautés n&amp;rsquo;ont pas été abordées mais vous pouvez bien sur les retrouver dans la &lt;a href=&#34;https://www.postgresql.org/docs/13/release-13.html&#34;&gt;note de version&lt;/a&gt;. Le focus a surtout été fait sur le côté utilisateur plutôt qu&amp;rsquo;administrateur de PostgreSQL.&lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a href=&#34;https://blog.atolcd.com/sortie-de-postgresql-13/&#34;&gt;Sortie de PostgreSQL 13&lt;/a&gt; est apparu en premier sur &lt;a href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.atolcd.com/sortie-de-postgresql-13/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=sortie-de-postgresql-13" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Malgré des actualités plutôt moroses au Botswana concernant nos chers éléphants, il y en a un qui se porte bien et est encore plus fort à savoir PostgreSQL qui sort en version 13 stable ce jeudi 24 septembre 2020.  Après... &lt;a class=&#34;more-link&#34; href=&#34;https://blog.atolcd.com/sortie-de-postgresql-13/&#34;&gt;Continue Reading &amp;#8594;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a href=&#34;https://blog.atolcd.com/sortie-de-postgresql-13/&#34;&gt;Sortie de PostgreSQL 13&lt;/a&gt; est apparu en premier sur &lt;a href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Caroline Chanlon</name>
    </author>
  </entry>
  <entry>
    <title>Sortie de PostgreSQL 11</title>
    <updated>2018-10-19T13:12:39Z</updated>
    <id>tag:blog.atolcd.com,2018-10-19:/sortie-de-postgresql-11/</id>
    <content type="html">&lt;p&gt;Après seulement une release candidate (mais auparavant 4 version bêta), PostgreSQL 11 vient de sortir!!!! Et comme à chaque nouvelle version son lot de nouveautés que nous allons essayer de passer rapidement en revue.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img decoding=&#34;async&#34; class=&#34;aligncenter size-full wp-image-3169&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2018/10/PostGresql11.jpg&#34; alt=&#34;&#34; width=&#34;826&#34; height=&#34;540&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2018/10/PostGresql11.jpg 826w, https://blog.atolcd.com/wp-content/uploads/2018/10/PostGresql11-300x196.jpg 300w, https://blog.atolcd.com/wp-content/uploads/2018/10/PostGresql11-768x502.jpg 768w, https://blog.atolcd.com/wp-content/uploads/2018/10/PostGresql11-600x392.jpg 600w&#34; sizes=&#34;(max-width: 826px) 100vw, 826px&#34; /&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Amélioration de la parallélisation&lt;/h2&gt;&#xA;&lt;p&gt;Quoi de mieux que de commencer le tour des nouveautés par un sujet que l&amp;rsquo;on a abordé lors du &lt;a href=&#34;https://blog.atolcd.com/conference-la-parallelisation-au-service-de-loptimisation/&#34;&gt;PG Day France 2018&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;PostgreSQL 11 va encore plus loin dans la parallélisation avec :&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Création d&amp;rsquo;index B-tree en parallèle&lt;/li&gt;&#xA;&lt;li&gt;Parallélisation des UNION ALL&lt;/li&gt;&#xA;&lt;li&gt;Amélioration du Parallel hash join (paralléliser le remplissage d’une seule table de hachage, partagée) et parallelized sequential scans&lt;/li&gt;&#xA;&lt;li&gt;Parallélisation sur la création de vue matérialisée et table à partir des résultats d&amp;rsquo;une requête&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE TABLE .. AS, SELECT INTO et CREATE MATERIALIZED VIEW.&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout d&amp;rsquo;un paramètre de configuration du serveur « parallel_leader_participation » qui permet de contrôler si le processus leader participe à l&amp;rsquo;exécution des sous plans d&amp;rsquo;exécution&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;Amélioration du partitionnement&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;La possibilité de partitionner une table par hashage de clé (en plus des autres)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE TABLE hash1 (col1 NUMERIC, col2 VARCHAR(10)) PARTITION BY HASH(col1);&#xD;&#xA;CREATE TABLE hash1a PARTITION OF hash1 FOR VALUES WITH (MODULUS 4, REMAINDER 0) ;&#xD;&#xA;CREATE TABLE hash1b PARTITION OF hash1 FOR VALUES WITH (MODULUS 4, REMAINDER 1) ;&#xD;&#xA;CREATE TABLE hash1c PARTITION OF hash1 FOR VALUES WITH (MODULUS 4, REMAINDER 2) ;&#xD;&#xA;CREATE TABLE hash1d PARTITION OF hash1 FOR VALUES WITH (MODULUS 4, REMAINDER 3) ;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout possible d&amp;rsquo;une partition par défaut pour les données ne correspondant à aucune partition&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE TABLE table1d PARTITION OF table1 DEFAULT;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;La possibilité de créer des clés primaires, clés étrangères, index et triggers qui seront automatiquement applicables sur l&amp;rsquo;ensemble des partitions&lt;/li&gt;&#xA;&lt;li&gt;Support du changement automatique de partition en cas de mise à jour de la clé de partitionnement&lt;/li&gt;&#xA;&lt;li&gt;Amélioration des performances lors des SELECT sur la lecture des partitions&lt;/li&gt;&#xA;&lt;li&gt;Support des upsert sur les tables partitionnées&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;INSERT  INTO  tablep1 (col1, col2) &#xD;&#xA;VALUES  (100,  &#39;update&#39;) &#xD;&#xA;ON  CONFLICT ON CONSTRAINT tablep1_pkey &#xD;&#xA;DO UPDATE SET col2=&#39;update&#39; ;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Gestion des transactions dans les procédures stockées&lt;/h2&gt;&#xA;&lt;p&gt;PostgreSQL 11 introduit la possibilité de créer des procédures (en PL/pgSQL, PL/Perl, PL/Python, et PL/Tcl). Depuis de nombreuses années, il est possible dans PostgreSQL de créer des fonctions et bien ici ça y ressemble fortement, sauf que l&amp;rsquo;on ne retourne pas de résultats et que l&amp;rsquo;on peut gérer les transactions !&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE PROCEDURE transaction_test1()&#xD;&#xA;LANGUAGE plpgsql&#xD;&#xA;AS $$&#xD;&#xA;BEGIN&#xD;&#xA;  FOR i IN 0..9 LOOP&#xD;&#xA;    INSERT INTO table1 (col1) VALUES (i) ;&#xD;&#xA;    IF i % 2 = 0 THEN&#xD;&#xA;      COMMIT;&#xD;&#xA;    ELSE&#xD;&#xA;      ROLLBACK;&#xD;&#xA;    END IF;&#xD;&#xA;  END LOOP;&#xD;&#xA;END;&#xD;&#xA;$$;&lt;/pre&gt;&lt;p&gt;L&amp;rsquo;exécution de ces procédures se fait en utilisant la commande CALL&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CALL transaction_test1();&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Compilation JIT&lt;/h2&gt;&#xA;&lt;p&gt;PostgreSQL 11 introduit le support de la compilation Just-in-Time (JIT) pour optimiser l’exécution de code et d’autres opérations. Utilisant des composants du projet LLVM, l’introduction de JIT dans PostgreSQL accélère les requêtes utilisant des expressions, listes, agrégats, projections, ainsi que certaines opérations internes.&lt;/p&gt;&#xA;&lt;p&gt;Pour pouvoir utiliser la compilation JIT, vous devrez installer la dépendance LLVM puis activer la compilation JIT soit dans le fichier de configuration (jit = on), soit durant votre session en exécutant SET jit = on.&lt;/p&gt;&#xA;&lt;p&gt;La compilation JIT bénéficie surtout aux requêtes de longue durée et limitées par le processeur. Ce seront souvent des requêtes analytiques (OLAP). Pour les requêtes courtes, le surcoût apporté par la compilation JIT sera souvent supérieur au temps qu&amp;rsquo;elle permet de gagner.&lt;/p&gt;&#xA;&lt;h2&gt;Améliorations générales SQL&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Support de toutes les clauses (SQL:2011) dans les fonctions de fenêtrage ce qui permet maintenant l’utilisation de RANGE dans des clauses PRECEDING/FOLLOWING, GROUPS ou d’exclusion&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;WINDOW window_name AS ( &#xD;&#xA;  [ PARTITION BY expression [, ...] ]&#xD;&#xA;  [ ORDER BY expression [ ASC | DESC | USING operator ] [ NULLS { FIRST | LAST } ] [, ...] ]&#xD;&#xA;  [ frame_clause ]&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;frame_clause :&#xD;&#xA;{ RANGE | ROWS | GROUPS } frame_start [ frame_exclusion ]&#xD;&#xA;{ RANGE | ROWS | GROUPS } BETWEEN frame_start AND frame_end [ frame_exclusion ]&#xD;&#xA;&#xD;&#xA;frame_start / frame_end :&#xD;&#xA;&#xD;&#xA;UNBOUNDED PRECEDING&#xD;&#xA;offset PRECEDING&#xD;&#xA;CURRENT ROW&#xD;&#xA;offset FOLLOWING&#xD;&#xA;UNBOUNDED FOLLOWING&#xD;&#xA;&#xD;&#xA;frame_exclusion :&#xD;&#xA;&#xD;&#xA;EXCLUDE CURRENT ROW&#xD;&#xA;EXCLUDE GROUP&#xD;&#xA;EXCLUDE TIES&#xD;&#xA;EXCLUDE NO OTHERS&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout de fonctions de hash sha-2 : sha224(), sha256(), sha384() et sha512()&lt;/li&gt;&#xA;&lt;li&gt;Ajout de fonctions de recherche plein texte : json(b)_to_tsvector() et websearch_to_tsquery()&lt;/li&gt;&#xA;&lt;li&gt;Ajout de l&amp;rsquo;opérateur ^@ identique à LIKE &amp;lsquo;mot%&amp;rsquo; mais plus efficace sur un index b-tree&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;text ^@ text&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Amélioration des index avec l&amp;rsquo;ajout du mot clef INCLUDE, qui permet d&amp;rsquo;indiquer une liste de colonnes qui seront incluses dans l&amp;rsquo;index comme des colonnes non clés. L&amp;rsquo;ajout de colonnes dans la création d&amp;rsquo;index permet alors l&amp;rsquo;utilisation de parcours d&amp;rsquo;index couvrants.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE [ UNIQUE ] INDEX [ CONCURRENTLY ] [ [ IF NOT EXISTS ] nom ] ON [ ONLY ] nom_table [ USING méthode ]&#xD;&#xA;    ( { nom_colonne | ( expression ) } [ COLLATE collation ] [ classeop ] [ ASC | DESC ] [ NULLS { FIRST | LAST } ] [, ...] )&#xD;&#xA;    [ INCLUDE ( nom_colonne [, ...] ) ]&#xD;&#xA;    [ WITH ( parametre_stockage = valeur [, ... ] ) ]&#xD;&#xA;    [ TABLESPACE nom_espacelogique ]&#xD;&#xA;    [ WHERE prédicat ]&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Amélioration de l’ordre ALTER TABLE .. ADD COLUMN .. DEFAULT .. avec une valeur par défaut non NULL n’a plus besoin de réécrire entièrement la table lors de son exécution, ce qui entraîne une grosse amélioration des performances.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;Authentification&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout de l&amp;rsquo;authentification LDAP, mais celle ci n&amp;rsquo;est utilisée que pour valider les paires nom d&amp;rsquo;utilisateur/mot de passe. De ce fait, pour pouvoir utiliser LDAP comme méthode d&amp;rsquo;authentification, l&amp;rsquo;utilisateur doit préalablement exister dans la base.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;psql&lt;/h2&gt;&#xA;&lt;p&gt;Le client psql évolue lui aussi :&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout des commandes « quit » et « exit » dans le client psql&amp;#8230; (fini les personnes prisent de panique pour sortir de leur terminal ??? )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://media.giphy.com/media/xTk9ZBWrma4PIC9y4E/giphy.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout de la commande \gdesc pour afficher les noms et types de colonnes du résultat de la requête&lt;/li&gt;&#xA;&lt;li&gt;Ajout de variables pour les erreurs et activités des requêtes ERROR, SQLSTATE, ROW_COUNT, LAST_ERROR_MESSAGE, and LAST_ERROR_SQLSTATE.&lt;/li&gt;&#xA;&lt;li&gt;Ajout de la possibilité de tester l&amp;rsquo;existence d&amp;rsquo;une variable par exemple dans un if&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;\if :{?variable_name}&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Amélioration de la complétion dans l&amp;rsquo;écriture de requêtes&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;En dehors de ces nouveautés en terme d&amp;rsquo;utilisation, cette nouvelle version apporte aussi des améliorations de performance et d&amp;rsquo;utilisation de mémoire.&lt;/p&gt;&#xA;&lt;p&gt;Et voilà, nous avons fini notre petit tour rapide des nouveautés de postgreSQL 11, mais ne vous inquiétez pas une version 12 est déjà en préparation pour le troisième trimestre 2019.&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a href=&#34;https://blog.atolcd.com/sortie-de-postgresql-11/&#34;&gt;Sortie de PostgreSQL 11&lt;/a&gt; est apparu en premier sur &lt;a href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.atolcd.com/sortie-de-postgresql-11/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=sortie-de-postgresql-11" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Après seulement une release candidate (mais auparavant 4 version bêta), PostgreSQL 11 vient de sortir!!!! Et comme à chaque nouvelle version son lot de nouveautés que nous allons essayer de passer rapidement en revue. Amélioration de la parallélisation Quoi de... &lt;a class=&#34;more-link&#34; href=&#34;https://blog.atolcd.com/sortie-de-postgresql-11/&#34;&gt;Continue Reading &amp;#8594;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a href=&#34;https://blog.atolcd.com/sortie-de-postgresql-11/&#34;&gt;Sortie de PostgreSQL 11&lt;/a&gt; est apparu en premier sur &lt;a href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Caroline Chanlon</name>
    </author>
  </entry>
  <entry>
    <title>Pimp My PostgreSQL</title>
    <updated>2018-01-26T11:07:23Z</updated>
    <id>tag:blog.atolcd.com,2018-01-26:/pimp-my-postgresql/</id>
    <content type="html">&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;alignright wp-image-2934&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2018/01/pimp-my-postgresql.png&#34; alt=&#34;&#34; width=&#34;491&#34; height=&#34;290&#34; /&gt;Une question qui se pose souvent après l&amp;rsquo;installation d&amp;rsquo;une instance postgreSQL, c&amp;rsquo;est comment configurer ce fichier postgresql.conf. Dans le doute souvent, beaucoup de personnes conservent la configuration par défaut, ce qui ne va pas poser vraiment de problème pour une utilisation légère. Mais si on a une instance postgreSQL avec postGIS et des millions d&amp;rsquo;enregistrements, cela va rapidement se trouver problématique si on laisse les valeurs par défaut&amp;#8230;&lt;/p&gt;&#xA;&lt;p&gt;Pour les initiés qui installent régulièrement de nouvelles instances postgreSQL, se plonger dans les plus de 600 lignes du fichier de configuration par défaut ne les effraie pas. Mais on n&amp;rsquo;installe pas forcément tous les jours un nouveau serveur avec des caractéristiques différentes. Il faut donc soit se replonger pour une centième fois dans la documentation de postgres pour se rappeler à notre bonne mémoire les différents paramètres et les valeurs à adapter en fonction de la ram, disque, cpu&amp;#8230;&lt;/p&gt;&#xA;&lt;p&gt;En plus de devoir se rappeler les &lt;strong&gt;paramètres à modifier,&lt;/strong&gt; il faut aussi connaître les &lt;strong&gt;règles de calcul &lt;/strong&gt;pour les valeurs comme par exemple le « effective_cache_size » qui est préconisé à 75% de la ram total du serveur si celui-ci est dédié à postgres.&lt;/p&gt;&#xA;&lt;p&gt;Le but de cet article n&amp;rsquo;est pas de voir ni de détailler tous les paramètres de configuration possibles et inimaginables, mais de voir cela comme un mémo pour les initiés ou de s’interroger sur les &lt;strong&gt;paramètres qui seraient potentiellement à modifier en fonction du serveur&lt;/strong&gt; (et des applications qui l&amp;rsquo;utilisent) si l&amp;rsquo;on ne connait pas l&amp;rsquo;utilisation des paramètres de ce fichier postgresql.conf.&lt;/p&gt;&#xA;&lt;p&gt;Pour cela un petit outil a été conçu par Cybertec, qui permet de renseigner quelques caractéristiques et de voir évoluer en conséquence le fichier postgresql.conf notamment en fonction de la ram du serveur, du nombre de cpu, de la taille de la base&amp;#8230; etc.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;alignnone size-full wp-image-2925&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2018/01/pgconfigurator.png&#34; alt=&#34;&#34; width=&#34;1005&#34; height=&#34;993&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2018/01/pgconfigurator.png 1005w, https://blog.atolcd.com/wp-content/uploads/2018/01/pgconfigurator-300x296.png 300w, https://blog.atolcd.com/wp-content/uploads/2018/01/pgconfigurator-768x759.png 768w, https://blog.atolcd.com/wp-content/uploads/2018/01/pgconfigurator-945x934.png 945w, https://blog.atolcd.com/wp-content/uploads/2018/01/pgconfigurator-600x593.png 600w&#34; sizes=&#34;(max-width: 1005px) 100vw, 1005px&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cela ne remplace pas une connaissance aguerrie de postgreSQL et de sa configuration mais ça permet de se faire une idée des paramètres à adapter en fonction de son serveur et de ses besoins.&lt;/p&gt;&#xA;&lt;p&gt;Cet outil est disponible en ligne à cette adresse : &lt;a href=&#34;http://pgconfigurator.cybertec.at/&#34;&gt;http://pgconfigurator.cybertec.at/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a href=&#34;https://blog.atolcd.com/pimp-my-postgresql/&#34;&gt;Pimp My PostgreSQL&lt;/a&gt; est apparu en premier sur &lt;a href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.atolcd.com/pimp-my-postgresql/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=pimp-my-postgresql" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Une question qui se pose souvent après l&amp;#8217;installation d&amp;#8217;une instance postgreSQL, c&amp;#8217;est comment configurer ce fichier postgresql.conf. Dans le doute souvent, beaucoup de personnes conservent la configuration par défaut, ce qui ne va pas poser vraiment de problème pour une... &lt;a class=&#34;more-link&#34; href=&#34;https://blog.atolcd.com/pimp-my-postgresql/&#34;&gt;Continue Reading &amp;#8594;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a href=&#34;https://blog.atolcd.com/pimp-my-postgresql/&#34;&gt;Pimp My PostgreSQL&lt;/a&gt; est apparu en premier sur &lt;a href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Caroline Chanlon</name>
    </author>
  </entry>
  <entry>
    <title>Sortie de PostgreSQL 10</title>
    <updated>2017-10-05T13:28:32Z</updated>
    <id>tag:blog.atolcd.com,2017-10-05:/sortie-de-postgresql-10/</id>
    <content type="html">&lt;p&gt;Aujourd&amp;rsquo;hui, c&amp;rsquo;est la sortie de &lt;strong&gt;PostgreSQL 10&lt;/strong&gt;!!!! Première révolution, la numérotation des versions : on passe de 9.4&amp;#8230;9.6 pour les versions majeures à 10, 11, 12&amp;#8230; Ce point est important car un changement de version majeure implique une migration des données. Une opération beaucoup plus lourde que la seule mise à jour des exécutables !&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;aligncenter size-full wp-image-2788&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2017/10/postgresql-10.jpg&#34; alt=&#34;&#34; width=&#34;558&#34; height=&#34;337&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2017/10/postgresql-10.jpg 558w, https://blog.atolcd.com/wp-content/uploads/2017/10/postgresql-10-300x181.jpg 300w&#34; sizes=&#34;(max-width: 558px) 100vw, 558px&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;Voici quelques détails sur cette&lt;strong&gt; nouvelle version 10&lt;/strong&gt; et ce qu&amp;rsquo;elle apporte :&lt;/p&gt;&#xA;&lt;h2&gt;Performance et partitionnement&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Le partitionnement de table est maintenant un attribut de la table :&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE TABLE table_name ( ... )&#xD;&#xA;[ PARTITION BY { RANGE | LIST } ( { column_name | ( expression ) }&#xD;&#xA;&#xD;&#xA;CREATE TABLE table_name&#xD;&#xA;PARTITION OF parent_table [ (&#xD;&#xA;) ] FOR VALUES partition_bound_spec&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;PostgreSQL 10 va plus loin dans la parallélisation avec le parallélisme des Index-Only Scan, Index Scan, Bitmap Heap Scan, Merge Join / Gather Merge, Subplan-Related Improvements&lt;/li&gt;&#xA;&lt;li&gt;Amélioration des performances pour les agrégats et jointures avec &lt;code&gt;postgres_fdw&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Amélioration des performances de l&amp;rsquo;analyseur de requête&lt;/li&gt;&#xA;&lt;li&gt;Apparition des statistiques multi-colonnes&lt;/li&gt;&#xA;&lt;li&gt;Amélioration du plan d’exécution des requêtes&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;Réplication et scalabilité&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Réplication logique : légère et basée sur les WAL, répliquant les objets individuellement via les commandes PUBLICATION (primaire) et SUBSCRIPTION (secondaire)&lt;/li&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE PUBLICATION financials FOR TABLE ONLY loans, ONLY fines;&lt;/pre&gt;&lt;br /&gt;&#xA;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE SUBSCRIPTION financials&#xD;&#xA;CONNECTION &#39;dbname=libdata user=postgres host=172.17.0.2&#39;&#xD;&#xA;PUBLICATION financials;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;QUORUM replication : avec ANY et FIRST pour synchronous_standby_names;&lt;/li&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;synchronous_standby_names = ANY 2(node1,node2,node3);&#xD;&#xA;synchronous_standby_names = FIRST 2(node1,node2);&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Suppression automatique à la fin de la session des slots de réplication temporaires&lt;/li&gt;&#xA;&lt;li&gt;Amélioration de libpq permettant des connexions a de multiples systèmes&lt;/li&gt;&#xA;&lt;li&gt;Amélioration des performances de la réplication physique&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;Administration&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Support de la compression pour pg_receivewal&lt;/li&gt;&#xA;&lt;li&gt;Ajout d&amp;rsquo;informations sur les Background processes et Wait Events dans pg_stat_activity&lt;/li&gt;&#xA;&lt;li&gt;Ajout de fonctions qui remontent à l&amp;rsquo;utilisateur des informations sur le status de transaction. L&amp;rsquo;usage principal de ces fonctions est de déterminer les transactions commitées entre deux snapshots.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;txid_status(bigint)&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Fonctionnalités SQL et développeurs&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Gestion de colonne Identity qui vise à remplacer l&amp;rsquo;utilisation du type serial et qui est conforme au standard SQL&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE TABLE test_new (&#xD;&#xA;    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,&#xD;&#xA;    payload text&#xD;&#xA;);&lt;/pre&gt;&lt;p&gt;plus d&amp;rsquo;informations sur ce sujet &lt;a href=&#34;https://blog.2ndquadrant.com/postgresql-10-identity-columns/&#34;&gt;ici par exemple&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Possibilité de renommer la valeur d&amp;rsquo;une énumération&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE TYPE langage AS ENUM (&#39;SQL&#39;, &#39;JAVA&#39;, &#39;HTML&#39;) ;&#xD;&#xA;ALTER TYPE langage RENAME VALUE &#39;HTML&#39; TO &#39;HTML5&#39; ;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout des triggers AFTER STATEMENT qui peuvent avoir accès à l’ensemble des lignes modifiées, avant et après changement, à travers une pseudo-variable de type table&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE TRIGGER nom_trigger AFTER DELETE ON nom_table&#xD;&#xA;REFERENCING OLD TABLE AS OLD&#xD;&#xA;FOR EACH STATEMENT&#xD;&#xA;EXECUTE PROCEDURE nom_procedure();&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout de la fonction xmltable qui produit une table basée sur la valeur XML donnée.&lt;/li&gt;&#xA;&lt;li&gt;Supprimer des éléments d&amp;rsquo;un JSONB&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;SELECT &#39;{&#34;a&#34;:1 , &#34;b&#34;:2, &#34;c&#34;:3}&#39;::jsonb - &#39;{a,c}&#39;::text[] ;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Il est possible de créer des indexes full text sur une colonne JSON ou JSONB&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE INDEX bookdata_fts ON bookdata&#xD;&#xA;USING gin (( to_tsvector(&#39;english&#39;,bookdata) ));&#xD;&#xA;&#xD;&#xA;SELECT bookdata -&amp;gt; &#39;title&#39;&#xD;&#xA;FROM bookdata&#xD;&#xA;WHERE to_tsvector(&#39;english&#39;,bookdata) @@ to_tsquery(&#39;duke&#39;);&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Sécurité&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Authentification SCRAM plus sécurisée que md5&lt;/li&gt;&#xA;&lt;li&gt;Création de nouveau rôle pour le monitoring évitant ainsi d&amp;rsquo;être super utilisateur&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;pg_read_all_settings : Lit toutes les variables de configuration, y compris celles normalement visibles des seuls super-utilisateurs.&#xD;&#xA;pg_read_all_stats : Lit toutes les vues pg_stat_* et utilise plusieurs extensions relatives aux statistiques, y compris celles normalement visibles des seuls super-utilisateurs.&#xD;&#xA;pg_stat_scan_tables : Exécute des fonctions de monitoring pouvant prendre des verrous verrous ACCESS SHARE sur les tables, potentiellement pour une longue durée.&#xD;&#xA;pg_monitor : Lit et exécute plusieurs vues et fonctions de monitoring. Ce rôle est membre de pg_read_all_settings, pg_read_all_stats et pg_stat_scan_tables.&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout de politiques restrictive dans les politiques de sécurité pour l&amp;rsquo;accès aux lignes et plus seulement de politiques permissives&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE POLICY admin_local_only ON passwd AS RESTRICTIVE TO admin&#xD;&#xA;    USING (pg_catalog.inet_client_addr() IS NULL);&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Autres fonctionnalités&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;file_fdw peut maintenant utiliser les programmes&lt;/li&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE FOREIGN TABLE&#xD;&#xA;   test(a int, b text)&#xD;&#xA;   SERVER csv&#xD;&#xA;   OPTIONS (program &#39;gunzip -c /tmp/data.czv.gz&#39;);&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;support des collations ICU&lt;/li&gt;&#xA;&lt;li&gt;Ajout d&amp;rsquo;un module amcheck permettant de vérifier cohérence / corruption d&amp;rsquo;un index B-Tree&lt;/li&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE EXTENSION amcheck ;&#xD;&#xA;   SELECT bt_index_check(&#39;idx1_check1&#39;) ;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;Modifications entrainant une incompatibilité ascendante&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;“xlog” et “clog” qui deviennent respectivement “wal” et “xact”.&lt;/li&gt;&#xA;&lt;li&gt;fin du support du protocole client/serveur 1.0 (clients datant d’avant la version 6.3)&lt;/li&gt;&#xA;&lt;li&gt;changement de valeurs par défaut pour pg_basebackup&lt;/li&gt;&#xA;&lt;li&gt;fin du support des TIMESTAMP avec floating point.&lt;/li&gt;&#xA;&lt;li&gt;Le module contrib/tsearch2 a été supprimé qui permettait une comptabilité avec les fonction de recherche full text avant la version 8.3&lt;/li&gt;&#xA;&lt;li&gt;fin du support de la commande pg_dump pour les bases de données plus anciennes que la version 8.0&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Et voilà, nous avons fini notre petit tour rapide des nouveautés de postgreSQL 10 mais une version 11 est déjà prévue pour dans 12 mois !&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a href=&#34;https://blog.atolcd.com/sortie-de-postgresql-10/&#34;&gt;Sortie de PostgreSQL 10&lt;/a&gt; est apparu en premier sur &lt;a href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.atolcd.com/sortie-de-postgresql-10/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=sortie-de-postgresql-10" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Aujourd&amp;#8217;hui, c&amp;#8217;est la sortie de PostgreSQL 10!!!! Première révolution, la numérotation des versions : on passe de 9.4&amp;#8230;9.6 pour les versions majeures à 10, 11, 12&amp;#8230; Ce point est important car un changement de version majeure implique une migration des... &lt;a class=&#34;more-link&#34; href=&#34;https://blog.atolcd.com/sortie-de-postgresql-10/&#34;&gt;Continue Reading &amp;#8594;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a href=&#34;https://blog.atolcd.com/sortie-de-postgresql-10/&#34;&gt;Sortie de PostgreSQL 10&lt;/a&gt; est apparu en premier sur &lt;a href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Caroline Chanlon</name>
    </author>
  </entry>
  <entry>
    <title>Nouveau module d’export de données pour REMOcRA</title>
    <updated>2017-05-12T13:52:26Z</updated>
    <id>tag:blog.atolcd.com,2017-05-12:/nouveau-module-dexport-de-donnees-remocra/</id>
    <content type="html">&lt;h1&gt;Objectif du module&lt;/h1&gt;&#xA;&lt;p&gt;Le SDIS du Var ne disposait pas jusqu&amp;rsquo;à ce jour, à travers la plate-forme collaborative &lt;a href=&#34;http://sdis.atolcd.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;REMOcRA&lt;/a&gt;, d&amp;rsquo;une méthode simple pour exporter le contenu de la base de données auprès de ses partenaires. Les demandes étant de plus en plus récurrentes, le SDIS du Var a décidé &lt;strong&gt;de faire évoluer l&amp;rsquo;application pour l&amp;rsquo;enrichir d&amp;rsquo;un module dédié aux exports&lt;/strong&gt; et a confié à Atol Conseils et Développements sa réalisation en veillant à respecter les besoins suivants :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;En tant qu&amp;rsquo;administrateur de l&amp;rsquo;extranet, être en mesure de réaliser facilement des exports de données en se basant sur des modèles administrables. Ce module devait être en mesure de produire des fichiers tabulaires ou des fichiers géographiques.&lt;/li&gt;&#xA;&lt;li&gt;En tant que partenaire, être en mesure d&amp;rsquo;exporter soit même les données mises à disposition par le SDIS sur un territoire autorisé.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1&gt;Comment ça marche ?&lt;/h1&gt;&#xA;&lt;h2&gt;Un fonctionnement basé sur des modèles d&amp;rsquo;exports&lt;/h2&gt;&#xA;&lt;p&gt;Le mécanisme d&amp;rsquo;export repose sur des modèles. Ces derniers peuvent être référencés directement par les administrateurs de la plate-forme REMOcRA grâce à des fichiers de définition de modèle (format XML) déposés fia FTP dans un sous-dossier de REMOcRA.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;aligncenter size-large wp-image-2626&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-1-1024x220.png&#34; alt=&#34;&#34; width=&#34;676&#34; height=&#34;145&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-1-1024x220.png 1024w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-1-300x64.png 300w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-1-768x165.png 768w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-1-945x203.png 945w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-1-600x129.png 600w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-1.png 1067w&#34; sizes=&#34;(max-width: 676px) 100vw, 676px&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;Le fichier XML précise principalement la requête SQL à utiliser pour filtrer et formater les données à la bonne structure. L&amp;rsquo;attribut spatial du nœud racine permet de préciser si l&amp;rsquo;export est de type tabulaire (CSV) ou géographique (Esri Shapefile). Dans le cas d&amp;rsquo;un export géographique, la colonne « wkt » contenant la géométrie encodée en WKT est exploitée.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;aligncenter size-full wp-image-2627&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-2.png&#34; alt=&#34;&#34; width=&#34;822&#34; height=&#34;341&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-2.png 822w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-2-300x124.png 300w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-2-768x319.png 768w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-2-600x249.png 600w&#34; sizes=&#34;(max-width: 822px) 100vw, 822px&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;Le référencement des modèles est réalisé directement depuis l&amp;rsquo;interface en exécutant depuis REMOcRA le traitement « Référencer les modèles d&amp;rsquo;export de données » disponible dans la catégorie d&amp;rsquo;applications « Divers »&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;aligncenter size-full wp-image-2628&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-3.png&#34; alt=&#34;&#34; width=&#34;968&#34; height=&#34;288&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-3.png 968w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-3-300x89.png 300w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-3-768x228.png 768w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-3-945x281.png 945w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-3-600x179.png 600w&#34; sizes=&#34;(max-width: 968px) 100vw, 968px&#34; /&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Un traitement spécifique intégrant le filtrage spatial des données&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;aligncenter size-large wp-image-2629&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-4-1024x525.png&#34; alt=&#34;&#34; width=&#34;676&#34; height=&#34;347&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-4-1024x525.png 1024w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-4-300x154.png 300w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-4-768x394.png 768w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-4-945x484.png 945w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-4-600x307.png 600w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-4.png 1167w&#34; sizes=&#34;(max-width: 676px) 100vw, 676px&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;La réalisation d&amp;rsquo;un export de données depuis le système REMOcRA se base sur le mécanisme suivant :&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;L&amp;rsquo;utilisateur de profil « administrateur » dispose d&amp;rsquo;un nouveau traitement intitulé « Exporter les données à partir d&amp;rsquo;un modèle ». Ce dernier permet de réaliser des exports de données en s&amp;rsquo;appuyant sur la liste de modèles.&lt;/li&gt;&#xA;&lt;li&gt;Après avoir choisi son modèle, la demande d&amp;rsquo;export formulée par l&amp;rsquo;utilisateur est stockée en file d&amp;rsquo;attente. Une tâche planifiée vérifie régulièrement la présence de demandes en attente&lt;/li&gt;&#xA;&lt;li&gt;Lors de l’exécution de la tâche planifiée, le moteur ETL exécute les demandes d&amp;rsquo;export en attente en s&amp;rsquo;appuyant sur les informations contenues dans le modèle pour générer un fichier CSV (dans le cas de données non géographiques) ou des fichiers de formes (fichiers ESRI Shapefile).&lt;/li&gt;&#xA;&lt;li&gt;A l&amp;rsquo;issu du traitement, les fichiers produits sont compressés au format ZIP et un lien de téléchargement est fourni dans un mél envoyé au demandeur du traitement.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;aligncenter size-full wp-image-2630&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-5.png&#34; alt=&#34;&#34; width=&#34;962&#34; height=&#34;367&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-5.png 962w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-5-300x114.png 300w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-5-768x293.png 768w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-5-945x361.png 945w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-5-600x229.png 600w&#34; sizes=&#34;(max-width: 962px) 100vw, 962px&#34; /&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Une mutualisation des connaissances !&lt;/h2&gt;&#xA;&lt;p&gt;Le SDIS du Var (83), à l&amp;rsquo;initiative de la plate-forme collaborative métier REMOcRA, a décidé de faire bénéficier ses confrères de sa démarche en redistribuant gratuitement l&amp;rsquo;outil et ce module sous licence Creative Commons.&lt;br /&gt;&#xA;Dans cette démarche open source, la solution et le nouveau module sont disponibles sur Github pour installation et test à tous les SDIS sur &lt;a href=&#34;https://github.com/atolcd/sdis-remocra&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;https://github.com/atolcd/sdis-remocra&lt;/a&gt;. Pour plus d&amp;rsquo;information sur la solution REMOcRA, consulter &lt;a href=&#34;http://sdis.atolcd.com&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;http://sdis.atolcd.com&lt;/a&gt;&lt;br /&gt;&#xA;&lt;em&gt;REMOcRA est cofinancé par l’Union européenne. L’Europe s’engage avec le Fonds européen de développement régional.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a href=&#34;https://blog.atolcd.com/nouveau-module-dexport-de-donnees-remocra/&#34;&gt;Nouveau module d&amp;rsquo;export de données pour REMOcRA&lt;/a&gt; est apparu en premier sur &lt;a href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.atolcd.com/nouveau-module-dexport-de-donnees-remocra/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=nouveau-module-dexport-de-donnees-remocra" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Objectif du module Le SDIS du Var ne disposait pas jusqu&amp;#8217;à ce jour, à travers la plate-forme collaborative REMOcRA, d&amp;#8217;une méthode simple pour exporter le contenu de la base de données auprès de ses partenaires. Les demandes étant de plus... &lt;a class=&#34;more-link&#34; href=&#34;https://blog.atolcd.com/nouveau-module-dexport-de-donnees-remocra/&#34;&gt;Continue Reading &amp;#8594;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a href=&#34;https://blog.atolcd.com/nouveau-module-dexport-de-donnees-remocra/&#34;&gt;Nouveau module d&amp;rsquo;export de données pour REMOcRA&lt;/a&gt; est apparu en premier sur &lt;a href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Caroline Chanlon</name>
    </author>
  </entry>
  <entry>
    <title>Nouveau dans pg13: Colonne leader_pid dans pg_stat_activity</title>
    <updated>2020-03-08T05:33:26Z</updated>
    <id>tag:rjuju.github.io,2020-03-08:/postgresqlfr/2020/03/08/nouveau-dans-pg13-leader_pid.html</id>
    <content type="html">&lt;h3 id=&#34;nouvelle-colonne-leader_pid-dans-la-vue-pg_stat_activity&#34;&gt;Nouvelle colonne leader_pid dans la vue pg_stat_activity&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Étonnamment, depuis que les requêtes parallèles ont été ajoutées dans&#xA;PostgreSQL 9.6, il était impossible de savoir à quel processus client était lié&#xA;un worker parallèle.  Ainsi, comme &lt;a href=&#34;https://twitter.com/g_lelarge/status/1209486212190343168&#34;&gt;Guillaume l’a fait&#xA;remarquer&lt;/a&gt;, it makes&#xA;il est assez difficile de construire des outils simples permettant&#xA;d’échantillonner les événements d’attente liés à tous les processus impliqués&#xA;dans une requête.  Une solution simple à ce problème est d’exporter&#xA;l’information de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;lock group leader&lt;/code&gt; disponible dans le processus client au&#xA;niveau SQL :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-plaintext highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;commit b025f32e0b5d7668daec9bfa957edf3599f4baa8&#xA;Author: Michael Paquier &amp;lt;michael@paquier.xyz&amp;gt;&#xA;Date:   Thu Feb 6 09:18:06 2020 +0900&#xA;&#xA;Add leader_pid to pg_stat_activity&#xA;&#xA;This new field tracks the PID of the group leader used with parallel&#xA;query.  For parallel workers and the leader, the value is set to the&#xA;PID of the group leader.  So, for the group leader, the value is the&#xA;same as its own PID.  Note that this reflects what PGPROC stores in&#xA;shared memory, so as leader_pid is NULL if a backend has never been&#xA;involved in parallel query.  If the backend is using parallel query or&#xA;has used it at least once, the value is set until the backend exits.&#xA;&#xA;Author: Julien Rouhaud&#xA;Reviewed-by: Sergei Kornilov, Guillaume Lelarge, Michael Paquier, Tomas&#xA;Vondra&#xA;Discussion: https://postgr.es/m/CAOBaU_Yy5bt0vTPZ2_LUM6cUcGeqmYNoJ8-Rgto+c2+w3defYA@mail.gmail.com&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Avec cette modification, il est maintenant très simple de trouver tous les&#xA;processus impliqués dans une requête parallèle.  Par exemple :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;leader_pid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;  &lt;span class=&#34;n&#34;&gt;array_agg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;leader_pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;members&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_stat_activity&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;leader_pid&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IS&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NULL&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;BY&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;leader_pid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;       &lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;leader_pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;members&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;-------------------+------------+---------------&lt;/span&gt;&#xA; &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;      &lt;span class=&#34;mi&#34;&gt;31630&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32269&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32268&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Attention toutefois, comme indiqué dans le message de commit, si la colonne&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;leader_pid&lt;/code&gt; à la même valeur que la colonne &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pid&lt;/code&gt;, cela ne veut pas forcément&#xA;dire que le processus client est actuellement en train d’effectuer une requête&#xA;parallèle, car une fois que le champ est positionné il n’est jamais&#xA;réinitialisé.  De plus, pour éviter tout surcoût, aucun verrou supplémentaire&#xA;n’est maintenu lors de l’affichage de ces données.  Cela veut dire que chaque&#xA;ligne est traitée indépendamment.  Ainsi, bien que cela soit fort peu probable,&#xA;vous pouvez obtenir des données incohérentes dans certaines circonstances,&#xA;comme par exemple un worker paralèlle pointant vers un pid qui est déjà&#xA;déconnecté.&lt;/p&gt;&#xA;&#xA;    &lt;p&gt;&lt;a href=&#34;https://rjuju.github.io/postgresqlfr/2020/03/08/nouveau-dans-pg13-leader_pid.html&#34;&gt;Nouveau dans pg13: Colonne leader_pid dans pg_stat_activity&lt;/a&gt; was originally published by Julien Rouhaud at &lt;a href=&#34;https://rjuju.github.io&#34;&gt;rjuju&#39;s home&lt;/a&gt; on March 08, 2020.&lt;/p&gt;</content>
    <link href="https://rjuju.github.io/postgresqlfr/2020/03/08/nouveau-dans-pg13-leader_pid.html" rel="alternate"></link>
    <summary type="html"></summary>
    <author>
      <name>Julien Rouhaud</name>
    </author>
  </entry>
  <entry>
    <title>pg qualstats 2: Suggestion d&#39;index globale</title>
    <updated>2020-01-06T12:23:29Z</updated>
    <id>tag:rjuju.github.io,2020-01-06:/postgresqlfr/2020/01/06/pg_qualstats-2-suggestion-index-globale.html</id>
    <content type="html">&lt;p&gt;Parvenir à une suggestion d’index de qualité peut être une tâche complexe.&#xA;Cela nécessite à la fois une connaissance des requêtes applicatives et des&#xA;spécificités de la base de données.  Avec le temps de nombreux projets ont&#xA;essayé de résoudre ce problème, l’un d’entre eux étant &lt;a href=&#34;https://powa.readthedocs.io/&#34;&gt;PoWA version&#xA;3&lt;/a&gt;, avec l’aide de &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/stats_extensions/pg_qualstats.html&#34;&gt;pg_qualstats&#xA;extension&lt;/a&gt;.&#xA;Cet outil donne de plutôt bonnes suggestions d’index, mais il est nécessaire&#xA;d’installer et configurer PoWA, alors que certains utilisateurs aimeraient&#xA;n’avoir que la suggestion d’index globale.  Pour répondre à ce besoin de&#xA;simplicité, l’algorithme utilisé dans PoWA est maintenant disponible dans&#xA;pg_qualstats version 2, sans avoir besoin d’utiliser des composants&#xA;additionnels.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;EDIT: La fonction &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_qualstats_index\_advisor()&lt;/code&gt; a été changée pour retourner&#xA;du &lt;strong&gt;json&lt;/strong&gt; plutôt que du &lt;strong&gt;jsonb&lt;/strong&gt;, afin de conserver la compatibilité avec PostgreSQL&#xA;9.3.  Les requêtes d’exemples sont donc également modifiées pour utiliser&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;json_array_elements()&lt;/code&gt; plutôt que &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;jsonb_array_elements()&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;quest-ce-que-pg_qualstats&#34;&gt;Qu’est-ce que pg_qualstats&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Une manière simple d’expliquer ce qu’est pg_qualstats serait de dire qu’il&#xA;s’agit d’une extension similaire à&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/current/pgstatstatements.html&#34;&gt;pg_stat_statements&lt;/a&gt;&#xA;mais travaillant au niveaux des prédicats.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Cette extension sauvegarde des statistiques utiles pour les clauses &lt;strong&gt;WHERE&lt;/strong&gt;&#xA;et &lt;strong&gt;JOIN&lt;/strong&gt; : à quelle table et quelle colonne un prédicat fait référénce, le&#xA;nombre de fois qu’un prédicat a été utilisé, le nombre d’exécutions de&#xA;l’opérateur sous-jacent, si le prédicat provient d’un parcours d’index ou non,&#xA;la sélectivité, la valeur des constantes et bien plus encore.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Il est possible de déduire beaucoup de choses depuis ces informations.  Par&#xA;exemple, si vous examinez les prédicats qui contiennent des références à des&#xA;tables différentes, vous pouvez trouver quelles tables sont jointes ensembles,&#xA;et à quel point les conditions de jointures sont sélectives.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;suggestion-globale-&#34;&gt;Suggestion Globale ?&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Comment je l’ai mentionné, la suggestion d’index globale ajoutée dans&#xA;pg_qualstats 2 utilise la même approche que celle de PoWA, ainsi cet article&#xA;peut servir à décrire le fonctionnement des deux outils.  La seule différence&#xA;est que vous obtiendrez probablement une suggestion de meilleure qualité avec&#xA;PoWA, puisque plus de prédicats seront disponibles, et que vous pourrez&#xA;également choisir sur quel intervalle de temps vous souhaitez effectuer une&#xA;suggestion d’index manquants.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La chose importante à retenir ici est qu’il s’agit d’une suggestion effectuée&#xA;de manière &lt;strong&gt;globale&lt;/strong&gt;, c’est-à-dire en prenant en compte tous les prédicats&#xA;intéressant en même temps.  Cette approche est différente de toutes les autres&#xA;dont j’ai connaissance, qui ne prennent en compte qu’une seule requête à la&#xA;fois.  Selon moi, une approche globale est meilleure, car il est possible de&#xA;réduire le nombre total d’index, en maximisant l’efficacité des index&#xA;multi-colonnes.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;comment-marche-la-suggestion-globale&#34;&gt;Comment marche la suggestion globale&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;La première étape consiste à récupérer tous les prédicats qui pourraient&#xA;bénéficier de nouveaux index.  C’est particulièrement facile à obtenir avec&#xA;pg_qualstats.  En filtrant les prédicats venant d’un parcours séquentiel,&#xA;exécutés de nombreuses fois et qui filtrent de nombreuses lignes (à la fois en&#xA;nombre et en pourcentage), vous obtenez une liste parfaite de prédicats qui&#xA;auraient très probablement besoin d’un index (ou alors dans certains cas une&#xA;liste des requêtes mal écrites).  Voyons regardons par exemple le cas d’une&#xA;applications qui utiliserait ces 4 prédicats:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/global_advisor_1_quals.png&#34;&gt;&lt;img src=&#34;/images/global_advisor_1_quals.png&#34; alt=&#34;Liste de tous les prédicats&#xA;trouvés&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Ensuite, il faut construire l’ensemble entier des chemins de toutes les&#xA;prédicats joints par un AND logique, qui contiennent d’autres prédicats, qui&#xA;peuvent être eux-meme également joints par des AND logiques.  En utilisants les&#xA;même 4 prédicats vus précédemments, nous obtenons ces chemins :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/global_advisor_2_graphs.png&#34;&gt;&lt;img src=&#34;/images/global_advisor_2_graphs.png&#34; alt=&#34;Construction de tous les chemins de prédicats&#xA;possibles&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Une fois tous les chemins construits, il suffit d’obtenir le meilleur chemin&#xA;pour trouver le meilleur index à suggérer.  Le classement de ces chemins est&#xA;pour le moment fait en donnant un poids à chaque nœud de chaque chemin qui&#xA;correspond au nombre de prédicats simple qu’il contient, et en additionnant le&#xA;poids pour chaque chemin.  C’est une approche très simple, et qui permet de&#xA;favoriser un nombre minimal d’index qui optimisent le plus de requêtes&#xA;possible.  Avec nos exemple, nous obtenons :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/global_advisor_3_weighted.png&#34;&gt;&lt;img src=&#34;/images/global_advisor_3_weighted.png&#34; alt=&#34;Ajout d&#39;un poids à tous les chemins et choix du score le plus&#xA;haut&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Bien évidemment, d’autres approches de classement pourraient être utilisée pour&#xA;prendre en compte d’autres paramètres, et potentiellement obtenir une meilleur&#xA;suggestion.  Par exemple, en prenant en compte également le nombre d’exécution&#xA;ou la sélectivité des prédicats.  Si le ratio de lecture/écriture pour chaque&#xA;table est connu (ce qui est disponible avec l’extension&#xA;&lt;a href=&#34;https://github.com/powa-team/powa-archivist&#34;&gt;powa-archivist&lt;/a&gt;), il serait&#xA;également possible d’adapter le classement pour limiter la suggestion d’index&#xA;pour les tables qui ne sont accédées presque exclusivement en écriture.  Avec&#xA;cet algorithme, ces ajustements seraient relativement simples à faire.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Une fois que le meilleur chemin est trouvé, on peut générer l’ordre de création&#xA;de l’index !  Comme l’ordre des colonnes peut être important, l’ordre est&#xA;généré en récupérant les colonnes de chaque nœud par poids croissant.  Avec&#xA;notre exemple, l’index suivant est généré :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INDEX&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;ON&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Une fois que l’index est trouvé, on supprime simplement les prédicats contenus&#xA;de la liste globale de prédicats et on reprendre de zéro jusqu’à ce qu’il n’y&#xA;ait plus de prédicats.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;un-peu-plus-de-détails-et-mise-en-garde&#34;&gt;Un peu plus de détails et mise en garde&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Bien évidemment, il s’agit ici d’une version simplifiée de l’algorithme de&#xA;suggestion, car d’autres informations sont nécessaires.  Par exemple, la liste&#xA;des prédicats est en réalité ajustée avec les &lt;a href=&#34;https://www.postgresql.org/docs/current/indexes-opclass.html&#34;&gt;classes d’opérateurs et méthode&#xA;d’acces&lt;/a&gt; en&#xA;fonction du type de la colonne et de sont opérateur, afin de s’assurer&#xA;d’obtenir des index valides.  Si plusieurs méthodes d’accès aux index sont&#xA;trouvées pour un même meilleur chemin, &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;btree&lt;/code&gt; sera choisi en priorité.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Cela nous amène à un autre détail : cette approche est principalement pensée&#xA;pour les index &lt;strong&gt;btree&lt;/strong&gt;, pour lesqules l’ordre des colonnes est critiques.&#xA;D’autres méthodes d’accès ne requièrent pas un ordre spécifique pour les&#xA;colonnes, et pour ces méthodes d’accès il est possible qu’une suggestion plus&#xA;optimale soit possible si l’ordre des colonnes n’était pas pris en compte.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Un autre point important est que les classes d’opérateurs et méthodes d’accès&#xA;ne sont pas gérés en dur mais récupérés à l’exécution en utilisant les&#xA;catalogues locaux.  Par conséquent, vous pouvez obtenir des résultats&#xA;différents (et potentiellement meilleurs) si vous faites en sorte d’avoir&#xA;toutes les classes d’opérateur additionelles disponibles quand vous utilisez la&#xA;suggestion d’index globale.  Cela pourrait être les extensions &lt;strong&gt;btree_gist&lt;/strong&gt;&#xA;et &lt;strong&gt;btree_gist&lt;/strong&gt;, mais également d’autres méthodes d’accès aux index.  Il est&#xA;également possible que certain types / opérateurs n’aient pas de méthode&#xA;d’accès associée dans les catalogues.  Dans ce cas, ces prédicats sont&#xA;retournées séparément dans une liste de prédicats non optimisables&#xA;automatiquement, et pour lequel une analyse manuelle est nécessaire.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Enfin, comme pg_qualstats ne traite pas les prédicats composés d’expressions,&#xA;l’outil ne peut pas suggérer d’index sur des expressions, par exemple en cas&#xA;d’utilisateur de recherche plein texte.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;exemple-dutilisation&#34;&gt;Exemple d’utilisation&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Une simple fonction est fournie, avec des paramètres facultatifs, qui retourne&#xA;une valeur de type json :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;REPLACE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FUNCTION&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_qualstats_index_advisor&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;min_filter&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;DEFAULT&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;min_selectivity&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;DEFAULT&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;forbidden_am&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;DEFAULT&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;{}&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;RETURNS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Les noms de paramètres sont parlants :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;min_filter&lt;/code&gt;: combien de lignes le prédicat doit-il filtrer en moyenne pour&#xA;être pris en compte par la suggestion globale, par défaut &lt;strong&gt;1000&lt;/strong&gt; ;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;min_selectivity&lt;/code&gt;: quelle doit être la sélectivité moyenne d’un prédicat&#xA;pour qu’il soit pris en compte par la suggestion globale, par défaut&#xA;&lt;strong&gt;30%&lt;/strong&gt; ;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;forbidden_am&lt;/code&gt;: liste des méthodes d’accès aux index à ignorer.  Aucune par&#xA;défaut, bien que pour les version 9.6 et inférieures &lt;strong&gt;les index hash sont&#xA;ignoré en interne&lt;/strong&gt;, puisque ceux-ci ne sont sur que depuis la version 10.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Voici un exemple simple, tirés des tests de non régression de pg_qualstats :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pgqs&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;a&#39;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;generate_series&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id1&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id2&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id3&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;line &#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;generate_series&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_qualstats_reset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;meh&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;meh&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;meh&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;meh&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;meh&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;ILIKE&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;moh&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;COUNT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pgqs&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Et voici ce que la fonction retourne :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&#xA;  &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;json_array_elements&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;pg_qualstats_index_advisor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min_filter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;indexes&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&#xA;  &lt;span class=&#34;k&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;BY&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;COLLATE&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;C&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;                               &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;---------------------------------------------------------------&lt;/span&gt;&#xA; &lt;span class=&#34;nv&#34;&gt;&#34;CREATE INDEX ON public.adv USING btree (id1)&#34;&lt;/span&gt;&#xA; &lt;span class=&#34;nv&#34;&gt;&#34;CREATE INDEX ON public.adv USING btree (val, id1, id2, id3)&#34;&lt;/span&gt;&#xA; &lt;span class=&#34;nv&#34;&gt;&#34;CREATE INDEX ON public.pgqs USING btree (id)&#34;&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&#xA;  &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;json_array_elements&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;pg_qualstats_index_advisor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min_filter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;unoptimised&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&#xA;  &lt;span class=&#34;k&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;BY&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;COLLATE&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;C&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;        &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;-----------------&lt;/span&gt;&#xA; &lt;span class=&#34;nv&#34;&gt;&#34;adv.val ~~* ?&#34;&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;La &lt;a href=&#34;https://github.com/powa-team/pg_qualstats/&#34;&gt;version 2 de pg_qualstats&lt;/a&gt;&#xA;n’est pas encore disponible en version stable, mais n’hésitez pas à la tester&#xA;et &lt;a href=&#34;https://github.com/powa-team/pg_qualstats/issues&#34;&gt;rapporter tout problème que vous pourriez&#xA;rencontrer&lt;/a&gt; !&lt;/p&gt;&#xA;&#xA;    &lt;p&gt;&lt;a href=&#34;https://rjuju.github.io/postgresqlfr/2020/01/06/pg_qualstats-2-suggestion-index-globale.html&#34;&gt;pg qualstats 2: Suggestion d&#39;index globale&lt;/a&gt; was originally published by Julien Rouhaud at &lt;a href=&#34;https://rjuju.github.io&#34;&gt;rjuju&#39;s home&lt;/a&gt; on January 06, 2020.&lt;/p&gt;</content>
    <link href="https://rjuju.github.io/postgresqlfr/2020/01/06/pg_qualstats-2-suggestion-index-globale.html" rel="alternate"></link>
    <summary type="html"></summary>
    <author>
      <name>Julien Rouhaud</name>
    </author>
  </entry>
  <entry>
    <title>PoWA 4: Nouveau daemon powa-collector</title>
    <updated>2019-12-10T18:54:17Z</updated>
    <id>tag:rjuju.github.io,2019-12-10:/postgresqlfr/2019/12/10/powa-4-nouveau-powa-collector.html</id>
    <content type="html">&lt;p&gt;Cet article fait partie d’une série d’article sur &lt;a href=&#34;http://powa.readthedocs.io/&#34;&gt;la beta de PoWA&#xA;4&lt;/a&gt;, et décrit le nouveau &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/index.html&#34;&gt;daemon&#xA;powa-collector&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;nouveau-daemon-powa-collector&#34;&gt;Nouveau &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/index.html&#34;&gt;daemon powa-collector&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Ce daemon remplace le précédent &lt;em&gt;background worker&lt;/em&gt; lorsque le nouveau &lt;a href=&#34;https://powa.readthedocs.io/en/latest/remote_setup.html&#34;&gt;mode&#xA;remote&lt;/a&gt; est utilisé.&#xA;Il s’agit d’un simple daemon écrit en python, qui s’occupera de toutes les&#xA;étapes nécessaires pour effectuer des &lt;em&gt;snapshots distants&lt;/em&gt;.  Il est &lt;a href=&#34;https://pypi.org/project/powa-collector/&#34;&gt;disponible&#xA;sur pypi&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Comme je l’ai expliqué dans mon &lt;a href=&#34;/postgresql/2019/05/17/powa-4-with-remote-mode-beta-is-available.html&#34;&gt;précédent article introduistant PoWA 4&lt;/a&gt;, ce&#xA;daemon est nécessaire  pour la configuration d’un mode remote, en gardant cette&#xA;architecture à l’esprit :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/powa_4_remote.svg&#34;&gt;&lt;img src=&#34;/images/powa_4_remote.svg&#34; alt=&#34;Architecture de PoWA 4 en mode distant&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Sa configuration est très simple.  Il vous suffit tout simplement de renommer&#xA;le fichier &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa-collector.conf.sample&lt;/code&gt; fourni, et d’adapter &lt;a href=&#34;https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING&#34;&gt;l’URI de&#xA;connexion&lt;/a&gt;&#xA;pour décrire comment se connecter sur votre &lt;em&gt;serveur repository&lt;/em&gt; dédié, et&#xA;c’est fini.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Une configuration typique devrait ressembler à :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-conf&#34; data-lang=&#34;conf&#34;&gt;{&#xA;    &lt;span class=&#34;s2&#34;&gt;&#34;repository&#34;&lt;/span&gt;: {&#xA;        &lt;span class=&#34;s2&#34;&gt;&#34;dsn&#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&#34;postgresql://powa_user@server_dns:5432/powa&#34;&lt;/span&gt;,&#xA;    },&#xA;    &lt;span class=&#34;s2&#34;&gt;&#34;debug&#34;&lt;/span&gt;: &lt;span class=&#34;n&#34;&gt;true&lt;/span&gt;&#xA;}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;La liste des &lt;em&gt;serveur distants&lt;/em&gt;, leur configuration ainsi que tout le reste qui&#xA;est nécessaire pour le bon fonctionnement sera automatiquement récupéré depuis&#xA;le &lt;em&gt;serveur repository&lt;/em&gt; que vous ave déjà configuré.  Une fois démarré, il&#xA;démarrera un thread dédié par &lt;em&gt;serveur distant&lt;/em&gt; déclaré, et maintiendra une&#xA;&lt;strong&gt;connexion persistente&lt;/strong&gt; sur ce &lt;em&gt;serveur distant&lt;/em&gt;.  Chaque thread effectuera&#xA;un &lt;em&gt;snapshot distant&lt;/em&gt;, exportant les données sur le &lt;em&gt;serveur repository&lt;/em&gt; en&#xA;utilisant les nouvelles &lt;em&gt;fonctions sources&lt;/em&gt;.  Chaque thread ouvrira et fermera&#xA;une connexion sur le &lt;em&gt;serveur repository&lt;/em&gt; lors de l’exécution du &lt;em&gt;snapshot&#xA;distant&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Bien évidemment, ce daemon a besoin de pouvoir se connecter sur tous les&#xA;&lt;em&gt;serveurs distants&lt;/em&gt; déclarés ainsi que le &lt;em&gt;serveur repository&lt;/em&gt;.  La table&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_servers&lt;/code&gt;, qui stocke la liste des &lt;em&gt;serveurs distants&lt;/em&gt;, a un champ pour&#xA;stocker les nom d’utilisateur et mot de passe pour se connecter aux &lt;em&gt;serveur&#xA;distants&lt;/em&gt;.  Stocker un mot de passe en clair dans cette table est une hérésie,&#xA;si l’on considère l’aspect sécurité.  Ainsi, comme indiqué dans la&#xA;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/security.html#connection-on-remote-servers&#34;&gt;section sécurité de&#xA;PoWA&lt;/a&gt;,&#xA;vous pouve stocker un mot de passe NULL et &lt;a href=&#34;https://www.postgresql.org/docs/current/auth-methods.html&#34;&gt;utiliser à la place n’importe&#xA;laquelle des autres méthodes d’authentification supportées par la&#xA;libpq&lt;/a&gt; (fichier&#xA;.pgpass, certificat…).  C’est très fortement recommandé pour toute&#xA;installation sérieuse.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La connexion persistente sur le &lt;em&gt;serveur repository&lt;/em&gt; est utilisée pour&#xA;superviser la daemon :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;pour vérifier  que le daemon est bien démarré&lt;/li&gt;&#xA;  &lt;li&gt;pour communiquer au travers de l’UI en utilisant un &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/protocol.html&#34;&gt;protocole simple&lt;/a&gt;&#xA;afin d’effectuer des actions diverses (recharger la configuration, vérifier&#xA;le status d’un thread dédié à un &lt;em&gt;serveur distant&lt;/em&gt;…)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Il est à noter que vous pouvez également demander au daemon de recharger sa&#xA;configuration en envoyant un SIGHUP au processus du daemon.  Un rechargement&#xA;est nécessaire pour toute modification effectuée sur la liste des serveurs&#xA;distants (ajout ou suppression d’un &lt;em&gt;serveur distant&lt;/em&gt;, ou mise à jour d’un&#xA;existant).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Veuillez également noter que, par choix,&#xA;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/index.html&#34;&gt;powa-collector&lt;/a&gt;&#xA;n’effectuera pas de &lt;em&gt;snapshot local&lt;/em&gt;.  Si vous voulez utiliser PoWA pour le&#xA;&lt;em&gt;serveur repository&lt;/em&gt;, il vous faudra activer le &lt;em&gt;background worker&lt;/em&gt; original.&lt;/p&gt;&#xA;&#xA;&lt;h5 id=&#34;nouvelle-page-de-configuration&#34;&gt;Nouvelle page de configuration&lt;/h5&gt;&#xA;&#xA;&lt;p&gt;La page de configuration est maintenant modifiée pour donner toutes les&#xA;informations nécessaires sur le status du background worker, le &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/index.html&#34;&gt;powa-collector&#xA;daemon&lt;/a&gt;&#xA;(incluant tous ses threads dédiés) ainsi que la liste des &lt;em&gt;serveurs distants&lt;/em&gt;&#xA;déclarés.  Voici un exemple de cette nouvelle page racine de configuration :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/powa_4_configuration_page.png&#34;&gt;&lt;img src=&#34;/images/powa_4_configuration_page.png&#34; alt=&#34;Nouvelle page de&#xA;configuration&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Si le &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/index.html&#34;&gt;daemon&#xA;powa-collector&lt;/a&gt;&#xA;est utilisé, le status de chaque serveur distant sera récupéré en utilisant le&#xA;protocole de communication.  Si le collecteur rencontre des erreurs (lors de la&#xA;connexion à un &lt;em&gt;serveur distant&lt;/em&gt;, durant un &lt;em&gt;snapshot&lt;/em&gt; par exemple), celles-ci&#xA;seront également affichées ici.  À noter également que ces erreurs seront&#xA;également affichées en haut de chaque page de toutes les pages de l’UI, afin&#xA;d’être sûr de ne pas les rater.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;De plus, la section configuration a maintenant une hiérarchie, et vous pourrez&#xA;voir la liste des extensions ainsi que la configuration actuelle de PostgreSQL&#xA;pour le serveur &lt;strong&gt;local&lt;/strong&gt; ou &lt;strong&gt;distant&lt;/strong&gt; en cliquant sur le serveur de votre&#xA;choix!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Il y a également un nouveau bouton &lt;strong&gt;Reload collector&lt;/strong&gt; sur le bandeau&#xA;d’en-tête qui, comme on pourrait s’y attendre, demandera au collecteur de&#xA;recharger sa configuration.  Cela peut être utile si vous avez déclarés de&#xA;nouveaux serveurs mais n’ave pas d’accès au serveur sur lequel le collecteur&#xA;s’exécute.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Cette article est le dernier de la séurie concernant la nouvelle version de&#xA;PoWA.  Il est toujours en beta, n’hésitez donc pas à le tester, &lt;a href=&#34;https://powa.readthedocs.io/en/latest/support.html#support&#34;&gt;rapporter&#xA;tout bug rencontré&lt;/a&gt;&#xA;ou donner tout autre retour!&lt;/p&gt;&#xA;&#xA;    &lt;p&gt;&lt;a href=&#34;https://rjuju.github.io/postgresqlfr/2019/12/10/powa-4-nouveau-powa-collector.html&#34;&gt;PoWA 4: Nouveau daemon powa-collector&lt;/a&gt; was originally published by Julien Rouhaud at &lt;a href=&#34;https://rjuju.github.io&#34;&gt;rjuju&#39;s home&lt;/a&gt; on December 10, 2019.&lt;/p&gt;</content>
    <link href="https://rjuju.github.io/postgresqlfr/2019/12/10/powa-4-nouveau-powa-collector.html" rel="alternate"></link>
    <summary type="html"></summary>
    <author>
      <name>Julien Rouhaud</name>
    </author>
  </entry>
  <entry>
    <title>PoWA 4: nouveautés dans powa-archivist !</title>
    <updated>2019-06-05T14:26:17Z</updated>
    <id>tag:rjuju.github.io,2019-06-05:/postgresqlfr/2019/06/05/powa-4-nouveaute-dans-powa-archivist.html</id>
    <content type="html">&lt;p&gt;Cet article fait partie d’une série d’article sur &lt;a href=&#34;http://powa.readthedocs.io/&#34;&gt;la beta de PoWA&#xA;4&lt;/a&gt;, et décrit les changements présents dans&#xA;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-archivist/index.html&#34;&gt;powa-archivist&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Pour plus d’information sur cette version 4, vous pouvez consulter &lt;a href=&#34;/postgresqlfr/2019/05/17/powa-4-avec-mode-remote-disponible-en-beta.html&#34;&gt;l’article&#xA;de présentation général&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;aperçu-rapide&#34;&gt;Aperçu rapide&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Tout d’abord, il faut savoir qu’il n’y a pas d’upgrade possible depuis la v3&#xA;vers la v4, il est donc nécessaire d’effectuer un &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;DROP EXTENSION powa&lt;/code&gt; si vous&#xA;utilisiez déjà PoWA sur vos serveurs.  Cela est du au fait que la v4 apporte&#xA;&lt;strong&gt;de très nombreux&lt;/strong&gt; changements dans la partie SQL de l’extension, ce qui en&#xA;fait le changement le plus significatif dans la suite PoWA pour cette nouvelle&#xA;version.  Au moment où j’écris cet article, la quantité de changements apportés&#xA;dans cette extension est :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt; CHANGELOG.md       |   14 +&#xA; powa--4.0.0dev.sql | 2075 +++++++++++++++++++++-------&#xA; powa.c             |   44 +-&#xA; 3 files changed, 1629 insertions(+), 504 deletions(-)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;L’absence d’upgrade ne devrait pas être un problème en pratique.  PoWA est un&#xA;outil pour analyser les performances, il est fait pour avoir des données avec&#xA;une grande précision mais un historique très limité.  Si vous cherchez une&#xA;solution de supervision généraliste pour conserver des mois de données, PoWA&#xA;n’est définitivement pas l’outil qu’il vous faut.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;configurer-la-liste-des-serveurs-distants&#34;&gt;Configurer la liste des &lt;em&gt;serveurs distants&lt;/em&gt;&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;En ce qui concerne les changements à proprement parler, le premier petit&#xA;changement est que le &lt;a href=&#34;https://www.postgresql.org/docs/current/bgworker.html&#34;&gt;background&#xA;worker&lt;/a&gt; n’est plus&#xA;nécessaire pour le fonctionnement de powa-archivist, car il n’est pas utilisé&#xA;pour le mode distant.  Cela signifie qu’un redémarrage de PostgreSQL n’est plus&#xA;nécessaire pour installer PoWA.  Bien évidemment, un redémarrage est toujours&#xA;nécessaire si vous souhaitez utiliser le mode local, en utilisant le background&#xA;worker, or si vous voulez installer des extensions additionelles qui&#xA;nécessitent elles-même un redémarrage.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Ensuite, comme PoWA requiert un peu de configuration (fréquence des snapshot,&#xA;rétention des données et ainsi de suite), certaines nouvelles tables sont&#xA;ajouter pour permettre de configurer tout ça.  La nouvelle table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_servers&lt;/code&gt;&#xA;stocke la configuration de toutes les instances distantes dont les données&#xA;doivent être stockées sur cette instance.  Cette &lt;em&gt;instance PoWA locale&lt;/em&gt; est&#xA;appelée un &lt;strong&gt;serveur repository&lt;/strong&gt; (qui devrait typiquement être dédiée à&#xA;stocker des données PoWA), en opposition aux &lt;strong&gt;instances distantes&lt;/strong&gt; qui sont&#xA;les instances que vous voulez monitorer.  Le contenu de cette table est tout ce&#xA;qu’il y a de plus simple :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;powa_servers&lt;/span&gt;&#xA;                              &lt;span class=&#34;k&#34;&gt;Table&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;public.powa_servers&#34;&lt;/span&gt;&#xA;  &lt;span class=&#34;k&#34;&gt;Column&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;k&#34;&gt;Type&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Collation&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;                 &lt;span class=&#34;k&#34;&gt;Default&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;-----------+----------+-----------+----------+------------------------------------------&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;            &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nextval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;powa_servers_id_seq&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;regclass&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;hostname&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;k&#34;&gt;alias&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;username&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;password&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;dbname&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;frequency&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;300&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;powa_coalesce&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;retention&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;interval&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;1 day&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;interval&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Si vous avez déjà utilisé PoWA, vous devriez reconnaître la plupart des options&#xA;de configuration qui sont maintenant stockées ici.  Les nouvelles options sont&#xA;utilisées pour décrire comment se connecter aux &lt;em&gt;instances distances&lt;/em&gt;, et&#xA;peuvent fournir un alias à afficher sur l’UI.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Vous avez également probablement remarqué une colonne &lt;strong&gt;password&lt;/strong&gt;.  Stocker un&#xA;mot de passe en clair dans cette table est une hérésie pour n’importe qui&#xA;désirant un minimum de sécurité.  Ainsi, comme mentionné dans la &lt;a href=&#34;https://powa.readthedocs.io/en/latest/security.html#connection-on-remote-servers&#34;&gt;section&#xA;sécurité de la documentation de PoWA&#xA;&lt;/a&gt;,&#xA;vous pouvez stocker NULL pour le champ password et à la place utiliser&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/current/auth-methods.html&#34;&gt;n’importe laquelle des autres méthodes d’authentification supportée par la&#xA;libpq&lt;/a&gt;&#xA;(fichier .pgpass, certificat…).  Une authentification plus sécurisée est&#xA;chaudement recommandée pour toute installation sérieuse.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Une autre table, la table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_snapshot_metas&lt;/code&gt;, est également ajoutée pour&#xA;stocker quelques métadonnées concernant les informations de snapshot pour&#xA;chaque &lt;em&gt;serveur distant&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;                                   &lt;span class=&#34;k&#34;&gt;Table&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;public.powa_snapshot_metas&#34;&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;Column&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;k&#34;&gt;Type&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Collation&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;                &lt;span class=&#34;k&#34;&gt;Default&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;--------------+--------------------------+-----------+----------+---------------------------------------&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;srvid&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;                  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;coalesce_seq&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bigint&lt;/span&gt;                   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;snapts&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;zone&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;-infinity&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;zone&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;aggts&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;zone&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;-infinity&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;zone&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;purgets&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;zone&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;-infinity&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;zone&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;errors&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Il s’agit tout simplement d’un compteur pour compter le nombre de snapshots&#xA;effectués, un timestamp pour chaque type d’événement survenu (snapshot,&#xA;aggrégation et purge) et un tableau de chaîne de caractères pour stocker toute&#xA;erreur survenant durant le snapshot, afin que l’UI pour l’afficher.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;api-sql-pour-configurer-les-serveurs-distants&#34;&gt;API SQL pour configurer les &lt;em&gt;serveurs distants&lt;/em&gt;&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Bien que ces tables soient très simples, une &lt;a href=&#34;https://powa.readthedocs.io/en/latest/remote_setup.html#configure-powa-and-stats-extensions-on-each-remote-server&#34;&gt;API SQL basique est disponible&#xA;pour déclarer de nouveaux serveurs et les&#xA;configurer&lt;/a&gt;.&#xA;6 fonctions de bases sont disponibles :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_register_server()&lt;/code&gt;, pour déclarer un nouveau &lt;em&gt;servuer distant&lt;/em&gt;, ainsi&#xA;que la liste des extensions qui y sont disponibles&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_configure_server()&lt;/code&gt; pour mettre à jour un des paramètres pour le&#xA;&lt;em&gt;serveur distant&lt;/em&gt; spécifié (en utilisant un paramètre JSON, où la clé est&#xA;le nom du paramètre à changer et la valeur la nouvelle valeur à utiliser)&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_deactivate_server()&lt;/code&gt; pour désactiver les snapshots pour le &lt;em&gt;serveur&#xA;distant&lt;/em&gt; spécifiqué (ce qui concrètement positionnera le paramètre&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;frequency&lt;/code&gt; à &lt;strong&gt;-1&lt;/strong&gt;)&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_delete_and_purge_server()&lt;/code&gt; pour supprimer le &lt;em&gt;serveur distant&lt;/em&gt;&#xA;spécifié de la liste des serveurs et supprimer toutes les données associées&#xA;aux snapshots&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_activate_extension()&lt;/code&gt;, pour déclarer qu’une nouvelle extension est&#xA;disponible sur le &lt;em&gt;serveur distant&lt;/em&gt; spécifié&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_deactivate_extension()&lt;/code&gt;, pour spécifier qu’une extension n’est plus&#xA;disponible sur le &lt;em&gt;serveur distant&lt;/em&gt; spécifié&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Toute action plus compliquée que ça devra être effectuée en utilisant des&#xA;requêtes SQL.  Heureusement, il ne devrait pas y avoir beaucoup d’autres&#xA;besoins, et les tables sont vraiment très simple donc cela ne devrait pas poser&#xA;de soucis.  &lt;a href=&#34;https://github.com/powa-team/powa-archivist/issues&#34;&gt;N’hésitez cependant pas à demander de nouvelles&#xA;fonctions&lt;/a&gt; si vous aviez&#xA;d’autres besoins.  Veuillez également noter que l’UI ne vous permet pas&#xA;d’appeler ces fonctions, puisque celle-ci est pour le moment &lt;strong&gt;entièrement en&#xA;lecture seule&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;effectuer-des-snapshots-distants&#34;&gt;Effectuer des &lt;em&gt;snapshots distants&lt;/em&gt;&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Puisque les métriques sont maintenant stockées sur une instance PostgreSQL&#xA;différente, nous avons énormément changé la façon dont les &lt;em&gt;snapshots&lt;/em&gt;&#xA;(récupérer les données fournies par une &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/stats_extensions/index.html&#34;&gt;extensions&#xA;statistique&lt;/a&gt;&#xA;et les stockées dans le catalogue PoWA &lt;a href=&#34;/postgresqlfr/2019/04/06/minimiser-le-surcout-de-stockage-par-ligne.html&#34;&gt;de manière à optimiser le stockage&lt;/a&gt;) sont&#xA;effectués.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La liste de toutes les extensions statistiques, ou &lt;em&gt;sources de données&lt;/em&gt;, qui&#xA;sont disponibles sur un &lt;strong&gt;serveur&lt;/strong&gt; (soit &lt;em&gt;distant&lt;/em&gt; soit &lt;em&gt;local&lt;/em&gt;) et pour&#xA;lesquelles un &lt;em&gt;snapshot&lt;/em&gt; devrait être effectué est stockée dans une table&#xA;appelée &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_functions&lt;/code&gt;:&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;               &lt;span class=&#34;k&#34;&gt;Table&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;public.powa_functions&#34;&lt;/span&gt;&#xA;     &lt;span class=&#34;k&#34;&gt;Column&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;Type&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Collation&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Default&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;----------------+---------+-----------+----------+---------&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;srvid&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;module&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;k&#34;&gt;operation&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;function_name&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;query_source&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;added_manually&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;enabled&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;priority&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;numeric&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Un nouveau champ &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;query_source&lt;/code&gt; a été rajouté.  Celui-ci fournit le nom de la&#xA;&lt;em&gt;fonction source&lt;/em&gt;, nécessaire pour la compatibilité d’une &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/stats_extensions/index.html&#34;&gt;extension&#xA;statistique&lt;/a&gt;&#xA;avec les snapshots distants.  Cette fonction est utilisée pour exporter les&#xA;compteurs fournis par cette extension sur un serveur différent, dans une &lt;em&gt;table&#xA;transitoire&lt;/em&gt; dédiée.  La fonction de &lt;em&gt;snapshot&lt;/em&gt; effectuera alors le &lt;em&gt;snapshot&lt;/em&gt;&#xA;en utilisant automatiquement ces données exportées plutôt que celles fournies&#xA;par l’extension statististique locale quand le mode distant est utilisé.  Il&#xA;est à noter que l’export de ces compteurs ainsi que le snapshot distant est&#xA;effectué automatiquement par le nouveau &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/index.html&#34;&gt;daemon&#xA;powa-collector&lt;/a&gt;&#xA;que je présenterai dans un autre article.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Voici un exemple montant comment PoWA effectue un &lt;em&gt;snapshot distant&lt;/em&gt; d’une&#xA;liste de base données.  Comme vous allez le voir, c’est très simple ce qui&#xA;signifie qu’il est également très simple d’ajouter cette même compatibilité&#xA;pour une nouvelle extension statistique.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La &lt;em&gt;table transitoire&lt;/em&gt;:&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;   &lt;span class=&#34;n&#34;&gt;Unlogged&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;public.powa_databases_src_tmp&#34;&lt;/span&gt;&#xA; &lt;span class=&#34;k&#34;&gt;Column&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;Type&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Collation&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Default&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;---------+---------+-----------+----------+---------&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;srvid&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;oid&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;oid&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;datname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Pour de meilleurs performances, toutes les &lt;em&gt;tables transitoires&lt;/em&gt; sont &lt;strong&gt;non&#xA;journalisées (unlogged)&lt;/strong&gt;, puisque leur contenu n’est nécessaire que durant un&#xA;&lt;em&gt;snapshot&lt;/em&gt; et sont supprimées juste après.  Dans cet examlple, la &lt;em&gt;table&#xA;transitoire&lt;/em&gt; ne stocke que l’identifiant du serveur distant correspondant à ces&#xA;données, l’oid ainsi que le nom de chacune des bases de données présentes sur&#xA;le &lt;em&gt;serveur distant&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Et la &lt;em&gt;fonction source&lt;/em&gt; :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;REPLACE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FUNCTION&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;powa_databases_src&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_srvid&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;OUT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;oid&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;oid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;OUT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datname&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA; &lt;span class=&#34;k&#34;&gt;RETURNS&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SETOF&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;record&lt;/span&gt;&#xA; &lt;span class=&#34;k&#34;&gt;LANGUAGE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;plpgsql&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;BEGIN&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;IF&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_srvid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;THEN&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;RETURN&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;QUERY&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;oid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datname&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_database&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;ELSE&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;RETURN&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;QUERY&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;oid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datname&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;powa_databases_src_tmp&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;srvid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_srvid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;IF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Cette fonction retourne simplement le contenu de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_database&lt;/code&gt; si les données&#xA;locales sont demandées (l’identifiant de serveur &lt;strong&gt;0&lt;/strong&gt; est toujours le serveur&#xA;local), ou alors le contenu de la &lt;em&gt;table transitoire&lt;/em&gt; pour le serveur distant&#xA;spécifié.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La &lt;em&gt;fonction de snapshot&lt;/em&gt; peut alors facilement effectuer n’importe quel&#xA;traitement avec ces données pour le &lt;em&gt;serveur distant&lt;/em&gt; voulu.  Dans le cas de la&#xA;fonction &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_databases_snapshot()&lt;/code&gt;, il s’agit simplement de synchroniser la&#xA;liste des bases de données, et de stocker le timestamp de suppression si une&#xA;base de données qui existait précédemment n’est plus listée.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Pour plus de détails, vous pouvez consulter la documentation concernant&#xA;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-archivist/development.html&#34;&gt;l’ajout d’une source de données dans&#xA;PoWA&lt;/a&gt;,&#xA;qui a été mise à jour pour les spécificités de la version 4.&lt;/p&gt;&#xA;&#xA;    &lt;p&gt;&lt;a href=&#34;https://rjuju.github.io/postgresqlfr/2019/06/05/powa-4-nouveaute-dans-powa-archivist.html&#34;&gt;PoWA 4: nouveautés dans powa-archivist !&lt;/a&gt; was originally published by Julien Rouhaud at &lt;a href=&#34;https://rjuju.github.io&#34;&gt;rjuju&#39;s home&lt;/a&gt; on June 05, 2019.&lt;/p&gt;</content>
    <link href="https://rjuju.github.io/postgresqlfr/2019/06/05/powa-4-nouveaute-dans-powa-archivist.html" rel="alternate"></link>
    <summary type="html"></summary>
    <author>
      <name>Julien Rouhaud</name>
    </author>
  </entry>
  <entry>
    <title>PoWA 4 apporte un mode remote, disponible en beta !</title>
    <updated>2019-05-17T11:04:17Z</updated>
    <id>tag:rjuju.github.io,2019-05-17:/postgresqlfr/2019/05/17/powa-4-avec-mode-remote-disponible-en-beta.html</id>
    <content type="html">&lt;p&gt;&lt;a href=&#34;http://powa.readthedocs.io/&#34;&gt;PoWA 4&lt;/a&gt; est disponible en beta.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;nouveau-mode-remote-&#34;&gt;Nouveau mode remote !&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Le &lt;a href=&#34;https://powa.readthedocs.io/en/latest/remote_setup.html&#34;&gt;nouveau mode remote&lt;/a&gt;&#xA;est la plus grosse fonctionnalité ajoutée dans PoWA 4, bien qu’il y ait eu&#xA;d’autres améliorations.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Je vais décrire ici ce que ce nouveau mode implique ainsi que ce qui a changé&#xA;sur l’&lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-web/index.html&#34;&gt;UI&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Si de plus amples détails sur le reste des changements apportés dans PoWA 4&#xA;vous intéresse, je publierai bientôt d’autres articles sur le sujet.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Pour les plus pressés, n’hésitez pas à aller directement sur la &lt;a href=&#34;https://dev-powa.anayrat.info/&#34;&gt;démo v4 de&#xA;PoWA&lt;/a&gt;, très gentiment hébergée par &lt;a href=&#34;http://blog.anayrat.info/&#34;&gt;Adrien&#xA;Nayrat&lt;/a&gt;.  Aucun authentification n’est requise,&#xA;cliquez simplement sur “Login”.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;pourquoi-un-mode-remote-est-il-important&#34;&gt;Pourquoi un mode remote est-il important&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Cette fonctionnalité a probablement été la plus fréquemment demandée depuis que&#xA;PoWA a été publié, en 2014.  Et c’est pour de bonnes raisons, car un mode local&#xA;a quelques inconvénients.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Tout d’abord, voyons comment se présentait l’architecture avec les versions 3&#xA;et antérieures.  Imaginons une instance contenant 2 bases de données (db1 et&#xA;db2), ainsi qu’&lt;strong&gt;une base de données dédiée à PoWA&lt;/strong&gt;.  Cette base de données&#xA;dédiée contient à la fois les &lt;em&gt;extensions statistiques&lt;/em&gt; nécessaires pour&#xA;récupérer compteurs de performances actuels ainsi que pour &lt;strong&gt;les stocker&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/powa_4_local.svg&#34;&gt;&lt;img src=&#34;/images/powa_4_local.svg&#34; alt=&#34;Architecture en mode local&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Un &lt;em&gt;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-archivist/configuration.html#background-worker-configuration&#34;&gt;background&#xA;worker&lt;/a&gt;&lt;/em&gt;&#xA;est démarré par PoWA, qui est responsable d’effectuer des &lt;em&gt;snapshots&lt;/em&gt; et de les&#xA;stocker dans la base powa dédiée à intervalle réguliers.  Ensuite, en utilisant&#xA;powa-web, vous pouvez consulter l’activité de n’importe laquelle des bases de&#xA;données &lt;strong&gt;locales&lt;/strong&gt; en effectuant des requêtes sur les données stockées dans la&#xA;base dédié, et potentiellement en se connectant sur l’une des autres bases de&#xA;données locales lorsque les données complètes sont nécessaires, par exemple&#xA;lorsque l’outil de suggestion d’index est utilisé.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Avec la version 4, l’architecture avec une configuration distante change de&#xA;manière significative:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/powa_4_remote.svg&#34;&gt;&lt;img src=&#34;/images/powa_4_remote.svg&#34; alt=&#34;Architecture en mode distant&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Vous pouvez voir qu’une base de donnée powa dédiée est toujours nécessaire,&#xA;mais &lt;strong&gt;uniquement pour les extensions statistiques&lt;/strong&gt;.  Les données sont&#xA;maintenant stockées sur une instance différente.  Ensuite, le &lt;em&gt;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-archivist/configuration.html#background-worker-configuration&#34;&gt;background&#xA;worker&lt;/a&gt;&lt;/em&gt;&#xA;est remplacé par un &lt;strong&gt;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/index.html&#34;&gt;nouveau daemon&#xA;collecteur&lt;/a&gt;&lt;/strong&gt;,&#xA;qui lit les métriques de performance depuis les &lt;em&gt;serveurs distants&lt;/em&gt;, et les&#xA;stocke sur le &lt;em&gt;serveur repository&lt;/em&gt; dédié.  Powa-web pourra présenter les&#xA;données en se connectant sur le &lt;em&gt;serveur repository&lt;/em&gt;, ainsi que sur les&#xA;&lt;strong&gt;serveurs distants&lt;/strong&gt; lorsque des données complètes sont nécessaires.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;En résumé, avec le nouveau mode distant ajouté dans cette version 4&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;un redémarrage de PostgreSQL n’est plus nécessaire pour installer&#xA;powa-archivist&lt;/li&gt;&#xA;  &lt;li&gt;il n’y a plus de surcoût du au fait de stocker et requêter les données sur&#xA;le même serveur PostgreSQL que vos serveurs de productions (il y a toujours&#xA;certaines partie de l’UI qui nécessitent d’effectuer des requêtes sur le&#xA;serveur d’origine, par exemple pour montrer des plans avec EXPLAIN, mais le&#xA;surcoût est négligeable)&lt;/li&gt;&#xA;  &lt;li&gt;il est maintenant possible d’utiliser PoWA sur un &lt;strong&gt;serveur en&#xA;hot-standby&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;L’UI vous accueillera donc maintenant avec une page initiale afin de choisir&#xA;lequel des serveurs stockés sur la base de données cible vous voulez&#xA;travailler :&#xA;&lt;a href=&#34;/images/powa_4_all_servers.png&#34;&gt;&lt;img src=&#34;/images/powa_4_all_servers.png&#34; alt=&#34;Choix des serveurs&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La principale raison pour laquelle il a fallu tellement de temps pour apporter&#xA;ce mode distant est parce que cela apporte beaucoup de complexité, nécessitant&#xA;une réécriture majeure de PoWA.  Nous voulions également ajouter d’abord&#xA;d’autres fonctionnalités, comme la &lt;strong&gt;suggestion globale d’index&lt;/strong&gt;, avec une&#xA;&lt;strong&gt;validation grâce à &lt;a href=&#34;http://hypopg.readthedocs.io/&#34;&gt;hypopg&lt;/a&gt;&lt;/strong&gt; introduit avec&#xA;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/releases/v3.0.0.html&#34;&gt;PoWA 3&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;changements-dans-powa-web&#34;&gt;Changements dans &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-web/index.html&#34;&gt;powa-web&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;L’&lt;em&gt;interface graphique&lt;/em&gt; est le composant qui a le plus de changements visibles&#xA;dans cette version 4.  Voici les plus changements les plus importants.&lt;/p&gt;&#xA;&#xA;&lt;h5 id=&#34;compatibilité-avec-le-mode-distant&#34;&gt;Compatibilité avec le mode distant&lt;/h5&gt;&#xA;&#xA;&lt;p&gt;Le changement le plus important est bien évidemment le support pour le &lt;a href=&#34;https://powa.readthedocs.io/en/latest/remote_setup.html&#34;&gt;nouveau&#xA;mode remote&lt;/a&gt;.  En&#xA;conséquence, la première page affichée est maintenant une page de &lt;strong&gt;sélection&#xA;de serveur&lt;/strong&gt;, affichant tous les &lt;em&gt;serveurs distants&lt;/em&gt; enregistrés.  Après avoir&#xA;choisi le &lt;em&gt;serveur distant&lt;/em&gt; voulu (ou le &lt;em&gt;serveur local&lt;/em&gt; si vous n’utilisez pas&#xA;le mode distant), toutes les autres pages seront similaires à celles&#xA;disponibles jusqu’à la version 3, mais afficheront les données pour un &lt;em&gt;serveur&#xA;distant&lt;/em&gt; spécifique uniquement, et bien entendu en récupérant les données&#xA;depuis la &lt;strong&gt;base de données repository&lt;/strong&gt;, avec en plus de nouvelles&#xA;informations décrites ci-dessous.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Veuillez notez que puisque les données sont maintenant stockées sur un &lt;em&gt;serveur&#xA;repository&lt;/em&gt; dédié quand le mode remote est utilisé, la majorité de l’UI est&#xA;utilisable sans se connecter au &lt;em&gt;serveur distant&lt;/em&gt; sélectionné.  Toutefois,&#xA;powa-web nécessite toujours de pouvoir se connecter sur le &lt;em&gt;serveur distant&lt;/em&gt;&#xA;quand les données originales sont nécessaires (par exemple, pour la suggestion&#xA;d’index ou pour montrer des plans avec &lt;strong&gt;EXPLAIN&lt;/strong&gt;).  Les &lt;a href=&#34;https://powa.readthedocs.io/en/latest/security.html#connection-on-remote-servers&#34;&gt;mêmes considérations&#xA;et possibilités concernant&#xA;l’authentification&lt;/a&gt;&#xA;que pour le nouveau &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/index.html&#34;&gt;daemon powa-collector&#xA;&lt;/a&gt;&#xA;(qui sera décrit dans un prochain article) s’appliquent ici.&lt;/p&gt;&#xA;&#xA;&lt;h5 id=&#34;pg_track_settings-support&#34;&gt;&lt;a href=&#34;https://github.com/rjuju/pg_track_settings/&#34;&gt;pg_track_settings&lt;/a&gt; support&lt;/h5&gt;&#xA;&#xA;&lt;p&gt;Quand cette extension est correctement configurée, un nouveau widget timeline&#xA;apparaîtra, placé entre chaque graph et son aperçu, affichant différents types&#xA;de changements enregistrés si ceux-ci ont été détectés sur l’intervalle de&#xA;temps sélectionné.  Sur les pages par base de données et par requête, la liste&#xA;sera également filtrée en fonction de la base de données sélectionnée.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La même timeline sera affichée sur chacun des graphs de chacune des pages, afin&#xA;de facilement vérifier si ces changements ont eu un impact visible en utilisant&#xA;les différents graphs.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Veuillez noter que les détails des changements sont affichés au survol de la&#xA;souris.  Vous pouvez également cliquer sur n’importe lequel des événements de&#xA;la timeline pour figer l’affichage, et tracer une ligne verticale sur le graph&#xA;associé.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Voici un exemple d’un tel changement de configuration en action :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/pg_track_settings_powa4.png&#34;&gt;&lt;img src=&#34;/images/pg_track_settings_powa4.png&#34; alt=&#34;Changements de configuration détectés&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Veuillez également noter qu’il est nécessaire d’avoir au minimum la version&#xA;2.0.0 de &lt;a href=&#34;https://github.com/rjuju/pg_track_settings/&#34;&gt;pg_track_settings&lt;/a&gt;, et&#xA;que l’extension doit être installée &lt;strong&gt;à la fois sur les &lt;em&gt;serveurs distants&lt;/em&gt;&#xA;ainsi que sur le &lt;em&gt;serveur repository&lt;/em&gt;.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;h5 id=&#34;nouveaux-graphs-disponibles&#34;&gt;Nouveaux graphs disponibles&lt;/h5&gt;&#xA;&#xA;&lt;p&gt;Quand&#xA;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/stats_extensions/pg_stat_kcache.html&#34;&gt;pg_stat_kcache&lt;/a&gt;&#xA;est configuré, ses informations n’étaient auparavant affichées que sur la page&#xA;par requête.  Les informations sont maintenant également affichées sur les&#xA;pages par serveur et par base, dans deux nouveaux graphs :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;dans le graph &lt;strong&gt;Block Access&lt;/strong&gt;, où les métriques &lt;strong&gt;OS cache&lt;/strong&gt; et &lt;strong&gt;disk&#xA;read&lt;/strong&gt; remplaceront la métrique &lt;strong&gt;read&lt;/strong&gt;&lt;/li&gt;&#xA;  &lt;li&gt;dans un nouveau graph &lt;strong&gt;System Resources&lt;/strong&gt; (qui est également ajouté dans&#xA;la page &lt;em&gt;par requête&lt;/em&gt;), montrant les &lt;a href=&#34;/postgresql/2018/07/17/pg_stat_kcache-2-1-is-out.html&#34;&gt;metrics ajoutées dans pg_stat_kcache&#xA;2.1&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Voici un example de ce nouveau graph &lt;strong&gt;System Resources&lt;/strong&gt; :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/pg_stat_kcache_system_resources_powa4.png&#34;&gt;&lt;img src=&#34;/images/pg_stat_kcache_system_resources_powa4.png&#34; alt=&#34;Ressources système&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Il y avait également un graph &lt;strong&gt;Wait Events&lt;/strong&gt; (disponible quand &lt;a href=&#34;https://powa.readthedocs.io/en/v4/components/stats_extensions/pg_wait_sampling.html&#34;&gt;l’extension&#xA;pg_wait_sampling&lt;/a&gt;&#xA;est configuée) disponible uniquement sur la page par requête.  Ce graph est&#xA;maintenant disponible sur les pages par serveur et par base également.&lt;/p&gt;&#xA;&#xA;&lt;h5 id=&#34;documentation-des-métriques-et-liens-vers-la-documentation&#34;&gt;Documentation des métriques et liens vers la documentation&lt;/h5&gt;&#xA;&#xA;&lt;p&gt;Certaines métriques affichées sur l’interface sont assez parlante, mais&#xA;certaines autres peuvent être un peu obscures.  Jusqu’à maintenant, il n’y&#xA;avait malheureusement aucune documentation pour les métriques.  Le problème est&#xA;maintenant réglé, et tous les graphs ont une &lt;em&gt;icône d’information&lt;/em&gt;, qui&#xA;affichent une description des métriques utilisée dans le graph au survol de la&#xA;souris.  Certains graphs incluent également un lien vers la &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/stats_extensions/index.html&#34;&gt;documentation PoWA&#xA;de extension&#xA;statistiques&lt;/a&gt;&#xA;pour les utilisateurs qui désirent en apprendre plus à leur sujet.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Voici un exemple :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/powa_4_metrics_doc.png&#34;&gt;&lt;img src=&#34;/images/powa_4_metrics_doc.png&#34; alt=&#34;Documentation des métriques&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;h5 id=&#34;et-des-correctifs-de-bugs-divers&#34;&gt;Et des correctifs de bugs divers&lt;/h5&gt;&#xA;&#xA;&lt;p&gt;Certains problèmes de longues dates ont également été rapportés :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;la boîte affichée au survol d’un graph montant les valeurs des métriques&#xA;avait une position verticale incorrecte&lt;/li&gt;&#xA;  &lt;li&gt;la sélection temporelle en utilisant l’aperçu des graphs ne montrait pas un&#xA;aperçu correct après avoir appliqué la sélection&lt;/li&gt;&#xA;  &lt;li&gt;les erreurs lors de la création d’index hypothétiques ou dans certains cas&#xA;leur affichage n’était pas correctement gérés sur plusieurs pages&lt;/li&gt;&#xA;  &lt;li&gt;les filtres des tableaux n’était pas réappliqués quand l’intervalle de&#xA;temps sélectionné était changé&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Si un de ces problèmes vous a un jour posé problème, vous serez ravi&#xA;d’apprendre qu’ils sont maintenant tous corrigés !&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Cette 4ème version de PoWA représente un temps de développement très important,&#xA;de nombreuses améliorations sur la documentation et beaucoup de tests.  Nous&#xA;somme maintenant assez satisfaits, mais il est possible que nous ayons ratés&#xA;certains bugs.  Si vous vous intéressez à ce projet, j’espère que vous&#xA;essaierez de tester cette beta, et si besoin n’hésitez pas à &lt;a href=&#34;https://powa.readthedocs.io/en/latest/support.html#support&#34;&gt;nous remonter un&#xA;bug&lt;/a&gt;!&lt;/p&gt;&#xA;&#xA;    &lt;p&gt;&lt;a href=&#34;https://rjuju.github.io/postgresqlfr/2019/05/17/powa-4-avec-mode-remote-disponible-en-beta.html&#34;&gt;PoWA 4 apporte un mode remote, disponible en beta !&lt;/a&gt; was originally published by Julien Rouhaud at &lt;a href=&#34;https://rjuju.github.io&#34;&gt;rjuju&#39;s home&lt;/a&gt; on May 17, 2019.&lt;/p&gt;</content>
    <link href="https://rjuju.github.io/postgresqlfr/2019/05/17/powa-4-avec-mode-remote-disponible-en-beta.html" rel="alternate"></link>
    <summary type="html"></summary>
    <author>
      <name>Julien Rouhaud</name>
    </author>
  </entry>
  <entry>
    <title>Nouveauté pg12: Statistiques sur les erreurs de checkums</title>
    <updated>2019-04-18T11:02:26Z</updated>
    <id>tag:rjuju.github.io,2019-04-18:/postgresqlfr/2019/04/18/nouveau-dans-pg12-statistiques-erreurs-checksums.html</id>
    <content type="html">&lt;h3 id=&#34;data-checksums&#34;&gt;Data checksums&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Ajoutés dans &lt;a href=&#34;https://git.postgresql.org/gitweb/?p=postgresql.git;a=commitdiff;h=96ef3b8ff1c&#34;&gt;PostgreSQL&#xA;9.3&lt;/a&gt;,&#xA;les &lt;a href=&#34;https://www.postgresql.org/docs/current/app-initdb.html#APP-INITDB-DATA-CHECKSUMS&#34;&gt;data&#xA;checksums&lt;/a&gt;&#xA;peuvent aider à détecter les corruptions de données survenant sur votre&#xA;stockage.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Les checksums sont activés si l’instance a été initialisée en utilisant &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;initdb&#xA;--data-checksums&lt;/code&gt; (ce qui n’est pas le comportement par défaut), ou s’ils ont&#xA;été activés après en utilisant la nouvelle utilitaire&#xA;activated afterwards with the new&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/devel/app-pgchecksums.html&#34;&gt;pg_checksums&lt;/a&gt;&#xA;également &lt;a href=&#34;https://git.postgresql.org/gitweb/?p=postgresql.git;a=commitdiff;h=ed308d783790&#34;&gt;ajouté dans PostgreSQL&#xA;12&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Quand les checksums sont ativés, ceux-ci sont écrits à chaque fois qu’un bloc&#xA;de données est écrit sur disque, et vérifiés à chaque fois qu’un bloc est lu&#xA;depuis le disque (ou depuis le cache du système d’exploitation).  Si la&#xA;vérification échoue, une erreur est remontée dans les logs.  Si le bloc était&#xA;lu par un processus client, la requête associée échouera bien évidemment, mais&#xA;si le bloc était lu par une opération&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/current/protocol-replication.html#id-1.10.5.9.7.1.8.1.12&#34;&gt;BASE_BACKUP&lt;/a&gt;&#xA;(tel que pg_basebackup), la commande continuera à s’exécuter.  Bien que les&#xA;data checksums ne détecteront qu’un sous ensemble des problèmes possibles, ils&#xA;ont tout de même une certaine utilisé, surtout si vous ne faites pas confiance&#xA;à votre stockage.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Jusqu’à PostgreSQL 11, les erreurs de validation de checksum ne pouvaient être&#xA;trouvées qu’en cherchant dans les logs, ce qui n’est clairement pas pratique si&#xA;vous voulez monitorer de telles erreurs.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;nouveaux-compteurs-disponibles-dans-pg_stat_database&#34;&gt;Nouveaux compteurs disponibles dans pg_stat_database&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Pour rendre la supervision des erreurs de checksum plus simple, et pour aider&#xA;les utilisateurs à réagir dès qu’un tel problème survient, PostgreSQL 12 ajoute&#xA;de nouveaux compteurs dans la vue &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_stat_database&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-plaintext highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;commit 6b9e875f7286d8535bff7955e5aa3602e188e436&#xA;Author: Magnus Hagander &amp;lt;magnus@hagander.net&amp;gt;&#xA;Date:   Sat Mar 9 10:45:17 2019 -0800&#xA;&#xA;Track block level checksum failures in pg_stat_database&#xA;&#xA;This adds a column that counts how many checksum failures have occurred&#xA;on files belonging to a specific database. Both checksum failures&#xA;during normal backend processing and those created when a base backup&#xA;detects a checksum failure are counted.&#xA;&#xA;Author: Magnus Hagander&#xA;Reviewed by: Julien Rouhaud&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-plaintext highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;commit 77bd49adba4711b4497e7e39a5ec3a9812cbd52a&#xA;Author: Magnus Hagander &amp;lt;magnus@hagander.net&amp;gt;&#xA;Date:   Fri Apr 12 14:04:50 2019 +0200&#xA;&#xA;    Show shared object statistics in pg_stat_database&#xA;&#xA;    This adds a row to the pg_stat_database view with datoid 0 and datname&#xA;    NULL for those objects that are not in a database. This was added&#xA;    particularly for checksums, but we were already tracking more satistics&#xA;    for these objects, just not returning it.&#xA;&#xA;    Also add a checksum_last_failure column that holds the timestamptz of&#xA;    the last checksum failure that occurred in a database (or in a&#xA;    non-dataabase file), if any.&#xA;&#xA;    Author: Julien Rouhaud &amp;lt;rjuju123@gmail.com&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-plaintext highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;commit 252b707bc41cc9bf6c55c18d8cb302a6176b7e48&#xA;Author: Magnus Hagander &amp;lt;magnus@hagander.net&amp;gt;&#xA;Date:   Wed Apr 17 13:51:48 2019 +0200&#xA;&#xA;    Return NULL for checksum failures if checksums are not enabled&#xA;&#xA;    Returning 0 could falsely indicate that there is no problem. NULL&#xA;    correctly indicates that there is no information about potential&#xA;    problems.&#xA;&#xA;    Also return 0 as numbackends instead of NULL for shared objects (as no&#xA;    connection can be made to a shared object only).&#xA;&#xA;    Author: Julien Rouhaud &amp;lt;rjuju123@gmail.com&amp;gt;&#xA;    Reviewed-by: Robert Treat &amp;lt;rob@xzilla.net&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Ces compteurs reflèteront les erreurs de validation de checksum à la fois pour&#xA;les processus clients et pour l’activité&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/current/protocol-replication.html#id-1.10.5.9.7.1.8.1.12&#34;&gt;BASE_BACKUP&lt;/a&gt;,&#xA;par base de données.&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;rjuju&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_stat_database&lt;/span&gt;&#xA;                        &lt;span class=&#34;k&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;pg_catalog.pg_stat_database&#34;&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;Column&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;k&#34;&gt;Type&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Collation&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Default&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;-----------------------+--------------------------+-----------+----------+---------&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;datid&lt;/span&gt;                 &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;oid&lt;/span&gt;                      &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;datname&lt;/span&gt;               &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;                     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;p&#34;&gt;[...]&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;checksum_failures&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bigint&lt;/span&gt;                   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;checksum_last_failure&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;zone&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;p&#34;&gt;[...]&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;stats_reset&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;zone&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;La colonne &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;checksum_failures&lt;/code&gt; montrera un nombre cumulé d’erreurs, et la&#xA;colonne &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;checksum_last_failure&lt;/code&gt; montrera l’horodatage de la dernière erreur de&#xA;validation sur la base de données (NULL si aucune erreur n’est jamais&#xA;survenue).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Pour éviter toute confusion (merci à Robert Treat pour l’avoir signalé), ces&#xA;deux colonnes retourneront toujours NULL si les data checkums ne sont pas&#xA;activés, afin qu’on ne puisse pas croire que les checksums sont toujours&#xA;vérifiés avec succès.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Comme effet de bord, &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_stat_database&lt;/code&gt;  montrera maintenant également les&#xA;statistiques disponibles pour les objets partagés (tels que la table&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_database&lt;/code&gt; par exemple), dans une nouvelle ligne pour laquelle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;datid&lt;/code&gt; vaut&#xA;&lt;strong&gt;0&lt;/strong&gt;, et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;datname&lt;/code&gt; vaut &lt;strong&gt;NULL&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;del&gt;Une sonde dédiée est également &lt;a href=&#34;https://github.com/OPMDG/check_pgactivity/issues/226&#34;&gt;déjà&#xA;planifiée&lt;/a&gt; dans&#xA;&lt;a href=&#34;https://opm.readthedocs.io/probes/check_pgactivity.html&#34;&gt;check_pgactivity&lt;/a&gt; !&lt;/del&gt;&#xA;Une sonde dédiée est également &lt;a href=&#34;https://github.com/OPMDG/check_pgactivity/commit/0e8b516e95e4364470d4e205aebc9fe68bbcfd23&#34;&gt;déjà&#xA;disponible&lt;/a&gt;&#xA;dans &lt;a href=&#34;https://opm.readthedocs.io/probes/check_pgactivity.html&#34;&gt;check_pgactivity&lt;/a&gt; !&lt;/p&gt;&#xA;&#xA;    &lt;p&gt;&lt;a href=&#34;https://rjuju.github.io/postgresqlfr/2019/04/18/nouveau-dans-pg12-statistiques-erreurs-checksums.html&#34;&gt;Nouveauté pg12: Statistiques sur les erreurs de checkums&lt;/a&gt; was originally published by Julien Rouhaud at &lt;a href=&#34;https://rjuju.github.io&#34;&gt;rjuju&#39;s home&lt;/a&gt; on April 18, 2019.&lt;/p&gt;</content>
    <link href="https://rjuju.github.io/postgresqlfr/2019/04/18/nouveau-dans-pg12-statistiques-erreurs-checksums.html" rel="alternate"></link>
    <summary type="html"></summary>
    <author>
      <name>Julien Rouhaud</name>
    </author>
  </entry>
  <entry>
    <title>Mettre en place une streaming replication avec PostgreSQL 10</title>
    <updated>2018-03-13T06:28:00Z</updated>
    <id>tag:blog.raveland.tech,2018-03-13:/post/postgresql_sr_fr/</id>
    <link href="https://blog.raveland.tech/post/postgresql_sr_fr/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dans ce post, je vais vous expliquer comment mettre en place une &lt;em&gt;streaming replication&lt;/em&gt; avec PostgreSQL 10. Par contre, je n&amp;rsquo;expliquerais pas comment installer PostgreSQL donc je suppose que cela est déjà le cas.&lt;/p&gt;</summary>
    <author>
      <name>blog.raveland.tech</name>
    </author>
  </entry>
  <entry>
    <title>OpenBSD / PostgreSQL / Authentification</title>
    <updated>2017-11-29T11:31:53Z</updated>
    <id>tag:blog.raveland.tech,2017-11-29:/post/openbsd_pg/</id>
    <link href="https://blog.raveland.tech/post/openbsd_pg/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Si vous êtes un utilisateur d&amp;rsquo;OpenBSD et de PostgreSQL, vous pouvez utiliser l&amp;rsquo;authentification BSD pour vous authentifier sur vos bases.&#xA;Nous allons voir comment faire cela.&lt;/p&gt;</summary>
    <author>
      <name>blog.raveland.tech</name>
    </author>
  </entry>
  <entry>
    <title>Postgresql et la réplication logique</title>
    <updated>2017-11-27T08:32:06Z</updated>
    <id>tag:blog.raveland.tech,2017-11-27:/post/postgresql_lr/</id>
    <link href="https://blog.raveland.tech/post/postgresql_lr/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cet article va tester la nouvelle fonctionnalité disponible depuis PostgreSQL 10.0 : la réplication logique.&lt;/p&gt;&#xA;&lt;p&gt;Pour en savoir plus, l&amp;rsquo;excellente &lt;a href=&#34;https://docs.postgresql.fr/10/logical-replication.html&#34;&gt;documentation de PostgreSQL&lt;/a&gt;&lt;/p&gt;</summary>
    <author>
      <name>blog.raveland.tech</name>
    </author>
  </entry>
</feed>