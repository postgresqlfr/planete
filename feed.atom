<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>Planète PostgreSQL</title>
  <id>https://planete.postgresql.fr/</id>
  <updated>2024-02-12T08:29:58Z</updated>
  <subtitle>L&#39;actualité de PostgreSQL de français</subtitle>
  <link href="https://planete.postgresql.fr/"></link>
  <author>
    <name>PostgreSQL.fr</name>
    <email>contact@postgresql.fr</email>
  </author>
  <entry>
    <title>Postgres à nouveau élu SGBD de l&#39;année en 2023, mais je suis inquiet</title>
    <updated>2024-02-05T08:00:00Z</updated>
    <id>tag:blog.anayrat.info,2024-02-05:/2024/02/05/postgres-a-nouveau-elu-sgbd-de-lannee-en-2023-mais-je-suis-inquiet/</id>
    <link href="https://blog.anayrat.info/2024/02/05/postgres-a-nouveau-elu-sgbd-de-lannee-en-2023-mais-je-suis-inquiet/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cette année encore, Postgres a été élu SGBD de l&amp;rsquo;année par &lt;a href=&#34;https://db-engines.com/en/blog_post/106&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DB-Engines&lt;/a&gt;. Même si ce n&amp;rsquo;est qu&amp;rsquo;un classement, cela donne une tendance. Cela fait aussi plusieurs années qu&amp;rsquo;il est reconnu selon&#xA;les sondages de Stackoverflow : &lt;a href=&#34;https://survey.stackoverflow.co/2023/#section-most-popular-technologies-databases&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Most popular Databases&lt;/a&gt;.&#xA;C&amp;rsquo;est un SGBD très apprécié, tant par les développeurs, que par les DBA chevronnés&amp;hellip; Mais aussi par les directeurs qui y trouvent une stabilité&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Postgres a tout pour séduire :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Année après année, de nouvelles fonctionnalités sont rajoutées. Je pense notamment à : la parallélisation, le partitionnement, la réplication logique&amp;hellip;&lt;/li&gt;&#xA;&lt;li&gt;Il a su, depuis toujours, garder sa fiabilité.&lt;/li&gt;&#xA;&lt;li&gt;Sa communauté n&amp;rsquo;a fait que grandir. Les conférences dédiées à Postgres battent des records d&amp;rsquo;affluence tous les ans.&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;&#xA;&lt;li&gt;C&amp;rsquo;est devenu un standard, même pour les autres logiciels : les éditeurs rajoutent même le support du protocole Postgres pour faciliter leur intégration : Aurora, AlloyDB, QuestDB&amp;hellip;&lt;/li&gt;&#xA;&lt;li&gt;C&amp;rsquo;est un des rares projets de cette envergure à être communautaire. On a pu voir qu&amp;rsquo;il ne suffit pas que le projet soit opensource, il faut aussi compter sur la communauté et son écosystème.&lt;/li&gt;&#xA;&lt;li&gt;Il est supporté par les gros acteurs : les GAFAM emploient de nombreux committers et contributeurs. Ils sponsorisent également les conférences. Par exemple, le prochain &lt;a href=&#34;https://2024.pgday.paris/sponsors/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pgDay Paris est sponsorisé par Microsoft&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Cependant, je suis un peu inquiet pour le futur. Non pas pour PostgreSQL. Bruce Momjian a fait plusieurs présentations sur ce sujet :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://momjian.us/main/writings/pgsql/challenges.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Future Postgres Challenges&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://momjian.us/main/writings/pgsql/forever.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Will Postgres Live Forever?&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://momjian.us/main/writings/pgsql/past_present_future.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PostgreSQL: Past, Present, and Future&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;C&amp;rsquo;est même le sujet de la Keynote d&amp;rsquo;ouverture du dernier PGConf Europe : &lt;a href=&#34;https://www.youtube.com/watch?v=8W-J36IxYv4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Simon Riggs: The Next 20 Years (PGConf.EU 2023)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Non, je suis plutôt inquiet sur la perte de connaissance du métier de DBA.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;A quoi servira Postgres si on ne sait pas l&amp;rsquo;utiliser correctement ?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;&#xA;  &lt;summary class=&#34;font-weight-bold&#34;&gt;Table des matières&lt;/summary&gt;&#xA;  &lt;nav id=&#34;TableOfContents&#34;&gt;&#xA;  &lt;ul&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#un-peu-dhistoire&#34;&gt;Un peu d&amp;rsquo;histoire&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#quest-ce-quon-oublie-&#34;&gt;Qu&amp;rsquo;est-ce qu&amp;rsquo;on oublie ?&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#oui-mais-le-cloud&#34;&gt;Oui, mais le cloud!&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#on-oublie-le-métier-de-dba&#34;&gt;On oublie le métier de DBA&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#on-oublie-le-passé&#34;&gt;On oublie le passé&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#le-code-change-la-donnée-reste&#34;&gt;Le code change, la donnée reste&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#il-faut-quelques-minutes-pour-prendre-une-mauvaise-décision-sur-une-base-de-donnée&#34;&gt;Il faut quelques minutes pour prendre une mauvaise décision sur une base de donnée&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#lusage-du-cloud&#34;&gt;L&amp;rsquo;usage du cloud&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#ce-quil-faudrait-changer&#34;&gt;Ce qu&amp;rsquo;il faudrait changer&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#pour-conclure&#34;&gt;Pour conclure&lt;/a&gt;&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/nav&gt;&#xA;&lt;/details&gt;&#xA;&lt;h1 id=&#34;un-peu-dhistoire&#34;&gt;Un peu d&amp;rsquo;histoire&lt;/h1&gt;&#xA;&lt;p&gt;Par le passé, il y avait une spécialisation forte des compétences : développeurs, testeurs, DBA étude, DBA prod, ingénieur système, ingénieur stockage, ingénieur sauvegarde&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;Chaque spécialité évoluait un peu dans sa bulle, ce qui compliquait la collaboration avec des cycles de développement longs.&lt;/p&gt;&#xA;&lt;p&gt;Cette organisation a laissé place à une nouvelle façon de travailler : développeurs &lt;em&gt;fullstack&lt;/em&gt;, &lt;em&gt;DEVOPS/SRE&lt;/em&gt;, des data &amp;ldquo;quelque chose&amp;rdquo; (engineer, analyst, steward&amp;hellip;).&lt;/p&gt;&#xA;&lt;p&gt;Les compétences se sont diluées sur les différents métiers. Je croise de plus en plus rarement des DBA.&lt;/p&gt;&#xA;&lt;p&gt;A la place, la base de donnée est &lt;em&gt;gérée&lt;/em&gt; par les développeurs. Ou, si on a un peu de chance, par des &amp;ldquo;data engineer&amp;rdquo; ou &amp;ldquo;data analyst&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;Après plusieurs années, alors que je baigne dedans, j&amp;rsquo;ai encore du mal à définir ces métiers.&lt;/p&gt;&#xA;&lt;p&gt;Le constat : bonne connaissance du python, monte des pipelines, on assemble en quelque sorte des Legos avec pleins d&amp;rsquo;outils : airflow, dbt&amp;hellip; Puis, on envoie ces données dans du Redshift, Biquery, Snowflake&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;Cependant, j&amp;rsquo;ai l&amp;rsquo;impression que la connaissance du SQL s&amp;rsquo;appauvrit à cause des couches d&amp;rsquo;abstraction.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Du moment où on manipule de la donnée, la première des compétences à avoir, devrait être la maitrise du SQL.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;quest-ce-quon-oublie-&#34;&gt;Qu&amp;rsquo;est-ce qu&amp;rsquo;on oublie ?&lt;/h1&gt;&#xA;&lt;p&gt;J&amp;rsquo;ai le sentiment, qu&amp;rsquo;année après année, on oublie le métier de DBA.&lt;/p&gt;&#xA;&lt;p&gt;Pour rappel, ce dernier va être à la croisée de plusieurs chemins :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Il a des compétences pures sur la base de données :&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Modélisation.&lt;/li&gt;&#xA;&lt;li&gt;Maitrise du SQL.&lt;/li&gt;&#xA;&lt;li&gt;Maitrise du SGBD : connait le fonctionnement du moteur (&lt;em&gt;vacuum&lt;/em&gt;, &lt;em&gt;checkpoint&lt;/em&gt; &amp;hellip;). Comprend les mécanismes de verrouillages (&lt;em&gt;MVCC&lt;/em&gt;, &lt;em&gt;locks&lt;/em&gt;&amp;hellip;).&lt;/li&gt;&#xA;&lt;li&gt;Conserve une veille technique : le Postgres que j&amp;rsquo;ai connu à mes débuts est très loin du Postgres actuel.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Mais également des compétences plus transverses :&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Avoir une bonne connaissance système pour investiguer sur les problèmes de performance, dimensionner les ressources.&lt;/li&gt;&#xA;&lt;li&gt;Un vernis en développement pour comprendre les besoins des développeurs et pouvoir les accompagner.&lt;/li&gt;&#xA;&lt;li&gt;De la culture &amp;ldquo;computer science&amp;rdquo;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;oui-mais-le-cloud&#34;&gt;Oui, mais le cloud!&lt;/h1&gt;&#xA;&lt;p&gt;On pourrait penser que le cloud a rebattu les cartes et qu&amp;rsquo;on n&amp;rsquo;a plus besoin de DBA. Dans la liste que j&amp;rsquo;ai donnée ci-dessus, quelles compétences sont couvertes par le cloud ?&lt;/p&gt;&#xA;&lt;p&gt;Le cloud résout une partie des besoins : hébergement, maintenance, réseau, monitoring (qu&amp;rsquo;il faut souvent compléter avec un APM ou un Datadog like).&#xA;Et il rajoute d&amp;rsquo;autres problèmes :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Il faut rajouter un métier de &lt;a href=&#34;https://lota.cloud/finops-cloud-2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;FinOps&lt;/a&gt; pour maitriser et optimiser les dépenses.&lt;/li&gt;&#xA;&lt;li&gt;C&amp;rsquo;est parfois une boite noire et il peut être difficile d&amp;rsquo;investiguer sur des problèmes de performance&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Cet excellent article de Markus Winand présente aussi d&amp;rsquo;autres inconvénients : &lt;a href=&#34;https://winand.at/newsletter/2024-01/clouds-bring-rain&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sometimes Clouds Bring Rain&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Changer de cloud provider est difficile. Je dirais même que c&amp;rsquo;est volontaire de leur part.&lt;/li&gt;&#xA;&lt;li&gt;Les coûts peuvent changer &lt;em&gt;Just because it is cheap today doesn’t mean it will be cheap forever&lt;/em&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Il faut prévoir un plan de sortie : éviter les services propriétaires, conserver un faible nombre de services.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Car une fois dans le cloud, qui s&amp;rsquo;occupe de : la modélisation, l&amp;rsquo;optimisation des requêtes, l&amp;rsquo;indexation, la veille technique sur le SGBD&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;, l&amp;rsquo;investigation sur les performances, comprendre les problèmes de verrouillages, l&amp;rsquo;accompagnement des développeurs ?&lt;/p&gt;&#xA;&lt;p&gt;Ceci est confirmé dans mes audits, je vois régulièrement des problèmes très basiques :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Absence de clé primaire.&lt;/li&gt;&#xA;&lt;li&gt;Pas d&amp;rsquo;index sur des cas très simples.&lt;/li&gt;&#xA;&lt;li&gt;Aucun respect des formes normales, même les plus basiques. Le JSON n&amp;rsquo;a pas arrangé les choses.&lt;/li&gt;&#xA;&lt;li&gt;Requêtes spaghetti.&lt;/li&gt;&#xA;&lt;li&gt;Des jointures façon SQL-89 alors que ça fait plus de 30 ans que le mot clé &lt;code&gt;JOIN&lt;/code&gt; existe.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;S&amp;rsquo;il faut retenir une chose : &lt;strong&gt;Le cloud ne permet pas de s&amp;rsquo;affranchir du DBA. Ce n&amp;rsquo;est pas parce qu&amp;rsquo;on peut obtenir les clés d&amp;rsquo;un avion, qu&amp;rsquo;on sait le piloter.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Un article intéressant sur le nombre de DBA dont vous avez besoin : &lt;a href=&#34;https://www.bytebase.com/blog/how-many-dbas-should-a-company-hire/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How many DBAs should a company hire?&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;on-oublie-le-métier-de-dba&#34;&gt;On oublie le métier de DBA&lt;/h1&gt;&#xA;&lt;p&gt;On pourrait naïvement penser qu&amp;rsquo;on confie ces tâches à des DBA experts, mais j&amp;rsquo;ai de plus en plus de doutes. J&amp;rsquo;ai l&amp;rsquo;impression &amp;ldquo;qu&amp;rsquo;on&amp;rdquo; est en train de perdre la connaissance d&amp;rsquo;un métier.&#xA;J&amp;rsquo;ai déjà croisé des développeurs expérimentés qui ne savaient même pas que le métier de DBA existait.&#xA;Des recruteurs qui me demandaient si en tant que DBA, je savais optimiser des requêtes et si je connaissais le SQL. C&amp;rsquo;est mon métier ! C&amp;rsquo;est un peu comme demander à un plombier s&amp;rsquo;il sait changer un robinet !&lt;/p&gt;&#xA;&lt;p&gt;Ce qui est d&amp;rsquo;autant plus alarmant, c&amp;rsquo;est que je crains qu&amp;rsquo;il y ait aussi des CTO qui ont aussi cette méconnaissance de la donnée.&lt;/p&gt;&#xA;&lt;p&gt;La conséquence est qu&amp;rsquo;en cas de problème de performance, on ne fait qu&amp;rsquo;augmenter les ressources des instances.&#xA;Avec le cloud, la facture croît linéairement avec la taille de l&amp;rsquo;instance.&#xA;Si la croissance de la charge est exponentielle, il faudra scaler la base et la facture qui va avec. On se retrouve avec une facture exponentielle.&lt;/p&gt;&#xA;&lt;p&gt;Quand on n&amp;rsquo;arrive plus à s&amp;rsquo;en sortir, on va accuser l&amp;rsquo;outil ou le modèle, donc on va changer de SGBD ou aller vers du NoSQL. Spoiler : ça ne résoudra pas vos problèmes.&lt;/p&gt;&#xA;&lt;h1 id=&#34;on-oublie-le-passé&#34;&gt;On oublie le passé&lt;/h1&gt;&#xA;&lt;p&gt;Pendant un temps, j&amp;rsquo;ai voulu écrire un livre pour parler optimisation de requête, des erreurs courantes que je rencontre, etc.&lt;/p&gt;&#xA;&lt;p&gt;En regardant ma bibliothèque, elle est pleine de livres de ce genre. Ils ont pour la plupart entre 10 et 30 ans et le contenu est toujours d&amp;rsquo;actualité. A quoi servirait un énième livre s&amp;rsquo;il n&amp;rsquo;est pas connu ?&lt;/p&gt;&#xA;&lt;p&gt;J&amp;rsquo;ai un autre exemple en tête : les data warehouse (DWH). Ce terme devient de plus en plus galvaudé.&#xA;La construction d&amp;rsquo;un DWH est complexe, il faut passer par une phase de modélisation afin de stocker correctement les données. Cela permet de bonnes performances et facilite l&amp;rsquo;écriture&#xA;des requêtes analytiques.&lt;/p&gt;&#xA;&lt;p&gt;Maintenant, je croise régulièrement des &amp;ldquo;data warehouse&amp;rdquo; qui se résument à envoyer toutes les données dans un SGBD spécialisé (redshift, biquery &amp;hellip;). Sans travail de modélisation et avec des requêtes très mal écrites, parfois générées, car les utilisateurs ne savent pas faire du SQL.&lt;/p&gt;&#xA;&lt;p&gt;Ces services coûtent très cher et ne font pas de miracle s&amp;rsquo;il n&amp;rsquo;y a pas eu un travail approfondi de modélisation et d&amp;rsquo;optimisation.&lt;/p&gt;&#xA;&lt;p&gt;Pourtant, les livres sur les DWH et le SQL ont entre 10 et 30 ans. A cette époque, le cloud n&amp;rsquo;existait pas, les SSD non plus, les CPU avec plusieurs coeurs non plus.&#xA;Pourtant, on savait construire des DWH, faire des sites performants&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Il ne faudrait pas que le cloud nous fasse oublier tout cet héritage. Sinon, on risque de payer la dette technique et la perte de connaissance très cher, avec les intérêts en plus.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Il faut avoir en tête que même si le SQL a évolué, les SGBD gagnés en fonctionnalités, &lt;strong&gt;les principes fondateurs sont toujours justes&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;le-code-change-la-donnée-reste&#34;&gt;Le code change, la donnée reste&lt;/h1&gt;&#xA;&lt;p&gt;J&amp;rsquo;ai eu un super manager, ancien DBA, qui expliquait aux développeurs : tu n&amp;rsquo;es pas ici pour &amp;ldquo;produire du code&amp;rdquo; =&amp;gt; yeux écarquillés du développeur.&#xA;&amp;ldquo;tu es là pour produire et manipuler de la donnée.&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;Lorsqu&amp;rsquo;il y avait une décision compliquée. Par exemple, prendre plus de temps pour revoir le code applicatif, faire une migration plus compliquée, plutôt qu&amp;rsquo;une solution&#xA;&amp;ldquo;quick win&amp;rdquo;. Ce même manager expliquait :&amp;quot;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;D&amp;rsquo;ici 5-10 ans, ton code aura été réécrit plusieurs fois, peut-être même dans un autre langage.&#xA;Nous, la donnée, dans 50 ans, elle sera toujours là. C&amp;rsquo;est notre devoir de nous assurer qu&amp;rsquo;elle sera toujours exploitable.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;il-faut-quelques-minutes-pour-prendre-une-mauvaise-décision-sur-une-base-de-donnée&#34;&gt;Il faut quelques minutes pour prendre une mauvaise décision sur une base de donnée&lt;/h1&gt;&#xA;&lt;p&gt;&lt;em&gt;Et parfois plusieurs mois / années pour la corriger.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Il m&amp;rsquo;est arrivé de faire des audits où le modèle était catastrophique. Il avait évolué de solutions à court terme en d&amp;rsquo;autres solutions à court terme.&#xA;&amp;ldquo;On corrigera plus tard, il faut faire passer cette fonctionnalité dans le sprint&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;Un DBA peut corriger le modèle de données à coup de grosses migrations (encore faut-il avoir un DBA, difficile si on ignore que ce métier existe&amp;hellip;).&#xA;Au-delà de ça, le problème va se poser autour : il faut réécrire une grosse partie du code applicatif (qui est souvent dans le même état que la base).&lt;/p&gt;&#xA;&lt;p&gt;Parfois, la complexité est quadratique ou exponentielle. Il vaut mieux tout jeter pour tout recommencer.&lt;/p&gt;&#xA;&lt;p&gt;On se retrouve face à plusieurs dilemmes :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Augmenter la taille des instances.&lt;/li&gt;&#xA;&lt;li&gt;Parfois, cette solution n&amp;rsquo;est pas suffisante. J&amp;rsquo;explique : &amp;ldquo;là, vous pouvez faire encore fois dix sur la taille de l&amp;rsquo;instance, mais vous ne pourrez jouer cette carte qu&amp;rsquo;une fois&amp;rdquo;. Notez que cette solution est inutile si le traitement ne peut pas être parallélisé.&lt;/li&gt;&#xA;&lt;li&gt;Tout jeter pour tout recommencer. Là aussi, le coût ou la perte peut être démentielle.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Alors qu&amp;rsquo;il aurait suffi des conseils d&amp;rsquo;un DBA à quelques moments de la vie du projet pour éviter de partir dans une mauvaise direction.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;On ne bâtit pas un château sur du sable&lt;/strong&gt;. J&amp;rsquo;ai une anecdote en tête, une personne de mon entourage m&amp;rsquo;a raconté une histoire d&amp;rsquo;un bâtiment qui avait été contrôlé au moment de la livraison :&lt;/p&gt;&#xA;&lt;p&gt;Un prélèvement avait été fait dans les murs et il n&amp;rsquo;y avait pas assez de ciment, le bâtiment, &lt;strong&gt;neuf&lt;/strong&gt;, pouvait s&amp;rsquo;écrouler. Il venait d&amp;rsquo;être totalement terminé, électricité, plomberie, menuiseries&amp;hellip; Tout était terminé.&#xA;Il a dû être rasé complètement. Autant il existe des assurances dans le bâtiment, mais pas pour le développement&amp;hellip;&#xA;Je pense que certaines sociétés ne survivent pas si la dette technique est trop importante.&lt;/p&gt;&#xA;&lt;h1 id=&#34;lusage-du-cloud&#34;&gt;L&amp;rsquo;usage du cloud&lt;/h1&gt;&#xA;&lt;p&gt;Le cloud a de nombreux avantages :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;On peut rapidement obtenir des bases de données avec une installation relativement propre.&lt;/li&gt;&#xA;&lt;li&gt;Le cloud provider vous obligera à rester sur des versions supportées.&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;Écologiquement&amp;rdquo;, cela permet de mutualiser des ressources physiques. Mais c&amp;rsquo;est aussi une faiblesse. L&amp;rsquo;accès facile à ces ressources peut aussi entrainer un gaspillage. On peut facilement déployer&#xA;une centaine d&amp;rsquo;instances. Là, où avec une infrastructure &lt;em&gt;on-premise&lt;/em&gt;, il faut concilier avec les ressources physiques à disposition : puissance des serveurs, puissance électrique, espace dans les baies&amp;hellip;&lt;/li&gt;&#xA;&lt;li&gt;On paye ce qu&amp;rsquo;on consomme. On peut facilement identifier combien coute un service. Qu&amp;rsquo;une requête est responsable de 80% de la facture. Ce qui peut inciter à l&amp;rsquo;optimiser, le gain financier est immédiat. Encore faut-il qu&amp;rsquo;il y ait des personnes qui s&amp;rsquo;y intéressent.&#xA;Je n&amp;rsquo;ai pas l&amp;rsquo;impression qu&amp;rsquo;il y ait beaucoup de FinOps. S&amp;rsquo;il y en a, est-ce que ces derniers pensent à optimiser la base ?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Mais il y a aussi de vrais inconvénients :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Perte de souveraineté numérique. A cela s&amp;rsquo;ajoute des risques juridiques. Comment garantir que vos données ne sont pas stockées ailleurs ? Si vous avez choisi un service managé, comment en sortir si la législation vous impose d&amp;rsquo;être sur le sol Français ou d&amp;rsquo;un autre pays ?&lt;/li&gt;&#xA;&lt;li&gt;Perte de compétences.&lt;/li&gt;&#xA;&lt;li&gt;Dépendance à un cloud provider : encore que sur ce point, on voit émerger de nouvelles offres &amp;ldquo;cloud agnostique&amp;rdquo; : Des sociétés créent un cloud par-dessus un autre cloud.&#xA;Je pense notamment à &lt;a href=&#34;https://aiven.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Aiven&lt;/a&gt;, &lt;a href=&#34;https://www.enterprisedb.com/docs/biganimal/latest/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;EDB BigAnimal&lt;/a&gt;, &lt;a href=&#34;https://www.crunchydata.com/products/crunchy-bridge&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Crunchy Bridge&lt;/a&gt; et j&amp;rsquo;en oublie certainement&amp;hellip;&lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;&#xA;&lt;li&gt;Les couts décollent quand l&amp;rsquo;infrastructure est importante. Certains commencent à quitter le cloud. Je pense notamment à Basecamp :&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://world.hey.com/dhh/why-we-re-leaving-the-cloud-654b47e0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Why we&amp;rsquo;re leaving the cloud&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://world.hey.com/dhh/we-stand-to-save-7m-over-five-years-from-our-cloud-exit-53996caa&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;We stand to save $7m over five years from our cloud exit&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://world.hey.com/dhh/the-big-cloud-exit-faq-20274010&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Big Cloud Exit FAQ&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;ce-quil-faudrait-changer&#34;&gt;Ce qu&amp;rsquo;il faudrait changer&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Redonner de la valeur à la donnée : des sociétés rechignent à faire appel à des DBA ou prendre des contrats de supports sur leur base. Quel est le cout d&amp;rsquo;une indisponibilité de service, d&amp;rsquo;une corruption de donnée, d&amp;rsquo;une perte de la base ?&lt;/li&gt;&#xA;&lt;li&gt;Réinvestir le champ des compétences en base de donnée : SQL, modélisation&lt;sup id=&#34;fnref:6&#34;&gt;&lt;a href=&#34;#fn:6&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;. A ce sujet, j&amp;rsquo;aime beaucoup le titre de Markus Winand : &lt;a href=&#34;https://winand.at/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SQL Renaissance Ambassador&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;S&amp;rsquo;attarder un peu plus sur l&amp;rsquo;usage des ressources : la consommation du numérique est importante, si les serveurs et l&amp;rsquo;électricité étaient plus chers, on serait contraint d&amp;rsquo;optimiser.&lt;/li&gt;&#xA;&lt;li&gt;Surveiller les dépenses sur les bases. Que ça soit dans le cloud, mais également on-premise. Pour cela, il faut avoir des indicateurs de couts.&lt;/li&gt;&#xA;&lt;li&gt;Penser pas à faire appel à des DBA pour anticiper les problèmes et investiguer sur les problèmes de performance : J&amp;rsquo;ai audité des bases dans un état catastrophique, ça aurait pu être évité si un DBA était intervenu dans la phase de modélisation. Sur les problèmes de performance, il m&amp;rsquo;est déjà arrivé de diviser des factures de cloud par 10 ou de baisser la charge moyenne de 80% à 5% avec un suivi régulier.&lt;/li&gt;&#xA;&lt;li&gt;Il ne faut pas se résigner à payer de grosses factures cloud plutôt que d&amp;rsquo;investir dans de la compétence de DBA.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;pour-conclure&#34;&gt;Pour conclure&lt;/h1&gt;&#xA;&lt;p&gt;C&amp;rsquo;est un article moins technique par rapport à ce que vous avez l&amp;rsquo;habitude de lire sur mon blog.&#xA;Cependant, c&amp;rsquo;est un des plus importants que j&amp;rsquo;ai été amené à écrire.&#xA;Ca fait plus de dix ans que je fais du Postgres et je réalise que la tendance ne va pas dans la bonne direction.&#xA;J&amp;rsquo;espère qu&amp;rsquo;il y aura une prise de conscience pour un avenir plus durable des bases de données.&lt;/p&gt;&#xA;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;&#xA;&lt;hr&gt;&#xA;&lt;ol&gt;&#xA;&lt;li id=&#34;fn:1&#34;&gt;&#xA;&lt;p&gt;Ainsi que dans le public, il est dans le &lt;a href=&#34;https://code.gouv.fr/data/sill.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Socle interministériel de logiciels libres&lt;/a&gt;.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li id=&#34;fn:2&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/pgconfeu/status/1734860251390750980&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;720 personnes à la PGEurope 2023&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li id=&#34;fn:3&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.datadoghq.com/blog/aws-ebs-latency-and-iops-the-surprising-truth/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AWS EBS latency and IOPS: The surprising truth&lt;/a&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Ultimately, due to AWS’ opacity, there is simply no way to know how much throughput (from the physical disks and from the network that sits in-between) to expect for a given EBS volume. Provisioned IOPS only offer a partial solution to this issue, at a higher hourly cost.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li id=&#34;fn:4&#34;&gt;&#xA;&lt;p&gt;Le Postgres actuel est très loin du Postgres avec lequel j&amp;rsquo;ai débuté :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Nouvelles fonctionnalités liées au standard SQL : JSONPath par exemple. &lt;a href=&#34;https://winand.at/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Markus Winand&lt;/a&gt; est l&amp;rsquo;auteur d&amp;rsquo;un super site à ce sujet: &lt;a href=&#34;https://modern-sql.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Modern SQL&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Nouvelles fonctionnalités sur le moteur : parallélisme, partitionnement, nouveaux noeuds d&amp;rsquo;exécution, réplication logique&amp;hellip;&lt;/li&gt;&#xA;&lt;li&gt;La conséquence est un nombre de paramètres qui augmente au fur et à mesure.&lt;/li&gt;&#xA;&lt;li&gt;De nouvelles extensions.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li id=&#34;fn:5&#34;&gt;&#xA;&lt;p&gt;Je n&amp;rsquo;ai pas travaillé avec ces offres, je n&amp;rsquo;ai pas de recul dessus. On peut néanmoins souligner que ces sociétés emploient des développeurs qui contribuent à Postgres.&amp;#160;&lt;a href=&#34;#fnref:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li id=&#34;fn:6&#34;&gt;&#xA;&lt;p&gt;Il y a quelques années, un article était tiré d&amp;rsquo;une conférence.&lt;/p&gt;&#xA;&lt;p&gt;Le titre est particulièrement juste : &lt;a href=&#34;https://www.citusdata.com/blog/2018/03/19/postgres-database-constraints&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Database constraints in Postgres: The last line of defense&lt;/a&gt;.&#xA;Voici la vidéo de la conférence : &lt;a href=&#34;https://www.youtube.com/watch?v=hWh8QoV8z8k&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Constraints: a Developer&amp;rsquo;s Secret Weapon - Will Leinweber&lt;/a&gt;&#xA;et ses &lt;a href=&#34;https://www.postgresql.eu/events/pgdayparis2018/sessions/session/1835/slides/70/2018-03-15%20constraints%20a%20developers%20secret%20weapon%20pgday%20paris.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;slides&lt;/a&gt;.&amp;#160;&lt;a href=&#34;#fnref:6&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;</summary>
    <author>
      <name>blog.anayrat.info</name>
    </author>
  </entry>
  <entry>
    <title>Optimisation du GROUP BY</title>
    <updated>2024-01-26T09:00:00Z</updated>
    <id>tag:blog.anayrat.info,2024-01-26:/2024/01/26/optimisation-du-group-by/</id>
    <link href="https://blog.anayrat.info/2024/01/26/optimisation-du-group-by/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Un commit a attiré mon attention lors de ma veille technique :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;commit 0452b461bc405e6d35d8a14c02813c15e28ae516&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Author:     Alexander Korotkov &amp;lt;akorotkov@postgresql.org&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;AuthorDate: Sun Jan 21 22:21:36 2024 +0200&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Commit:     Alexander Korotkov &amp;lt;akorotkov@postgresql.org&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CommitDate: Sun Jan 21 22:21:36 2024 +0200&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Explore alternative orderings of group-by pathkeys during optimization.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    When evaluating a query with a multi-column GROUP BY clause, we can minimize&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    sort operations or avoid them if we synchronize the order of GROUP BY clauses&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    with the ORDER BY sort clause or sort order, which comes from the underlying&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    query tree. Grouping does not imply any ordering, so we can compare&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    the keys in arbitrary order, and a Hash Agg leverages this. But for Group Agg,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    we simply compared keys in the order specified in the query. This commit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    explores alternative ordering of the keys, trying to find a cheaper one.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    The ordering of group keys may interact with other parts of the query, some of&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    which may not be known while planning the grouping. For example, there may be&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    an explicit ORDER BY clause or some other ordering-dependent operation higher up&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    in the query, and using the same ordering may allow using either incremental&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    sort or even eliminating the sort entirely.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    The patch always keeps the ordering specified in the query, assuming the user&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    might have additional insights.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    This introduces a new GUC enable_group_by_reordering so that the optimization&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    may be disabled if needed.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Discussion: https://postgr.es/m/7c79e6a5-8597-74e8-0671-1c39d124c9d6%40sigaev.ru&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Author: Andrei Lepikhov, Teodor Sigaev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Reviewed-by: Tomas Vondra, Claudio Freire, Gavin Flower, Dmitry Dolgov&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Reviewed-by: Robert Haas, Pavel Borisov, David Rowley, Zhihong Yu&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Reviewed-by: Tom Lane, Alexander Korotkov, Richard Guo, Alena Rybakina&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;On remarque le message du commit assez explicite en mentionnant les personnes impliquées (12 relecteurs!) ainsi que le lien vers la discussion :&#xA;&lt;a href=&#34;https://www.postgresql.org/message-id/flat/7c79e6a5-8597-74e8-0671-1c39d124c9d6%40sigaev.ru&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;POC: GROUP BY optimization&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Les travaux ont commencé en 2018! Il aura fallu 5 ans et demi pour aboutir à ce commit. C&amp;rsquo;est le fruit de nombreux échanges afin de parvenir à un consensus en prenant en compte les multiples idées.&lt;/p&gt;&#xA;&lt;p&gt;Pour tester ce patch, j&amp;rsquo;ai compilé Postgres depuis les sources. Prenons un exemple tout simple :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;insert&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;into&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;generate_series&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_000_000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;vacuum&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;analyze&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;On obtient une table de 422Mo et un index de 66Mo.&#xA;Vous noterez au passage que j&amp;rsquo;ai utilisé une nouveauté de Postgres 16 en utilisant des &amp;ldquo;underscore&amp;rdquo; dans le &lt;em&gt;generate_series&lt;/em&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Si on fait un &lt;code&gt;GROUP BY&lt;/code&gt; sur &lt;em&gt;c1,c2&lt;/em&gt;, on obtient un parcours d&amp;rsquo;index :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;explain (settings, analyze,buffers) select count(*),c1,c2 from t1 group by c1,c2 order by c1,c2;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                                                    QUERY PLAN&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; GroupAggregate  (cost=0.43..235342.27 rows=100000 width=16) (actual time=3.605..3501.887 rows=1000 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Group Key: c1, c2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Buffers: shared hit=10447&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   -&amp;gt;  Index Only Scan using t1_c1_c2_idx on t1  (cost=0.43..159340.96 rows=10000175 width=8) (actual time=0.070..1900.730 rows=10000000 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Heap Fetches: 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Buffers: shared hit=10447&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Settings: enable_group_by_reordering = &amp;#39;off&amp;#39;, random_page_cost = &amp;#39;1.1&amp;#39;, max_parallel_workers_per_gather = &amp;#39;0&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Planning:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Buffers: shared hit=1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Planning Time: 0.191 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Execution Time: 3502.036 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Vous remarquerez que j&amp;rsquo;ai volontairement désactivé la fonctionnalité dans un premier temps (enable_group_by_reordering=off). J&amp;rsquo;ai également désactivé la parallélisation pour plus de clarté.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;On a le plan attendu, le moteur va lire 10447 blocs avec un parcours &lt;em&gt;Index Only Scan&lt;/em&gt;. Le moteur va chercher le plan qui manipule le moins de blocs possible.&lt;/p&gt;&#xA;&lt;p&gt;En revanche, si on change l&amp;rsquo;ordre du group by :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;explain (settings, analyze,buffers) select count(*),c1,c2 from t1 group by c2,c1 order by c1,c2;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                                          QUERY PLAN&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;------------------------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Sort  (cost=602422.32..602672.32 rows=100000 width=16) (actual time=5393.446..5393.503 rows=1000 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Sort Key: c1, c2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Sort Method: quicksort  Memory: 79kB&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Buffers: shared hit=96 read=53959&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   -&amp;gt;  HashAggregate  (cost=514992.50..594117.50 rows=100000 width=16) (actual time=5392.351..5392.894 rows=1000 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Group Key: c2, c1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Batches: 1  Memory Usage: 3217kB&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Buffers: shared hit=96 read=53959&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         -&amp;gt;  Seq Scan on t1  (cost=0.00..154055.00 rows=10000000 width=8) (actual time=0.033..1186.171 rows=10000000 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               Buffers: shared hit=96 read=53959&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Settings: enable_group_by_reordering = &amp;#39;off&amp;#39;, random_page_cost = &amp;#39;1.1&amp;#39;, max_parallel_workers_per_gather = &amp;#39;0&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Planning:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Buffers: shared hit=1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Planning Time: 0.189 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Execution Time: 5394.566 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dans ce cas, le moteur va lire toute la table (&lt;em&gt;seqscan&lt;/em&gt;) et faire un tri, alors que le résultat est identique.&lt;/p&gt;&#xA;&lt;p&gt;Le moteur lit 422Mo de données contre 80Mo, soit 5 fois plus. Le résultat peut être désastreux suivant les performances du stockage.&#xA;Là, on a de la &amp;ldquo;chance&amp;rdquo;, mon instance est dans un ramdisk donc la requête n&amp;rsquo;est pas beaucoup plus lente.&#xA;Avec du stockage mécanique ou des disques cloud, le temps de réponse peut augmenter drastiquement.&lt;/p&gt;&#xA;&lt;p&gt;L&amp;rsquo;ordre des colonnes dans un group by est important, c&amp;rsquo;est une optimisation assez simple pour peu qu&amp;rsquo;on connaisse le schéma de la base et qu&amp;rsquo;on maitrise les requêtes exécutées sur le serveur.&lt;/p&gt;&#xA;&lt;p&gt;Malheureusement, avec les ORM, on peut perdre cette maitrise ou rater des corrections.&#xA;C&amp;rsquo;est là où cette fonctionnalité est intéressante. Voyons son effet :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;postgres=# set enable_group_by_reordering to on;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SET&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;postgres=# explain (settings, analyze,buffers) select count(*),c1,c2 from t1 group by c2,c1 order by c1,c2;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                                                    QUERY PLAN&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; GroupAggregate  (cost=0.43..235338.33 rows=100000 width=16) (actual time=4.502..3658.168 rows=1000 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Group Key: c1, c2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Buffers: shared hit=10447&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   -&amp;gt;  Index Only Scan using t1_c1_c2_idx on t1  (cost=0.43..159338.33 rows=10000000 width=8) (actual time=0.081..1923.553 rows=10000000 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Heap Fetches: 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Buffers: shared hit=10447&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Settings: random_page_cost = &amp;#39;1.1&amp;#39;, max_parallel_workers_per_gather = &amp;#39;0&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Planning:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Buffers: shared hit=1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Planning Time: 0.230 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Execution Time: 3658.337 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;On retrouve le premier plan bien plus performant.&lt;/p&gt;&#xA;&lt;p&gt;C&amp;rsquo;est une fonctionnalité assez simple qui devrait améliorer les temps d&amp;rsquo;exécutions de certaines requêtes dont la clause group by n&amp;rsquo;a pas été optimisée.&lt;/p&gt;&#xA;&lt;p&gt;C&amp;rsquo;est une demande assez récurrente d&amp;rsquo;améliorer le planificateur afin de gérer des cas en apparence simple. Il faut avoir en tête que le risque est de d&amp;rsquo;augmenter&#xA;les opérations de calculs dans le planificateur. Or, on veut que cette étape soit la plus rapide possible La réponse est souvent résumée à : &amp;ldquo;on ne veut pas alourdir le planificateur alors qu&amp;rsquo;on peut corriger la requête&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;Cependant, ce type d&amp;rsquo;optimisation peut être acceptée si on sait que ça ne sera pas couteux pour le planificateur.&lt;/p&gt;&#xA;&lt;p&gt;Il n&amp;rsquo;y a plus qu&amp;rsquo;à espérer que cette fonctionnalité ne soit pas retirée d&amp;rsquo;ici la sortie de Postgres 17 :)&lt;/p&gt;&#xA;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;&#xA;&lt;hr&gt;&#xA;&lt;ol&gt;&#xA;&lt;li id=&#34;fn:1&#34;&gt;&#xA;&lt;p&gt;Petite anecdote, pour ajouter cette fonctionnalité, l&amp;rsquo;auteur a fait évoluer le standard SQL : &lt;a href=&#34;http://peter.eisentraut.org/blog/2023/09/20/grouping-digits-in-sql&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Grouping digits in SQL&lt;/a&gt; .&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;</summary>
    <author>
      <name>blog.anayrat.info</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL compression du TOAST et toast_tuple_target</title>
    <updated>2022-02-14T07:00:00Z</updated>
    <id>tag:blog.anayrat.info,2022-02-14:/2022/02/14/postgresql-compression-du-toast-et-toast_tuple_target/</id>
    <link href="https://blog.anayrat.info/2022/02/14/postgresql-compression-du-toast-et-toast_tuple_target/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Quelques rappels sur le TOAST et présentation d&amp;rsquo;un changement apparu avec PostgreSQL 11.&lt;/p&gt;&#xA;&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;&#xA;  &lt;summary class=&#34;font-weight-bold&#34;&gt;Table des matières&lt;/summary&gt;&#xA;  &lt;nav id=&#34;TableOfContents&#34;&gt;&#xA;  &lt;ul&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#quest-ce-que-le-toast-&#34;&gt;Qu&amp;rsquo;est-ce que le TOAST ?&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#exemple-avec-le-jsonb&#34;&gt;Exemple avec le JSONB&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#paramétrage-avancé&#34;&gt;Paramétrage avancé&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#bonus&#34;&gt;Bonus&lt;/a&gt;&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/nav&gt;&#xA;&lt;/details&gt;&#xA;&lt;h1 id=&#34;quest-ce-que-le-toast-&#34;&gt;Qu&amp;rsquo;est-ce que le TOAST ?&lt;/h1&gt;&#xA;&lt;p&gt;Vous êtes-vous déjà posé la question sur comment Postgres fait pour stocker des lignes dépassant la taille d&amp;rsquo;un bloc? Pour rappel, la taille par défaut d&amp;rsquo;un bloc est de 8Ko.&lt;/p&gt;&#xA;&lt;p&gt;Postgres utilise un mécanisme appelé TOAST pour &lt;a href=&#34;https://www.postgresql.org/docs/current/storage-toast.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Oversized-Attribute Storage Technique&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Lorsqu&amp;rsquo;un enregistrement devient trop gros pour être stocké dans un bloc, le moteur va le stocker &amp;ldquo;à part&amp;rdquo;, dans une table de toast.&#xA;L&amp;rsquo;enregistrement sera découpé en &lt;em&gt;chunks&lt;/em&gt;, ainsi la table principale (appelée &lt;em&gt;heap&lt;/em&gt;) contiendra un pointeur (&lt;em&gt;chunk_id&lt;/em&gt;) pointant vers le bon &lt;em&gt;chunk&lt;/em&gt; dans la table de toast.&lt;/p&gt;&#xA;&lt;p&gt;Ce &lt;em&gt;chunk&lt;/em&gt; sera stocké sur plusieurs lignes, pour un &lt;em&gt;chunk_id&lt;/em&gt; on peut avoir plusieurs lignes dans cette table de toast.&#xA;Ainsi, cette table de toast est composée de 3 colonnes:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;chunk_id&lt;/em&gt; : Numéro du chunk référencé dans la heap&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;chunk_seq&lt;/em&gt; : Numéro de chaque segment d&amp;rsquo;un chunk&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;chunk_data&lt;/em&gt; : Partie données de chaque segment&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;La réalité est un peu plus complexe, en vrai le moteur va tenter d&amp;rsquo;éviter de stocker la donnée dans la table toast.&#xA;Si la ligne dépasse &lt;code&gt;TOAST_TUPLE_THRESHOLD&lt;/code&gt; (2Ko), il va tenter de compresser les colonnes pour essayer de faire rentrer la ligne dans le bloc.&#xA;Plus précisément, il faut que la taille soit inférieure à &lt;code&gt;TOAST_TUPLE_TARGET&lt;/code&gt; (2Ko par défaut, on va en reparler).&lt;/p&gt;&#xA;&lt;p&gt;Si on a de la chance, la ligne compressée rentre dans la heap. Sinon, il va tenter de compresser les colonnes,&#xA;de la plus grande à la plus petite et les stocker dans la partie toast jusqu&amp;rsquo;à ce que les colonnes restantes rentrent dans une ligne de la heap. &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;&lt;p&gt;A noter également que si le gain en compression est trop faible, il considère qu&amp;rsquo;il est inutile de dépenser&#xA;de la ressource de calcul à tenter de compresser. Il stocke donc la donnée sans compression. &lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;&lt;p&gt;Avez-vous déjà prêté attention à la colonne &amp;ldquo;Storage&amp;rdquo; lorsque vous affichez les caractéristiques d&amp;rsquo;une table à l&amp;rsquo;aide de la méta commande &lt;code&gt;\d+ table&lt;/code&gt; ?&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;stackoverflow=# \d+ posts&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                   Table &amp;#34;public.posts&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Column     |  Type   | Collation | Nullable | Default | Storage  |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---------------+---------+-----------+----------+---------+----------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; id            | integer |           | not null |         | plain    |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; posttypeid    | integer |           | not null |         | plain    |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; score         | integer |           |          |         | plain    |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; viewcount     | integer |           |          |         | plain    |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; body          | text    |           |          |         | extended |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dans cet exemple, la colonne prend comme valeur &lt;em&gt;plain&lt;/em&gt; ou &lt;em&gt;extended&lt;/em&gt;. En réalité, il existe 4 valeurs possibles selon le type de donnée :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;plain&lt;/em&gt; : la colonne est stockée dans la heap uniquement et sans compression.&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;extended&lt;/em&gt; : la colonne peut être compressée et stockée dans le toast si nécessaire.&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;external&lt;/em&gt; : la colonne peut être stockée dans le toast mais uniquement sans compression. Parfois on peut utiliser ce mode pour avoir un gain en performance (évite la compression/décompression)&#xA;au prix d&amp;rsquo;une consommation plus importante de l&amp;rsquo;espace disque.&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;main&lt;/em&gt; : La colonne est stockée dans la heap uniquement mais contrairement au mode &lt;em&gt;plain&lt;/em&gt;, on autorise la compression.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Au premier abord, on peut penser que l&amp;rsquo;intérêt est surtout sur la possibilité de stocker&#xA;des lignes dépassant la taille d&amp;rsquo;un bloc et de compresser la donnée pour gagner de l&amp;rsquo;espace disque.&lt;/p&gt;&#xA;&lt;p&gt;Il y a un autre intérêt : lors d&amp;rsquo;une mise à jour d&amp;rsquo;une ligne, si les colonnes &amp;ldquo;toastées&amp;rdquo; ne sont pas modifiées, le moteur n&amp;rsquo;a pas besoin de modifier la table toast.&#xA;On va ainsi éviter de devoir décompresser et recompresser le toast et écrire tout ça dans des journaux de transaction.&lt;/p&gt;&#xA;&lt;p&gt;Nous allons voir qu&amp;rsquo;un autre avantage est que le moteur peut éviter de lire le toast si ce n&amp;rsquo;est pas nécessaire.&lt;/p&gt;&#xA;&lt;h1 id=&#34;exemple-avec-le-jsonb&#34;&gt;Exemple avec le JSONB&lt;/h1&gt;&#xA;&lt;p&gt;Pour étudier ça, on va utiliser le type JSONB. De manière générale, je déconseille l&amp;rsquo;usage de ce type :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;On perd les avantages d&amp;rsquo;avoir un schéma :&#xA;&lt;ul&gt;&#xA;&lt;li&gt;vérification des types&lt;/li&gt;&#xA;&lt;li&gt;contraintes d&amp;rsquo;intégrité&lt;/li&gt;&#xA;&lt;li&gt;pas de clés étrangères&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;L&amp;rsquo;écriture des requêtes devient plus complexe&lt;/li&gt;&#xA;&lt;li&gt;Absence des statistiques sur les clés d&amp;rsquo;un champ json&lt;/li&gt;&#xA;&lt;li&gt;Perte d&amp;rsquo;efficacité du stockage vu qu&amp;rsquo;on stocke les clés pour chaque ligne&lt;/li&gt;&#xA;&lt;li&gt;Pas de mise à jour partielle du JSONB. Si on modifie une clé on est obligé de &lt;em&gt;detoaster&lt;/em&gt; et &lt;em&gt;toaster&lt;/em&gt; tout le JSONB&lt;/li&gt;&#xA;&lt;li&gt;Pas de &lt;em&gt;detoast&lt;/em&gt; partiel : si on souhaite lire une seule clé du JSONB, on est contraint de &lt;em&gt;detoaster&lt;/em&gt; tout le JSONB &lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Cependant, il y a quelques exceptions où le JSON peut être utile :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Lorsqu&amp;rsquo;on n&amp;rsquo;a pas besoin de chercher dans de multiples champs et qu&amp;rsquo;on récupère le json via une autre colonne. (Statistiques sur les clés du json inutiles).&lt;/li&gt;&#xA;&lt;li&gt;Et, lorsqu&amp;rsquo;il serait très difficile de faire rentrer le json dans un schéma relationnel. Certains cas impliqueraient d&amp;rsquo;avoir énormément de colonnes et la plupart à &lt;code&gt;NULL&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Par exemple, pour stocker des caractéristiques de produit où une version normalisée entrainerait l&amp;rsquo;usage de beaucoup de colonnes dont la plupart seraient à &lt;code&gt;NULL&lt;/code&gt;.&#xA;Imaginons que vous stockez des produits, une télévision aurait des caractéristiques spécifiques (type d&amp;rsquo;écran, taille etc). Une machine à laver aurait aussi d&amp;rsquo;autre caractéristiques spécifiques (vitesse essorage, poids accepté&amp;hellip;).&lt;/p&gt;&#xA;&lt;p&gt;On pourrait ainsi envisager d&amp;rsquo;avoir des colonnes &amp;ldquo;normales&amp;rdquo; comprenant le modèle, son prix, sa référence etc, et une colonne contenant toutes les caractéristiques.&#xA;On accèderait à la ligne via la référence et ainsi on récupèrerait toutes les caractéristiques du produit stockées dans le json.&lt;/p&gt;&#xA;&lt;p&gt;Je vais réutiliser la table des posts de Stackoverflow en déplaçant quelques colonnes dans une colonne de type jsonb (colonne &lt;em&gt;jsonfield&lt;/em&gt; dans cet exemple):&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;\d posts&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            Unlogged table &amp;#34;public.posts&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        Column         |            Type             | Collation | Nullable | Default&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-----------------------+-----------------------------+-----------+----------+---------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; id                    | integer                     |           | not null |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; posttypeid            | integer                     |           | not null |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; acceptedanswerid      | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; parentid              | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; creationdate          | timestamp without time zone |           | not null |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; score                 | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; viewcount             | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; body                  | text                        |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; owneruserid           | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; lasteditoruserid      | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; lasteditordisplayname | text                        |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; lasteditdate          | timestamp without time zone |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; lastactivitydate      | timestamp without time zone |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; title                 | text                        |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; tags                  | text                        |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; answercount           | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; commentcount          | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; favoritecount         | integer                     |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; closeddate            | timestamp without time zone |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; communityowneddate    | timestamp without time zone |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; jsonfield             | jsonb                       |           |          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Voici une requête toute simple d&amp;rsquo;agrégation :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;viewcount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;answercount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commentcount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;favoritecount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;posts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                                          QUERY PLAN&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-------------------------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Aggregate  (cost=10265135.77..10265135.78 rows=1 width=128) (actual time=170221.557..170221.558 rows=1 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Buffers: shared hit=1 read=9186137&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   I/O Timings: read=138022.290&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   -&amp;gt;  Seq Scan on posts  (cost=0.00..9725636.88 rows=53949888 width=16) (actual time=0.014..153665.913 rows=53949886 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Buffers: shared hit=1 read=9186137&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         I/O Timings: read=138022.290&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Planning Time: 0.240 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Execution Time: 170221.627 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(8 rows)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;La requête lit 70 Go de données et met environ 2min 50s à s&amp;rsquo;exécuter.&lt;/p&gt;&#xA;&lt;p&gt;Maintenant la même requête, mais cette fois en utilisant les clés présentes dans le json.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jsonfield&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ViewCount&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jsonfield&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;AnswerCount&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jsonfield&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;CommentCount&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jsonfield&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;FavoriteCount&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;posts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                           QUERY PLAN&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Aggregate  (cost=11883632.41..11883632.42 rows=1 width=128)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            (actual time=520917.028..520917.030 rows=1 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Buffers: shared hit=241116554 read=13625756&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   -&amp;gt;  Seq Scan on posts  (cost=0.00..9725636.88 rows=53949888 width=570)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                          (actual time=0.972..70569.365 rows=53949886 loops=1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Buffers: shared read=9186138&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Planning Time: 0.118 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Execution Time: 520945.395 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(10 rows)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;La requête met environ 8min 40s à s&amp;rsquo;exécuter. En revanche le nombre de blocs lus semble un peu délirant :&lt;/p&gt;&#xA;&lt;p&gt;Le Seq Scan indique comme tout à l&amp;rsquo;heure 70Go. En revanche, le nœud parent indique plus de 1.9 To lus!&lt;/p&gt;&#xA;&lt;p&gt;Voici la taille de la table avec le paramétrage par défaut. Il faut savoir que pour certains enregistrements,&#xA;le moteur va, soit compresser la ligne dans la heap, soit la compresser et la placer dans le toast.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SELECT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  pg_size_pretty(pg_relation_size(oid)) table_size,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  pg_size_pretty(pg_relation_size(reltoastrelid)) toast_size&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;FROM pg_class&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;WHERE relname = &amp;#39;posts&amp;#39;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; table_size | toast_size&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;------------+-----------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 70 GB      | 33 GB&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(1 row)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Comment expliquer les 1.9 To lus ?&lt;/p&gt;&#xA;&lt;p&gt;Par curiosité, j&amp;rsquo;ai fait la même requête, mais avec une seule agrégation et j&amp;rsquo;obtiens environ 538 Go.&lt;/p&gt;&#xA;&lt;p&gt;On peut se poser plusieurs questions :&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Comment savoir si le moteur va lire le toast ?&lt;/li&gt;&#xA;&lt;li&gt;Pourquoi un tel écart de temps d&amp;rsquo;exécution entre la version &amp;ldquo;colonne standard&amp;rdquo; et champ jsonb?&lt;/li&gt;&#xA;&lt;li&gt;A quoi correspondent les compteurs dans le nœud &lt;code&gt;Aggregate&lt;/code&gt; ?&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Pour répondre à la première question, il suffit de lire la vue &lt;code&gt;pg_statio_user_tables&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Avant exécution de la requête :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;select relid,schemaname,relname,heap_blks_read,heap_blks_hit,toast_blks_read,toast_blks_hit from pg_statio_all_tables where relname in (&amp;#39;posts&amp;#39;,&amp;#39;pg_toast_26180851&amp;#39;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  relid   | schemaname |      relname      | heap_blks_read | heap_blks_hit | toast_blks_read | toast_blks_hit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;----------+------------+-------------------+----------------+---------------+-----------------+----------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 26180851 | public     | posts             |      422018238 |      87673549 |       129785076 |      628153337&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 26180854 | pg_toast   | pg_toast_26180851 |      129785076 |     628153337 |                 |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(2 rows)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Après :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  relid   | schemaname |      relname      | heap_blks_read | heap_blks_hit | toast_blks_read | toast_blks_hit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;----------+------------+-------------------+----------------+---------------+-----------------+----------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 26180851 | public     | posts             |      431204376 |      87673549 |       134156898 |      686299551&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 26180854 | pg_toast   | pg_toast_26180851 |      134156898 |     686299551 |                 |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(2 rows)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ce qui nous fait :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pg_size_pretty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;431204376&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;87673549&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;422018238&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;87673549&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;bigint&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;heap_buffers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pg_size_pretty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;134156898&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;686299551&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;129785076&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;628153337&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;bigint&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;toast_buffers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;heap_buffers&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;toast_buffers&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--------------+---------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;70&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GB&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;477&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GB&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Le moteur va bien lire le toast. En revanche les compteurs laissent penser que le moteur va lire plusieurs fois le toast.&lt;/p&gt;&#xA;&lt;p&gt;Si je fais le même calcul, mais cette fois en effectuant l&amp;rsquo;agrégation que sur un seul champ, j&amp;rsquo;obtiens 119 Go (~ 477 Go / 4)&#xA;J&amp;rsquo;imagine que le moteur lit le toast pour chaque fonction.&lt;/p&gt;&#xA;&lt;p&gt;Ensuite, l&amp;rsquo;écart du temps d&amp;rsquo;exécution s&amp;rsquo;explique par plusieurs facteurs :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Le moteur va devoir lire et &lt;em&gt;detoaster&lt;/em&gt; (décompresser) le toast&lt;/li&gt;&#xA;&lt;li&gt;Faire des opérations supplémentaires sur le jsonb pour accéder à la valeur&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Avec la première requête, le moteur n&amp;rsquo;avait pas à lire le toast. D&amp;rsquo;une part, il a moins de données à lire,&#xA;d&amp;rsquo;autre part, il n&amp;rsquo;a pas à manipuler le json pour identifier la clé et extraire la valeur à calculer.&lt;/p&gt;&#xA;&lt;p&gt;Enfin, les compteurs du nœud aggregate doivent correspondre aux données décompressées pour chaque fonction qui va lire dans le json.&#xA;En effet, si on prend le total moins le &lt;em&gt;seqscan&lt;/em&gt; de la table, donc que la partie &lt;em&gt;toast&lt;/em&gt;, on a :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;468 Go pour un seul champ&lt;/li&gt;&#xA;&lt;li&gt;936 Go, le double pour deux champs&lt;/li&gt;&#xA;&lt;li&gt;1873 Go pour les 4 champs (donc environ 4 x 468 Go)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;C&amp;rsquo;est ce qui explique pourquoi on obtient une valeur aussi élevée.&lt;/p&gt;&#xA;&lt;h1 id=&#34;paramétrage-avancé&#34;&gt;Paramétrage avancé&lt;/h1&gt;&#xA;&lt;p&gt;Maintenant, on va encourager Postgres à placer le maximum de données dans le toast grâce à l&amp;rsquo;option &lt;em&gt;toast_tuple_target&lt;/em&gt; apparue avec la version 11 de Postgres.&lt;/p&gt;&#xA;&lt;p&gt;Cette option permet de manipuler le seuil à partir duquel les données sont stockée dans le &lt;em&gt;toast&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Par ailleurs, étant sous Postgres 14, j&amp;rsquo;en ai profité pour utiliser l&amp;rsquo;algorithme de compression lz4 (paramètre &lt;em&gt;default_toast_compression&lt;/em&gt;).&#xA;Cet algorithme offre un ratio de compression similaire à pglz, cependant, il est beaucoup plus rapide (Voir &lt;a href=&#34;https://www.postgresql.fastware.com/blog/what-is-the-new-lz4-toast-compression-in-postgresql-14&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;What is the new LZ4 TOAST compression in PostgreSQL 14, and how fast is it?&lt;/a&gt;).&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;posts_toast&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WITH&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;toast_tuple_target&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;posts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Voici la taille de la table obtenue.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SELECT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  pg_size_pretty(pg_relation_size(oid)) table_size,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  pg_size_pretty(pg_relation_size(reltoastrelid)) toast_size&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;FROM pg_class&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;WHERE relname = &amp;#39;posts_toast&amp;#39;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; table_size | toast_size&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;------------+------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 59 GB      | 52 GB&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Au total, la table avec le toast fait grosso-modo la même taille. Dans l&amp;rsquo;exemple avec la première table,&#xA;il faut savoir que le moteur compresse aussi les données dans la heap.&lt;/p&gt;&#xA;&lt;p&gt;Rejouons notre requête d&amp;rsquo;agrégation :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;viewcount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;answercount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commentcount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;favoritecount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;posts_toast&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Cette fois la requête lit 59 Go de données et met 2min 17 secondes.&#xA;On a gagné environ 20% de temps d&amp;rsquo;exécution sur cet exemple.&lt;/p&gt;&#xA;&lt;p&gt;On pourrait gagner beaucoup plus si la partie stockée en toast était plus importante. Le volume de donnée à lire dans la heap serait beaucoup plus réduit.&lt;/p&gt;&#xA;&lt;p&gt;Par curiosité, j&amp;rsquo;ai aussi exécuté la requête qui fait l&amp;rsquo;agrégation depuis les données du champ json. J&amp;rsquo;obtiens un temps d&amp;rsquo;exécution de 7min 17s.&lt;/p&gt;&#xA;&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;&#xA;&lt;p&gt;Résumé en quelques chiffres :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Agrégation type standard, stockage standard : 2min 50s&lt;/li&gt;&#xA;&lt;li&gt;Agrégation type jsonb, stockage standard : 8min 40s&lt;/li&gt;&#xA;&lt;li&gt;Agrégation type standard, stockage avec &lt;em&gt;toast_tuple_target&lt;/em&gt; = 128 : 2min 17s&lt;/li&gt;&#xA;&lt;li&gt;Agrégation type jsonb, stockage avec &lt;em&gt;toast_tuple_target&lt;/em&gt; = 128 : 7min 17s&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;On constate que l&amp;rsquo;usage du JSON est bien plus couteux que d&amp;rsquo;utiliser les types standards. Le moteur doit faire plus d&amp;rsquo;opérations pour accéder à la valeur d&amp;rsquo;une clé json.&lt;/p&gt;&#xA;&lt;p&gt;Par ailleurs, il est obligé de décompresser les données dans le toast pour y accéder. Néanmoins, on peut aussi jouer avec le paramètre &lt;code&gt;toast_tuple_target&lt;/code&gt; pour pousser plus&#xA;d&amp;rsquo;informations dans le toast. Ainsi, dans certains cas, cela peut permettre de réduire la quantité de données lues en évitant de lire le toast.&lt;/p&gt;&#xA;&lt;h1 id=&#34;bonus&#34;&gt;Bonus&lt;/h1&gt;&#xA;&lt;p&gt;Comment souvent dans Postgres, tout évolue au fil des versions. Le TOAST n&amp;rsquo;échappe pas à cette règle.&#xA;Ainsi, quelques nouveautés pourraient apparaitre dans les prochaines versions :&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Un premier patch a été proposé pour avoir plus de statistiques sur le toast : &lt;a href=&#34;https://commitfest.postgresql.org/37/3457/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pg_stat_toast&lt;/a&gt;.&#xA;L&amp;rsquo;idée, est d&amp;rsquo;avoir des statistiques sur la compression : gain compression, stockage inline ou séparé dans le toast&amp;hellip;&lt;/li&gt;&#xA;&lt;li&gt;Un second patch appelé &lt;a href=&#34;https://commitfest.postgresql.org/37/3490/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pluggable toaster&lt;/a&gt;. Celui-ci est beaucoup plus important. Il propose d&amp;rsquo;étendre le &lt;em&gt;&amp;ldquo;toaster&amp;rdquo;&lt;/em&gt;.&#xA;L&amp;rsquo;idée serait de pouvoir proposer différents &lt;em&gt;&amp;ldquo;toaster&amp;rdquo;&lt;/em&gt; selon le type de donnée (notamment le JSONB).&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;&#xA;&lt;hr&gt;&#xA;&lt;ol&gt;&#xA;&lt;li id=&#34;fn:1&#34;&gt;&#xA;&lt;p&gt;Voir &lt;a href=&#34;https://git.postgresql.org/gitweb/?p=postgresql.git;a=blob;f=src/backend/access/heap/heaptoast.c;h=55bbe1d584760a849960871296dfbdd7447b2b67;hb=refs/heads/REL_14_STABLE#l160&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;heap_toast_insert_or_update&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li id=&#34;fn:2&#34;&gt;&#xA;&lt;p&gt;Il existe deux algorithmes de compression supportés : &lt;em&gt;pglz&lt;/em&gt; (historique et intégré dans Postgres) et &lt;em&gt;lz4&lt;/em&gt; (depuis Postgres 14).&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Pour &lt;em&gt;pglz&lt;/em&gt;, voir &lt;a href=&#34;https://git.postgresql.org/gitweb/?p=postgresql.git;a=blob;f=src/include/common/pg_lzcompress.h;h=3e53fbe97bd0a10e3fbf7ed4396924084f657868;hb=refs/heads/REL_14_STABLE#l25&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PGLZ_Strategy&lt;/a&gt;&#xA;et &lt;a href=&#34;https://git.postgresql.org/gitweb/?p=postgresql.git;a=blob;f=src/common/pg_lzcompress.c;h=a30a2c2eb83a71725754d8dd680621a02e7557e9;hb=refs/heads/REL_14_STABLE#l223&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;strategy_default_data&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Pour &lt;em&gt;lz4&lt;/em&gt;, il s&amp;rsquo;agit d&amp;rsquo;une librarie externe. Voir &lt;a href=&#34;https://github.com/lz4/lz4/blob/dev/lib/lz4.h#L145&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LZ4_compress_default&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li id=&#34;fn:3&#34;&gt;&#xA;&lt;p&gt;Voir les slides de la conférence d&amp;rsquo;Oleg Bartunov et Nikita Glukhov : &lt;a href=&#34;http://www.sai.msu.su/~megera/postgres/talks/jsonb-nizhny-2021.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;json or not json that is the question&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;</summary>
    <author>
      <name>blog.anayrat.info</name>
    </author>
  </entry>
  <entry>
    <title>Cas d&#39;usages du partitionnement natif dans PostgreSQL</title>
    <updated>2021-09-01T07:00:00Z</updated>
    <id>tag:blog.anayrat.info,2021-09-01:/2021/09/01/cas-dusages-du-partitionnement-natif-dans-postgresql/</id>
    <link href="https://blog.anayrat.info/2021/09/01/cas-dusages-du-partitionnement-natif-dans-postgresql/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Après une période d&amp;rsquo;inactivité, je reprends l&amp;rsquo;écriture d&amp;rsquo;articles techniques sur Postgres. C&amp;rsquo;est aussi pour moi l&amp;rsquo;occasion de vous annoncer mon changement d&amp;rsquo;activité. Depuis courant 2021 je suis passé freelance pour permettre aux entreprises de bénéficier de mon expérience sur Postgres.&lt;/p&gt;&#xA;&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;&#xA;  &lt;summary class=&#34;font-weight-bold&#34;&gt;Table des matières&lt;/summary&gt;&#xA;  &lt;nav id=&#34;TableOfContents&#34;&gt;&#xA;  &lt;ul&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#histoire-du-partitionnement-dans-postgresql&#34;&gt;Histoire du partitionnement dans PostgreSQL&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#erreurs-courantes&#34;&gt;Erreurs courantes&lt;/a&gt;&#xA;      &lt;ul&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#il-faut-partitionner-dès-que-la-volumétrie-est-importante&#34;&gt;&amp;ldquo;Il faut partitionner dès que la volumétrie est importante&amp;rdquo;&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#il-faut-partitionner-pour-répartir-les-données-sur-plusieurs-disques&#34;&gt;&amp;ldquo;Il faut partitionner pour répartir les données sur plusieurs disques&amp;rdquo;&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;/ul&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#cas-dusages-du-partitionnement&#34;&gt;Cas d&amp;rsquo;usages du partitionnement&lt;/a&gt;&#xA;      &lt;ul&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#partitionner-pour-gérer-la-rétention&#34;&gt;Partitionner pour gérer la rétention&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#partitionner-pour-contrôler-la-fragmentation-des-index&#34;&gt;Partitionner pour contrôler la fragmentation des index&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#partitionner-pour-faciliter-lexécution-de-requête-lorsque-la-cardinalité-est-faible&#34;&gt;Partitionner pour faciliter l&amp;rsquo;exécution de requête lorsque la cardinalité est faible&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#partitionner-pour-obtenir-de-meilleures-statistiques&#34;&gt;Partitionner pour obtenir de meilleures statistiques&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#partitionwise-join--partitionwise-aggregate&#34;&gt;partitionwise join &amp;amp; partitionwise aggregate&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#stockage-avec-tiering&#34;&gt;Stockage avec tiering&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;/ul&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/nav&gt;&#xA;&lt;/details&gt;&#xA;&lt;h1 id=&#34;histoire-du-partitionnement-dans-postgresql&#34;&gt;Histoire du partitionnement dans PostgreSQL&lt;/h1&gt;&#xA;&lt;p&gt;PostgreSQL permet depuis très longtemps de partitionner des tables en exploitant l&amp;rsquo;héritage de table. Toutefois, cette méthode était assez lourde à mettre en oeuvre : elle impliquait de mettre en place soi-même des triggers pour rediriger les écritures (moins performant que le partitionnement natif), le temps de planification pouvait augmenter fortement au-delà d&amp;rsquo;une centaine de partitions&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;Le partitionnement natif est arrivé avec la version 10. C&amp;rsquo;est depuis cette version que le moteur est capable (entre autres) de diriger lui-même les écritures vers les bonnes tables, lire seulement les tables concernées, d&amp;rsquo;utiliser des algorithmes exploitant le partitionnement etc.&#xA;Il offre ainsi de meilleures performances et une facilité d&amp;rsquo;exploitation. On peut entre autres :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Partitionner :&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Par liste&lt;/li&gt;&#xA;&lt;li&gt;Par hashage&lt;/li&gt;&#xA;&lt;li&gt;Par intervalles&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Faire des partitionnements à plusieurs niveaux&lt;/li&gt;&#xA;&lt;li&gt;Partitionner sur plusieurs colonnes&lt;/li&gt;&#xA;&lt;li&gt;Utiliser des clés primaires et clés étrangères&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Toutes ces fonctionnalités sont intéressantes, mais on en vient à se poser une question toute bête : quand mettre en oeuvre le partitionnement?&lt;/p&gt;&#xA;&lt;p&gt;Je vais vous présenter plusieurs cas d&amp;rsquo;usages que j&amp;rsquo;ai pu rencontrer. Mais avant, voici quelques erreurs courantes sur le partitionnement.&lt;/p&gt;&#xA;&lt;h1 id=&#34;erreurs-courantes&#34;&gt;Erreurs courantes&lt;/h1&gt;&#xA;&lt;h2 id=&#34;il-faut-partitionner-dès-que-la-volumétrie-est-importante&#34;&gt;&amp;ldquo;Il faut partitionner dès que la volumétrie est importante&amp;rdquo;&lt;/h2&gt;&#xA;&lt;p&gt;Déjà, qu&amp;rsquo;est-ce qu&amp;rsquo;une volumétrie &amp;ldquo;importante&amp;rdquo;?&lt;/p&gt;&#xA;&lt;p&gt;Certains diront que c&amp;rsquo;est au-delà de plusieurs centaines de Go, d&amp;rsquo;autres au-delà du téraoctet, d&amp;rsquo;autres encore au-delà du pétaoctet&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;Il n&amp;rsquo;existe pas vraiment de réponse à cette question et globalement ça va dépendre du type d&amp;rsquo;activité : ratio INSERT/UPDATE/DELETE, type de SELECT (OLTP, OLAP&amp;hellip;).&#xA;Ca dépendra également du matériel. Il y a 10 ans, quand les serveurs n&amp;rsquo;avaient que quelques Go de RAM avec des disques mécaniques, il était probable qu&amp;rsquo;une base de quelques centaines de Go soit perçue comme une grosse base.&#xA;Maintenant il n&amp;rsquo;est pas rare de voir des serveurs avec plus d&amp;rsquo;un téraoctet de RAM, des disques NVMe.&lt;/p&gt;&#xA;&lt;p&gt;Ainsi, une base de quelques centaines de Go n&amp;rsquo;est plus considérée comme une grosse base. Mais plutôt comme une base de taille modeste.&lt;/p&gt;&#xA;&lt;p&gt;Petite anecdote, pour se rassurer, un client m&amp;rsquo;a questionné si Postgres était déjà utilisé pour des volumétries &amp;ldquo;importantes&amp;rdquo;. On parlait alors d&amp;rsquo;une base d&amp;rsquo;une quarantaine de Go sur un serveur qui disposait de 64Go de RAM. Toutes les lectures se faisaient depuis le cache&amp;hellip; :). J&amp;rsquo;ai pu le rassurer sur la taille de sa base qui était relativement modeste.&lt;/p&gt;&#xA;&lt;p&gt;Il peut tout à fait être superflu de partitionner une base de quelques To comme il peut être nécessaire de partitionner une base de quelques centaines de Go. Par exemple, si l&amp;rsquo;activité consiste juste à ajouter des lignes à des tables et que les requêtes se résument à de simple &lt;code&gt;WHERE colonne = 4&lt;/code&gt; qui retournent quelques lignes. Un simple Btree fera l&amp;rsquo;affaire. Et si la requête retourne un nombre assez important de lignes, il est possible d&amp;rsquo;utiliser les index BRIN ou les bloom filter.&lt;/p&gt;&#xA;&lt;p&gt;Les index BRIN présentent des bénéfices proches du partitionnement ou sharding en évitant la complexité de mise en oeuvre&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;il-faut-partitionner-pour-répartir-les-données-sur-plusieurs-disques&#34;&gt;&amp;ldquo;Il faut partitionner pour répartir les données sur plusieurs disques&amp;rdquo;&lt;/h2&gt;&#xA;&lt;p&gt;L&amp;rsquo;idée serait de créer des partitions et des tablespaces sur différents disques afin de répartir les opérations d&amp;rsquo;entrées/sorties.&lt;/p&gt;&#xA;&lt;p&gt;Pour PostgreSQL, un tablespace n&amp;rsquo;est ni plus, ni moins qu&amp;rsquo;un chemin vers un répertoire. Il est tout à fait possible&#xA;de gérer le stockage au niveau du système d&amp;rsquo;exploitation et d&amp;rsquo;agréger plusieurs disques (en RAID10) par exemple.&#xA;Ensuite, il suffit de stocker la table sur le volume créé. Ainsi, on peut répartir les I/O sur un ensemble de disques.&lt;/p&gt;&#xA;&lt;p&gt;Dans ce cas, il n&amp;rsquo;est donc pas nécessaire de mettre en oeuvre le partitionnement. Toutefois, nous verrons un cas où il pourrait avoir du sens.&lt;/p&gt;&#xA;&lt;p&gt;Maintenant nous allons nous intéresser à des cas d&amp;rsquo;usage &amp;ldquo;légitimes&amp;rdquo; du partitionnement.&lt;/p&gt;&#xA;&lt;h1 id=&#34;cas-dusages-du-partitionnement&#34;&gt;Cas d&amp;rsquo;usages du partitionnement&lt;/h1&gt;&#xA;&lt;h2 id=&#34;partitionner-pour-gérer-la-rétention&#34;&gt;Partitionner pour gérer la rétention&lt;/h2&gt;&#xA;&lt;p&gt;A cause du modèle MVCC, la suppression massive de données entraine de la fragmentation dans les tables.&lt;/p&gt;&#xA;&lt;p&gt;Un cas d&amp;rsquo;usage possible est de partitionner par date. Supprimer les anciennes données revient à supprimer une partition complète. L&amp;rsquo;opération sera rapide et les tables ne seront pas fragmentées&lt;/p&gt;&#xA;&lt;h2 id=&#34;partitionner-pour-contrôler-la-fragmentation-des-index&#34;&gt;Partitionner pour contrôler la fragmentation des index&lt;/h2&gt;&#xA;&lt;p&gt;L&amp;rsquo;ajout et modification de données dans une table fragmente les index au fil du temps. Pour faire simple, on ne peut pas récupérer l&amp;rsquo;espace libre dans un bloc tant qu&amp;rsquo;il n&amp;rsquo;est pas vide. Avec le temps les splits d&amp;rsquo;index créent du &amp;ldquo;vide&amp;rdquo; dans ce dernier et le seul moyen de récupérer cet espace est de reconstruire l&amp;rsquo;index.&lt;/p&gt;&#xA;&lt;p&gt;On appelle cela le &amp;ldquo;bloat&amp;rdquo;. Il y a eu de nombreuses améliorations sur les dernières versions de Postgres:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Version 12, on peut lire dans les &lt;a href=&#34;https://www.postgresql.org/docs/12/release-12.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Releases Notes&lt;/a&gt;:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Improve performance and space utilization of btree indexes with many duplicates (Peter Geoghegan, Heikki Linnakangas)&lt;/p&gt;&#xA;&lt;p&gt;Previously, duplicate index entries were stored unordered within their duplicate groups. This caused overhead during index inserts, wasted space due to excessive page splits, and it reduced VACUUM&amp;rsquo;s ability to recycle entire pages. Duplicate index entries are now sorted in heap-storage order.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Version 13, on peut lire dans les &lt;a href=&#34;https://www.postgresql.org/docs/13/release-13.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Releases Notes&lt;/a&gt;:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;More efficiently store duplicates in B-tree indexes (Anastasia Lubennikova, Peter Geoghegan)&lt;/p&gt;&#xA;&lt;p&gt;This allows efficient B-tree indexing of low-cardinality columns by storing duplicate keys only once. Users upgrading with pg_upgrade will need to use REINDEX to make an existing index use this feature.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Version 14, on peut lire dans les &lt;a href=&#34;https://www.postgresql.org/docs/14/release-14.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Releases Notes&lt;/a&gt;:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Allow btree index additions to remove expired index entries to prevent page splits (Peter Geoghegan)&lt;/p&gt;&#xA;&lt;p&gt;This is particularly helpful for reducing index bloat on tables whose indexed columns are frequently updated.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Pour contrôler le bloat, on pourrait reconstruire l&amp;rsquo;index à intervalles réguliers (merci &lt;code&gt;REINDEX CONCURRENTLY&lt;/code&gt; arrivé en version 12). Cette solution serait contraignante, car il faudrait régulièrement reconstruire l&amp;rsquo;intégralité de l&amp;rsquo;index.&lt;/p&gt;&#xA;&lt;p&gt;Si la majorité des modifications sont faites sur les données récentes, par exemple: table de logs, commandes clients, rendez-vous&amp;hellip; On pourrait imaginer un partitionnement par mois. Ainsi, à chaque début de mois on part sur une table &amp;ldquo;neuve&amp;rdquo; et on peut ré-indexer la précédente table pour supprimer le bloat.&lt;/p&gt;&#xA;&lt;p&gt;On peut aussi en profiter pour faire un &lt;code&gt;CLUSTER&lt;/code&gt; sur la table pour avoir une bonne corrélation des données avec le stockage.&lt;/p&gt;&#xA;&lt;h2 id=&#34;partitionner-pour-faciliter-lexécution-de-requête-lorsque-la-cardinalité-est-faible&#34;&gt;Partitionner pour faciliter l&amp;rsquo;exécution de requête lorsque la cardinalité est faible&lt;/h2&gt;&#xA;&lt;p&gt;Petit à petit on va voir des cas d&amp;rsquo;usages un peu plus compliqués :)&lt;/p&gt;&#xA;&lt;p&gt;Prenons un exemple : une table de commande comprenant un statut de livraison, au bout de quelques années 99% des commandes sont livrées (on l&amp;rsquo;espère!) et très peu en cours de paiement ou livraison.&lt;/p&gt;&#xA;&lt;p&gt;Imaginons qu&amp;rsquo;on souhaite récupérer 100 commandes en cours de livraison. On va créer un index sur le statut et l&amp;rsquo;utiliser pour récupérer les enregistrements.&#xA;En étant un peu astucieux, on peut créer un index partiel sur ce statut particulier. Problème, cet index va se fragmenter assez vite au fur et à mesure que les commandes seront livrées.&lt;/p&gt;&#xA;&lt;p&gt;Dans ce cas on pourrait faire un partitionnement sur le statut. Ainsi, récupérer 100 commandes en cours de livraison revient à lire 100 enregistrements de la partition.&lt;/p&gt;&#xA;&lt;h2 id=&#34;partitionner-pour-obtenir-de-meilleures-statistiques&#34;&gt;Partitionner pour obtenir de meilleures statistiques&lt;/h2&gt;&#xA;&lt;p&gt;Pour déterminer le meilleur plan d&amp;rsquo;exécution, Postgres prend des décisions à partir des statistiques d&amp;rsquo;une table. Ces statistiques sont obtenues à partir d&amp;rsquo;un échantillon de la table (le &lt;code&gt;default_statistic_target&lt;/code&gt; qui vaut 100 par défaut).&lt;/p&gt;&#xA;&lt;p&gt;Par défaut le moteur va collecter 300 x &lt;code&gt;default_statistic_target&lt;/code&gt; lignes, soit 30 000 lignes. Avec une table de plusieurs centaines de millions de lignes, cet échantillon est parfois trop petit.&lt;/p&gt;&#xA;&lt;p&gt;On peut augmenter de manière drastique la taille de l&amp;rsquo;échantillon, mais cette approche présente quelques inconvénients:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Ca alourdis le temps de planification&lt;/li&gt;&#xA;&lt;li&gt;Ca alourdis le &lt;code&gt;ANALYZE&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Parfois ce n&amp;rsquo;est pas suffisant si les données sont mal réparties. Par exemple si on prend quelques centaines de milliers de lignes sur une table qui comprend plusieurs centaines de millions, on peut rater les lignes dont le statut est en livraison.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Avec le partitionnement on pourrait avoir un même échantillon, mais par partition, ce qui permet de gagner en précision.&lt;/p&gt;&#xA;&lt;p&gt;Ce serait également utile quand on a des données corrélées entre colonnes. Je vais reprendre l&amp;rsquo;exemple des commandes. On a une année entière de commandes: toutes les commandes qui ont plus d&amp;rsquo;un mois sont livrées, celles du dernier mois sont livrées à 90% (10% sont en cours de livraison).&lt;/p&gt;&#xA;&lt;p&gt;Intuitivement, si je cherche une commande en cours de livraison il y a plus de 6 mois je ne devrais pas avoir de résultat. Inversement, si je cherche des commandes en cours de livraison sur le dernier mois, je devrais obtenir 10% de la table. Or, le moteur ne le sait pas, pour lui les commandes en cours de livraison sont réparties sur toute la table.&lt;/p&gt;&#xA;&lt;p&gt;Avec un partitionnement par date, il peut estimer qu&amp;rsquo;il n&amp;rsquo;y a pas de commande en cours de livraisons de plus d&amp;rsquo;un mois. Ce type d&amp;rsquo;approche permet surtout de réduire une erreur d&amp;rsquo;estimation dans un plan d&amp;rsquo;exécution.&lt;/p&gt;&#xA;&lt;p&gt;Voici un exemple avec cette table de commandes, &lt;code&gt;orders_p&lt;/code&gt; est la version partitionnée par mois de la table &lt;code&gt;orders&lt;/code&gt;. Les données étant identiques dans les deux tables.&lt;/p&gt;&#xA;&lt;p&gt;On peut remarquer que l&amp;rsquo;estimation est bien meilleure dans le cas où la table est partitionnée, le moteur ayant des statistiques par partition.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;19&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;22&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;25&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;EXPLAIN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ANALYZE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;BETWEEN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-01-01&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-01-31&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                                                  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;QUERY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PLAN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_13_state_idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_13&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;42&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;45&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Cond&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-01-01&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-01-31&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Planning&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;120&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Execution&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;059&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;EXPLAIN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ANALYZE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;BETWEEN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-01-01&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-01-31&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                                                  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;QUERY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PLAN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;---------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_state_idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;44&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;13168&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3978&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Cond&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-01-01&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-01-31&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Rows&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Removed&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;by&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100161&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Planning&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;188&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Execution&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;141&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;571&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;Maintenant prenons la même requête sur le dernier mois:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;19&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;22&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;26&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;EXPLAIN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ANALYZE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;BETWEEN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-07-01&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-07-31&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                                                       &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;QUERY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PLAN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;-------------------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_19_state_idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_19&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;43&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2417&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;19215&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20931&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Cond&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-07-01&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-07-31&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Planning&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;297&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Execution&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;618&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;EXPLAIN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ANALYZE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;BETWEEN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-07-01&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-07-31&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                                                     &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;QUERY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PLAN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--------------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_state_idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;44&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;13168&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15008&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20931&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Cond&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-07-01&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2021-07-31&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Rows&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Removed&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;by&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;79230&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Planning&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;173&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Execution&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;146&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;326&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;Ici aussi on peut remarquer que l&amp;rsquo;estimation est meilleure.&lt;/p&gt;&#xA;&lt;h2 id=&#34;partitionwise-join--partitionwise-aggregate&#34;&gt;partitionwise join &amp;amp; partitionwise aggregate&lt;/h2&gt;&#xA;&lt;p&gt;Un autre intérêt du partitionnement est de bénéficier de meilleurs algorithmes pour les jointures et agrégation.&lt;/p&gt;&#xA;&lt;p&gt;Le &lt;code&gt;partitionwise aggregate&lt;/code&gt; permet de faire une agregation ou un regroupement partition par partition. Un exemple vaut mieux qu&amp;rsquo;un long discours:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;16&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20&#xA;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;21&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;explain&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;analyze&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timing&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;group&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;by&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                                                  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;QUERY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PLAN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HashAggregate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;508361&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;508365&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;45&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;365&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;365&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Group&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Append&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;408317&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;35&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20008890&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20000000&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_01&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;70&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1270&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_02&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;70&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1270&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[...]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_19&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;45308&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;04&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2941004&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2941004&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_20&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;131708&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8549421&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8549421&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Planning&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;576&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Execution&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5273&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;217&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;enable_partitionwise_aggregate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;explain&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;analyze&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timing&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;group&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;by&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                                                  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;QUERY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PLAN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--------------------------------------------------------------------------------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Append&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;05&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;408343&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;83&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1765&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;365&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HashAggregate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;05&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;05&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Group&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_01&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;70&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1270&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HashAggregate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;05&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;05&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Group&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_02&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_02&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;70&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1270&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[...]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HashAggregate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;60013&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;06&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;60013&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;37&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Group&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_19&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;45308&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;04&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2941004&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2941004&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HashAggregate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;174455&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;174455&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;55&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Group&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Seq&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scan&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders_20&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;131708&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8549421&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;actual&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8549421&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Planning&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;461&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Execution&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4669&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;315&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;63&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;Dans le premier cas l&amp;rsquo;agrégation se fait une fois pour toutes les tables, alors que dans le second exemple, on fait l&amp;rsquo;agrégation par partition.&#xA;On peut également remarquer que le coût total est inférieur dans le plan avec agrégation par partition.&lt;/p&gt;&#xA;&lt;p&gt;Le &lt;code&gt;partitionwise join&lt;/code&gt; fonctionne sur le même principe, on fait une jointure partition par partition. C&amp;rsquo;est utile pour joindre deux tables partitionnées.&lt;/p&gt;&#xA;&lt;h2 id=&#34;stockage-avec-tiering&#34;&gt;Stockage avec tiering&lt;/h2&gt;&#xA;&lt;p&gt;Enfin, un autre cas d&amp;rsquo;usage serait de vouloir stocker une partie de la table sur un stockage différent:&lt;/p&gt;&#xA;&lt;p&gt;On peut stocker une table partitionnée dans des tablespaces différents. Par exemple les données récentes sur un tablespace rapide sur SSD NVMe.&#xA;Puis les données plus rarement accédées sur un autre tablespace, avec des disques mécaniques moins couteux.&lt;/p&gt;&#xA;&lt;p&gt;Cette approche peut aussi avoir du sens à l&amp;rsquo;heure du cloud où le stockage est très onéreux.&lt;/p&gt;&#xA;&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;&#xA;&lt;p&gt;Voilà, je pense avoir fait le tour des principaux cas d&amp;rsquo;usages qui me venaient en tête.&lt;/p&gt;&#xA;&lt;p&gt;Evidemment, la mise en oeuvre du partitionnement implique une plus grande complexité (gestion des partitions&amp;hellip;)&#xA;et des limitations qu&amp;rsquo;il faudra étudier en amont.&lt;/p&gt;&#xA;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;&#xA;&lt;hr&gt;&#xA;&lt;ol&gt;&#xA;&lt;li id=&#34;fn:1&#34;&gt;&#xA;&lt;p&gt;&amp;ldquo;BRIN indexes provide similar benefits to horizontal partitioning or sharding but without needing to explicitly declare partitions.&amp;rdquo; - &lt;a href=&#34;https://en.wikipedia.org/wiki/Block_Range_Index&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://en.wikipedia.org/wiki/Block_Range_Index&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;</summary>
    <author>
      <name>blog.anayrat.info</name>
    </author>
  </entry>
  <entry>
    <title>pg_sampletolog : Une extension permettant de loguer un échantillon de requêtes</title>
    <updated>2019-01-28T06:00:00Z</updated>
    <id>tag:blog.anayrat.info,2019-01-28:/2019/01/28/pg_sampletolog-une-extension-permettant-de-loguer-un-echantillon-de-requetes/</id>
    <link href="https://blog.anayrat.info/2019/01/28/pg_sampletolog-une-extension-permettant-de-loguer-un-echantillon-de-requetes/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cet article va vous présenter une extension que j&amp;rsquo;ai développé dans le but de&#xA;loguer un échantillon de requêtes.&lt;/p&gt;&#xA;&lt;p&gt;Lorsqu&amp;rsquo;un DBA est confronté à un problème de performance, il aura pour&#xA;réflexe d&amp;rsquo;inspecter les logs, mais également la vue &lt;code&gt;pg_stat_statements&lt;/code&gt;.&#xA;Une requête coûteuse apparaîtra dans &lt;code&gt;pg_stat_statements&lt;/code&gt; et dans les logs si la&#xA;requête dépasse &lt;code&gt;log_min_duration_statement&lt;/code&gt;. On peut ainsi rejouer la requête,&#xA;obtenir son plan d&amp;rsquo;exécution et investiguer.&lt;/p&gt;&#xA;&lt;p&gt;Pour aller encore plus loin, il est possible d&amp;rsquo;activer l&amp;rsquo;extension &lt;code&gt;auto_explain&lt;/code&gt;.&#xA;Ainsi on aura directement le plan de la requête. Au passage, l&amp;rsquo;option &lt;code&gt;auto_explain.log_analyze&lt;/code&gt;&#xA;n&amp;rsquo;implique pas une double exécution de la requête. Ce paramètre peut être activé&#xA;sans crainte. Néanmoins cela peut s&amp;rsquo;avérer coûteux car le moteur doit mettre en&#xA;place l&amp;rsquo;instrumentation pour obtenir le &lt;em&gt;timing&lt;/em&gt; des différents nœuds. Si on a&#xA;beaucoup de trafic, il est également possible de faire un échantillonnage avec&#xA;&lt;code&gt;auto_explain.sample_rate&lt;/code&gt;. Cette option peut produire une quantité importante&#xA;de logs ce qui peut être problématique sur une instance à fort trafic.&lt;/p&gt;&#xA;&lt;p&gt;J&amp;rsquo;ai été confronté à un problème tout simple : comment investiguer sur une requête&#xA;dont le temps d&amp;rsquo;exécution est très court? C&amp;rsquo;est très simple &amp;ldquo;Regardez &lt;code&gt;pg_stat_statements&lt;/code&gt;!&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;Voici ce qu&amp;rsquo;on pourrait obtenir sur un test pgbench :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;query               | SELECT abalance FROM pgbench_accounts WHERE aid = $1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;calls               | 12000&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;total_time          | 214.564185000001&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;min_time            | 0.013751&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;max_time            | 0.044711&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mean_time           | 0.0178803487499999&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;La requête est normalisée. Sans paramètre impossible d&amp;rsquo;obtenir son plan. choisir&#xA;un paramètre au hasard n&amp;rsquo;est pas la bonne solution : ce n&amp;rsquo;est pas forcément représentatif&#xA;du véritable trafic de production.&lt;/p&gt;&#xA;&lt;p&gt;Il y a quelques mois, j&amp;rsquo;ai proposé un patch pour loguer un échantillon de requêtes.&#xA;Celui-ci a été intégré dans la version 12 en cours de développement :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;commit&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;88&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bdbd3f746049834ae3cc972e6e650586ec3c9d&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Author&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;     &lt;span class=&#34;n&#34;&gt;Alvaro&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Herrera&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alvherre&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alvh&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;no&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ip&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;org&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;AuthorDate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Thu&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Nov&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;42&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;53&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2018&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0300&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Commit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;     &lt;span class=&#34;n&#34;&gt;Alvaro&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Herrera&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alvherre&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alvh&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;no&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ip&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;org&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;CommitDate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Thu&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Nov&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;42&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;53&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2018&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0300&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Add&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;log_statement_sample_rate&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;parameter&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;This&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;allows&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lower&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;log_min_duration_statement&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;without&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;incurring&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;excessive&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;log&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;traffic&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;which&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;reduces&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;performance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;This&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;can&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;be&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;useful&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;analyze&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;workloads&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lots&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;short&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queries&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Author&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Adrien&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Nayrat&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Reviewed&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;by&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;David&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Rowley&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Vik&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Fearing&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Discussion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;postgr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;es&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c30ee535&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ee1e&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db9f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fa97&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;146&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b9f62caed&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;anayrat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;info&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dans le fil des échanges, Nikolay Samokhvalov a émis l&amp;rsquo;idée d&amp;rsquo;avoir ce même type&#xA;fonctionnalité mais au niveau d&amp;rsquo;une transaction : &lt;a href=&#34;https://www.postgresql.org/message-id/CANNMO%2BLg65EFqHb%2BZYbMLKyE2y498HJzsdFrMnW1dQ6AFJ3Mpw%40mail.gmail.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.postgresql.org/message-id/CANNMO%2BLg65EFqHb%2BZYbMLKyE2y498HJzsdFrMnW1dQ6AFJ3Mpw%40mail.gmail.com&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;J&amp;rsquo;ai également proposé un patch en ce sens : &lt;a href=&#34;https://commitfest.postgresql.org/21/1923/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Log a sample of transactions&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Tout ça est intéressant, mais il faudra attendre la version 12. Et encore, rien&#xA;ne garanti que le second patch soit commité (ou que le premier ne soit pas reverté).&lt;/p&gt;&#xA;&lt;p&gt;Tout ça m&amp;rsquo;a donné l&amp;rsquo;idée et l&amp;rsquo;envie de créer une extension, c&amp;rsquo;est ainsi qu&amp;rsquo;est née&#xA;&lt;a href=&#34;https://github.com/anayrat/pg_sampletolog&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pg_sampletolog&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Cette extension permet de :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Loguer un échantillon de requêtes&lt;/li&gt;&#xA;&lt;li&gt;Loguer un échantillon de transactions&lt;/li&gt;&#xA;&lt;li&gt;Choisir de loguer avant ou après l&amp;rsquo;exécution (pour un usage futur avec pgreplay)&lt;/li&gt;&#xA;&lt;li&gt;Choisir de loguer tous les ordres de type DDL ou qui impliquent une modification des donnée&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Elle fonctionne sur toutes les versions supportées, de la 9.4 à la 11.&lt;/p&gt;&#xA;&lt;p&gt;L&amp;rsquo;activation se fait soit dans une session en chargeant l&amp;rsquo;extension : &lt;code&gt;LOAD &#39;pg_sampletolog&#39;;&lt;/code&gt;.&#xA;Ou dans le fichier postgresql.conf pour qu&amp;rsquo;elle soit chargée lors de toute nouvelle&#xA;connexion avec  &lt;code&gt;session_preload_libraries = &#39;pg_sampletolog&#39;&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Si l&amp;rsquo;extension est bien chargée, ces nouveaux paramètres apparaissent :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;select name from pg_settings where name like &amp;#39;pg_sampletolog%&amp;#39;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                 name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;----------------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; pg_sampletolog.disable_log_duration&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; pg_sampletolog.log_before_execution&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; pg_sampletolog.log_level&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; pg_sampletolog.log_statement&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; pg_sampletolog.statement_sample_rate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; pg_sampletolog.transaction_sample_rate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(6 rows)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Voici quelques exemples :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Loguer seulement 10% des requêtes : &lt;code&gt;pg_sampletolog.statement_sample_rate = 0.1&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;pg_sampelog va loguer 10% des requêtes. Pour chaque requête, le moteur va faire&#xA;un tirage aléatoire à l&amp;rsquo;aide de la fonction &lt;code&gt;random()&lt;/code&gt;. Le coût de cette fonction&#xA;est très faible, donc il ne devrait pas y avoir d&amp;rsquo;impact sur les performances.&#xA;Après quelques requêtes vous devriez obtenir ce genre de message dans les logs :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2019-01-27 12:50:39.361 CET [27047] LOG:  Sampled query duration: 0.014 ms - SELECT 1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;pg_sampelog va loguer la requête ainsi que son temps d&amp;rsquo;exécution.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Loguer seulement 10% des transactions : &lt;code&gt;pg_sampletolog.transaction_sample_rate = 0.1&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Le fonctionnement est le même que précédemment, à la différence que le moteur va&#xA;choisir de loguer ou non toutes les requêtes d&amp;rsquo;une même transaction. Cela peut s&amp;rsquo;avérer&#xA;très utile pour comprendre ce que fait un applicatif. Par exemple lorsqu&amp;rsquo;on ne peut&#xA;pas accéder au code de l&amp;rsquo;applicatif ou lorsque les requêtes sont générées par un ORM.&#xA;Exemple avec une transaction toute simple &lt;code&gt;BEGIN; SELECT 1; SELECT 1; COMMIT;&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2019-01-27 12:51:40.562 CET [27069] LOG:  Sampled transaction duration: 0.008 ms - SELECT 1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2019-01-27 12:51:40.562 CET [27069] LOG:  Sampled transaction duration: 0.005 ms - SELECT 1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Les deux SELECT ont bien été logués. En adaptant le &lt;code&gt;log_line_prefix&lt;/code&gt;, on peut&#xA;voir qu&amp;rsquo;il s&amp;rsquo;agit de la même transaction (regardez le &lt;em&gt;lxid&lt;/em&gt;):&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2019-01-27 16:32:16 CET [18556]: lxid=3/177,db=postgres,user=anayrat LOG:  Sampled transaction - SELECT 1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2019-01-27 16:32:16 CET [18556]: lxid=3/177,db=postgres,user=anayrat LOG:  Sampled transaction - SELECT 1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;Loguer tous les ordres DDL : &lt;code&gt;pg_sampletolog.log_statement = &#39;ddl&#39;&lt;/code&gt;:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;pg_sampletolog va loguer tous les ordres de type DDL (&lt;code&gt;CREATE TABLE&lt;/code&gt;,&lt;code&gt;CREATE INDEX&lt;/code&gt;,&amp;hellip;).&#xA;Ca peut être utile si on veut juste loguer un échantillon en lecture mais tous&#xA;les ordres DDL.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2019-01-27 12:53:47.564 CET [27103] LOG:  Sampled ddl CREATE TABLE t1(c1 int);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;Loguer tous les ordres modifiants des données : &lt;code&gt;pg_sampletolog.log_statement = &#39;mod&#39;&lt;/code&gt;:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Exactement comme l&amp;rsquo;exemple précédent, mais cette fois on logue aussi tous les &lt;code&gt;UPDATES, DELETE&lt;/code&gt;.&#xA;Cela comprend aussi les ordres DDL.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2019-01-27 12:59:54.043 CET [27160] LOG:  Sampled query duration: 0.246 ms - INSERT INTO t1 VALUES(1);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2019-01-27 13:00:16.468 CET [27160] LOG:  Sampled ddl CREATE INDEX ON t1(c1);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;Loguer la requête avant son exécution : &lt;code&gt;pg_sampletolog.log_before_execution = on&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Cette option pourrait être utile pour rejouer logs avec &lt;a href=&#34;https://github.com/laurenz/pgreplay&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pgreplay&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;bonus&#34;&gt;Bonus&lt;/h1&gt;&#xA;&lt;p&gt;L&amp;rsquo;extension fonctionne aussi sur les serveurs secondaires.&lt;/p&gt;&#xA;&lt;h1 id=&#34;deuxième-bonus&#34;&gt;Deuxième bonus&lt;/h1&gt;&#xA;&lt;p&gt;Si &lt;code&gt;pg_stat_statements&lt;/code&gt; est activée, le queryid est également logué. Ca peut être&#xA;très utile si vous identifiez une requête dans &lt;code&gt;pg_stat_statements&lt;/code&gt; et que vous&#xA;souhaitez la retrouver dans les logs à l&amp;rsquo;aide de son queryid.&lt;/p&gt;&#xA;&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;&#xA;&lt;p&gt;Je me suis régalé avec ce projet personnel. J&amp;rsquo;ai beaucoup appris sur &lt;del&gt;les segfaults&lt;/del&gt;&#xA;le code de postgres et ça montre également les possibilités d&amp;rsquo;extension du moteur.&lt;/p&gt;&#xA;&lt;p&gt;A l&amp;rsquo;avenir j&amp;rsquo;aimerai rajouter la possibilité de loguer un échantillon de requête&#xA;correspondant à tel queryid. Il faut également que je regarde pour supporter les&#xA;requêtes préparées.&lt;/p&gt;&#xA;&lt;p&gt;Enfin, j&amp;rsquo;aimerai tester cette extension avec pgreplay : En loguant tous les ordres&#xA;&lt;em&gt;MOD&lt;/em&gt; (afin d&amp;rsquo;assurer la cohérence lors du rejeu) ainsi qu&amp;rsquo;une fraction des&#xA;requêtes en lecture. Puis, restaurer un backup PITR et d&amp;rsquo;un côté rejouer le trafic en écriture.&#xA;De l&amp;rsquo;autre côté, rejouer une portion du trafic en lecture avec un &lt;em&gt;speed_factor&lt;/em&gt;.&#xA;Par exemple x10 en rejouant 10% du trafic. Même si ça ne sera jamais parfait (il&#xA;manquera la cohérence des lectures), je serai curieux de voir les résultats qu&amp;rsquo;on&#xA;peut obtenir. Surtout dans le cas où loguer toutes les requêtes s’avérerait trop&#xA;coûteux.&lt;/p&gt;&#xA;&lt;p&gt;Je suis preneur de tout retour à faire sur &lt;a href=&#34;https://github.com/anayrat/pg_sampletolog&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;la page github du projet&lt;/a&gt;.&lt;/p&gt;</summary>
    <author>
      <name>blog.anayrat.info</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL et updates heap-only-tuples - partie 3</title>
    <updated>2018-11-26T07:00:00Z</updated>
    <id>tag:blog.anayrat.info,2018-11-26:/2018/11/26/postgresql-et-updates-heap-only-tuples-partie-3/</id>
    <link href="https://blog.anayrat.info/2018/11/26/postgresql-et-updates-heap-only-tuples-partie-3/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Voici une série d&amp;rsquo;articles qui va porter sur une nouveauté de la version 11.&lt;/p&gt;&#xA;&lt;p&gt;Durant le développement de cette version, une fonctionnalité a attiré mon attention.&#xA;On peut la retrouver dans les releases notes : &lt;a href=&#34;https://www.postgresql.org/docs/11/static/release-11.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.postgresql.org/docs/11/static/release-11.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Allow heap-only-tuple (HOT) updates for expression indexes when the values of the expressions are unchanged (Konstantin Knizhnik)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;J&amp;rsquo;avoue que ce n&amp;rsquo;est pas très explicite et cette fonctionnalité nécessite quelques&#xA;connaissances sur le fonctionnement du moteur que je vais essayer d&amp;rsquo;expliquer à travers&#xA;plusieurs articles :&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.anayrat.info/2018/11/12/postgresql-et-updates-heap-only-tuples-partie-1/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fonctionnement du MVCC et update &lt;em&gt;heap-only-tuples&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.anayrat.info/2018/11/19/postgresql-et-updates-heap-only-tuples-partie-2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Quand le moteur ne fait pas d&amp;rsquo;update &lt;em&gt;heap-only-tuple&lt;/em&gt; et présentation de la nouveauté de la version 11&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.anayrat.info/2018/11/26/postgresql-et-updates-heap-only-tuples-partie-3/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Impact sur les performances&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;strong&gt;Cette fonctionnalité a été désactivée en 11.1 car elle pouvait conduire à des&#xA;crash d&amp;rsquo;instance&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. J&amp;rsquo;ai tout de même choisi de publier ces articles car ils permettent&#xA;de comprendre le mécanisme des updates HOT et le gain que pourrait apporter cette&#xA;fonctionnalité.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Je remercie au passage Guillaume Lelarge pour la relecture de cet article ;).&lt;/p&gt;&#xA;&lt;h1 id=&#34;impact-sur-les-performances&#34;&gt;Impact sur les performances&lt;/h1&gt;&#xA;&lt;p&gt;Voici un test assez simple pour mettre en évidence l&amp;rsquo;intérêt de cette fonctionnalité.&#xA;On pourrait s&amp;rsquo;attendre à des gains en performances car le moteur évite de mettre&#xA;à jour les index, ainsi qu&amp;rsquo;en matière de taille d&amp;rsquo;index, comme vu précédemment,&#xA;on évite la fragmentation.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jsonb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;INDEX&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ON&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;prenom&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;INDEX&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ON&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;VALUES&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;{ &amp;#34;prenom&amp;#34;:&amp;#34;adrien&amp;#34; , &amp;#34;valeur&amp;#34; : &amp;#34;1&amp;#34;}&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jsonb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;VALUES&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;{ &amp;#34;prenom&amp;#34;:&amp;#34;guillaume&amp;#34; , &amp;#34;valeur&amp;#34; : &amp;#34;2&amp;#34;}&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jsonb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                   &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;relations&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Schema&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Type&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Owner&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Description&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--------+------+-------+----------+-------+-------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;postgres&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kB&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;di&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t5&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                           &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;relations&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Schema&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Type&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Owner&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Table&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Description&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--------+-------------+-------+----------+-------+-------+-------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t5_c2_idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;postgres&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kB&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t5_expr_idx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;postgres&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kB&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Puis ce test pgbench :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;UPDATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SET&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;{&amp;#34;valeur&amp;#34;: &amp;#34;:id&amp;#34;, &amp;#34;prenom&amp;#34;: &amp;#34;guillaume&amp;#34;}&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;UPDATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SET&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;{&amp;#34;valeur&amp;#34;: &amp;#34;:id2&amp;#34;, &amp;#34;prenom&amp;#34;: &amp;#34;adrien&amp;#34;}&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Qu&amp;rsquo;on exécute pendant 60 secondes, avec &lt;code&gt;recheck_on_update=on&lt;/code&gt; (par défaut) :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pgbench -f test.sql -n -c6 -T 120&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;transaction type: test.sql&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;scaling factor: 1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;query mode: simple&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;number of clients: 6&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;number of threads: 1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;duration: 120 s&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;number of transactions actually processed: 2743163&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;latency average = 0.262 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tps = 22859.646914 (including connections establishing)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tps = 22859.938191 (excluding connections establishing)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; \dt+ t5*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    List of relations&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Schema | Name | Type  |  Owner   |  Size  | Description&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--------+------+-------+----------+--------+-------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; public | t5   | table | postgres | 376 kB |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(1 row)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;\di+ t5*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                           List of relations&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Schema |    Name     | Type  |  Owner   | Table | Size  | Description&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--------+-------------+-------+----------+-------+-------+-------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; public | t5_c2_idx   | index | postgres | t5    | 16 kB |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; public | t5_expr_idx | index | postgres | t5    | 32 kB |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(2 rows)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SELECT * FROM pg_stat_user_tables WHERE relname = &amp;#39;t5&amp;#39;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-[ RECORD 1 ]-------+------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;relid               | 8890622&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;schemaname          | public&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;relname             | t5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;seq_scan            | 4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;seq_tup_read        | 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;idx_scan            | 7999055&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;idx_tup_fetch       | 7999055&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_tup_ins           | 4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_tup_upd           | 7999055&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_tup_del           | 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_tup_hot_upd       | 7998236&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_live_tup          | 2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_dead_tup          | 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_mod_since_analyze | 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;last_vacuum         |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;last_autovacuum     | 2018-09-19 06:29:37.690575+00&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;last_analyze        |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;last_autoanalyze    | 2018-09-19 06:29:37.719911+00&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vacuum_count        | 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;autovacuum_count    | 5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;analyze_count       | 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;autoanalyze_count   | 5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Et maintenant avec &lt;code&gt;recheck_on_update=off&lt;/code&gt;. Donc même jeu de donnée que&#xA;précédemment mais cette fois l&amp;rsquo;index est créé avec cet ordre :&#xA;&lt;code&gt;CREATE INDEX ON t5 ((c1-&amp;gt;&amp;gt;&#39;prenom&#39;)) WITH (recheck_on_update=off);&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pgbench -f test.sql -n -c6 -T 120&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;transaction type: test.sql&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;scaling factor: 1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;query mode: simple&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;number of clients: 6&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;number of threads: 1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;duration: 120 s&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;number of transactions actually processed: 1065688&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;latency average = 0.676 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tps = 8880.679565 (including connections establishing)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tps = 8880.796478 (excluding connections establishing)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;\dt+ t5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    List of relations&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Schema | Name | Type  |  Owner   |  Size   | Description&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--------+------+-------+----------+---------+-------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; public | t5   | table | postgres | 9496 kB |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(1 row)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;\di+ t5*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                           List of relations&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Schema |    Name     | Type  |  Owner   | Table |  Size  | Description&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--------+-------------+-------+----------+-------+--------+-------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; public | t5_c2_idx   | index | postgres | t5    | 768 kB |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; public | t5_expr_idx | index | postgres | t5    | 58 MB  |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(2 rows)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;select * from pg_stat_user_tables where relname = &amp;#39;t5&amp;#39;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-[ RECORD 1 ]-------+------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;relid               | 8890635&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;schemaname          | public&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;relname             | t5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;seq_scan            | 2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;seq_tup_read        | 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;idx_scan            | 2131376&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;idx_tup_fetch       | 2131376&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_tup_ins           | 2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_tup_upd           | 2131376&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_tup_del           | 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_tup_hot_upd       | 19&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_live_tup          | 2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_dead_tup          | 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_mod_since_analyze | 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;last_vacuum         |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;last_autovacuum     | 2018-09-19 06:34:42.045905+00&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;last_analyze        |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;last_autoanalyze    | 2018-09-19 06:34:42.251183+00&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vacuum_count        | 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;autovacuum_count    | 3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;analyze_count       | 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;autoanalyze_count   | 3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;&#xA;&lt;thead&gt;&#xA;&lt;tr&gt;&#xA;&lt;th style=&#34;text-align:right&#34;&gt;recheck_on_update&lt;/th&gt;&#xA;&lt;th&gt;on&lt;/th&gt;&#xA;&lt;th&gt;off&lt;/th&gt;&#xA;&lt;th&gt;Gain&lt;/th&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/thead&gt;&#xA;&lt;tbody&gt;&#xA;&lt;tr&gt;&#xA;&lt;td style=&#34;text-align:right&#34;&gt;TPS&lt;/td&gt;&#xA;&lt;td&gt;22859&lt;/td&gt;&#xA;&lt;td&gt;8880&lt;/td&gt;&#xA;&lt;td&gt;157%&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td style=&#34;text-align:right&#34;&gt;t5 size&lt;/td&gt;&#xA;&lt;td&gt;376 kB&lt;/td&gt;&#xA;&lt;td&gt;9496 kB&lt;/td&gt;&#xA;&lt;td&gt;-96%&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td style=&#34;text-align:right&#34;&gt;t5_c2_idx size&lt;/td&gt;&#xA;&lt;td&gt;16 kB&lt;/td&gt;&#xA;&lt;td&gt;768 kB&lt;/td&gt;&#xA;&lt;td&gt;-98%&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td style=&#34;text-align:right&#34;&gt;t5_expr_idx size&lt;/td&gt;&#xA;&lt;td&gt;32 kB&lt;/td&gt;&#xA;&lt;td&gt;58 MB&lt;/td&gt;&#xA;&lt;td&gt;-99.9%&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;L&amp;rsquo;écart de performance est assez impressionnant de même que la taille des tables&#xA;et index.&lt;/p&gt;&#xA;&lt;p&gt;J&amp;rsquo;ai refait le premier test en désactivant l&amp;rsquo;autovacuum et voici le résultat :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pgbench -f test.sql -n -c6 -T 120&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;transaction type: test.sql&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;scaling factor: 1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;query mode: simple&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;number of clients: 6&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;number of threads: 1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;duration: 120 s&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;number of transactions actually processed: 2752479&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;latency average = 0.262 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tps = 22937.271749 (including connections establishing)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tps = 22937.545872 (excluding connections establishing)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;select * from pg_stat_user_tables where relname = &amp;#39;t5&amp;#39;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-[ RECORD 1 ]-------+--------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;relid               | 8890643&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;schemaname          | public&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;relname             | t5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;seq_scan            | 2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;seq_tup_read        | 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;idx_scan            | 5504958&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;idx_tup_fetch       | 5504958&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_tup_ins           | 2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_tup_upd           | 5504958&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_tup_del           | 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_tup_hot_upd       | 5504258&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_live_tup          | 2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_dead_tup          | 2416&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_mod_since_analyze | 5504960&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;last_vacuum         |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;last_autovacuum     |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;last_analyze        |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;last_autoanalyze    |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vacuum_count        | 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;autovacuum_count    | 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;analyze_count       | 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;autoanalyze_count   | 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;\di+ t5*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;List of relations&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-[ RECORD 1 ]------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Schema      | public&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Name        | t5_c2_idx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Type        | index&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Owner       | postgres&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Table       | t5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Size        | 16 kB&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Description |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-[ RECORD 2 ]------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Schema      | public&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Name        | t5_expr_idx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Type        | index&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Owner       | postgres&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Table       | t5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Size        | 40 kB&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Description |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;\dt+ t5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;List of relations&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-[ RECORD 1 ]---------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Schema      | public&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Name        | t5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Type        | table&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Owner       | postgres&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Size        | 1080 kB&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Description |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Puis le second test :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pgbench -f test.sql -n -c6 -T 120&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;transaction type: test.sql&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;scaling factor: 1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;query mode: simple&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;number of clients: 6&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;number of threads: 1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;duration: 120 s&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;number of transactions actually processed: 881434&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;latency average = 0.817 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tps = 7345.208875 (including connections establishing)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tps = 7345.304797 (excluding connections establishing)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;select * from pg_stat_user_tables where relname = &amp;#39;t5&amp;#39;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-[ RECORD 1 ]-------+--------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;relid               | 8890651&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;schemaname          | public&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;relname             | t5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;seq_scan            | 2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;seq_tup_read        | 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;idx_scan            | 1762868&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;idx_tup_fetch       | 1762868&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_tup_ins           | 2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_tup_upd           | 1762868&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_tup_del           | 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_tup_hot_upd       | 23&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_live_tup          | 2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_dead_tup          | 1762845&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n_mod_since_analyze | 1762870&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;last_vacuum         |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;last_autovacuum     |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;last_analyze        |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;last_autoanalyze    |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vacuum_count        | 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;autovacuum_count    | 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;analyze_count       | 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;autoanalyze_count   | 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;\di+ t5*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;List of relations&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-[ RECORD 1 ]------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Schema      | public&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Name        | t5_c2_idx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Type        | index&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Owner       | postgres&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Table       | t5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Size        | 600 kB&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Description |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-[ RECORD 2 ]------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Schema      | public&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Name        | t5_expr_idx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Type        | index&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Owner       | postgres&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Table       | t5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Size        | 56 MB&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Description |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;\dt+ t5*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;List of relations&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-[ RECORD 1 ]---------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Schema      | public&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Name        | t5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Type        | table&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Owner       | postgres&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Size        | 55 MB&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Description |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;&#xA;&lt;thead&gt;&#xA;&lt;tr&gt;&#xA;&lt;th style=&#34;text-align:right&#34;&gt;recheck_on_update&lt;/th&gt;&#xA;&lt;th&gt;on&lt;/th&gt;&#xA;&lt;th&gt;off&lt;/th&gt;&#xA;&lt;th&gt;Gain&lt;/th&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/thead&gt;&#xA;&lt;tbody&gt;&#xA;&lt;tr&gt;&#xA;&lt;td style=&#34;text-align:right&#34;&gt;TPS&lt;/td&gt;&#xA;&lt;td&gt;22937&lt;/td&gt;&#xA;&lt;td&gt;7345&lt;/td&gt;&#xA;&lt;td&gt;212%&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td style=&#34;text-align:right&#34;&gt;t5 size&lt;/td&gt;&#xA;&lt;td&gt;1080 kB&lt;/td&gt;&#xA;&lt;td&gt;55 MB&lt;/td&gt;&#xA;&lt;td&gt;-98%&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td style=&#34;text-align:right&#34;&gt;t5_c2_idx size&lt;/td&gt;&#xA;&lt;td&gt;16 kB&lt;/td&gt;&#xA;&lt;td&gt;600 kB&lt;/td&gt;&#xA;&lt;td&gt;-97%&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td style=&#34;text-align:right&#34;&gt;t5_expr_idx size&lt;/td&gt;&#xA;&lt;td&gt;40 kB&lt;/td&gt;&#xA;&lt;td&gt;56 MB&lt;/td&gt;&#xA;&lt;td&gt;-99.9%&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;A nouveau, l&amp;rsquo;écart de performance est important, il en est de même pour la taille&#xA;des tables et index. On note également l&amp;rsquo;importance de laisser l&amp;rsquo;autovacuum activé.&lt;/p&gt;&#xA;&lt;p&gt;Pourquoi avons-nous un tel écart de taille sur les index et la table ?&lt;/p&gt;&#xA;&lt;p&gt;Pour les index, c&amp;rsquo;est dû au mécanisme expliqué plus haut. Le moteur a pu chaîner&#xA;les enregistrements en évitant de mettre à jour l&amp;rsquo;index. L&amp;rsquo;index a quand même&#xA;légèrement augmenté de taille, il arrive que le moteur ne peut pas faire de HOT,&#xA;par exemple quand il n&amp;rsquo;y a plus de place dans le bloc.&lt;/p&gt;&#xA;&lt;p&gt;Pour ce qui est de la taille de la table, lors du test avec autovacuum activé,&#xA;l&amp;rsquo;autovacuum avait plus de difficultés à passer sur la table avec le HOT désactivé.&#xA;L&amp;rsquo;index grossissant, cela engendrait plus de &amp;ldquo;travail&amp;rdquo;.&#xA;Lors du test sans autovacuum, l&amp;rsquo;écart s&amp;rsquo;explique par le fait que même un simple&#xA;SELECT peut nettoyer des blocs&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Rappelons que cette fonctionnalité a été retirée avec la version 11.1. J&amp;rsquo;avais écrit&#xA;ces articles peu après la sortie de la version 11.0 et j&amp;rsquo;ai tout de même choisit&#xA;de les publier afin de présenter le fonctionnement des UPDATES HOT. Espérons que&#xA;cette fonctionnalité sera corrigée dans les versions à venir.&lt;/p&gt;&#xA;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;&#xA;&lt;hr&gt;&#xA;&lt;ol&gt;&#xA;&lt;li id=&#34;fn:1&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=05f84605dbeb9cf8279a157234b24bbb706c5256&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Disable recheck_on_update optimization to avoid crashes&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li id=&#34;fn:2&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/postgres/postgres/blob/master/src/backend/access/heap/README.HOT#L251&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;README.HOT&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;</summary>
    <author>
      <name>blog.anayrat.info</name>
    </author>
  </entry>
  <entry>
    <title>Stockage physique, gestion des données et VACUUM</title>
    <updated>2024-02-03T13:32:02Z</updated>
    <id>tag:blog.arthurbazin.com,2024-02-03:/bdd/postgresql/stockage-physique-gestion-des-donnees-et-vacuum</id>
    <content type="html">&#xA;&lt;p&gt;En SIG, on oppose souvent le stockage sous forme de fichiers plats au stockage en base de données. Mais comment fait PostgreSQL pour stocker réellement les données ? Et bien il utilise des fichiers plats&amp;#8230; (le serpent se mort la queue). Nous allons donc démystifier un peu ce fonctionnement.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Autre question que j&amp;rsquo;ai pu avoir en lien avec le stockage : pourquoi après avoir fait du nettoyage dans une base de données, l&amp;rsquo;espace disque n&amp;rsquo;avait pas franchement diminué, y compris après avoir utilisé la commande &lt;code&gt;VACUUM&lt;/code&gt; ? Nous allons voir d&amp;rsquo;où provient ce comportement.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que je prendrais parfois quelques raccourcis pour pour simplifier les explications. Nous ne parlerons également que des tables et non des index.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Fonctions personnalisées&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour nous aider dans notre quête, nous allons avoir besoin d&amp;rsquo;extensions spécifiques et de fonctions créées pour l&amp;rsquo;occasion. Les voici, vous pourrez les décortiquer une fois que vous aurez lu l&amp;rsquo;article :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;extension&#34; data-enlighter-group=&#34;install&#34;&gt;-- Ajout des extensions&#xA;CREATE EXTENSION pgstattuple;&#xA;CREATE EXTENSION pageinspect;&#xA;CREATE EXTENSION pg_freespacemap;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;table_info()&#34; data-enlighter-group=&#34;install&#34;&gt;-- Fonction de récupération des informations sur les pages d&#39;une table&#xA;DROP FUNCTION IF EXISTS public.get_table_info(relname TEXT);&#xA;&#xA;CREATE OR REPLACE FUNCTION public.get_table_info(relname TEXT)&#xA;RETURNS TABLE(&#xA;  &#34;schema&#34; text,&#xA;  &#34;table&#34; text,&#xA;  &#34;tablespace&#34; text,&#xA;  oid_table oid,&#xA;  numero_heap_file oid,&#xA;  heap_file_segment_0_location text,&#xA;  nb_page int,&#xA;  tuple_count int,&#xA;  dead_tuple_count int,&#xA;  table_length int,&#xA;  table_length_human text,&#xA;  tuple_length int,&#xA;  tuple_percent numeric,&#xA;  dead_tuple_length int,&#xA;  dead_tuple_percent numeric,&#xA;  free_space_length int,&#xA;  free_space_percent numeric,&#xA;  max_frozen_txid xid,&#xA;  n_tup_ins int,&#xA;  n_tup_upd int,&#xA;  n_tup_del int,&#xA;  n_mod_since_analyze int,&#xA;  n_ins_since_vacuum int,&#xA;  last_vacuum timestamp with time zone, &#xA;  last_autovacuum timestamp with time zone, &#xA;  last_analyze timestamp with time zone,&#xA;  last_autoanalyze timestamp with time zone,&#xA;  toast_oid oid,&#xA;  toast_table text,&#xA;  toast_heap_file_segment_0_location text,&#xA;  toast_nb_page int,&#xA;  toast_nb_tuple int,&#xA;  toast_length int,&#xA;  toast_length_human text&#xA;)&#xA;AS $function$&#xA;/*&#xA; * FUNCTION table_info(relname TEXT)&#xA; * Renvoi différentes informations sur une table et son stockage&#xA; * &#xA; * PARAMETERS&#xA; *  relname TEXT : objet à analyser au choix :&#xA; *    - &#39;schema.Table&#39; : pour analyser une table en particulier.&#xA; *    - &#39;schema&#39; : pour analyser toutes les tables d&#39;un schéma.&#xA; *    Les noms d&#39;objet n&#39;ont pas besoin d&#39;être quotés.&#xA; * &#xA; */&#xA;DECLARE &#xA;  var_requete TEXT;&#xA;  schemaname TEXT;&#xA;  table_schema record;&#xA;  schema_check boolean DEFAULT FALSE;&#xA;  where_clause TEXT;&#xA;&#xA;BEGIN&#xA;  &#xA;  -- Nettoyage du nom d&#39;objet&#xA;  relname := replace(relname, &#39;&#34;&#39;, &#39;&#39;);&#xA;  &#xA;&#xA;&#xA;  -- L&#39;analyse porte-elle sur un schéma ?&#xA;  var_requete := &#xA;    $a$SELECT &#xA;      TRUE&#xA;    FROM &#xA;      information_schema.schemata&#xA;    WHERE &#xA;      schema_name = $a$ || quote_literal(relname)&#xA;  ;&#xA;&#xA;  EXECUTE &#xA;    var_requete&#xA;  INTO &#xA;    schema_check&#xA;  ;&#xA;  &#xA;&#xA;  &#xA;  -- Action selon si schema/table&#xA;  IF schema_check THEN&#xA;  &#xA;    RAISE NOTICE USING message = &#39;ANALYZE for schema&#39;;&#xA;    &#xA;    -- Clause de récupération des données d&#39;un schéma&#xA;    where_clause := &#xA;      $a$pgc.relnamespace = $a$ || quote_literal(relname) || $a$::regnamespace $a$&#xA;    ;&#xA;  &#xA;    -- Boucle sur toutes les tables d&#39;un schema&#xA;    var_requete := &#xA;      $a$SELECT&#xA;        pgc.relname::TEXT AS &#34;table&#34;&#xA;      FROM&#xA;        pg_class AS pgc&#xA;      WHERE &#xA;        $a$ || where_clause&#xA;    ;&#xA;  &#xA;    --RAISE NOTICE USING MESSAGE = var_requete;&#xA;  &#xA;    FOR table_schema IN EXECUTE var_requete&#xA;        &#xA;    LOOP&#xA;      &#xA;      var_requete := &#xA;        $a$ANALYZE $a$ || quote_ident(relname) || &#39;.&#39; || quote_ident(table_schema.&#34;table&#34;)&#xA;      ;&#xA;      &#xA;      --RAISE NOTICE USING MESSAGE = var_requete;&#xA;&#xA;        -- Analyse de la table&#xA;      EXECUTE &#xA;        var_requete&#xA;      ;&#xA;      &#xA;      &#xA;    END LOOP;&#xA;    &#xA;  &#xA;  ELSE &#xA;  &#xA;    RAISE NOTICE USING message = &#39;ANALYZE for table&#39;;&#xA;  &#xA;    -- Quotation du schema.table&#xA;    relname := &#xA;      quote_ident((regexp_match(relname, &#39;(.*)\..+&#39;))[1]) || &#xA;      &#39;.&#39; || &#xA;      quote_ident((regexp_match(relname, &#39;.*\.(.+)&#39;))[1])&#xA;    ;&#xA;  &#xA;    -- Clause de récuépration d&#39;une table&#xA;    where_clause :=&#xA;      $a$pgc.oid = $a$ || quote_literal(relname) || $a$::regclass $a$&#xA;    ;&#xA;&#xA;    -- Analyse de la table&#xA;    EXECUTE &#xA;      $a$ANALYZE $a$ || relname&#xA;    ;&#xA;  &#xA;  END IF;&#xA;&#xA;&#xA;  &#xA;  -- Renvoi des statistiques&#xA;  var_requete := &#xA;    $a$SELECT &#xA;      pgc.relnamespace::regnamespace::text AS &#34;schema&#34;,&#xA;      pgc.relname::text AS &#34;table&#34;,&#xA;      COALESCE (pgt.spcname, &#39;pg_default&#39;)::TEXT AS &#34;tablespace&#34;,&#xA;      pgc.oid AS oid_table,&#xA;      pg_relation_filenode(pgc.oid) AS numero_heap_file,&#xA;      current_setting(&#39;data_directory&#39;) || &#39;/&#39; || pg_relation_filepath(pgc.oid) AS &#34;heap_file_segment_0_location&#34;,&#xA;      pgc.relpages::int AS nb_page,&#xA;      pst.tuple_count::int,&#xA;      pst.dead_tuple_count::int,&#xA;      pst.table_len::int AS table_length,&#xA;      pg_size_pretty(pst.table_len) AS table_length_human,&#xA;      pst.tuple_len::int AS tuple_length,&#xA;      pst.tuple_percent::numeric,&#xA;      pst.dead_tuple_len::int AS dead_tuple_length,&#xA;      pst.dead_tuple_percent::numeric,&#xA;      pst.free_space::int AS free_space_length,&#xA;      pst.free_percent::NUMERIC AS free_space_percent,&#xA;      pgc.relfrozenxid AS max_frozen_txid,&#xA;      psut.n_tup_ins::int,&#xA;      psut.n_tup_upd::int,&#xA;      psut.n_tup_del::int,&#xA;      psut.n_mod_since_analyze::int,&#xA;      psut.n_ins_since_vacuum::int,&#xA;      psut.last_vacuum, &#xA;      psut.last_autovacuum, &#xA;      psut.last_analyze,&#xA;      psut.last_autoanalyze,&#xA;      pgc.reltoastrelid AS toast_oid,&#xA;      pgct.relname::text AS toast_table,&#xA;      current_setting(&#39;data_directory&#39;) || &#39;/&#39; || pg_relation_filepath(pgct.oid) AS &#34;toast_heap_file_segment_0_location&#34;,&#xA;      pgct.relpages::int AS toast_nb_page,&#xA;      pgct.reltuples::int AS toast_nb_tuple,&#xA;      pg_relation_size(pgc.reltoastrelid)::int AS toast_length,&#xA;      pg_size_pretty(pg_relation_size(pgc.reltoastrelid))::text AS toast_length_human&#xA;    FROM &#xA;      pg_class AS pgc&#xA;    LEFT JOIN &#xA;      pg_tablespace AS pgt &#xA;      ON pgt.oid = pgc.reltablespace &#xA;    LEFT JOIN &#xA;      pg_class AS pgct &#xA;      ON pgct.oid = pgc.reltoastrelid&#xA;    LEFT JOIN&#xA;      pg_stat_user_tables AS psut&#xA;      ON psut.relid = pgc.oid&#xA;    LEFT JOIN LATERAL&#xA;      pgstattuple(pgc.oid::regclass::text) AS pst&#xA;      ON TRUE&#xA;    WHERE &#xA;      $a$ || where_clause&#xA;    ;&#xA;  &#xA;    --RAISE NOTICE USING MESSAGE = var_requete;&#xA;    &#xA;    RETURN QUERY EXECUTE &#xA;      var_requete&#xA;    ;&#xA;&#xA;    RETURN;&#xA;END&#xA;$function$&#xA;LANGUAGE PLPGSQL&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;heap_page_info()&#34; data-enlighter-group=&#34;install&#34;&gt;-- Fonction de récupération des informations sur les pages d&#39;une table&#xA;DROP FUNCTION IF EXISTS public.get_heap_page_info(relname TEXT, page_number INT);&#xA;&#xA;CREATE OR REPLACE FUNCTION public.get_heap_page_info(relname TEXT, page_number INT DEFAULT -1)&#xA;RETURNS TABLE(&#xA;  page_num int,&#xA;  lsn pg_lsn, &#xA;  nb_pointer int,&#xA;  nb_tuple int,&#xA;  nb_tuple_visible int,&#xA;  length_header int,&#xA;  length_pointer int,&#xA;  length_free_space int,&#xA;  length_tuple int,&#xA;  length_meta int,&#xA;  length_data int,&#xA;  length_empty int,&#xA;  length_special int,&#xA;  offset_pointer int,&#xA;  offset_free_space int,&#xA;  offset_data int,&#xA;  offset_special int,&#xA;  offset_page_end int,&#xA;  unused_line_pointer bool,&#xA;  no_free_space bool,&#xA;  all_visible bool&#xA;)&#xA;AS $function$&#xA;/*&#xA; * FUNCTION heap_page_info(relname TEXT, page_number INT)&#xA; * Renvoi différentes informations sur les pages d&#39;une table&#xA; * &#xA; * PARAMETERS&#xA; *  relname TEXT : table à analyser préfixée par son schéma.&#xA; *    Les noms d&#39;objet n&#39;ont pas besoin d&#39;être quotés.&#xA; *  page_number INT : (facultatif) numéro de page à analyser.&#xA; *    Sans ce paramètre, toutes les pages sont remontées&#xA; * &#xA; */&#xA;BEGIN&#xA;  -- Quotation du schema.table&#xA;  relname := replace(relname, &#39;&#34;&#39;, &#39;&#39;);&#xA;  relname := &#xA;    quote_ident((regexp_match(relname, &#39;(.*)\..+&#39;))[1]) || &#xA;    &#39;.&#39; || &#xA;    quote_ident((regexp_match(relname, &#39;.*\.(.+)&#39;))[1])&#xA;  ;&#xA;  &#xA;  &#xA;  -- Analyse de la table&#xA;  EXECUTE &#xA;    $a$ANALYZE $a$ || relname ;&#xA;&#xA;&#xA;  &#xA;  -- Renvoi des statistiques&#xA;  RETURN QUERY EXECUTE &#xA;    $a$SELECT&#xA;      pages.page_num,&#xA;      -- Identifiant xlog de la dernière opération effectuée sur la page.&#xA;      ph.lsn,&#xA;      tm.count_pointer::int AS nb_pointer,&#xA;      tm.count_tuple::int AS nb_tuple,&#xA;      tm.count_tuple_visible::int AS nb_tuple_visible,&#xA;      24::int AS length_header,&#xA;      (ph.lower - 24)::int AS length_pointer,&#xA;      (ph.upper - ph.lower)::int AS length_free_space,&#xA;      (ph.special - ph.upper)::int AS length_tuple,&#xA;      (tm.length_meta)::int,&#xA;      (tm.length_data)::int,&#xA;      (tm.length_empty)::int,&#xA;      (ph.pagesize - ph.special)::int AS length_special,&#xA;      24::int AS offset_pointer,&#xA;      (ph.lower)::int AS offset_free_space,&#xA;      (ph.upper)::int AS offset_data,&#xA;      (ph.special)::int AS offset_special,&#xA;      (ph.pagesize)::int AS offset_page_end,&#xA;      CASE &#xA;        WHEN (ph.flags &amp;amp; 0x0001) = (0x0001)&#xA;          THEN TRUE&#xA;        ELSE FALSE&#xA;      END AS unused_line_pointer,&#xA;      CASE &#xA;        WHEN (ph.flags &amp;amp; 0x0002) = (0x0002)&#xA;          THEN TRUE&#xA;        ELSE FALSE&#xA;      END AS no_free_space,&#xA;      CASE &#xA;        WHEN (ph.flags &amp;amp; 0x0004) = (0x0004)&#xA;          THEN TRUE&#xA;        ELSE FALSE&#xA;      END AS all_visible&#xA;    FROM &#xA;      pg_catalog.pg_class AS pgc&#xA;    LEFT JOIN LATERAL &#xA;        generate_series(0, pgc.relpages - 1) AS pages(page_num)&#xA;        ON TRUE&#xA;    LEFT JOIN LATERAL&#xA;        page_header(&#xA;          get_raw_page(pgc.oid::regclass::text, pages.page_num)&#xA;        ) AS ph&#xA;        ON TRUE&#xA;    LEFT JOIN LATERAL (&#xA;        SELECT&#xA;          -- Nombre de pointeur&#xA;          count(1) AS count_pointer,&#xA;          -- Nombre de tuples&#xA;          count(&#xA;            CASE &#xA;              WHEN hpi.lp_len &gt; 0 THEN 1&#xA;            END&#xA;          ) AS count_tuple,&#xA;          -- Nombre de tuples visibles&#xA;          count(&#xA;            CASE &#xA;              WHEN (t_infomask &amp;amp; 0x0F00) = (0x0100)  &#xA;              OR   (t_infomask &amp;amp; 0x0F00) = (0x0100 | 0x0800)&#xA;              OR   (t_infomask &amp;amp; 0x0F00) = (0x0100 | 0x0200 | 0x0800)&#xA;                THEN 1&#xA;            END&#xA;          ) AS count_tuple_visible,&#xA;          -- Longueur des métadonnées&#xA;          sum(hpi.t_hoff::int) AS length_meta,&#xA;          -- Longueur des données&#xA;          sum((hpi.lp_len - hpi.t_hoff)::int) AS length_data,&#xA;          -- Longueur des espaces vides&#xA;          sum(((ceil((hpi.lp_off + hpi.lp_len)::numeric / 8) * 8) - (hpi.lp_off + hpi.lp_len))::int) AS length_empty&#xA;        FROM&#xA;          heap_page_items(&#xA;            get_raw_page(pgc.oid::regclass::text, pages.page_num)&#xA;          ) AS hpi &#xA;        ) AS tm&#xA;        ON TRUE&#xA;    WHERE &#xA;      pgc.oid = $a$ || quote_literal(relname) || $a$::regclass &#xA;    AND (&#xA;      (&#xA;        $a$ || page_number || $a$ &amp;lt;&gt; -1&#xA;        AND&#xA;        $a$ || page_number || $a$ = pages.page_num&#xA;      )OR &#xA;      $a$ || page_number || $a$ = - 1&#xA;    ) $a$&#xA;    ;&#xA;&#xA;    RETURN;&#xA;END&#xA;$function$&#xA;LANGUAGE PLPGSQL&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;heap_tuple_info()&#34; data-enlighter-group=&#34;install&#34;&gt;-- Fonction de récupération des informations sur les tuples&#xA;DROP FUNCTION IF EXISTS public.get_heap_tuple_info(relname text);&#xA;&#xA;CREATE OR REPLACE FUNCTION public.get_heap_tuple_info(relname TEXT, page_number INT DEFAULT -1)&#xA;RETURNS TABLE(&#xA;  ctid tid, &#xA;  page_num int,&#xA;  page_index int, &#xA;  offset_start int,&#xA;  offset_end int,&#xA;  offset_next int,&#xA;  length_tuple int,&#xA;  length_meta int,&#xA;  length_data int,&#xA;  length_empty int,&#xA;  xmin text, &#xA;  xmax text, &#xA;  state text,&#xA;  visible bool,&#xA;  &#34;update&#34; bool,&#xA;  direction text,&#xA;  hot bool,&#xA;  &#34;delete&#34; bool, &#xA;  &#34;freeze&#34; bool,&#xA;  info text[]&#xA;)&#xA;AS $function$&#xA;/*&#xA; * FUNCTION heap_tuple_info(relname TEXT, page_number INT)&#xA; * Renvoi différentes informations sur les tuples présents dans les pages d&#39;une table&#xA; * &#xA; * PARAMETERS&#xA; *  relname TEXT : table à analyser préfixée par son schéma.&#xA; *    Les noms d&#39;objet n&#39;ont pas besoin d&#39;être quotés.&#xA; *  page_number INT : (facultatif) numéro de page à analyser.&#xA; *    Sans ce paramètre, tous les tuples de toutes les pages sont remontés&#xA; * &#xA; */&#xA;BEGIN&#xA;  -- Quotation du schema.table&#xA;  relname := replace(relname, &#39;&#34;&#39;, &#39;&#39;);&#xA;  relname := &#xA;    quote_ident((regexp_match(relname, &#39;(.*)\..+&#39;))[1]) || &#xA;    &#39;.&#39; || &#xA;    quote_ident((regexp_match(relname, &#39;.*\.(.+)&#39;))[1])&#xA;  ;&#xA;  &#xA;  -- Analyse de la table&#xA;  EXECUTE &#xA;    $a$ANALYZE $a$ || relname ;&#xA;  &#xA;&#xA;  &#xA;  -- Renvoi des statistiques&#xA;  RETURN QUERY EXECUTE &#xA;    $a$SELECT&#xA;      -- Indentifiant du tuple&#xA;      hpi.t_ctid AS ctid,&#xA;      -- Numéro de page&#xA;      pages.page_num,&#xA;      -- Index dans la page&#xA;      hpi.lp::int AS page_index,&#xA;      -- Début du tuple dans la page&#xA;      hpi.lp_off::int AS offset_start,&#xA;      -- Fin du tuple dans la page&#xA;      (hpi.lp_off + hpi.lp_len)::int AS offset_end,&#xA;      -- Début du tuple suivant dans la page&#xA;      (ceil((hpi.lp_off + hpi.lp_len)::numeric / 8) * 8)::int AS offset_next,&#xA;      -- Longueur du tuple&#xA;      hpi.lp_len::int AS length_tuple,&#xA;      -- Longueur des métadonnées&#xA;      hpi.t_hoff::int AS length_meta,&#xA;      -- Longueur des données&#xA;      (hpi.lp_len - hpi.t_hoff)::int AS length_data,&#xA;      -- Longueur de l&#39;espacement avant le tuple suivant&#xA;      ((ceil((hpi.lp_off + hpi.lp_len)::numeric / 8) * 8) - (hpi.lp_off + hpi.lp_len))::int AS length_empty,&#xA;      -- ID de transaction de début de vie&#xA;      --    c : transaction commitée&#xA;      --    a : transaction annulée&#xA;      concat(&#xA;        hpi.t_xmin,&#xA;        CASE &#xA;          WHEN ((t_infomask &amp;amp; 0x0F00) &amp;amp; (0x0100 | 0x0200)) = (0x0100 | 0x0200) THEN &#39; - f&#39;&#xA;          WHEN (t_infomask &amp;amp; 0x0100) = 0x0100 THEN &#39; - c&#39;&#xA;          WHEN (t_infomask &amp;amp; 0x0200) = 0x0200 THEN &#39; - a&#39;&#xA;        END&#xA;      ) AS xmin,&#xA;      -- ID de transaction de fin de vie&#xA;      --    c : transaction commitée&#xA;      --    a : transaction annulée&#xA;      NULLIF(&#xA;        concat(&#xA;          hpi.t_xmax,&#xA;          CASE &#xA;            WHEN (t_infomask &amp;amp; 0x0400) = 0x0400 THEN &#39; - c&#39;&#xA;            WHEN (t_infomask &amp;amp; 0x0800) = 0x0800 THEN &#39; - a&#39;&#xA;          END&#xA;        ),&#xA;        &#39;0 - a&#39;&#xA;      ) AS xmax,&#xA;      -- Etat de la ligne&#xA;      CASE lp_flags&#xA;        WHEN 0 THEN &#39;unused&#39;&#xA;        WHEN 1 THEN &#39;normal&#39;&#xA;        WHEN 2 THEN &#39;redirect to &#39;||lp_off&#xA;        WHEN 3 THEN &#39;dead&#39;&#xA;      END AS state,&#xA;      -- Visibilité actuelle du tuple&#xA;      CASE &#xA;        WHEN (t_infomask &amp;amp; 0x0F00) = (0x0100)  &#xA;        OR   (t_infomask &amp;amp; 0x0F00) = (0x0100 | 0x0800)&#xA;          THEN TRUE&#xA;        WHEN (t_infomask &amp;amp; 0x0F00) = (0x0200) &#xA;        OR   (t_infomask &amp;amp; 0x0F00) = (0x0100 | 0x0200 | 0x0800)  &#xA;        OR   (t_infomask &amp;amp; 0x0F00) = (0x0000) &#xA;        OR   (t_infomask &amp;amp; 0x0F00) = (0x0100 | 0x0400) &#xA;          THEN FALSE&#xA;        ELSE FALSE&#xA;      END AS visible,&#xA;      -- Tuple concerné par un UPDATE&#xA;      CASE &#xA;        WHEN (t_infomask &amp;amp; 0xF000) = (0x2000)&#xA;        OR t_infomask IS NULL &#xA;        OR ((t_infomask2 &amp;amp; 0xF000) &amp;amp; (0x4000)) = (0x4000)&#xA;        OR ((t_infomask &amp;amp; 0x0F00) = (0x0100 | 0x0400) AND NOT (t_infomask2 &amp;amp; 0xF000) = (0x2000))&#xA;          THEN TRUE&#xA;        ELSE FALSE&#xA;      END AS &#34;update&#34;,&#xA;      -- Si concerné par un UPDATE, tuple initial (to) ou final (from)&#xA;      NULLIF(&#xA;        concat_ws(&#xA;          &#39; and &#39;,&#xA;          CASE &#xA;            WHEN (t_infomask &amp;amp; 0xF000) = (0x2000)&#xA;              THEN &#39;from&#39;&#xA;          END,&#xA;          CASE &#xA;            WHEN t_infomask IS NULL &#xA;            OR ((t_infomask2 &amp;amp; 0xF000) &amp;amp; (0x4000)) = (0x4000)&#xA;              THEN &#39;to&#39;&#xA;          END&#xA;        ),&#xA;        &#39;&#39;&#xA;      ) || &#39; another line&#39; AS direction,&#xA;      -- Tuple hot updated &#xA;      --    le tuple actuel et son ancienne version sont sur la même page&#xA;      CASE &#xA;        WHEN (t_infomask2 &amp;amp; 0xF000) = (0x4000)&#xA;        OR (t_infomask2 &amp;amp; 0xF000) = (0x8000)&#xA;        OR (t_infomask2 &amp;amp; 0xF000) = (0x4000 | 0x8000)&#xA;          THEN TRUE&#xA;        ELSE FALSE&#xA;      END AS hot,&#xA;      -- Tuple supprimé (ou attribut clé mis à jour)&#xA;      CASE &#xA;        WHEN ((t_infomask2 &amp;amp; 0xF000) &amp;amp; (0x2000)) = (0x2000)&#xA;          THEN TRUE &#xA;        ELSE FALSE&#xA;      END AS &#34;delete&#34;,&#xA;      -- Identifiant de transaction xmin gelé&#xA;      CASE &#xA;        WHEN ((t_infomask &amp;amp; 0x0F00) &amp;amp; (0x0100 | 0x0200)) = (0x0100 | 0x0200)&#xA;          THEN TRUE&#xA;        ELSE FALSE &#xA;      END AS &#34;freeze&#34;,&#xA;      -- Drapeaux d&#39;information&#xA;      ARRAY(&#xA;        SELECT&#xA;          array_to_string(&#xA;            regexp_matches(&#xA;              heap_tuple_infomask_flags(t_infomask, t_infomask2)::TEXT,&#xA;              &#39;[A-Za-z0-9_\-]+&#39;,&#xA;              &#39;g&#39;&#xA;            ),&#xA;            &#39;&#39;&#xA;          )&#xA;      )::text[] AS info&#xA;    FROM &#xA;      pg_catalog.pg_class AS pgc,&#xA;      LATERAL &#xA;        generate_series(0, pgc.relpages - 1) AS pages(page_num),&#xA;      LATERAL&#xA;        heap_page_items(&#xA;          get_raw_page(pgc.oid::regclass::text, pages.page_num)&#xA;        ) AS hpi&#xA;    WHERE &#xA;      pgc.oid = $a$ || quote_literal(relname) || $a$::regclass &#xA;    AND (&#xA;      (&#xA;        $a$ || page_number || $a$ &amp;lt;&gt; -1&#xA;        AND&#xA;        $a$ || page_number || $a$ = pages.page_num&#xA;      )OR &#xA;      $a$ || page_number || $a$ = - 1&#xA;    ) $a$&#xA;    ;&#xA;&#xA;    RETURN;&#xA;END&#xA;$function$&#xA;LANGUAGE PLPGSQL&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Stockage physique&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Côté base, les données sont structurées de la façon suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Base de données&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Schéma&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Table&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Ligne&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Attribut&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Mais dans le système de fichiers, les données sont structurées différemment :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Un répertoire racine par tablespace.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Un répertoire par base de données.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Des fichiers spécifiques pour chaque table.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Tablespace&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le lien entre les données et le système de fichier se matérialise en base via le tablespace. Cet objet permet aux administrateurs de définir l&amp;#8217;emplacement des données. Par défaut deux tablespaces existent et pointent vers le répertoire &lt;code&gt;$PGDATA/base&lt;/code&gt; du répertoire (sur Windows, il s&amp;rsquo;agit par défaut de « C:\Program Files\PostgreSQL\16\data\base »). Il s&amp;rsquo;se nomment :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;pg_default&lt;/code&gt; : emplacement de stockage par défaut.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;pg_global&lt;/code&gt; : emplacement de stockage des objets contenant le &lt;a href=&#34;https://www.postgresql.org/docs/current/catalogs.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;catalogue système&lt;/a&gt; (données sur le cluster).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il est possible créer un nouveau tablespace pour stocker des données sur un stockage spécifique (un disque dur plus rapide par exemple) :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;CREATE TABLESPACE pgraster_data&#xA;&#x9;OWNER postgres&#xA;&#x9;LOCATION &#39;C:\mon_repertoire\de_stockage&#39;&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Un tablespace est lié à une instance PostgreSQL et ne peut pas être ouvert par une instance autre que celle qui l&amp;rsquo;a créée.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Un tablespace non trouvable (défaillance du disque dur, déplacement&amp;#8230;) peut empêcher le démarrage de l&amp;rsquo;instance PostgreSQL.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;un tablespace peut être utilisé par n&amp;rsquo;importe qu&amp;rsquo;elle base de donnée de l&amp;rsquo;instance à laquelle il appartient.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;un tablespace ne peut être supprimé tant qu&amp;rsquo;un objet est stocké dedans.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Lorsque vous créez un tablespace, un lien symbolique est créé dans le répertoire &lt;code&gt;$PGDATE/pg_tblspc&lt;/code&gt; et pointe vers le répertoire définit pour stocker les données du tablespace.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez lister les différents tablespaces ainsi que leurs emplacements de stockage grâce à la commande suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT &#xA;  pt.spcname AS nom,&#xA;  pa.rolname AS proprietaire,&#xA;  pg_tablespace_location(pt.oid) AS emplacement,&#xA;  pg_size_pretty(pg_tablespace_size(pt.oid)) AS poids&#xA;FROM &#xA;  pg_tablespace AS pt&#xA;LEFT JOIN&#xA;  pg_authid AS pa&#xA;  ON pa.oid = pt.spcowner&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Fichiers&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Dans le système de fichier, les données sont stockées dans le répertoire du tablespace et s&amp;rsquo;organise assez simplement : &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Un répertoire par base de données, dont le nom correspond à l&amp;rsquo;OID de la base au sein de l&amp;rsquo;instance PostgreSQL.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Un ensemble de fichiers par table.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour chaque table il existe un ou plusieurs fichiers dont le nom débute toujours par un numéro nommé &lt;em&gt;filenode&lt;/em&gt; qui correspond souvent à l&amp;rsquo;OID de la table (mais pas toujours, par exemple lorsqu&amp;rsquo;une table est réécrite, un nouveau fichier est créé avec un nouveau numéro ; voir &lt;a href=&#34;#vacuum&#34;&gt;la partir sur les VACUUM&lt;/a&gt;).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pourrez trouver les fichiers suivants pour chaque table (exemple pour un filenode = 112233 ) : &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Le &lt;strong&gt;heap file&lt;/strong&gt; : ensemble de fichiers contenant les données.&lt;br&gt;Chaque fichier du &lt;em&gt;heap file&lt;/em&gt; est appelé segment et ne peut exéder 1 Go, il y a donc un nombre de segments différent selon la taille de la table.&lt;br&gt;Le premier segment est nommé &lt;code&gt;filenode&lt;/code&gt; sans extension (&lt;code&gt;112233&lt;/code&gt; dans notre exemple), le second se voit ajouter l&amp;rsquo;extension « 1 » (&lt;code&gt;112233.1&lt;/code&gt;), le troisième l&amp;rsquo;extension « 2 » (&lt;code&gt;11223.2&lt;/code&gt;) et ainsi de suite&amp;#8230;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La &lt;strong&gt;free space map&lt;/strong&gt; : liste l&amp;rsquo;espace disponible dans chaque page.&lt;br&gt;Le fichier est nommé  &lt;code&gt;filenode_fsm&lt;/code&gt; (&lt;code&gt;112233_fsm&lt;/code&gt;).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La &lt;strong&gt;visibility map&lt;/strong&gt; : liste indiquant pour chaque page si toutes les lignes sont visibles pour toutes les transactions et si tous les tuples sont gelés. Cela permet au VACUUM de ne pas avoir à scanner ces pages afin d&amp;rsquo;aller plus vite.&lt;br&gt;Le fichier est nommé &lt;code&gt;filenode_vm&lt;/code&gt; (&lt;code&gt;112233_vm&lt;/code&gt;).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Même si c&amp;rsquo;est très rare, les fichiers fsm et vm peuvent se voir attribuer des extensions « 1 », « 2 »&amp;#8230; s&amp;rsquo;ils dépassent 1 Go et que d&amp;rsquo;autres fichiers doivent être créés.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici un graphique pour vous représenter la répartition des données :&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_filesystem.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3002&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Exemple d&amp;rsquo;une carte de visibilité :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Numéro de page&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Only visible&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Only frozen&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La première page ne contient que des tuples visibles, en revanche, les pages d&amp;rsquo;après contiennent des tuples non visibles : il s&amp;rsquo;agit de tuples supprimés qui sont encore présents dans la base et en attente de suppression par le &lt;code&gt;VACUUM&lt;/code&gt;. Ce dernier n&amp;rsquo;a donc pas besoin de travailler sur la première page pour le nettoyage. Nous allons voir dans le paragraphe suivant ce qu&amp;rsquo;est un tuple.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Page&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour faciliter la gestion des données, leur stockage au sein des segments du &lt;em&gt;heap file&lt;/em&gt; se fait sous la forme de paquets de 8 ko de données (paramétrable mais par défaut 8 ko). Un paquet de données est appelé &lt;strong&gt;page&lt;/strong&gt; (ou bloc). Un segment peut donc contenir plusieurs pages.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_page-2.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3007&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Les pages sont toujours structurées de la même façon :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;différentes métadonnées sur la page (24 octets).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Les pointeurs :&lt;/strong&gt; il s&amp;rsquo;agit de données contenant l&amp;#8217;emplacement de chaque tuple stocké dans la page (4 octets chacun).&lt;br&gt;Les index référencent ces pointeurs.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;L&amp;rsquo;espace restant disponible dans la page.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;Les tuples :&lt;/strong&gt; un tuple équivaut à une ligne dans la table. &lt;br&gt;Il s&amp;rsquo;agit d&amp;rsquo;un ensemble de métadonnées associées aux valeurs des attributs de la ligne les unes à la suite des autres.&lt;br&gt;Les éléments sont positionnés dans l&amp;rsquo;ordre inverse : du dernier au premier et accolés à la fin de la page.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Des données spécifiques (uniquement pour les table d&amp;rsquo;index).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_page_content-1.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3097&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;La page est considérée comme complète lorsque l&amp;rsquo;espace disponible vient à manquer : au fur et à mesure du remplissage, les pointeurs rejoignent les tuples et l&amp;rsquo;espace entre les deux devient insuffisant pour stocker un nouvel élément.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que les tuples sont toujours placés de façon à être alignés sur des multiples de 8 octets. Ce positionnement entraine la présence d&amp;rsquo;espace entre les tuples lorsque ceux-ci ne possèdent pas une longueur multiple de 8. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Avec une telle structure, vous pouvez donc voir que lorsque PostgreSQL créé une nouvelle page, celle-ci occupe immédiatement 8 ko, même si elle est presque vide car il s&amp;rsquo;agit d&amp;rsquo;un conteneur de taille fixe. Ainsi, une base PostgreSQL grossit par multiple de 8 ko.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour la lecture des données, il y a deux cas :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Le scan séquentiel : lors d&amp;rsquo;un parcours complet de la table, PostgreSQL lit chaque pointeur ce qui lui permet ensuite d&amp;rsquo;aller lire chaque tuple.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Le scan indexé : lors d&amp;rsquo;un parcours via un index, ce dernier contient le numéro de page ainsi que l&amp;#8217;emplacement du pointeur de chaque donnée indexée. &lt;br&gt;PostgreSQL n&amp;rsquo;a plus qu&amp;rsquo;a parcourir les pointeurs pour récupérer la donnée sans avoir à lire tous les tuples (scan séquentiel). &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Toast&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les données d&amp;rsquo;un tuple ne peuvent dépasser une page. Ainsi, pour contourner cette limite avec des données lourdes, un mécanisme spécifique appelé TOAST est utilisé.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;TOAST signifie « The Oversized-Attribute Storage Technique » et se déclenche de façon automatisée et totalement transparente pour l&amp;rsquo;utilisateur lorsqu&amp;rsquo;une ligne est trop lourde pour le stockage « standard ».&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le fonctionnement est le suivant : &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Jusqu’à 2 ko (par défaut, définit via la variable &lt;code&gt;TOAST_TUPLE_THRESHOLD&lt;/code&gt;), un tuple est stocké normalement, directement dans la page.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;A partir de 2 ko, le système compresse le tuple, puis deux cas de figures se présentent :&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Le poids du tuple compressé est inférieur à 2 ko (par défaut, définit via la variable &lt;code&gt;TOAST_TUPLE_TARGET&lt;/code&gt;), alors ce dernier est stocké compressé dans la page.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Le poids du tuple compressé est supérieur à 2 ko, alors le système transfert les données colonne par colonne dans une table annexe appelée table TOAST.&lt;br&gt;Le transfert commence par les colonnes les plus lourdes et s&amp;rsquo;arrête lorsque les colonnes restantes peuvent être stockées dans la page (lorsqu&amp;rsquo;il reste moins de 2 ko).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_toast_diagram-2.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3183&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Les tables TOAST sont stockées dans le schéma système &lt;code&gt;pg_toast&lt;/code&gt; et sont nommées d&amp;rsquo;après l&amp;rsquo;OID de la table d&amp;rsquo;origine sous la forme &lt;code&gt;pg_toast_oidorigine&lt;/code&gt;. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il s&amp;rsquo;agit de tables standards (et donc qui peuvent être lues via un simple &lt;code&gt;SELECT&lt;/code&gt;) à la structure suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;chunk_id&lt;/code&gt; : identifiant de bloc (permettant la correspondance avec un tuple spécifique de la table source).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;chunk_seq&lt;/code&gt; : numéro d&amp;rsquo;ordre du bloc (une donnée importante peut être découpée en plusieurs blocs qu&amp;rsquo;il faut pouvoir ordonnancer).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;chunk_data&lt;/code&gt; : donnée au format binaire.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les données y sont stockées à raison d&amp;rsquo;un bloc par ligne, chaque bloc étant un morceau de 2 ko (par défaut, définit via la variable &lt;code&gt;TOAST_MAX_CHUNK_SIZE&lt;/code&gt;) de la donnée d&amp;rsquo;origine qui a donc été découpée.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cette division permet de répartir le poids des données et de les stocker de façon classique (dans un &lt;em&gt;heap file&lt;/em&gt;), sans dépasser la taille limite d’une page. Voici un exemple schématisé du contenu de deux pages d&amp;rsquo;une table TOAST :&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_toast_page.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3186&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Notez que lorsque vous requêtez une table, la récupération des données TOASTées possède un certain coût car PostgreSQL doit lire la table TOAST, récupérer les morceaux de données, les assembler puis retourner la données consolidée. C&amp;rsquo;est une des raisons pour lesquelles le sélecteur &lt;code&gt;*&lt;/code&gt; est souvent déconseillé.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Autre point, depuis PostgreSQL 14, vous pouvez choisir l&amp;rsquo;algorithme de compression via la variable &lt;code&gt;default_toast_compression&lt;/code&gt; qui permet de choisir entre &lt;em&gt;pglz&lt;/em&gt; (format compression par défaut) et &lt;em&gt;lz4 (nouveau format jusqu’à&lt;/em&gt; 80% plus rapide pour un taux de compression similaire).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Quelques requêtes&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici quelques requêtes pour récupérer des informations sur vos tables et mieux appréhender la structure des pages.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Commencez par créer une table :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;CREATE TABLE public.table_test (&#xA;  id int4,&#xA;  commentaire_1 char(1955),&#xA;  commentaire_2 text&#xA;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez maintenant récupérer quelques données grâce à la première fonction &lt;code&gt;get_table_info()&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT * FROM public.get_table_info(&#39;public.table_test&#39;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici les résultats (tronqué, je n&amp;rsquo;ai pas mis toutes les colonnes) avec en gras les valeurs qui m’intéressent :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Paramètre&lt;/th&gt;&lt;th&gt;Valeur&lt;/th&gt;&lt;th&gt;Commentaire&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;schema&lt;/td&gt;&lt;td&gt;public&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;table&lt;/td&gt;&lt;td&gt;table_test&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;tablespace&lt;/td&gt;&lt;td&gt;pg_default&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;oid_table&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;350934&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;numero_heap_file&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;350934&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;Le numéro du fichier peut être différent de l&amp;rsquo;oid de la table&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;heap_file_segment_0_location&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;C:/&amp;#8230;/PG16-data/base/246510/350934&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;nb_page&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;La table vient d&amp;rsquo;être créée et ne contient aucune donnée donc aucune page n&amp;rsquo;a été créée.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;tuple_count&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;Aucune données.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;table_length&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;La table venant d&amp;rsquo;être créée, elle ne pèse encore rien&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;table_length_human&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;0 bytes&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;tuple_length&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;dead_tuple_length&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;free_space_length&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;toast_oid&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;350937&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;La table TOAST est déjà créée dans le SGBD bien qu&amp;rsquo;il n&amp;rsquo;y ait pas encore eu besoin du système TOAST..&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;toast_table&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;pg_toast_350934&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;toast_heap_file_segment_0_location&lt;/td&gt;&lt;td&gt;C:/&amp;#8230;/PG16-data/base/246510/350937&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;toast_nb_page&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;toast_nb_tuple&lt;/td&gt;&lt;td&gt;-1&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;toast_length&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;toast_length_human&lt;/td&gt;&lt;td&gt;0 bytes&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ajoutez une ligne de données puis recalculez les statistiques :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Insertion de la donnée&#xA;INSERT INTO &#xA;  public.table_test (id, commentaire_1, commentaire_2)&#xA;VALUES &#xA;  (1, &#39;A&#39;, &#39;un commentaire&#39;),&#xA;  (2, &#39;B&#39;, &#39;un commentaire vraiment très très très long&#39;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT * FROM public.get_table_info(&#39;public.table_test&#39;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici les résultats (tronqués) :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Paramètre&lt;/th&gt;&lt;th&gt;Valeur&lt;/th&gt;&lt;th&gt;Commentaire&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;nb_page&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;Une page a été créée&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;tuple_count&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;table_length_human&lt;/td&gt;&lt;td&gt;8192 bytes&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;tuple_length&lt;/td&gt;&lt;td&gt;2113&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;free_space_length&lt;/td&gt;&lt;td&gt;6036&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il est intéressant de constater que les données pèsent 2113 octets (tuple_length) et que la page pèse 8,192 ko. En effet, les pages font toujours la même taille.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez voir qu&amp;rsquo;il reste 6036 octets d&amp;rsquo;espace disponible dans la page avant la création d&amp;rsquo;une seconde.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Regardez maintenant un peu plus en détail le stockage des données grâce à cette seconde fonction &lt;code&gt;get_heap_page_info()&lt;/code&gt; qui remonte des statistiques sur le contenu des pages d&amp;rsquo;une table :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT * FROM public.get_heap_page_info(&#39;public.table_test&#39;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici les résultats :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Paramètre&lt;/th&gt;&lt;th&gt;Valeur&lt;/th&gt;&lt;th&gt;Commentaire&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;page_num&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;Numéro de page&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;lsn&lt;/td&gt;&lt;td&gt;4/1D111198&lt;/td&gt;&lt;td&gt;Identifiant xlog de la dernière opération effectuée sur la page.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;nb_pointer&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;Nombre de pointeurs.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;nb_tuple&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;Nombre de tuple.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;nb_tuple_visible&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;Nombre de tuples visibles.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;length_header&lt;/td&gt;&lt;td&gt;24&lt;/td&gt;&lt;td&gt;Taille des métadonnées de la page.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;length_pointer&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;Taille de l&amp;rsquo;ensemble des pointeurs.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;length_free_space&lt;/td&gt;&lt;td&gt;6036&lt;/td&gt;&lt;td&gt;Taille de l&amp;rsquo;espace libre.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;length_tuple&lt;/td&gt;&lt;td&gt;2120&lt;/td&gt;&lt;td&gt;Taille occupée par les tuples.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;length_meta&lt;/td&gt;&lt;td&gt;48&lt;/td&gt;&lt;td&gt;Taille des métadonnées des tuples.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;length_data&lt;/td&gt;&lt;td&gt;2065&lt;/td&gt;&lt;td&gt;Taille des données des tuples.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;length_empty&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;Taille des espaces laissés par l&amp;rsquo;alignement des tuples.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;length_special&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;Taille des données spécifiques.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;offset_pointer&lt;/td&gt;&lt;td&gt;24&lt;/td&gt;&lt;td&gt;Positionnement du début des pointeurs.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;offset_free_space&lt;/td&gt;&lt;td&gt;32&lt;/td&gt;&lt;td&gt;Positionnement du début de l&amp;rsquo;espace disponible.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;offset_data&lt;/td&gt;&lt;td&gt;6072&lt;/td&gt;&lt;td&gt;Positionnement du début des données.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;offset_special&lt;/td&gt;&lt;td&gt;8192&lt;/td&gt;&lt;td&gt;Positionnement du début des données spécifique.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;offset_page_end&lt;/td&gt;&lt;td&gt;8192&lt;/td&gt;&lt;td&gt;Positionnement de la fin de la page.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici un schéma de l&amp;rsquo;état actuel de la page, vous remarquerez qu&amp;rsquo;il n&amp;rsquo;y a pas de bloc spécifique car il s&amp;rsquo;agit d&amp;rsquo;une table classique et non pas d&amp;rsquo;une table d&amp;rsquo;index :&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_page_content_test-1.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3099&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Bon nous voyons déjà pas mal de chose mais nous ne savons pas comment se répartissent les tuples, leurs métadonnées ainsi que les espaces vides. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Allez donc un peu plus loin (puisque vous êtes là pour ça), grâce à une troisième fonction &lt;code&gt;get_heap_tuple_info()&lt;/code&gt; qui permet de récupérer toutes les informations disponibles sur les tuples présents dans la page.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT * FROM public.get_heap_tuple_info(&#39;public.table_test&#39;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici les résultats (attention, j&amp;rsquo;ai plusieurs lignes donc mon tableau est maintenant dans l&amp;rsquo;autre sens).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;ctid&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_num&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_index&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;offset_start&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;offset_end&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;offset_next&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;length_tuple&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;length_meta&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;length_data&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;length_empty&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Identifiant de la ligne : numéro de page, numéro d&amp;rsquo;index dans la page&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Numéro de page&lt;/em&gt;.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Numéro d&amp;rsquo;index du tuple dans la page.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Position du début du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Position de la fin du tuple.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Position du début du tuple précédent.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Longueur du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Longueur des métadonnées du tuple&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Longueur des données en elle-même&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Espace vide&lt;/em&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,1)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6184&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;8186&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;8192&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2002&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;24&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1978&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,2)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6072&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6183&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6184&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;111&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;24&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;87&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici la représentation exacte de la page (avec en jaune l&amp;rsquo;espace perdu à cause de l&amp;rsquo;alignement) :&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_page_content_test_accurate-1.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3101&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez voir que le premier tuple possède un peu moins de 2000 octets de données : c&amp;rsquo;est à cause du champ &lt;code&gt;commentaire_2&lt;/code&gt;. En effet, le type de données &lt;code&gt;char(2000)&lt;/code&gt; limite les données à 2000 caractères maximum. Cependant, ce type de données est en fait le type &lt;code&gt;bpchar(2000)&lt;/code&gt; comme &lt;em&gt;blank padded caractère&lt;/em&gt; : PostgreSQL ajoute des espaces au texte jusqu’à ce qu&amp;rsquo;il atteigne 2000 caractères ce qui force la ligne à prendre plus de place que nécessaire.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Autre élément, le second tuple ne possède que 87 octets de données. C&amp;rsquo;est à cause du système TOAST qui s&amp;rsquo;est déclenché car les données pesaient plus que 2 ko, elles ont donc été compressées. Comme le résultat pèse moins de 2 ko, aucune colonne n&amp;rsquo;a été transférée dans la table TOAST.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez également que les pointeurs renseignent sur l&amp;#8217;emplacement des tuples.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ajoutez encore des données :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;INSERT INTO &#xA;  public.table_test (id, commentaire_1, commentaire_2)&#xA;VALUES &#xA;  (3, &#39;C&#39;, &#39;un commentaire&#39;),&#xA;  (4, &#39;D&#39;, &#39;un commentaire&#39;),&#xA;  (5, &#39;E&#39;, &#39;un commentaire&#39;),&#xA;  (6, &#39;F&#39;, &#39;un commentaire&#39;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Analysez la table :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT * FROM public.get_heap_tuple_info(&#39;public.table_test&#39;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;ctid&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_num&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_index&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;offset_start&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;offset_end&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Identifiant de la ligne : numéro de page, numéro d&amp;rsquo;index dans la page&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Numéro de page&lt;/em&gt;.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Numéro d&amp;rsquo;index du tuple dans la page.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Position du début du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Position de la fin du tuple.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,1)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6184&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;8186&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,2)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6072&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6183&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,3)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4064&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6066&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,4)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2056&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4058&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,5)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;48&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2050&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,1)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6184&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;8186&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Une page supplémentaire a été créée, la table pèse maintenant 2 x 8 ko : 16 ko (vous pouvez le vérifier avec &lt;code&gt;get_table_info()&lt;/code&gt;).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Gestion des données&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Colonnes système&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Des colonnes système sont présentes dans chacune des tables. Il suffit de les spécifier dans vos requêtes pour y accéder, les voici :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;tableoid&lt;/code&gt; : l&amp;rsquo;OID de la table, utilisez &lt;code&gt;tableoid::regclass&lt;/code&gt; pour obtenir le nom de la table.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;ctid&lt;/code&gt; : emplacement physique de la ligne.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;xmin&lt;/code&gt; : identifiant de la transaction d&amp;rsquo;insertion.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;cmin&lt;/code&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/ddl-system-columns.html#DDL-SYSTEM-COLUMNS-CMIN&#34;&gt;&lt;/a&gt; : identifiant de commande au sein de la transaction d&amp;rsquo;insertion.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;xmax&lt;/code&gt; : identifiant de la transaction de supression.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;cmax&lt;/code&gt; : identifiant de commande au sein de la transaction de suppression.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici un exemple avec notre table :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT &#xA;  tableoid::regclass,&#xA;  tableoid,&#xA;  ctid,&#xA;  xmin,&#xA;  xmax,&#xA;  *&#xA;FROM &#xA;  public.table_test&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici le résultat :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;tableoid&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;tableoid&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;ctid&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;xmin&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;xmax&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;id&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;commentaire_1&lt;/th&gt;&lt;th&gt;commentaire_2&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;table_test&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;350934&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,1)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4432&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td&gt;un commentaire&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;table_test&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;350934&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,2)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4432&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td&gt;un commentaire vraiment très très très long&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;table_test&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;350934&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,3)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4435&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td&gt;un commentaire&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;table_test&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;350934&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,4)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4435&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;D&lt;/td&gt;&lt;td&gt;un commentaire&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;table_test&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;350934&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,4)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4435&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;E&lt;/td&gt;&lt;td&gt;un commentaire&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;table_test&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;350934&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,1)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4435&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;F&lt;/td&gt;&lt;td&gt;un commentaire&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Si besoin, n&amp;rsquo;hésitez pas à utiliser cette requête pour voir à quelles lignes correspondent les tuples que nous allons analyser.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Fonctionnement&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Maintenant que nous connaissons un peu mieux la façon dont les données sont stockées physiquement, regardons comment les mouvements sont gérés.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Dans une base PostgreSQL, l&amp;rsquo;accès aux données peut se faire de façon concurrentielle (en même temps) depuis différents clients. Il faut donc gérer correctement l&amp;rsquo;ordonnancement des transactions. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour cela, il existe le MVCC : Multiversion Concurrency Control ou contrôle d&amp;rsquo;accès simultané, il s&amp;rsquo;agit d&amp;rsquo;un système permettant la conservation des différents états de la donnée afin de permettre à chaque transaction de travailler sur un instantané de la base. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le fonctionnement repose sur le principe suivant : chaque transaction possède un identifiant unique et incrémentale, lorsqu&amp;rsquo;elle effectue une opération, les lignes modifiées se voient attribuer son identifiant ce qui permet de ressituer l&amp;rsquo;état des données par rapport à toute autre transaction.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Par exemple :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Horaire&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Transaction 1&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Transaction 2&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10h00&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Démarrage transaction&lt;br&gt;Début UPDATE sur la table X&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10h05&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Démarrage transaction&lt;br&gt;Début INSERT sur la table Y&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10h06&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Fin INSERT sur la table Y&lt;br&gt;Fin transaction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10h08&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Fin UPDATE sur la table X&lt;br&gt;Début UPDATE sur la table Y&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10h09&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Fin UPDATE sur la table Y&lt;br&gt;Fin transaction&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Lorsque la transaction 1 effectue sa seconde opération, l&amp;rsquo;état des données doit être celui qui existait lors du démarrage de la transaction. Cependant, pour éviter de bloquer tous les utilisateurs, PostgreSQL a déjà effectué l&amp;rsquo;INSERT de la transaction 2. Ainsi, pour conserver l&amp;rsquo;isolation de chaque transaction, une version de la table telle qu&amp;rsquo;elle était lors de démarrage de la transaction 1 existe toujours après la finalisation de la transaction 2, le temps que la transaction 1 puisse se terminer.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que si la transaction 2 avait effectué une opération modifiant des données de la table Y concernées par la transaction 1, PostgreSQL aurait attendu la fin de la transaction grâce à un système de verrous placés sur les lignes concernées.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que selon le niveau d&amp;rsquo;isolation, il est possible pour une transaction de « voir » les lignes modifiées par d&amp;rsquo;autres transactions. Il s&amp;rsquo;agit du réglage de la variable &lt;code&gt;default_transaction_isolation&lt;/code&gt; qui peut prendre l&amp;rsquo;une des valeurs suivantes :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;READ COMMITTED&lt;/code&gt; : une requête n&amp;rsquo;a accès qu&amp;rsquo;aux lignes commitées avant qu&amp;rsquo;elle ne commence, c&amp;rsquo;est donc le démarrage de la requête qui fait foi. &lt;br&gt;Ainsi, les dernières requêtes d&amp;rsquo;une transaction peuvent opérer sur des données ayant été modifiées par d&amp;rsquo;autres transactions par rapport aux premières requêtes.&lt;br&gt;Il s&amp;rsquo;agit de la valeur par défaut.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;REPEATABLE READ&lt;/code&gt; : une transaction ne peut voir que les lignes commitées avant que la première requête de la transaction ne soit exécutée.&lt;br&gt;Deux transactions concurrentes peuvent modifier des données différentes mais appartenant à la même table ce qui peut conduire à des données inconsistantes (car calculées sur une base qui n&amp;rsquo;existe plus par exemple).&lt;br&gt;En revanche, si une seconde transaction modifie les mêmes données que la première, une erreur &lt;code&gt;serialization_failure&lt;/code&gt; est remontée.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;SERIALIZABLE&lt;/code&gt; : une transaction ne peut voir que les lignes commitées avant que la première requête de la transaction ne soit exécutée. &lt;br&gt;Si deux transactions concurrentes modifient les mêmes données, la première transaction à commiter « gagne » et la seconde est annulée (&lt;code&gt;ROLLBACK&lt;/code&gt;) et une erreur &lt;code&gt;serialization_failure&lt;/code&gt; est remontée.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Mais comment cela fonctionne en détail ? Pour voir cela, nous allons devoir utiliser un exemple concret.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;INSERT &amp;#8211; UPDATE &amp;#8211; DELETE&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour démarrer nos test, nous allons repartir de la table précédente (disponible dans l&amp;rsquo;onglet « initialisation »).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Démarrez une transaction et affichez son identifiant :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW gestion_data_insert_delete_udpate&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;txid_current()&#34; data-enlighter-group=&#34;gestion_data_insert_delete_udpate&#34;&gt;BEGIN;&#xA;&#xA;SELECT txid_current();&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;Initialisation&#34; data-enlighter-group=&#34;gestion_data_insert_delete_udpate&#34;&gt;-- !!!&#xA;-- Attention à bien exécuter chaque requête dans une transaction spécifique&#xA;-- Ce que permet le COMMIT à la suite de chaque requête si vous lancez tout d&#39;un seul bloc&#xA;-- !!!&#xA;&#xA;-- Création d&#39;une table de test&#xA;CREATE TABLE public.table_test (&#xA;  id int4,&#xA;  commentaire_1 char(1955),&#xA;  commentaire_2 text&#xA;)&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Insertion de données&#xA;INSERT INTO &#xA;  public.table_test (id, commentaire_1, commentaire_2)&#xA;VALUES &#xA;  (1, &#39;A&#39;, &#39;un commentaire&#39;),&#xA;  (2, &#39;B&#39;, &#39;un commentaire vraiment très très très long&#39;)&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Insertion de données&#xA;INSERT INTO &#xA;  public.table_test (id, commentaire_1, commentaire_2)&#xA;VALUES &#xA;  (3, &#39;C&#39;, &#39;un commentaire&#39;),&#xA;  (4, &#39;D&#39;, &#39;un commentaire&#39;),&#xA;  (5, &#39;E&#39;, &#39;un commentaire&#39;),&#xA;  (6, &#39;F&#39;, &#39;un commentaire&#39;)&#xA;;&#xA;COMMIT;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ma transaction porte le numéro d&amp;rsquo;identifiant &lt;strong&gt;4440&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Modifiez des données :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Mise à jour de la ligne 3&#xA;UPDATE public.table_test&#xA;SET commentaire_2 = &#39;Un autre commentaire&#39;&#xA;WHERE id = 3&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Validez la transaction :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;COMMIT;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Tant qu&amp;rsquo;a faire, faites la suppression suivante suivit d&amp;rsquo;une insertion :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;DELETE FROM public.table_test&#xA;WHERE id = 4&#xA;;&#xA;&#xA;-- Ajout d&#39;une ligne&#xA;INSERT INTO &#xA;  public.table_test (id, commentaire_1, commentaire_2)&#xA;VALUES &#xA;  (7, &#39;G&#39;, &#39;un commentaire&#39;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Analysez les données : &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT * FROM public.get_heap_tuple_info(&#39;public.table_test&#39;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;ctid&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_index&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;xmin&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;xmax&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;state&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;visible&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;update&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;direction&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;hot&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;delete&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;freeze&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Identifiant de la ligne : numéro de page, numéro d&amp;rsquo;index dans la page&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Numéro d&amp;rsquo;index du tuple dans la page.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;ID de la transaction à partir de laquelle le tuple est visible&lt;/em&gt;.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;&lt;em&gt;ID de la transaction au delà de laquelle le tuple n&amp;rsquo;est plus visible&lt;/em&gt;.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;État du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Visibilité du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Le tuple a-t-il été mis à jour&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;to : vers un autre tuple.&lt;br&gt;from : depuis unautre tuple&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;HOT UPDATE&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Tuple supprimé&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;xmin gelé&lt;/em&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,1)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4432 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,2)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4432 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;dead&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;to another line&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,4)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4435 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4442 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,5)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4435 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,1)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4435 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,2)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4440 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;from another line&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,3)&lt;br&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4453 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous découvrez les colonnes &lt;code&gt;xmin&lt;/code&gt; et &lt;code&gt;xmax&lt;/code&gt; qui indiquent « à partir de » et « jusqu’à » quelle transaction un tuple est visible. J&amp;rsquo;ai ajouté un petit drapeau à côté de chaque valeur :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;c : la transaction a été validée (&lt;code&gt;COMMIT&lt;/code&gt;).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;a : la transaction a été annulée (&lt;code&gt;ROLLBACK&lt;/code&gt;).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous noterez donc que PostgreSQL garde en mémoire les données qui ont été modifiées lors des transactions abandonnées.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez voir plusieurs éléments :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Les lignes visibles ne possèdent pas de &lt;em&gt;xmax&lt;/em&gt; (en vrai il est égal à 0).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La ligne &lt;code&gt;id = 3&lt;/code&gt; a été mise à jour.&lt;br&gt;Son ancien emplacement avec les données d&amp;rsquo;origine est toujours présent et correspond à la troisième ligne. Elle est identifiée comme « morte » et devra être nettoyée.&lt;br&gt;La nouvelle version est présente à la dernière ligne (&lt;code&gt;ctid = (1,2)&lt;/code&gt;).&lt;br&gt;PostgreSQL a réalisé un &lt;code&gt;INSERT&lt;/code&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La ligne &lt;code&gt;ctid = (0,4)&lt;/code&gt; correspond à la ligne &lt;code&gt;id = 4&lt;/code&gt; que nous avons supprimée.&lt;br&gt;Ici aussi la donnée n&amp;rsquo;est pas supprimée mais simplement « tagguée » comme non visible.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La ligne &lt;code&gt;ctid = (1,3)&lt;/code&gt; correspond à la ligne que nous venons d&amp;rsquo;ajouter : elle est située en dernière position.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Un &lt;code&gt;UPDATE&lt;/code&gt; est en réalité la même opération qu&amp;rsquo;un &lt;code&gt;DELETE&lt;/code&gt; suivi d&amp;rsquo;un &lt;code&gt;INSERT&lt;/code&gt;, d&amp;rsquo;ailleurs son coût est assez similaire.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ce fonctionnement nous montre également pourquoi les lignes peuvent paraitre désordonnées lors d&amp;rsquo;un &lt;code&gt;SELECT&lt;/code&gt;. En effet, PostgreSQL remonte les lignes dans l&amp;rsquo;ordre dans lequel elles sont stockées. Dans notre cas, un simple &lt;code&gt;SELECT&lt;/code&gt; sur la table nous aurait donné :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;initialement 1, 2, 3, 4, 5, 6.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Après l&amp;rsquo;&lt;code&gt;UPDATE&lt;/code&gt; 1, 2, 4, 5, 6, 3.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Après le &lt;code&gt;DELETE&lt;/code&gt; 1, 2, 5, 6, 3.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;HOT UPDATE&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le Heap Only Tuple UPDATE (ou simplement &lt;code&gt;HOT UPDATE&lt;/code&gt;) un processus particulier de PostgreSQL qui se produit lorsqu&amp;rsquo;il reste suffisamment de place dans une page pour que l&amp;rsquo;ancienne et la nouvelle version d&amp;rsquo;un tuple y soient stockées.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Lancez maintenant la requête suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Mise à jour de la ligne 3 (oui encore)&#xA;UPDATE public.table_test&#xA;SET commentaire_2 = &#39;Un commentaire&#39;&#xA;WHERE id = 3&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Analysez les données de la deuxième page :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT * FROM public.get_heap_tuple_info(&#39;public.table_test&#39;, 1);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;ctid&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_index&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;offset_start&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;xmin&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;xmax&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;state&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;visible&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;update&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;direction&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;hot&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;delete&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;freeze&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Identifiant de la ligne : numéro de page, numéro d&amp;rsquo;index dans la page&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Numéro d&amp;rsquo;index du tuple dans la page.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Position du début du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;ID de la transaction à partir de laquelle le tuple est visible&lt;/em&gt;.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;&lt;em&gt;ID de la transaction au delà de laquelle le tuple n&amp;rsquo;est plus visible&lt;/em&gt;.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;État du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Visibilité du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Le tuple a-t-il été mis à jour&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;to : vers un autre tuple.&lt;br&gt;from : depuis unautre tuple&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;HOT UPDATE&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Tuple supprimé&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;xmin gelé&lt;/em&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,1)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6184&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4435 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,4)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4176&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4440 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4454 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;from and to another line&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,3)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2168&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4453 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,4)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;160&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4454 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;from another line&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cette fois-ci vous pouvez voir :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;L&amp;rsquo;&lt;code&gt;INSERT&lt;/code&gt; est fait en fin de données (&lt;code&gt;ctid = (1,2)&lt;/code&gt;).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;L&amp;rsquo;&lt;code&gt;UPDATE&lt;/code&gt; de la ligne &lt;code&gt;id = 3&lt;/code&gt; est ici un &lt;code&gt;HOT UPDATE&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici le processus en image :&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_page_content_hot_1-1.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3104&#34;/&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Voici la table dans son état initial&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_page_content_hot_2.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3106&#34;/&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;&lt;br&gt;Première étape du HOT UPDATE&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;La nouvelle version du tuple est insérée en dernière position avec le &lt;code&gt;ctid = (1,4)&lt;/code&gt; et porte de tag « HOT UPDATE ».&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;ancienne version est « désactivée » : son &lt;code&gt;ctid&lt;/code&gt; devient &lt;code&gt;(1,4)&lt;/code&gt; et les tags « HOT UPDATE » et « HEAP ONLY TUPLE » sont ajoutés. Ceci permet à PostgreSQL de comprendre, lors de la lecture du tuple 2, qu&amp;rsquo;il doit aller lire le tuple 4.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le &lt;code&gt;HOT UPDATE&lt;/code&gt; n&amp;rsquo;est en réalité pas terminé, une seconde opération va être menée par la base.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Faites la requête SELECT suivante puis réanalysez la table :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;generic&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- SELECT&#xA;SELECT * FROM public.table_test;&#xA;&#xA;-- Analyse&#xA;SELECT * FROM public.get_heap_tuple_info(&#39;public.table_test&#39;, 1);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici les données de la 2ème page : &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;ctid&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_index&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;offset_start&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;xmin&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;xmax&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;state&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;visible&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;update&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;direction&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;hot&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;delete&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;freeze&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Identifiant de la ligne : numéro de page, numéro d&amp;rsquo;index dans la page&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Numéro d&amp;rsquo;index du tuple dans la page.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Position du début du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;ID de la transaction à partir de laquelle le tuple est visible&lt;/em&gt;.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;&lt;em&gt;ID de la transaction au delà de laquelle le tuple n&amp;rsquo;est plus visible&lt;/em&gt;.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;État du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Visibilité du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Le tuple a-t-il été mis à jour&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;to : vers un autre tuple.&lt;br&gt;from : depuis unautre tuple&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;HOT UPDATE&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Tuple supprimé&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;xmin gelé&lt;/em&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,1)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6184&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4435 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;redirect to 4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;from and to another line&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,3)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4176&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4453 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,4)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2168&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4454 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;from another line&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le tuple 2, qui contient l&amp;rsquo;ancienne version de la ligne &lt;code&gt;id = 3&lt;/code&gt;, a été « nettoyée » et sont pointeur redirige vers le pointeur 4. L&amp;rsquo;offset des tuples a été modifié à cause d&amp;rsquo;une défragmentation de la page : c&amp;rsquo;est la seconde opération du &lt;code&gt;HOT UPDATE&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici le processus imagé :&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_page_content_hot_3-1.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3107&#34;/&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Pruning : mise à jour du pointeur ce qui tue le tuple 2&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Lors de la première requête qui suit l&amp;rsquo;&lt;code&gt;UPDATE&lt;/code&gt; et qui lit les données de la table (un &lt;code&gt;SELECT&lt;/code&gt; par exemple), PostgreSQL opère un processus de pruning :&lt;br&gt;il met à jour le pointeur du tuple 2 et remplace la valeur de position du tuple 2 par celle du pointeur de la nouvelle version (ici le pointeur 4).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ainsi, lors d&amp;rsquo;une lecture de la donnée, c&amp;rsquo;est toujours le pointeur 2 qui sera lu en premier mais PostgreSQL est directement redirigé vers le nouveau pointeur (le 4) qui l&amp;rsquo;envoi ainsi vers le nouveau tuple (le 4 donc). Ceci permet de ne pas avoir à modifier les index dans ce type de situation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que dans le cas d&amp;rsquo;une lecture séquentiel, cette opération (de redirection) est similaire en temps et en coût que de lire directement le pointeur 4.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_page_content_hot_4-1.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3108&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;PostgreSQL effectue ensuite une défragmentation de la page en supprimant physiquement le tuple 2 (ce qui entraine un « décalage » des tuples pour combler l&amp;rsquo;espace vide). Cette défragmentation ne concerne pas les pointeurs, le 2&lt;sup&gt;ème&lt;/sup&gt; reste donc présent, référençant toujours le pointeur 4 (toujours pour ne pas avoir à toucher aux index).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le processus de lecture est donc identique à l&amp;rsquo;étape précédente mais de l&amp;rsquo;espace est rendu disponible.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que si un second &lt;code&gt;HOT UPDATE&lt;/code&gt; est réalisé sur le même tuple et ceci juste après le premier &lt;code&gt;HOT UPDATE&lt;/code&gt;, la nouvelle version est insérée dans l&amp;rsquo;espace qui aurait du être nettoyé par la défragmentation, le pointeur qui redirigeait vers un autre pointeur (pt&lt;sub&gt;1-2&lt;/sub&gt; dans notre exemple) est alors rétabli. La défragmentation nettoiera alors le tuple intermédiaire ainsi que son pointeur (pt&lt;sub&gt;1-4&lt;/sub&gt;, tuple 4).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le &lt;code&gt;HOT UPDATE&lt;/code&gt; est ainsi plus rapide à executer qu&amp;rsquo;un &lt;code&gt;UPDATE&lt;/code&gt; classique et permet de libérer de l&amp;rsquo;espace en évitant de conserver l&amp;rsquo;ancien tuple.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous savez maintenant plus précisément comment fonctionne le stockage physique. Vous voyez ainsi que lorsque beaucoup d&amp;rsquo;opérations sont faites, des lignes mortes ainsi que des pointeurs supplémentaires sont présents dans vos tables ce qui entraine une grande perte d&amp;rsquo;espace.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Heureusement, un outil spécifique existe pour nettoyer tout cela : le &lt;code&gt;VACUUM&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;vacuum&#34;&gt;VACUUM&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Passons l&amp;rsquo;aspirateur ! Ce n&amp;rsquo;est pas pour rien que le mot &lt;em&gt;VACUUM&lt;/em&gt; a été choisi pour cette opération&amp;#8230;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le VACUUM consiste en le nettoyage d&amp;rsquo;une table afin d&amp;rsquo;en retirer tous les éléments qui ne sont plus utiles (lignes mortes) ainsi que de réarranger les éléments pour gagner de la place.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Deux types de VACUUM existent :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Le Plain VACUUM (standard) : nettoyage rapide et défragmentation partielle de la table.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Le VACUUM FULL (complet) : nettoyage et défragmentation complets de la table.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;opération de VACUUM est lancée automatiquement par PostgreSQL via l&amp;rsquo;autovacuum.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;VACUUM standard&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le VACUUM standard (ou VACUUM concurrentiel ou Plain VACUUM) peut être exécuter sans verrouiller la table sur laquelle il porte.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il opère les actions suivantes :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Analyse des pages pour identifier les tuples morts (issus d&amp;rsquo;un &lt;code&gt;UPDATE&lt;/code&gt;, d&amp;rsquo;un &lt;code&gt;DELETE&lt;/code&gt; ou d&amp;rsquo;une transaction abandonnée).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;FREEZE des tuples si nécessaire (voir le chapitre VACUUM FREEZE)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Suppression des entrées des index correspondant à des tuples morts.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Pour chaque page :&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Suppression des tuples morts&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Défragmentation de la page pour récupérer l&amp;rsquo;espace des tuples morts.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Mise à jour de la &lt;em&gt;free space map&lt;/em&gt; et de la &lt;em&gt;visibility map&lt;/em&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Suppression de la dernière page si possible (si aucun tuple vivant dedans).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Mise à jour des statistiques de la table dans les tables système.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;étape 1 commence par un listing des tuples mort, cette lsite est créée en mémoire. C&amp;rsquo;est pour cette étape que la variable de configuration &lt;code&gt;maintenance_work_mem&lt;/code&gt; est importante. En effet, si sa valeur est trop faible, PostgreSQL devra itérer plusieurs fois sur la table jusqu’à ce qu&amp;rsquo;il ne trouve plus de tuple mort.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;étape 2 est un FREEZE des valeurs &lt;em&gt;xmin&lt;/em&gt; des tuples. Cette opération est détaillée dans le chapitre &lt;a href=&#34;#vacuum_freeze&#34;&gt;VACUUM FREEZE&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;étape 4 se déroule de la façon suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_vac_plain_1.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3114&#34;/&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;État initial : un tuple est considéré comme mort&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_vac_plain_2.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3115&#34;/&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Les données sont effacées et le pointeur du tuple est réinitialisé&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_vac_plain_3.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3117&#34;/&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;La défragmentation réorganise les données mais conserve le pointeur 2&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Voici un exemple, repartez de notre table d&amp;rsquo;exemple utilisée précédemment (disponible dans l&amp;rsquo;onglet « initialisation ») puis supprimez quelques lignes et analysezla :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;get_heap_tuple_info()&#34; data-enlighter-group=&#34;start_vacuum_plain&#34;&gt;DELETE FROM public.table_test&#xA;WHERE id IN (6, 3)&#xA;;&#xA;&#xA;SELECT * FROM public.get_heap_tuple_info(&#39;public.table_test&#39;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;Initialisation&#34; data-enlighter-group=&#34;start_vacuum_plain&#34;&gt;-- !!!&#xA;-- Attention à bien exécuter chaque requête dans une transaction spécifique&#xA;-- Ce que permet le COMMIT à la suite de chaque requête si vous lancez tout d&#39;un seul bloc&#xA;-- !!!&#xA;&#xA;-- Création de la table&#xA;CREATE TABLE public.table_test (&#xA;  id int4,&#xA;  commentaire_1 char(1955),&#xA;  commentaire_2 text&#xA;)&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Insertion de données&#xA;INSERT INTO &#xA;  public.table_test (id, commentaire_1, commentaire_2)&#xA;VALUES &#xA;  (1, &#39;A&#39;, &#39;un commentaire&#39;),&#xA;  (2, &#39;B&#39;, &#39;un commentaire vraiment très très très long&#39;)&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Insertion de données&#xA;INSERT INTO &#xA;  public.table_test (id, commentaire_1, commentaire_2)&#xA;VALUES &#xA;  (3, &#39;C&#39;, &#39;un commentaire&#39;),&#xA;  (4, &#39;D&#39;, &#39;un commentaire&#39;),&#xA;  (5, &#39;E&#39;, &#39;un commentaire&#39;),&#xA;  (6, &#39;F&#39;, &#39;un commentaire&#39;)&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Mise à jour de la ligne 2&#xA;UPDATE public.table_test&#xA;SET commentaire_2 = &#39;Un autre commentaire&#39;&#xA;WHERE id = 3&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Suppression de la ligne 4&#xA;DELETE FROM public.table_test&#xA;WHERE id = 4&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Ajout d&#39;une ligne&#xA;INSERT INTO &#xA;  public.table_test (id, commentaire_1, commentaire_2)&#xA;VALUES &#xA;  (7, &#39;G&#39;, &#39;un commentaire&#39;)&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Mise à jour de la ligne 3 (oui encore)&#xA;UPDATE public.table_test&#xA;SET commentaire_2 = &#39;Un commentaire&#39;&#xA;WHERE id = 3&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Sélection des données pour finalisation HOT UPDATE&#xA;SELECT * FROM public.table_test&#xA;;&#xA;COMMIT;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous devriez avoir la structure suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;ctid&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_num&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_index&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;offset_start&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;xmin&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;xmax&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;state&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;visible&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;update&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;delete&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;freeze&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Identifiant de la ligne : numéro de page, numéro d&amp;rsquo;index dans la page&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Numéro de page&lt;/em&gt;.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Numéro d&amp;rsquo;index du tuple dans la page.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Position du début du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;ID de la transaction à partir de laquelle le tuple est visible&lt;/em&gt;.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;&lt;em&gt;ID de la transaction au delà de laquelle le tuple n&amp;rsquo;est plus visible&lt;/em&gt;.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;État du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Visibilité du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Le tuple a-t-il été mis à jour&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Tuple supprimé&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;xmin gelé&lt;/em&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,1)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6184&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4527 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,2)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6072&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4527 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;dead&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,4)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4064&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4528 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4530 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,5)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2056&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4528 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,1)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6184&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4528 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4533 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;redirect to 4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,3)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4176&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4531 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,4)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2168&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4532 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4533 &amp;#8211; c&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez la différence entre les tuples non visibles qui ont été mis à jour et les tuples non visibles qui ont été supprimés :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Les premiers ont déjà été nettoyés des tables, leurs pointeurs sont toujours présents mais ne pointent vers rien ou redirigent vers un autre pointeur.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Les seconds en revanche sont toujours présents mais simplement non visibles.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Regardez également le résultat de la requête suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT * FROM public.get_heap_page_info(&#39;public.table_test&#39;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici les résultats :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_num&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;nb_pointer&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;nb_tuple&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;nb_tuple_visible&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;length_pointer&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;length_free_space&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;length_tuple&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Numéro de page&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Nombre de pointeur.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Nombre de tuple.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Nombre de tuples visibles.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Taille de l&amp;rsquo;ensemble des pointeurs.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Taille de l&amp;rsquo;espace libre.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Taille occupée par les tuples.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;20&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2012&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6136&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;16&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2128&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6024&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Lancez un VACUUM puis analysez les données :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;VACUUM public.table_test;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT * FROM public.get_heap_tuple_info(&#39;public.table_test&#39;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici les résultats :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;ctid&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_num&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_index&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;offset_start&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;xmin&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;xmax&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;state&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;visible&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;update&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;delete&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;freeze&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Identifiant de la ligne : numéro de page, numéro d&amp;rsquo;index dans la page&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Numéro de page&lt;/em&gt;.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Numéro d&amp;rsquo;index du tuple dans la page.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Position du début du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;ID de la transaction à partir de laquelle le tuple est visible&lt;/em&gt;.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;&lt;em&gt;ID de la transaction au delà de laquelle le tuple n&amp;rsquo;est plus visible&lt;/em&gt;.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;État du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Visibilité du tuple.&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Le tuple a-t-il été mis à jour&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;Tuple supprimé&lt;/em&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;em&gt;xmin gelé&lt;/em&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,1)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6184&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4527 &amp;#8211; f&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,2)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6072&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4527 &amp;#8211; f&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;unused&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;unused&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(0,5)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4064&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4528 &amp;#8211; f&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;unused&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;unused&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;(1,3)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6184&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4531 &amp;#8211; f&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;normal&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez voir que les tuples vivants ont été réorganisés (modification des offsets), quand aux morts, ils ont été supprimés mais leurs pointeurs sont toujours présents dans un état « inutilisé ».&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Regardez les statistiques au niveau de chaque page :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT * FROM public.get_heap_page_info(&#39;public.table_test&#39;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici les résultats :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_num&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;nb_pointeur&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;nb_tuple&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;nb_tuple_visible&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;length_pointer&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;length_free_space&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;length_tuple&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Numéro de page&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Nombre de pointeur.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Nombre de tuple.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Nombre de tuples visibles.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Taille de l&amp;rsquo;ensemble des pointeurs.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Taille de l&amp;rsquo;espace libre.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Taille occupée par les tuples.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;20&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4020&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4128&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;12&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6148&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2008&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez voir immédiatement que l&amp;rsquo;espace précédemment occupé par les tuples morts a pu être récupéré. Les prochaines insertions se feront alors d&amp;rsquo;abord dans la première page puis dans la seconde avant de créer une éventuelle troisième page.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;En revanche, vous pouvez voir que les pointeurs n&amp;rsquo;ont pas disparus.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez également que les données présentes dans la page 2 pourraient tout à fait être transférées dans la page 1 maintenant qu&amp;rsquo;il y a suffisamment de place., c&amp;rsquo;est le &lt;code&gt;VACUUM FULL&lt;/code&gt; qui permet de faire cela.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;VACUUM FULL&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le VACUUM FULL permet d&amp;rsquo;aller au delà du VACUUM standard. En effet, ce dernier ne permet pas de réduire la taille des tables.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le VACUUM FULL réécrit complètement le &lt;em&gt;heap file&lt;/em&gt; afin de réorganiser les tuples et d&amp;rsquo;éliminer les pages en trop. L&amp;rsquo;avantage est un gain de place qui peut être conséquent.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;inconvénient est que pendant la réécriture, la table n&amp;rsquo;est plus accessible. Un autre inconvénient est que deux versions de la table seront présentes sur le disque lors de la phase de réécriture ce qui peut entrainer des problèmes d&amp;rsquo;espace disque si les données sont très volumineuses.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Reprenez notre exemple (disponible dans l&amp;rsquo;onglet « initialisation ») et analysez la table avec la fonction &lt;code&gt;get_heap_page_info()&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;get_heap_tuple_info()&#34; data-enlighter-group=&#34;start_vacuum_full&#34;&gt;-- Quelques statistiques&#xA;SELECT * FROM public.get_heap_page_info(&#39;public.table_test&#39;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;Initialisation&#34; data-enlighter-group=&#34;start_vacuum_full&#34;&gt;-- !!!&#xA;-- Attention à bien exécuter chaque requête dans une transaction spécifique&#xA;-- Ce que permet le COMMIT à la suite de chaque requête si vous lancez tout d&#39;un seul bloc&#xA;-- !!!&#xA;&#xA;-- Création de la table&#xA;CREATE TABLE public.table_test (&#xA;  id int4,&#xA;  commentaire_1 char(1955),&#xA;  commentaire_2 text&#xA;)&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Insertion de données&#xA;INSERT INTO &#xA;  public.table_test (id, commentaire_1, commentaire_2)&#xA;VALUES &#xA;  (1, &#39;A&#39;, &#39;un commentaire&#39;),&#xA;  (2, &#39;B&#39;, &#39;un commentaire vraiment très très très long&#39;)&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Insertion de données&#xA;INSERT INTO &#xA;  public.table_test (id, commentaire_1, commentaire_2)&#xA;VALUES &#xA;  (3, &#39;C&#39;, &#39;un commentaire&#39;),&#xA;  (4, &#39;D&#39;, &#39;un commentaire&#39;),&#xA;  (5, &#39;E&#39;, &#39;un commentaire&#39;),&#xA;  (6, &#39;F&#39;, &#39;un commentaire&#39;)&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Mise à jour de la ligne 2&#xA;UPDATE public.table_test&#xA;SET commentaire_2 = &#39;Un autre commentaire&#39;&#xA;WHERE id = 3&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Suppression de la ligne 4&#xA;DELETE FROM public.table_test&#xA;WHERE id = 4&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Ajout d&#39;une ligne&#xA;INSERT INTO &#xA;  public.table_test (id, commentaire_1, commentaire_2)&#xA;VALUES &#xA;  (7, &#39;G&#39;, &#39;un commentaire&#39;)&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Mise à jour de la ligne 3 (oui encore)&#xA;UPDATE public.table_test&#xA;SET commentaire_2 = &#39;Un commentaire&#39;&#xA;WHERE id = 3&#xA;;&#xA;COMMIT;&#xA;&#xA;-- Sélection des données pour finalisation HOT UPDATE&#xA;SELECT * FROM public.table_test&#xA;;&#xA;COMMIT;&#xA;&#xA;-- VACUUM Standard&#xA;VACUUM public.table_test&#xA;;&#xA;COMMIT;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici les résultats :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_num&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;nb_pointeur&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;nb_tuple&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;length_free_space&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;unused_line_pointer&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Numéro de page&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Nombre de pointeur.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Nombre de tuple.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Taille de l&amp;rsquo;espace libre.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Présence de pointeurs non utilisés.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4020&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6148&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Oui&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Maintenant, réalisez un VACUUM FULL :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- VACUUM FULL&#xA;VACUUM FULL public.table_test&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Réanalysons la table :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT * FROM public.get_heap_page_info(&#39;public.table_test&#39;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici le retour :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;page_num&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;nb_pointeur&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;nb_tuple&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;length_free_space&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;unused_line_pointer&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Numéro de page&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Nombre de pointeur.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Nombre de tuple.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Taille de l&amp;rsquo;espace libre.&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Présence de pointeurs non utilisés.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2016&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Non&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les tuples ont été réorganisés sur la première page du nouveau fichier. D&amp;rsquo;ailleurs dans l&amp;rsquo;exemple, mon filenode était &lt;strong&gt;350934&lt;/strong&gt; (l&amp;rsquo;OID de la table). Grâce à la fonction &lt;code&gt;get_table_info()&lt;/code&gt; je vois maintenant qu&amp;rsquo;il est égal à &lt;strong&gt;351418&lt;/strong&gt; : le fichier heap a bien été réécrit.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que le VACUUM FULL réécrit également les index, la visibility map ainsi que la free space map.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34; id=&#34;vacuum_freeze&#34;&gt;FREEZE des données&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le VACUUM possède une option : &lt;code&gt;FREEZE&lt;/code&gt; qui permet de geler les données. Mais à quoi ça sert ?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h5 class=&#34;wp-block-heading&#34;&gt;ID de transaction&lt;/h5&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Comme vous l&amp;rsquo;avez vu, le système de contrôle d&amp;rsquo;accès simultané (MVCC) utilise l&amp;rsquo;identifiant des transactions pour déterminer la visibilité des tuples. Cet identifiant est nommé &lt;strong&gt;txid&lt;/strong&gt; et est assigné par le gestionnaire de transaction. Il s&amp;rsquo;agit d&amp;rsquo;un nombre entier non signé de 32 bit (soit 2&lt;sup&gt;32&lt;/sup&gt; = 4 294 967 295 valeurs différentes).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ainsi, lorsqu&amp;rsquo;une transaction est en cours, tous les éléments portant un &lt;em&gt;txid&lt;/em&gt; inférieur à celui de la transaction sont considérés comme dans le passé et donc modifiables par la transaction. Tous ceux qui ont un &lt;em&gt;txid&lt;/em&gt; supérieur, sont dans le futur et donc non modifiables par la transaction (cela dépend du mode de transaction utilisé mais ne compliquons pas les choses).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez qu&amp;rsquo;une seule transaction peut contenir plusieurs instructions SQL, chaque instruction se voit alors assigner un identifiant de commande (&lt;strong&gt;cid&lt;/strong&gt;), nombre entier non signé de 32 bits également ; permettant de comparer les résultats des instructions les uns par rapport aux autres, exactement comme avec les &lt;em&gt;txid&lt;/em&gt;, au sein de la transaction. Ceci contraint d&amp;rsquo;ailleurs le système à ne pouvoir exécuter « que » 4,2 milliard d&amp;rsquo;instructions SQL par transaction (on est large&amp;#8230;)&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les &lt;em&gt;txid&lt;/em&gt; suivants sont spéciaux :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;0 : &lt;em&gt;txid&lt;/em&gt; invalide.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;1 : &lt;em&gt;txid&lt;/em&gt; d&amp;rsquo;initialisation du cluster.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;2 : avant PG 9.4, il s&amp;rsquo;agit de la valeur &lt;em&gt;xmin&lt;/em&gt; gelée, maintenant c&amp;rsquo;est un drapeau qui est ajouté au tuple.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;assignement du &lt;em&gt;txid&lt;/em&gt; se produit lorsque la transaction commence à écrire et n&amp;rsquo;indique donc pas l&amp;rsquo;ordre de démarrage des transactions. Ceci implique qu&amp;rsquo;une transaction peut « doubler » une autre. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Par exemple :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Horaire&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Transaction 1&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Transaction 2&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10h00&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Démarrage transaction&lt;br&gt;Début &lt;code&gt;SELECT&lt;/code&gt; sur la table X&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10h05&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Démarrage transaction&lt;br&gt;Début &lt;code&gt;INSERT&lt;/code&gt; sur la table Y&lt;br&gt;&lt;strong&gt;=&amp;gt; Assignation d&amp;rsquo;un txid&lt;/strong&gt; : 1000&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10h06&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Fin &lt;code&gt;INSERT&lt;/code&gt; sur la table Y&lt;br&gt;Fin transaction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10h08&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Fin &lt;code&gt;SELECT&lt;/code&gt; sur la table X&lt;br&gt;Début &lt;code&gt;UPDATE&lt;/code&gt; sur la table Y&lt;br&gt;&lt;strong&gt;=&amp;gt; Assignation d&amp;rsquo;un txid&lt;/strong&gt; : 1001&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10h09&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Fin &lt;code&gt;UPDATE&lt;/code&gt; sur la table Y&lt;br&gt;Fin transaction&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Les actions de la transaction 1 sont considérées comme ayant été réalisées après la transaction 2 bien que cette dernière ait démarrée après&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h5 class=&#34;wp-block-heading&#34;&gt;Bouclage ou wraparound&lt;/h5&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le problème, c&amp;rsquo;est que 4,2 milliards de valeurs ce n&amp;rsquo;est pas forcément assez dans la vie d&amp;rsquo;une base de données. Lorsqu&amp;rsquo;il y a plusieurs milliers de transactions par minutes, le compteur peut être dépassé en moins de 8 ans (ok on est large mais une base avec plusieurs millions de transactions par jour cela peut arriver).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour résoudre ceci, PostgreSQL utilise le bouclage (wraparround) : lorsque les 4,2 milliards de valeurs sont atteintes, le compteur redémarre à 0. Le problème c&amp;rsquo;est qu&amp;rsquo;au moment du bouclage, la transaction portant le &lt;code&gt;txid = 4,1 milliards&lt;/code&gt; qui était dans le passé se retrouve alors dans le futur (le &lt;em&gt;txid&lt;/em&gt; courant étant maintenant inférieur). Pour éviter ce phénomène, PostgreSQL considère que les 2,1 milliards de transactions précédentes sont dans le passé et les 2,1 milliards suivantes dans le futur en tenant compte de ce bouclage.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Par exemple, ma transaction porte le &lt;code&gt;txid = 1000&lt;/code&gt;, la « boucle du temps » serait la suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table is-style-regular&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;txid&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Temporalité&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&amp;lt;- Passé&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;999&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&amp;lt;- Passé&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;mark style=&#34;background-color:rgba(0, 0, 0, 0)&#34; class=&#34;has-inline-color has-bleu-dodger-color&#34;&gt;&lt;strong&gt;1000&lt;/strong&gt;&lt;/mark&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;mark style=&#34;background-color:rgba(0, 0, 0, 0)&#34; class=&#34;has-inline-color has-bleu-dodger-color&#34;&gt;&lt;strong&gt;Présent&lt;/strong&gt;&lt;/mark&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1001&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Futur -&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;sup&gt;31&lt;/sup&gt; + 999&lt;br&gt;2 147 484 647&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Futur -&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;sup&gt;31&lt;/sup&gt; + 1000&lt;br&gt;2 147 484 648&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&amp;lt;- Passé&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;sup&gt;32&lt;/sup&gt;&lt;br&gt;4 294 967 295&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&amp;lt;- Passé&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-image&#34;&gt;&#xA;&lt;figure class=&#34;aligncenter size-full&#34;&gt;&lt;img decoding=&#34;async&#34; src=&#34;https://blog.arthurbazin.com/wp-content/uploads/tuto_vacuum_freeze_wraparround-2.svg&#34; alt=&#34;&#34; class=&#34;wp-image-3132&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Voici une requête pour connaitre les limites de votre passé et de votre futur :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT &#xA;  txid_current() AS &#34;txid_current&#34;,&#xA;  CASE &#xA;    WHEN txid_current() &amp;lt; 2^31 THEN txid_current() + 2^31 - 1&#xA;    ELSE txid_current() + 2^31 - 2^32 - 1&#xA;  END AS &#34;limite_futur&#34;,&#xA;  CASE &#xA;    WHEN txid_current() &gt; 2^31 THEN txid_current() - 2^31&#xA;    ELSE txid_current() - 2^31 + 2^32&#xA;  END AS &#34;limite_passé&#34;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h5 class=&#34;wp-block-heading&#34;&gt;Gel des données : Freeze&lt;/h5&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le problème qui peut survenir c&amp;rsquo;est que lorsqu&amp;rsquo;il y a eu plus de 2,1 (exactement 2&lt;sup&gt;21&lt;/sup&gt;) milliards de transactions, PostgreSQL va considérer d&amp;rsquo;anciennes transactions comme étant dans le futur. Pas très pratique&amp;#8230;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;C&amp;rsquo;est pour résoudre ce problème que le FREEZE a été inventé. Il permet d&amp;rsquo;ajouter un drapeau sur un tuple indiquant que son &lt;em&gt;xmin &lt;/em&gt;est « gelé », c&amp;rsquo;est à dire que peu importe la valeur du &lt;em&gt;xmin&lt;/em&gt;, il doit être considéré comme inférieur au &lt;em&gt;txid&lt;/em&gt; actuel, même si ce n&amp;rsquo;est pas le cas.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour cela, le VACUUM se charge de geler les lignes adéquates selon les cas suivants :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;VACUUM standard :&lt;/strong&gt; tous les tuples dont le &lt;em&gt;xmin&lt;/em&gt; est inférieur de la valeur à : &lt;code&gt;oldest_current_txid&lt;/code&gt; &amp;#8211; &lt;code&gt;vacuum_freeze_min_age&lt;/code&gt;&lt;br&gt;Le FREEZE n&amp;rsquo;est opéré que sur les pages pour lesquelles le VACUUM opère : les pages contenant des tuples morts. On parle alors de lazy FREEZE (FREEZE paresseux).&#xA;&lt;ul&gt;&#xA;&lt;li&gt;La valeur de &lt;code&gt;vacuum_freeze_min_age&lt;/code&gt; est définie dans le fichier &lt;em&gt;postgresql.com&lt;/em&gt; et est fixée par défaut fixée à 50 000 000.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;oldest_current_txid&lt;/code&gt; correspond au plus vieux txid des transaction en cours.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;VACUUM FREEZE :&lt;/strong&gt; tous les tuples dont le &lt;em&gt;xmin&lt;/em&gt; est inférieur à &lt;code&gt;oldest_current_txid&lt;/code&gt;.&lt;br&gt;Le FREEZE est opéré sur toutes les pages de la table. On parle de FREEZE aggressif.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;strong&gt;VACUUM FULL :&lt;/strong&gt; équivalent du VACUUM FREEZE, les opérations de nettoyage sont différentes mais les opérations de FREEZE intégrée sont équivalentes.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Si l&amp;rsquo;age de la table (age du plus vieux tuple) dépasse la valeur de la variable &lt;code&gt;vacuum_freeze_table_age&lt;/code&gt; (par défaut 150 000 000) alors le prochain VACUUM lancé s&amp;rsquo;accompagnera d&amp;rsquo;un FREEZE aggressif.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Attention car le gel des tuples d&amp;rsquo;une page implique de réécrire entièrement cette dernière et a donc un coût important. Si le VACUUM prend trop de temps, il est possible de le stopper, le travail déjà accompli en sera pas perdu (notamment sur le gel des données).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A la fin du VACUUM, des statistiques sont calculées et les valeurs suivantes renseignées :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;pg_catalog.pg_class.relfrozenxid&lt;/code&gt; : &lt;em&gt;txid&lt;/em&gt; le plus récent ayant été gelé dans la table.&lt;br&gt;Il s&amp;rsquo;agit de la valeur ayant été utilisée pour geler les tuples (&lt;code&gt;txid&lt;/code&gt; ou &lt;code&gt;txid&lt;/code&gt; &amp;#8211; &lt;code&gt;vacuum_freeze_min_age&lt;/code&gt;), pas forcément du &lt;em&gt;txid&lt;/em&gt; gelé le plus récent ; ce dernier est en effet plus ancien ou égal à cette valeur.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;pg_catalog.pg_database.datfrozenxid&lt;/code&gt; : &lt;em&gt;txid&lt;/em&gt; le plus récent ayant été gelé dans toute la base.&lt;br&gt;Il s&amp;rsquo;agit du &lt;code&gt;pg_catalog.pg_class.relfrozenxid&lt;/code&gt; le plus ancien.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Dans le cas de notre exemple, la colonne &lt;code&gt;max_frozen_txid&lt;/code&gt; de la fonction &lt;code&gt;get_table_info()&lt;/code&gt; vaut &lt;code&gt;pg_catalog.pg_class.relfrozenxid&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;AUTOVACUUM&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;wp-block-quote&#34;&gt;&#xA;&lt;p&gt;Vacuuming is like exercising. If it hurts, you’re not doing it enough!&lt;/p&gt;&#xA;&lt;cite&gt;Robert Haas, PGConf.EU 2023, Prague, 13 décembre 2023&lt;/cite&gt;&lt;/blockquote&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Un VACUUM cela peut être très rapide mais cela peut aussi être très lourd et c&amp;rsquo;est pour cela qu&amp;rsquo;il faut le lancer régulièrement. C&amp;rsquo;est justement le rôle de l&amp;rsquo;autovacuum.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Toutes les minutes (interval paramétrable via le paramètre &lt;code&gt;autovacuum_naptime&lt;/code&gt;), l&amp;rsquo;autovacuum se lance, analyse les données de la vue &lt;code&gt;pg_stat_all_tables&lt;/code&gt; afin de déterminer s&amp;rsquo;il doit lancer un &lt;code&gt;VACUUM&lt;/code&gt; et ou un &lt;code&gt;ANALYSE&lt;/code&gt; sur les différentes tables de la base.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Plusieurs tables peuvent être nettoyées en même temps : un processus de VACUUM sur une table utilise un worker et par défaut jusqu’à trois peuvent être lancés (variable &lt;code&gt;autovacuum_max_workers&lt;/code&gt;).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le déclenchement de l&amp;rsquo;autovacuum sur une table se fait si au moins l&amp;rsquo;une des conditions suivantes est remplie :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt; Le &lt;em&gt;txid&lt;/em&gt; courant est plus récent que :&lt;br&gt;&lt;code&gt;pg_catalog.pg_class.relfrozenxid&lt;/code&gt; + &lt;code&gt;autovacuum_freeze_max_age&lt;/code&gt;&lt;br&gt;Le tuple le plus vieux de la table est plus ancien que la valeur de la variable &lt;code&gt;autovacuum_freeze_max_age&lt;/code&gt; (par défaut 200 000 000).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Le nombre de tuples morts est plus important que :&lt;br&gt;&lt;code&gt;autovacuum_vacuum_threshold&lt;/code&gt; + ( &lt;code&gt;autovacuum_vacuum_scale_factor&lt;/code&gt; × &lt;code&gt;nombre_tuples_relation&lt;/code&gt; )&lt;br&gt;Avec les valeurs par défaut cela correspond à 250 tuples morts pour 1000 tuples dans la table ou 2050 pour 10 000.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Le nombre de tuples insérés est plus important que :&lt;br&gt;&lt;code&gt;autovacuum_vacuum_insert_threshold&lt;/code&gt; + ( &lt;code&gt;autovacuum_vacuum_insert_scale_factor&lt;/code&gt; × &lt;code&gt;nombre_tuples_relation&lt;/code&gt; )&lt;br&gt;Avec les valeurs par défaut cela correspond à 3000 tuples insérés pour 10 000 tuples dans la table.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La valeur par défaut de &lt;code&gt;autovacuum_vacuum_scale_factor&lt;/code&gt; est trop importante pour les grosses tables. Par exemple, une table qui contient 1 000 000 d&amp;rsquo;enregistrements ne se verra nettoyée qu&amp;rsquo;après 200 050 mouvements ce qui est très important. D&amp;rsquo;autant plus que le VACUUM qui sera déclenché risque d&amp;rsquo;être très lourds en raison de la taille importante de la table.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les paramètres suivants sont intéressants :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;maintenance_work_mem&lt;/code&gt; / &lt;code&gt;autovacuum_work_mem&lt;/code&gt; : quantité de mémoire allouée pour les processus de maintenance. N&amp;rsquo;hésitez pas à le pousser jusqu’à 1 Go (au delà, le VACUUM n&amp;rsquo;en a pas l&amp;rsquo;utilité).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;autovacuum_vacuum_scale_factor&lt;/code&gt; : pourcentage de tuples modifiés au delà duquel l&amp;rsquo;autovacuum se lance. Il est intéressant de le définir spécifiquement pour les tables de grande taille.&lt;br&gt;Par exemple pour le passer à 5% : &lt;code&gt;ALTER TABLE table_name SET (autovacuum_vacuum_scale_factor = 0.05);&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;autovacuum_vacuum_insert_scale_factor&lt;/code&gt; : pourcentage de tuples insérés au delà duquel l&amp;rsquo;autovacuum se lance. Il est intéressant de le définir spécifiquement pour les tables de grande taille.&lt;br&gt;Par exemple pour le passer à 5% : &lt;code&gt;ALTER TABLE table_name SET (autovacuum_vacuum_insert_scale_factor = 0.05);&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;autovacuum_max_workers&lt;/code&gt; : nombre de workers pouvant être lancés simultanément durant le processus d&amp;rsquo;autovacuum.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici les statistiques que nous avons actuellement pour la table de notre exemple :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT * FROM public.get_table_info(&#39;public.table_test&#39;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Paramètre&lt;/th&gt;&lt;th&gt;Valeur&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;schema&lt;/td&gt;&lt;td&gt;public&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;table&lt;/td&gt;&lt;td&gt;table_test&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;nb_page&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;tuple_count&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;dead_tuple_count&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;max_frozen_txid&lt;/td&gt;&lt;td&gt;4644&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;n_tup_ins&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;n_tup_upd&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;n_tup_del&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;n_mod_since_analyze&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;n_ins_since_vacuum&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;last_vacuum&lt;/td&gt;&lt;td&gt;2024-01-01 01:01:01.000 +0100&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;last_autovacuum&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;last_analyze&lt;/td&gt;&lt;td&gt;2024-01-01 01:01:01.000 +0100&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;last_autoanalyze&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Pour en savoir plus&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voila un très gros résumé de comment PostgreSQL gère les données physiquement. Vous pouvez pousser le sujet en consultant les ressources suivantes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Sur le stockage physique :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/storage.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.postgresql.org/docs/current/storage.html&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/pageinspect.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.postgresql.org/docs/current/pageinspect.html&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/pgstattuple.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.postgresql.org/docs/current/pgstattuple.html&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/ddl-system-columns.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.postgresql.org/docs/current/ddl-system-columns.html&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Sur le système de contrôle concurrentiel :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/transaction-id.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.postgresql.org/docs/current/transaction-id.html&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.interdb.jp/pg/pgsql05.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.interdb.jp/pg/pgsql05.html&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.thenile.dev/blog/transaction-isolation-postgres&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.thenile.dev/blog/transaction-isolation-postgres&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://medium.com/quadcode-life/structure-of-heap-table-in-postgresql-d44c94332052&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://medium.com/quadcode-life/structure-of-heap-table-in-postgresql-d44c94332052&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://postgrespro.com/blog/pgsql/5967892&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://postgrespro.com/blog/pgsql/5967892&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://idrawone.github.io/2020/10/09/Heap-Page-in-details/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://idrawone.github.io/2020/10/09/Heap-Page-in-details/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Sur les TOAST :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/storage-toast.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.postgresql.org/docs/current/storage-toast.html&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.anayrat.info/en/2022/02/14/postgresql-toast-compression-and-toast_tuple_target/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://blog.anayrat.info/en/2022/02/14/postgresql-toast-compression-and-toast_tuple_target/&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.fastware.com/blog/what-is-the-new-lz4-toast-compression-in-postgresql-14&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.postgresql.fastware.com/blog/what-is-the-new-lz4-toast-compression-in-postgresql-14&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Sur le VACUUM :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/maintenance.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.postgresql.org/docs/current/maintenance.html&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.interdb.jp/pg/pgsql05/10.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.interdb.jp/pg/pgsql05/10.html&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.interdb.jp/pg/pgsql06.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.interdb.jp/pg/pgsql06.html&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://public.dalibo.com/exports/formation/manuels/modules/m5/m5.handout.html#param%C3%A9trage-de-vacuum-autovacuum&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://public.dalibo.com/exports/formation/manuels/modules/m5/m5.handout.html#param%C3%A9trage-de-vacuum-autovacuum&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://pankajconnect.medium.com/vacuum-and-vacuum-full-postgresql-4c9da30a1500&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://pankajconnect.medium.com/vacuum-and-vacuum-full-postgresql-4c9da30a1500&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</content>
    <link href="https://blog.arthurbazin.com/bdd/postgresql/stockage-physique-gestion-des-donnees-et-vacuum" rel="alternate"></link>
    <summary type="html">Base de données ou fichiers plats ? Saviez-vous que PostgreSQL stockait les données dans des fichiers plats ? Démystifions un peu ce fonctionnement.</summary>
    <author>
      <name>Bazinga</name>
    </author>
  </entry>
  <entry>
    <title>Ouvrez les fenêtres de PostgreSQL – Guide complet sur le fenêtrage</title>
    <updated>2024-01-04T16:39:54Z</updated>
    <id>tag:blog.arthurbazin.com,2024-01-04:/bdd/postgresql/ouvrez-les-fenetres-de-postgresql-guide-complet-sur-le-fenetrage</id>
    <content type="html">&#xA;&lt;p&gt;Sous PostgreSQL, il est possible d&amp;rsquo;effectuer des opérations de statistique (de type agrégat) sur un ensemble de lignes sans avoir à les agréger grâce aux fonctions de fenêtrage. Il devient ainsi possible de calculer des valeurs cumulées ou encore des sommes par unité de temps (dans le cas de données datées)&amp;#8230;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le fenêtrage permet en outre de définir la porté de la fonction, c&amp;rsquo;est à dire de spécifier les limites des regroupements de lignes utilisés dans la fonction.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici un exemple de ce qu&amp;rsquo;il est possible de calculer : les deux dernières colonnes se basent sur des fonctions de fenêtrage.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Identifiant&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Date&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Valeur&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Cumul&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Moyenne par mois&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;01/01/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;9&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10/01/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;7&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;17&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;9&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;20/01/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;27&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;9&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;D&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;01/02/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;20&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;47&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;21&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;E&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10/02/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;23&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;70&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;21&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;F&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;20/02/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;20&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;90&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;21&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;G&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;01/03/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;100&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;11&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;H&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10/03/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;13&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;113&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;11&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;I&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;20/03/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;123&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;11&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Syntaxe&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Clause WINDOW&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La syntaxe est relativement simple : il suffit d&amp;rsquo;utiliser une fonction de fenêtrage dans la clause &lt;code&gt;SELECT&lt;/code&gt; puis définir la fenêtre à utiliser dans la clause &lt;code&gt;WINDOW&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT&#xA;&#x9;colonne_1,&#xA;&#x9;colonne_2,&#xA;&#x9;fonction_fenetre(colonne_3) OVER ma_fenetre&#xA;FROM&#xA;&#x9;mon_schema.ma_table&#xA;WINDOW&#xA;&#x9;ma_fenetre as (&#xA;&#x9;&#x9;--definition&#xA;&#x9;)&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez qu&amp;rsquo;il est possible de définir la fenêtre directement après la fonction de fenêtrage :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT&#xA;&#x9;colonne_1,&#xA;&#x9;colonne_2,&#xA;&#x9;fonction_fenetre(colonne_3) OVER (&#xA;&#x9;&#x9;--definition&#xA;&#x9;)&#xA;FROM&#xA;&#x9;mon_schema.ma_table&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il est tout à fait possible de définir plusieurs fenêtres dans la clause &lt;code&gt;WINDOW&lt;/code&gt; afin d&amp;rsquo;utiliser des portées différentes dans chaque fonction.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Attention les lignes vues par la fenêtre dépendent des clauses présentes dans votre requête :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;La clause &lt;code&gt;WHERE&lt;/code&gt; restreint le nombre de lignes dans le résultat de la requête mais également dans la fenêtre.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Avec la clause &lt;code&gt;GROUP BY&lt;/code&gt;, les lignes vues par la fenêtre sont les lignes regroupées et non les lignes d&amp;rsquo;origines.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La clause &lt;code&gt;HAVING&lt;/code&gt; restreint le nombre de lignes groupées visibles par la fenêtre.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Définition&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La définition d&amp;rsquo;une fenêtre peut faire appel à différents éléments, tous optionnels :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;La clause &lt;code&gt;PARTITION BY&lt;/code&gt; : comment regrouper les lignes ?&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La clause &lt;code&gt;ORDER BY&lt;/code&gt; : comment ordonnancer les lignes ?&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La limite de la fenêtre : quelles lignes du groupe faut-il utiliser ?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;WINDOW&#xA;&#x9;ma_fenetre as (&#xA;&#x9;&#x9;-- Regroupement&#xA;&#x9;&#x9;PARTITION BY &#xA;&#x9;&#x9;&#x9;ma_colonne_1&#xA;&#x9;&#x9;-- Ordonnancement&#xA;&#x9;&#x9;ORDER BY &#xA;&#x9;&#x9;&#x9;ma_colonne_2&#xA;&#x9;&#x9;-- Limites&#xA;&#x9;&#x9;ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING&#xA;&#x9;)&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;PARTITION BY : regroupement&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La clause de regroupement &lt;code&gt;PARTITION BY&lt;/code&gt; permet de grouper les lignes issues de la requêtes en partitions. Chacune de ces partitions est traitée individuellement par la fonction de fenêtrage. Ainsi, chaque ligne se voit attribuer une valeur calculée par la fonction de fenêtrage en fonction de la partition à laquelle elle appartient. Par exemple la somme ou encore la valeur moyenne de toutes les valeurs d&amp;rsquo;une partition.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cette clause attend une expression pouvant contenir une ou plusieurs colonnes ainsi que des expressions SQL (fonction, calcul&amp;#8230;).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Si cette clause n&amp;rsquo;est pas spécifiée alors toutes les lignes de la requête sont considérées comme faisant partie de la même partition.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici deux exemples de regroupement.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Identifiant&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;pays&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Groupe calculé par &lt;code&gt;PARTITION BY&lt;/code&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;France&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Groupe 1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;France&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Groupe 1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Suisse&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Groupe 2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Suisse&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Groupe 2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;france&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Groupe 3&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Regroupement basé sur une colonne : &lt;code&gt;PARTITION BY pays&lt;/code&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Identifiant&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;ma_colonne_date&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Groupe calculé par &lt;code&gt;PARTITION BY&lt;/code&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;01/01/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Groupe 1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;22/03/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Groupe 2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;08/04/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Groupe 3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;14/03/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Groupe 2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;15/01/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Groupe 1&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Regroupement basé sur une expression : &lt;code&gt;PARTITION BY extract(MONTH FROM ma_colonne_date)&lt;/code&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que le regroupement des valeurs entraine un ordonnancement de celles-ci qui influe sur l&amp;rsquo;ordre des lignes dans les résultats de la requête. Il pourra être nécessaire d&amp;rsquo;utiliser la clause &lt;code&gt;ORDER BY&lt;/code&gt; (dans la requête, pas le &lt;code&gt;ORDER BY&lt;/code&gt; de la fenêtre) pour spécifier un ordre particulier des résultats.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;ORDER BY : l&amp;rsquo;ordonnancement&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Selon le calcul réalisé, il peut être intéressant d&amp;rsquo;ordonnancer les valeurs de la fenêtre. Par exemple dans le cas d&amp;rsquo;une somme cumulée (croissante ou décroissante), il est important que les valeurs au sein d&amp;rsquo;une partition soient triées.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cette clause attend une expression permettant d&amp;rsquo;ordonnancer les lignes, cela peut être une ou plusieurs colonnes ainsi que des expressions SQL (fonction, calcul…).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Identifiant&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;ma_colonne_date&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;Rang calculé par &lt;code&gt;ORDER BY&lt;/code&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;01/01/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;22/03/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;01/01/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;14/03/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;15/01/2024&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;figcaption class=&#34;wp-element-caption&#34;&gt;Ordonnancement basé sur une colonne, &lt;code&gt;ma_colonne_date&lt;/code&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les options suivantes peuvent être utilisées :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;ASC&lt;/code&gt; ou &lt;code&gt;DESC&lt;/code&gt; : pour spécifier un tri ascendant ou descendant.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;NULLS { FIRST | LAST }&lt;/code&gt;  pour gérer l&amp;rsquo;ordre des valeurs nulles (en premier ou en dernier).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Lorsque plusieurs fonctions de fenêtrage sont utilisées, les valeurs peuvent être triées plusieurs fois de suites.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Les fenêtre ayant des clauses &lt;code&gt;PARTITION BY&lt;/code&gt; et &lt;code&gt;ORDER BY&lt;/code&gt; équivalente seront évaluées en même temps et auront donc exactement le même ordre de tri (même si &lt;code&gt;ORDER BY&lt;/code&gt; ne définit pas une façon unique de trier les lignes).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Les fenêtres ayant des clauses &lt;code&gt;PARTITION BY&lt;/code&gt; et &lt;code&gt;ORDER BY&lt;/code&gt; différentes seront évaluées séparément. Il en résulte un tri potentiellement différent entre deux fenêtres ayant des partions différentes mais un ordre de tri identique (lorsque &lt;code&gt;ORDER BY&lt;/code&gt; ne définit pas une façon unique de trier les lignes).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que l&amp;rsquo;ordonnancement des valeurs influe sur l&amp;rsquo;ordre des lignes dans les résultats de la requête. Il pourra être nécessaire d&amp;rsquo;utiliser la clause &lt;code&gt;ORDER BY&lt;/code&gt; (dans la requête, pas le &lt;code&gt;ORDER BY&lt;/code&gt; de la fenêtre) pour spécifier un ordre particulier des résultats.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Clause de portée : les limites de la fenêtre&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les fonctions ne portent pas directement sur toutes les ligne de la partition qu&amp;rsquo;elles sont en train de traiter. En fait, leur calcul est dépendant de la ligne en cour de traitement. En effet, chaque fenêtre possède un portée limitée au sein de la partition définie (par &lt;code&gt;PARTITION BY&lt;/code&gt;).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Par défaut, cette limite s&amp;rsquo;étend à toute la partition sauf dans le cas où une clause &lt;code&gt;ORDER BY&lt;/code&gt; est définie pour la fenêtre. Dans ce dernier cas, la limite est comprise entre « toutes les lignes précédentes » et « la ligne actuelle ». Donc la fonction ne « voient » pas les lignes qui « suivent » au sein de la même partition.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les limites se définissent de la façon suivante : &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Le mode de définition&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La limite de début&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La limite de fin&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Les exclusions&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;{ROWS | RANGE | GROUPS}&#xA;BETWEEN&#xA;&#x9;{UNBOUNDED PRECEDING | n PRECEDING | CURRENT ROW | n FOLLOWING | UNBOUNDED FOLLOWING}&#xA;AND&#xA;&#x9;{UNBOUNDED PRECEDING | n PRECEDING | CURRENT ROW | n FOLLOWING | UNBOUNDED FOLLOWING}&#xA;EXCLUDE &#xA;&#x9;{CURRENT ROW | EXCLUDE GROUP | EXCLUDE TIES | EXCLUDE NO OTHERS}&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il existe trois modes de définition des limites :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;ROWS&lt;/code&gt; : que je traduis par ligne.&lt;br&gt;On définit un nombre spécifique de lignes avant ou après la ligne courante.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;GROUPS&lt;/code&gt; : que je traduis par rang.&lt;br&gt;On définit un nombre de rangs séparant la limite de la ligne courante.&lt;br&gt;Le rang de chaque ligne est définit avec la clause &lt;code&gt;ORDER BY&lt;/code&gt;.&lt;br&gt;Plusieurs lignes peuvent avoir le même rang, on parle alors de « groupe de lignes équivalentes » dans le tri ce qui équivaut à « groupe de ligne ayant le même rang » dans le tri.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;RANGE&lt;/code&gt; : (mode par défaut) que je traduis par intervalle.&lt;br&gt;On définit un intervalle d&amp;rsquo;écart entre la ligne courante et la limite&lt;br&gt;L&amp;rsquo;intervalle est calculé sur une colonne unique définie dans la clause &lt;code&gt;ORDER BY&lt;/code&gt;.&lt;br&gt;Le type de l&amp;rsquo;intervalle dépend de la colonne spécifiée (numérique, date&amp;#8230;).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La définition des limites peut utiliser les éléments suivants :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;UNBOUNDED PRECEDING&lt;/code&gt; : toutes les lignes précédentes (limite inférieur par défaut)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;n PRECEDING&lt;/code&gt; : &#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;ROWS&lt;/code&gt; : n = nombre de ligne.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;GROUPS&lt;/code&gt; : n = nombre de rang/groupe.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;RANGE&lt;/code&gt; : n = intervalle avec la ligne actuelle.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;CURRENT ROW&lt;/code&gt; : (limite supérieur par défaut)&lt;br&gt;Équivalent à &lt;code&gt;0 PRECEDING&lt;/code&gt; ou &lt;code&gt;0 FOLLOWING&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;ROWS&lt;/code&gt; : la ligne courante.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;GROUPS&lt;/code&gt; : la ligne courante ainsi que toutes les lignes ayant le même rang selon la clause &lt;code&gt;ORDER BY&lt;/code&gt;.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;En début de portée, la ligne utilisée sera la première ligne retournée ayant un rang équivalent à la ligne courante.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;En fin de portée, la ligne utilisée sera la dernière ligne retournée ayant un rang équivalent à la ligne courante.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;RANGE&lt;/code&gt; : la ligne courante ainsi que toutes les lignes ayant le même rang selon la clause &lt;code&gt;ORDER BY&lt;/code&gt;.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;En début de portée, la ligne utilisée sera la première ligne retournée ayant un rang équivalent à la ligne courante.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;En fin de portée, la ligne utilisée sera la dernière ligne retournée ayant un rang équivalent à la ligne courante.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;n FOLLOWING&lt;/code&gt; :&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;ROWS&lt;/code&gt; : n = nombre de ligne.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;GROUPS&lt;/code&gt; : n = nombre de rang/groupe.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;RANGE&lt;/code&gt; : n = intervalle avec la ligne courante.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;UNDOUNDED FOLLOWING&lt;/code&gt; : toutes les lignes suivantes.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Attention aux restrictions suivantes :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;le début de la portée ne peut valoir &lt;code&gt;UNBOUNDED FOLLOWING&lt;/code&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La fin de la portée ne peut valoir &lt;code&gt;UNBOUNDED PRECEDING&lt;/code&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Le début de la portée doit toujours être inférieur à la fin de la portée (&lt;code&gt;ROWS BETWEEN 7 PRECEDING AND 8 PRECEDING&lt;/code&gt; ne donne aucune ligne et &lt;code&gt;RANGE BETWEEN CURRENT ROW AND &lt;em&gt;n&lt;/em&gt; PRECEDING&lt;/code&gt; renvoie une erreur).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que lorsque la clause &lt;code&gt;ORDER BY&lt;/code&gt; n&amp;rsquo;est pas spécifiée, toutes les lignes sont considérées comme ayant le même rang. Ainsi, il est important de tenir compte de cet élément dans les modes &lt;code&gt;GROUPS&lt;/code&gt; et &lt;code&gt;RANGE&lt;/code&gt; et par conséquent avec la limite par défaut qui est la suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;RANGE BETWEEN&#xA;&#x9;UNBOUNDED PRECEDING&#xA;AND&#xA;&#x9;CURRENT ROW&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;En effet, avec la limite par défaut, toutes les lignes entre la première de la partition et la ligne courante incluant les lignes de même rang sont utilisées. Ainsi, deux cas de figure se présentes :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Une clause &lt;code&gt;ORDER BY&lt;/code&gt; est spécifiée : une partie seulement des lignes de la partition est utilisée.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Aucune clause &lt;code&gt;ORDER BY&lt;/code&gt; n&amp;rsquo;est spécifiée : toutes les lignes possèdent le même rang, ainsi elles sont toutes incluses dans la fenêtre.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Dans tous les cas, la distance jusqu&amp;rsquo;à la fin de la portée est limitée par la distance jusqu&amp;rsquo;à la fin de la partition. Si la limite dépasse la fin de la partition, alors la dernière ligne est la dernière de la partition.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il est enfin possible de définir un ensemble de lignes à exclure de la fenêtre avec la clause &lt;code&gt;EXCLUDE&lt;/code&gt; qui peut prendre les valeurs suivantes :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;EXCLUDE NO OTHERS&lt;/code&gt; : ne rien exclure (comportement par défaut).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;CURRENT ROW&lt;/code&gt; : exclure la ligne courante.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;EXCLUDE GROUP&lt;/code&gt; : exclure la ligne courante ainsi que toutes les lignes de même rang selon la clause &lt;code&gt;ORDER BY&lt;/code&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;EXCLUDE TIES&lt;/code&gt; : conserver la ligne courante mais exclure toutes les lignes de même rang selon la clause &lt;code&gt;ORDER BY&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Fenêtres de fenêtre&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Lorsqu&amp;rsquo;une fenêtre est définie sans clause de portée, il est possible d&amp;rsquo;en définir une seconde à partir de celle-ci.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Dans ce cas :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;La seconde reprend le partitionnement de la fenêtre source.&lt;br&gt;Il est impossible de spécifier une clause &lt;code&gt;PARTITION BY&lt;/code&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La seconde reprend l&amp;rsquo;ordonnancement de la fenêtre source si la clause &lt;code&gt;ORDER BY&lt;/code&gt; existe.&lt;br&gt;Dans ce cas, il est impossible de spécifier une clause &lt;code&gt;ORDER BY&lt;/code&gt;.&lt;br&gt;Sinon, la seconde peut se voir définir un clause &lt;code&gt;ORDER BY&lt;/code&gt; qui lui sera spécifique.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La seconde peut avoir ses propres limites de fenêtre via sa propre clause de portée.&lt;br&gt;Si les limites ne sont pas définies, les limites par défaut s&amp;rsquo;appliquent (&lt;code&gt;RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW&lt;/code&gt;).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici un exemple :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;WINDOW&#xA;&#x9;ma_fenetre as (&#xA;&#x9;&#x9;-- Regroupement&#xA;&#x9;&#x9;PARTITION BY &#xA;&#x9;&#x9;&#x9;ma_colonne_1&#xA;&#x9;),&#xA;&#xA;&#x9;ma_seconde_fenetre as (&#xA;&#x9;&#x9;-- Fenêtre source&#xA;&#x9;&#x9;ma_fenetre&#xA;&#x9;&#x9;-- Ordonnancement (car la fenêtre source ne spécifie pas de clause ORDER BY)&#xA;&#x9;&#x9;ORDER BY &#xA;&#x9;&#x9;&#x9;ma_colonne_2&#xA;&#x9;&#x9;-- Limites spécifiques&#xA;&#x9;&#x9;ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING&#xA;&#x9;)&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Les fonctions&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les fonctions de fenêtrage peuvent être utilisées dans les clauses &lt;code&gt;SELECT&lt;/code&gt; et &lt;code&gt;ORDER BY&lt;/code&gt; uniquement.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ces fonctions regroupent à la fois les fonctions spécifiques au fenêtrage (&lt;a href=&#34;https://www.postgresql.org/docs/current/functions-window.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;documentées ici&lt;/a&gt;) ainsi que certaines fonctions d&amp;rsquo;agrégation : celles à but général (&lt;a href=&#34;https://www.postgresql.org/docs/current/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;documentées ici&lt;/a&gt;) et celles à but statistique (&lt;a href=&#34;https://www.postgresql.org/docs/current/functions-aggregate.html#FUNCTIONS-AGGREGATE-STATISTICS-TABLE&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;documentées ici&lt;/a&gt;) mais pas les autres.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La syntaxe est la suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT&#xA;&#x9;fonction_fenetre(colonne) OVER ma_fenetre&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Lors de l&amp;rsquo;utilisation de fonctions d&amp;rsquo;agrégation avec une fenêtre, il n&amp;rsquo;est pas possible d&amp;rsquo;utiliser les clauses &lt;code&gt;DISTINCT&lt;/code&gt; et &lt;code&gt;ORDER BY&lt;/code&gt; dans les arguments de la fonction comme habituellement avec les fonctions d&amp;rsquo;agrégation.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;En revanche, ces fonctions d&amp;rsquo;agrégation autorisent le filtrage des lignes utilisées par celles-ci grâce à la clause &lt;code&gt;FILTER&lt;/code&gt; de la façon suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT&#xA;&#x9;fonction_fenetre(colonne) FILTER ( WHERE ma_clause_where ) OVER ma_fenetre&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il est ainsi possible d&amp;rsquo;utiliser n&amp;rsquo;importe quelle condition qui sera testée sur chaque ligne de la fenêtre avant de fournir celles-ci à la fonction. Les lignes ne satisfaisant pas la conditions seront ignorées.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici les principales fonctions de fenêtrage :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table alignwide has-fixed-layout is-style-stripes&#34;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Fonction&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;row_number()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Numéro de ligne&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;rank()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Rang de l&amp;rsquo;objet avec trou. &lt;br&gt;Comme row_number() mais deux objets peuvent avoir le même rang.&lt;br&gt;Par exemple : &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;5&lt;/code&gt;, &lt;code&gt;6&lt;/code&gt;, &lt;code&gt;7&lt;/code&gt;, &lt;code&gt;7&lt;/code&gt;, &lt;code&gt;9&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;dense_rank()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Rang de l&amp;rsquo;objet sans trou. &lt;br&gt;Comme rank() mais si plusieurs objets ont le même rang, l&amp;rsquo;objet d&amp;rsquo;après possède le rang suivant.&lt;br&gt;Par exemple : &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt;, &lt;code&gt;4&lt;/code&gt;, &lt;code&gt;5&lt;/code&gt;, &lt;code&gt;5&lt;/code&gt;, &lt;code&gt;6&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;percent_rank()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Rang en pourcentage (de 0% à 100%) : (rang -1) / (nb_ligne_total &amp;#8211; 1).&lt;br&gt;Par exemple (pour 4 valeurs) : &lt;code&gt;0%&lt;/code&gt;, &lt;code&gt;33%&lt;/code&gt;, &lt;code&gt;66%&lt;/code&gt;, &lt;code&gt;100%&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;cume_dist()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Rang en pourcentage (de n% à 100%) : (nb_lignes_précédentes + nb_ligne_même_rang + 1) / (nb_ligne_total).&lt;br&gt;Par exemple (pour 4 valeurs) : &lt;code&gt;25%&lt;/code&gt;, &lt;code&gt;50%&lt;/code&gt;, &lt;code&gt;75%&lt;/code&gt;, &lt;code&gt;100%&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;first_value(colonne_1)&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Première valeur issue de la fenêtre pour la colonne indiquée.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;last_value(colonne_1)&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Dernière valeur issue de la fenêtre pour la colonne indiquée.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;nth_value(colonne_1,n)&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Valeur &amp;lsquo;n&amp;rsquo; issue de la fenêtre pour la colonne indiquée.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;lag(colonne_1,n,&#39;text&#39;)&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Valeur issue de la fenêtre pour la colonne indiquée située n lignes (defaut = &lt;code&gt;1&lt;/code&gt;) avant la ligne évaluée. &lt;br&gt;Si aucune valeur n&amp;rsquo;existe, &amp;lsquo;text&amp;rsquo; (défaut = &lt;code&gt;NULL&lt;/code&gt;) est renvoyée.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;lead(colonne_1,n,&#39;text&#39;)&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Valeur issue de la fenêtre pour la colonne indiquée située n lignes (defaut = &lt;code&gt;1&lt;/code&gt;) après la ligne évaluée. &lt;br&gt;Si aucune valeur n&amp;rsquo;existe, &amp;lsquo;text&amp;rsquo; (défaut = &lt;code&gt;NULL&lt;/code&gt;) est renvoyée.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Exemples&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Exemple basique&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Données d&amp;rsquo;exemple&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour réaliser nos exemples, nous allons utiliser les données suivantes :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;identifiant&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;groupe&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;ordre&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;valeur&lt;/td&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;11&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;12&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;13&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;20&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;21&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;22&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;23&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;30&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;31&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;32&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;33&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici la requête qui permet de créer une table contenant ces données, notez que les lignes sont dans le désordre (pour mieux apprécier le fonctionnement des fenêtres) :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- DROP TABLE public.test_fenetrage;&#xA;&#xA;CREATE TABLE public.test_fenetrage AS &#xA;SELECT&#xA;&#x9;*&#xA;FROM (&#xA;&#x9;VALUES&#xA;&#x9;&#x9;(&#39;C-3&#39;, &#39;C&#39;, 2, 32),&#xA;&#x9;&#x9;(&#39;A-1&#39;, &#39;A&#39;, 1, 10),&#xA;&#x9;&#x9;(&#39;C-1&#39;, &#39;C&#39;, 4, 30),&#xA;&#x9;&#x9;(&#39;B-4&#39;, &#39;B&#39;, 3, 23),&#xA;&#x9;&#x9;(&#39;B-3&#39;, &#39;B&#39;, 2, 22),&#xA;&#x9;&#x9;(&#39;A-2&#39;, &#39;A&#39;, 2, 11),&#xA;&#x9;&#x9;(&#39;C-4&#39;, &#39;C&#39;, 1, 33),&#xA;&#x9;&#x9;(&#39;B-1&#39;, &#39;B&#39;, 1, 20),&#xA;&#x9;&#x9;(&#39;C-2&#39;, &#39;C&#39;, 3, 31),&#xA;&#x9;&#x9;(&#39;A-3&#39;, &#39;A&#39;, 3, 12),&#xA;&#x9;&#x9;(&#39;A-4&#39;, &#39;A&#39;, 4, 13),&#xA;&#x9;&#x9;(&#39;B-2&#39;, &#39;B&#39;, 2, 21)&#xA;) as t1 (identifiant, groupe, ordre, valeur)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Fenêtre par défaut&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici un premier test avec la fenêtre par défaut :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT&#xA;&#x9;identifiant,&#xA;&#x9;row_number() OVER ma_fenetre,&#xA;&#x9;rank() OVER ma_fenetre,&#xA;&#x9;lag(identifiant, 1) OVER ma_fenetre,&#xA;&#x9;first_value(identifiant) OVER ma_fenetre,&#xA;&#x9;lead(identifiant, 1) OVER ma_fenetre,&#xA;&#x9;last_value(identifiant) OVER ma_fenetre&#xA;FROM &#xA;&#x9;public.test_fenetrage&#xA;WINDOW&#xA;&#x9;ma_fenetre AS (&#xA;&#x9;&#x9;RANGE&#xA;&#x9;&#x9;&#x9;BETWEEN&#xA;&#x9;&#x9;&#x9;&#x9;UNBOUNDED PRECEDING&#xA;&#x9;&#x9;&#x9;AND&#xA;&#x9;&#x9;&#x9;&#x9;CURRENT ROW&#xA;&#x9;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici le résultat :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;identifiant&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;row_number&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;rank&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;lag&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;first_value&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;lead&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;last_value&lt;/td&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;7&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;8&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;9&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;11&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;12&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous avons le numéro de ligne (&lt;code&gt;row_number&lt;/code&gt;) qui correspond au numéro d&amp;rsquo;ordre des lignes dans la fenêtre. Cette dernière n&amp;rsquo;ayant pas de clause &lt;code&gt;ORDER BY&lt;/code&gt;, il s&amp;rsquo;agit du numéro d&amp;rsquo;ordre dans la table (dans le stockage physique).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous pouvons voir que toutes les lignes possèdent le même rang (&lt;code&gt;rank&lt;/code&gt;) car nous n&amp;rsquo;avons pas utilisé la clause &lt;code&gt;ORDER BY&lt;/code&gt; dans la fenêtre. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous avons également une information sur les valeurs immédiatement précédentes (&lt;code&gt;lag&lt;/code&gt;) et suivantes (&lt;code&gt;lead&lt;/code&gt;) de chaque ligne ainsi que la première (&lt;code&gt;first_value&lt;/code&gt;) et la dernière (&lt;code&gt;last_value&lt;/code&gt;) valeur de la partition (et donc de la table).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous allons utiliser la même fenêtre mais avec une clause &lt;code&gt;ORDER BY&lt;/code&gt; au niveau de la requête :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT&#xA;&#x9;identifiant,&#xA;&#x9;row_number() OVER ma_fenetre,&#xA;&#x9;rank() OVER ma_fenetre,&#xA;&#x9;lag(identifiant, 1) OVER ma_fenetre,&#xA;&#x9;first_value(identifiant) OVER ma_fenetre,&#xA;&#x9;lead(identifiant, 1) OVER ma_fenetre,&#xA;&#x9;last_value(identifiant) OVER ma_fenetre&#xA;FROM &#xA;&#x9;public.test_fenetrage&#xA;WINDOW&#xA;&#x9;ma_fenetre AS (&#xA;&#x9;&#x9;RANGE&#xA;&#x9;&#x9;&#x9;BETWEEN&#xA;&#x9;&#x9;&#x9;&#x9;UNBOUNDED PRECEDING&#xA;&#x9;&#x9;&#x9;AND&#xA;&#x9;&#x9;&#x9;&#x9;CURRENT ROW&#xA;&#x9;)&#xA;ORDER BY&#xA;&#x9;identifiant&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous devriez avoir les résultats suivants :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;identifiant&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;row_number&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;rank&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;lag&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;first_value&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;lead&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;last_value&lt;/td&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;11&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;8&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;12&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;9&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;7&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous avons exactement les mêmes données que précédemment mais l&amp;rsquo;ordre des lignes n&amp;rsquo;est pas le même. Ceci démontre que le fenêtrage permet de calculer des données sur des ensembles bien spécifiques avec un ordre bien spécifique.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Fonctionnement du CURRENT ROW&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Testez la requête suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT&#xA;&#x9;identifiant,&#xA;&#x9;row_number() OVER fenetre_range,&#xA;&#x9;rank() OVER fenetre_range,&#xA;&#x9;first_value(identifiant) OVER fenetre_range as first_value_range,&#xA;&#x9;last_value(identifiant) OVER fenetre_range as last_value_range,&#xA;&#x9;first_value(identifiant) OVER fenetre_row as first_value_row,&#xA;&#x9;last_value(identifiant) OVER fenetre_row as last_value_row&#xA;FROM &#xA;&#x9;public.test_fenetrage&#xA;WINDOW&#xA;&#x9;fenetre_range AS (&#xA;&#x9;&#x9;RANGE&#xA;&#x9;&#x9;&#x9;BETWEEN&#xA;&#x9;&#x9;&#x9;&#x9;CURRENT ROW&#xA;&#x9;&#x9;&#x9;AND&#xA;&#x9;&#x9;&#x9;&#x9;CURRENT ROW&#xA;&#x9;),&#xA;&#x9;fenetre_row AS (&#xA;&#x9;&#x9;ROWS&#xA;&#x9;&#x9;&#x9;BETWEEN&#xA;&#x9;&#x9;&#x9;&#x9;CURRENT ROW&#xA;&#x9;&#x9;&#x9;AND&#xA;&#x9;&#x9;&#x9;&#x9;CURRENT ROW&#xA;&#x9;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Elle renvoie ces résultats :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;identifiant&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;row_number&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;rank&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;first_value_range&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;last_value_range&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;first_value_row&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;last_value_row&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;7&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;8&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;9&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;11&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;12&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voyez la différence entre les modes &lt;code&gt;RANGE&lt;/code&gt; (ou &lt;code&gt;GROUPS&lt;/code&gt;) et &lt;code&gt;ROWS&lt;/code&gt;. Avec les deux premiers modes, &lt;code&gt;CURRENT ROW&lt;/code&gt; inclut toutes les lignes de même rang que la ligne courante. La première ligne correspond alors à la première ligne de même rang que la ligne courante remontée par la requête. C&amp;rsquo;est la même chose pour la dernière ligne.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Comme il n&amp;rsquo;y a pas de sous ordre définit au sein d&amp;rsquo;un même rang, c&amp;rsquo;est l&amp;rsquo;ordre de stockage des lignes qui est utilisé. Ainsi, la première ligne d&amp;rsquo;un rang donné correspond à la première ligne de ce rang rencontré lors du parcours de la table.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Fenêtre partitionnée&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Utilisons maintenant les partitions avec &lt;code&gt;PARTITION BY&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT&#xA;&#x9;identifiant,&#xA;&#x9;groupe,&#xA;&#x9;row_number() OVER ma_fenetre,&#xA;&#x9;rank() OVER ma_fenetre,&#xA;&#x9;lag(identifiant, 1) OVER ma_fenetre,&#xA;&#x9;first_value(identifiant) OVER ma_fenetre,&#xA;&#x9;lead(identifiant, 1) OVER ma_fenetre,&#xA;&#x9;last_value(identifiant) OVER ma_fenetre&#xA;FROM &#xA;&#x9;public.test_fenetrage&#xA;WINDOW&#xA;&#x9;ma_fenetre AS (&#xA;&#x9;&#x9;PARTITION BY&#xA;&#x9;&#x9;&#x9;groupe&#xA;&#x9;&#x9;RANGE&#xA;&#x9;&#x9;&#x9;BETWEEN&#xA;&#x9;&#x9;&#x9;&#x9;UNBOUNDED PRECEDING&#xA;&#x9;&#x9;&#x9;AND&#xA;&#x9;&#x9;&#x9;&#x9;CURRENT ROW&#xA;&#x9;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici le résultat :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;identifiant&lt;/td&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;groupe&lt;/th&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;row_number&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;rank&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;lag&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;first_value&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;lead&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;last_value&lt;/td&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les calculs sont maintenant effectués « par partition ».&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il est intéressant de constater que les lignes ont été réordonnées, c&amp;rsquo;est à cause du &lt;code&gt;PARTITION BY&lt;/code&gt; qui implique une réorganisation des lignes lors du calcul. Notez cependant que les lignes conservent leur positionnement d&amp;rsquo;origine au sein de chaque partition (A-4 est avant A-2 qui est avant A-1 qui est avant A-3 comme dans la table d&amp;rsquo;origine).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Fenêtre ordonnancée&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Remplaçons les partitions par &lt;code&gt;ORDER BY&lt;/code&gt; afin d’ordonnancer nos valeurs :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT&#xA;&#x9;identifiant,&#xA;&#x9;ordre,&#xA;&#x9;row_number() OVER ma_fenetre,&#xA;&#x9;rank() OVER ma_fenetre,&#xA;&#x9;dense_rank() OVER ma_fenetre,&#xA;&#x9;lag(identifiant, 1) OVER ma_fenetre,&#xA;&#x9;first_value(identifiant) OVER ma_fenetre,&#xA;&#x9;lead(identifiant, 1) OVER ma_fenetre,&#xA;&#x9;last_value(identifiant) OVER ma_fenetre&#xA;FROM &#xA;&#x9;public.test_fenetrage&#xA;WINDOW&#xA;&#x9;ma_fenetre AS (&#xA;&#x9;&#x9;ORDER BY&#xA;&#x9;&#x9;&#x9;ordre ASC&#xA;&#x9;&#x9;RANGE&#xA;&#x9;&#x9;&#x9;BETWEEN&#xA;&#x9;&#x9;&#x9;&#x9;UNBOUNDED PRECEDING&#xA;&#x9;&#x9;&#x9;AND&#xA;&#x9;&#x9;&#x9;&#x9;CURRENT ROW&#xA;&#x9;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les données suivantes sont renvoyées :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;identifiant&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;ordre&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;row_number&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;rank&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;dense_rank&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;lag&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;first_value&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;lead&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;last_value&lt;/td&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;7&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;8&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;8&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;9&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;8&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;8&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;11&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;11&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;12&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;11&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La partition s&amp;rsquo;étend maintenant à toute la table.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il est intéressant de constater que les lignes ont ici aussi été réordonnées, c&amp;rsquo;est à cause du &lt;code&gt;ORDER BY&lt;/code&gt; qui implique une réorganisation des lignes lors du calcul.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Intéressons nous aux colonnes &lt;code&gt;row_number&lt;/code&gt;, &lt;code&gt;rank&lt;/code&gt; et &lt;code&gt;dense_rank&lt;/code&gt;. Nous pouvons maintenant voir la différence entre ces fonctions :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;row_number&lt;/code&gt; indique le numéro de ligne après le réordonnancement effectué par la fenêtre. &lt;br&gt;A-1, B-1 et C-4 possède le numéro d&amp;rsquo;ordre 1, il est donc logique de les retrouver en 1&lt;sup&gt;ère&lt;/sup&gt;, 2&lt;sup&gt;ème&lt;/sup&gt; et 3&lt;sup&gt;ème&lt;/sup&gt; place.&lt;br&gt;Notez que C-4 est avant A-1 qui est avant B-1 ce qui correspond à leurs positionnements dans la table d&amp;rsquo;origine.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;rank&lt;/code&gt; permet de définir le rang de chaque ligne. &lt;br&gt;A-1, B-1 et C-4 possède le numéro d&amp;rsquo;ordre 1, il possèdent donc tous les trois le rang 1. A-2, B-2, B-3 et C-3 possède la valeur d&amp;rsquo;ordre 2, il sont donc au rang suivant : 4. &lt;br&gt;Le numéro de rang correspond au premier numéro de ligne (&lt;code&gt;row_number&lt;/code&gt;) du groupe de lignes équivalentes.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;dense_rank&lt;/code&gt; permet de définir le rang de chaque ligne mais sans trous.&lt;br&gt;A-1, B-1 et C-4 sont au rang 1 puis A-2, B-2, B-3 et C-3 sont au rang 2.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Fenêtre partitionnée et ordonnancée&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Combinons le &lt;code&gt;PARTITION BY&lt;/code&gt; avec le &lt;code&gt;ORDER BY&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT&#xA;&#x9;identifiant,&#xA;&#x9;groupe,&#xA;&#x9;ordre,&#xA;&#x9;row_number() OVER ma_fenetre,&#xA;&#x9;rank() OVER ma_fenetre,&#xA;&#x9;dense_rank() OVER ma_fenetre,&#xA;&#x9;lag(identifiant, 1) OVER ma_fenetre,&#xA;&#x9;first_value(identifiant) OVER ma_fenetre,&#xA;&#x9;lead(identifiant, 1) OVER ma_fenetre,&#xA;&#x9;last_value(identifiant) OVER ma_fenetre&#xA;FROM &#xA;&#x9;public.test_fenetrage&#xA;WINDOW&#xA;&#x9;ma_fenetre AS (&#xA;&#x9;&#x9;PARTITION BY&#xA;&#x9;&#x9;&#x9;groupe&#xA;&#x9;&#x9;ORDER BY&#xA;&#x9;&#x9;&#x9;ordre ASC&#xA;&#x9;&#x9;RANGE&#xA;&#x9;&#x9;&#x9;BETWEEN&#xA;&#x9;&#x9;&#x9;&#x9;UNBOUNDED PRECEDING&#xA;&#x9;&#x9;&#x9;AND&#xA;&#x9;&#x9;&#x9;&#x9;CURRENT ROW&#xA;&#x9;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici le résultat :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;identifiant&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;groupe&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;ordre&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;row_number&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;rank&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;dense_rank&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;lag&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;first_value&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;lead&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;last_value&lt;/td&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;A-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;B-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;C-1&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous avons maintenant des données calculées pour chaque partition en utilisant un ordre d&amp;rsquo;affichage spécifique.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Statistiques sur mon dernier voyage&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous allons maintenant voir un cas légèrement plus concret. Il s&amp;rsquo;agit d&amp;rsquo;un petit tour que j&amp;rsquo;ai fait en Europe et dont j&amp;rsquo;aimerais calculer quelques statistiques.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color has-link-color wp-elements-3c6d8cfd14dcc1cdeb3ec9c6ac006d7c&#34;&gt;Notez que vous aurez besoin de PostGIS pour cet exemple.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici les données :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- DROP TABLE public.voyage_fenetrage;&#xA;&#xA;CREATE TABLE public.voyage_fenetrage AS &#xA;SELECT&#xA;  *&#xA;FROM (&#xA;  VALUES&#xA;    (&#39;2023-07-01&#39;::date, &#39;Maison&#39;, &#39;Maison&#39;, &#39;SRID=4326;POINT(6.3183 46.19)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-07-01&#39;::date, &#39;Suisse&#39;, &#39;Genève&#39;, &#39;SRID=4326;POINT(6.14 46.20)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-07-03&#39;::date, &#39;Suisse&#39;, &#39;Berne&#39;, &#39;SRID=4326;POINT(7.44 46.95)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-07-07&#39;::date, &#39;Suisse&#39;, &#39;Zurich&#39;, &#39;SRID=4326;POINT(8.54 47.37)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-07-10&#39;::date, &#39;Autriche&#39;, &#39;Innsbruck&#39;, &#39;SRID=4326;POINT(11.39 47.26)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-07-12&#39;::date, &#39;Allemagne&#39;, &#39;Munich&#39;, &#39;SRID=4326;POINT(11.58 48.14)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-07-17&#39;::date, &#39;Allemagne&#39;, &#39;Francfort&#39;, &#39;SRID=4326;POINT(8.68 50.11)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-07-21&#39;::date, &#39;Allemagne&#39;, &#39;Berlin&#39;, &#39;SRID=4326;POINT(13.41 52.52)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-07-25&#39;::date, &#39;Allemagne&#39;, &#39;Hambourg&#39;, &#39;SRID=4326;POINT(9.99 53.55)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-07-29&#39;::date, &#39;Danemark&#39;, &#39;Copenhague&#39;, &#39;SRID=4326;POINT(12.58 55.68)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-08-01&#39;::date, &#39;Royaume-Uni&#39;, &#39;Édimbourg&#39;, &#39;SRID=4326;POINT(-3.20 55.95)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-08-05&#39;::date, &#39;Royaume-Uni&#39;, &#39;Glasgow&#39;, &#39;SRID=4326;POINT(-4.25 55.86)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-08-09&#39;::date, &#39;Royaume-Uni&#39;, &#39;Manchester&#39;, &#39;SRID=4326;POINT(-2.24 53.48)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-08-13&#39;::date, &#39;Royaume-Uni&#39;, &#39;Londres&#39;, &#39;SRID=4326;POINT(0 51.51)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-08-16&#39;::date, &#39;France&#39;, &#39;Paris&#39;, &#39;SRID=4326;POINT(2.35 48.85)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-08-20&#39;::date, &#39;France&#39;, &#39;Nantes&#39;, &#39;SRID=4326;POINT(-1.55 47.21)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-08-22&#39;::date, &#39;France&#39;, &#39;Toulouse&#39;, &#39;SRID=4326;POINT(1.44 43.60)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-08-25&#39;::date, &#39;France&#39;, &#39;Marseille&#39;, &#39;SRID=4326;POINT(5.37 43.29)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-08-28&#39;::date, &#39;France&#39;, &#39;Annecy&#39;, &#39;SRID=4326;POINT(6.13 45.90)&#39;::geometry(point, 4326)),&#xA;    (&#39;2023-08-31&#39;::date, &#39;Maison&#39;, &#39;Maison&#39;, &#39;SRID=4326;POINT(6.3183 46.19)&#39;::geometry(point, 4326))&#xA;) as t1 (date_arrive, pays, ville, geom)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Je considère que la date d&amp;rsquo;arrivée quelque part correspond à la date d&amp;rsquo;arrivée à l&amp;rsquo;étape suivante.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le but est d&amp;rsquo;avoir des informations tout au long du trajet : distance parcourue, pourcentage d&amp;rsquo;avancement, avancement par pays&amp;#8230;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous allons utiliser plusieurs fenêtres en parallèle afin de calculer ce dont nous avons besoin.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT&#xA;  -- Localisation étape&#xA;  concat(ville, &#39; (&#39;, pays, &#39;)&#39;) AS etape,&#xA;  -- Date d&#39;arrivée&#xA;  date_arrive,&#xA;  -- Date de départ : date d&#39;arrivée de la ligne suivante&#xA;  lead(date_arrive, 1) OVER toutes_lignes AS date_depart,&#xA;  -- Durée de l&#39;étape&#xA;  lead(date_arrive, 1) OVER toutes_lignes - date_arrive AS duree_etape,&#xA;  -- Durée totale du voyage trajet depuis la première localisation&#xA;  -- Fonction first_value permettant de récupérer la première ligne de la fenêtre&#xA;  date_arrive - first_value(date_arrive) OVER toutes_lignes AS duree_voyage,&#xA;  -- Distance parcourue depuis la localisation précédente&#xA;  -- Fonction lag permettant de récupérer la ligne précédente&#xA;  -- ST_DistanceSpheroid pour obtenir la distance entre deux coordonnées en WGS84&#xA;  ST_DistanceSpheroid(&#xA;    geom, &#xA;    lag(geom, 1) OVER toutes_lignes,&#xA;    &#39;SPHEROID[&#34;WGS 84&#34;,6378137,298.257223563]&#39;&#xA;  )::integer/1000 AS distance_depuis_loc_precedente,&#xA;  -- Distance totale parcourue depuis la première localisation&#xA;  -- Fonction ST_MakeLine permettant de créer une ligne constituée de l&#39;ensemble des points de la fenêtre&#xA;  -- L&#39;ordre des point est assuré par la fenêtre&#xA;  -- ST_DistanceSpheroid pour obtenir la longueur d&#39;une ligne en WGS84&#xA;  ST_LengthSpheroid(&#xA;    ST_MakeLine(geom) OVER lignes_precedentes,&#xA;    &#39;SPHEROID[&#34;WGS 84&#34;,6378137,298.257223563]&#39;&#xA;  )::integer/1000 AS distance_parcourue,&#xA;  -- Calcul d&#39;un pourcentage de parcours en comparant les valeurs issues de calculs sur deux fenêtres différentes&#xA;  round(&#xA;    ST_LengthSpheroid(&#xA;      ST_MakeLine(geom) OVER lignes_precedentes,&#xA;      &#39;SPHEROID[&#34;WGS 84&#34;,6378137,298.257223563]&#39;&#xA;    )::numeric /&#xA;    ST_LengthSpheroid(&#xA;      ST_MakeLine(geom) OVER toutes_lignes,&#xA;      &#39;SPHEROID[&#34;WGS 84&#34;,6378137,298.257223563]&#39;&#xA;    )::numeric *&#xA;    100,&#xA;    2&#xA;  ) AS pourcentage_trajet,&#xA;  -- Calcul d&#39;un pourcentage de parcours par pays en comparant les valeurs issues de calculs sur deux fenêtres différentes&#xA;  -- La fonction nullif permet d&#39;éliminer les divisions par 0&#xA;  round(&#xA;    ST_LengthSpheroid(&#xA;      ST_MakeLine(geom) OVER lignes_precedentes_pays,&#xA;      &#39;SPHEROID[&#34;WGS 84&#34;,6378137,298.257223563]&#39;&#xA;    )::numeric /&#xA;    nullif(ST_LengthSpheroid(&#xA;      ST_MakeLine(geom) OVER toutes_lignes_pays,&#xA;      &#39;SPHEROID[&#34;WGS 84&#34;,6378137,298.257223563]&#39;&#xA;    )::numeric,0) *&#xA;    100,&#xA;    2&#xA;  ) AS pourcentage_trajet_pays&#xA;FROM &#xA;  public.voyage_fenetrage&#xA;WINDOW&#xA;  toutes_lignes AS (&#xA;    ORDER BY&#xA;      date_arrive&#xA;    ROWS&#xA;      BETWEEN&#xA;        UNBOUNDED PRECEDING&#xA;      AND&#xA;        UNBOUNDED FOLLOWING&#xA;  ),&#xA;  lignes_precedentes AS (&#xA;    ORDER BY&#xA;      date_arrive&#xA;    ROWS&#xA;      BETWEEN&#xA;        UNBOUNDED PRECEDING&#xA;      AND&#xA;        CURRENT ROW&#xA;  ),&#xA;  toutes_lignes_pays AS (&#xA;    PARTITION BY &#xA;      pays&#xA;    ORDER BY&#xA;      date_arrive&#xA;    ROWS&#xA;      BETWEEN&#xA;        UNBOUNDED PRECEDING&#xA;      AND&#xA;        UNBOUNDED FOLLOWING&#xA;  ),&#xA;  lignes_precedentes_pays AS (&#xA;    PARTITION BY &#xA;      pays&#xA;    ORDER BY&#xA;      date_arrive&#xA;    ROWS&#xA;      BETWEEN&#xA;        UNBOUNDED PRECEDING&#xA;      AND&#xA;        CURRENT ROW&#xA;  )&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici le résultat :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;etape&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;date_arrive&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;date_depart&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;duree_etape&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;duree_voyage&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;distance_depuis_loc_precedente&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;distance_parcourue&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;pourcentage_trajet&lt;/th&gt;&lt;th class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;pourcentage_trajet_pays&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Maison (Maison)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-01&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-01&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&amp;nbsp;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Genève (Suisse)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-01&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-03&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;14&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;14&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0,28&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Berne (Suisse)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-03&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-07&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;129&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;144&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2,76&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;57,61&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Zurich (Suisse)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-07&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-10&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;6&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;95&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;240&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4,58&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;100&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Innsbruck (Autriche)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-10&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-12&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;9&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;215&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;456&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;8,69&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Munich (Allemagne)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-12&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-17&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;11&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;98&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;554&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10,58&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Francfort (Allemagne)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-17&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-21&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;16&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;304&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;859&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;16,38&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;30,89&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Berlin (Allemagne)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-21&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-25&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;20&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;424&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1 284&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;24,48&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;73,99&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Hambourg (Allemagne)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-25&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-29&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;24&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;256&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1 540&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;29,37&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;100&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Copenhague (Danemark)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-07-29&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-01&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;28&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;290&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;1 830&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;34,9&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Édimbourg (Royaume-Uni)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-01&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-05&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;31&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;987&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2 818&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;53,72&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Glasgow (Royaume-Uni)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-05&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-09&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;35&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;66&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2 884&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;54,99&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;10,58&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Manchester (Royaume-Uni)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-09&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-13&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;39&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;294&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3 179&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;60,61&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;57,53&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Londres (Royaume-Uni)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-13&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-16&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;43&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;266&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3 446&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;65,7&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;100&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Paris (France)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-16&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-20&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;46&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;340&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3 786&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;72,18&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Nantes (France)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-20&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-22&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;50&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;343&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4 130&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;78,72&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;24,11&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Toulouse (France)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-22&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-25&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;52&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;464&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4 594&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;87,57&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;56,72&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Marseille (France)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-25&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-28&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;55&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;319&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;4 914&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;93,67&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;79,19&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Annecy (France)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-28&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-31&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;3&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;58&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;296&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5 210&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;99,32&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;100&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Maison (Maison)&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;2023-08-31&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&amp;nbsp;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&amp;nbsp;&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;61&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;35&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;5 246&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;100&lt;/td&gt;&lt;td class=&#34;has-text-align-center&#34; data-align=&#34;center&#34;&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous voyez qu&amp;rsquo;avec le fenêtrage il devient simple de réaliser tout un tas de calculs divers et variés sur vos données.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Un excellent exemple est également fournit dans l&amp;rsquo;article suivant où je me sers du fenêtrage pour déterminer le parcours du Père Noël dans la nuit du 24 au 25.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-embed aligncenter is-type-wp-embed is-provider-bazinga-039-s wp-block-embed-bazinga-039-s&#34;&gt;&lt;div class=&#34;wp-block-embed__wrapper&#34;&gt;&#xA;&lt;blockquote class=&#34;wp-embedded-content&#34; data-secret=&#34;1XkVFCGu98&#34;&gt;&lt;a href=&#34;https://blog.arthurbazin.com/bdd/postgresql/suivons-le-pere-noel-avec-postgis&#34;&gt;Suivons le Père Noël avec PostGIS (Nouvelle version)&lt;/a&gt;&lt;/blockquote&gt;&lt;iframe class=&#34;wp-embedded-content&#34; sandbox=&#34;allow-scripts&#34; security=&#34;restricted&#34; title=&#34;« Suivons le Père Noël avec PostGIS (Nouvelle version) » &amp;#8212; BazinGa&amp;#039;s&#34; src=&#34;https://blog.arthurbazin.com/bdd/postgresql/suivons-le-pere-noel-avec-postgis/embed#?secret=31T1XinWsi#?secret=1XkVFCGu98&#34; data-secret=&#34;1XkVFCGu98&#34; width=&#34;600&#34; height=&#34;338&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34;&gt;&lt;/iframe&gt;&#xA;&lt;/div&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Pour aller plus loin&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cet article fait parti du cours sur PostgreSQL, parties 3 et 4 du Vade-mecum.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-buttons is-vertical is-content-justification-center is-layout-flex wp-container-core-buttons-layout-1 wp-block-buttons-is-layout-flex&#34;&gt;&#xA;&lt;div class=&#34;wp-block-button has-custom-width wp-block-button__width-50&#34;&gt;&lt;a class=&#34;wp-block-button__link wp-element-button&#34; href=&#34;https://blog.arthurbazin.com/programmation/sql/postgresql-tout-comprendre-1&#34;&gt;Cours sur PostgreSQL&lt;/a&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-button has-custom-width wp-block-button__width-50&#34;&gt;&lt;a class=&#34;wp-block-button__link wp-element-button&#34; href=&#34;https://blog.arthurbazin.com/programmation/sql/postgresql-vade-mecum-3#le_fenetrage&#34;&gt;Vade-mecum &amp;#8211; 3 &amp;#8211; Gérer la donnée&lt;/a&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-button has-custom-width wp-block-button__width-50&#34;&gt;&lt;a class=&#34;wp-block-button__link wp-element-button&#34; href=&#34;https://blog.arthurbazin.com/programmation/postgresql-vade-mecum-4#fonction_de_fenetrage&#34;&gt;Vade-mecum &amp;#8211; 4 &amp;#8211; Fonctions et opérateurs&lt;/a&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;</content>
    <link href="https://blog.arthurbazin.com/bdd/postgresql/ouvrez-les-fenetres-de-postgresql-guide-complet-sur-le-fenetrage" rel="alternate"></link>
    <summary type="html">Voici un guide complet sur l&#39;utilisation du fenêtrage sous PostgreSQL. Ces fonctionnalités sont particulièrement pratique lors de l&#39;analyse de données continues.</summary>
    <author>
      <name>Bazinga</name>
    </author>
  </entry>
  <entry>
    <title>Suivons le Père Noël avec PostGIS (Nouvelle version)</title>
    <updated>2023-12-14T13:23:01Z</updated>
    <id>tag:blog.arthurbazin.com,2023-12-14:/bdd/postgresql/suivons-le-pere-noel-avec-postgis</id>
    <content type="html">&#xA;&lt;p&gt;Cette année pour Noël, j&amp;rsquo;ai eu l&amp;rsquo;idée de monter une application de suivi du Père Noël en temps réel. &lt;a href=&#34;https://santatracker.google.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener nofollow&#34;&gt;Google&lt;/a&gt; le fait déjà et le &lt;a href=&#34;https://www.noradsanta.org/fr/index.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener nofollow&#34;&gt;NORAD&lt;/a&gt; aussi alors pourquoi pas un frenchy ?&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Comme j&amp;rsquo;ai « quelques notions » de SQL et que je travaille chez &lt;a href=&#34;https://www.business-geografic.com/fr/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener nofollow&#34;&gt;Business Geografic&lt;/a&gt; (&lt;a href=&#34;https://www.cirilgroup.com/fr/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener nofollow&#34;&gt;Ciril GROUP&lt;/a&gt;) (éditeur français de solutions cartographiques web) qui a accepter de suivre ma démarche, j&amp;rsquo;ai tous les outils nécessaires à une telle application sous la main. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour la suite des explications, c&amp;rsquo;est juste en dessous de l&amp;rsquo;appli (que vous pouvez consulter en plein écran sur &lt;a href=&#34;https://noel.cirilgroup.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;noel.cirilgroup.com&lt;/a&gt;).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;iframe id=&#34;iframe_santa_tracker&#34; title=&#34;Le voyage du Père Noël&#34; src=&#34;https://geoservices.business-geografic.com/adws/app/c2d0e97d-6c09-11ed-9a76-19bfa8332a84/&#34; width=&#34;100%&#34; height=&#34;650px&#34;&gt;&#xA;&lt;/iframe&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que cet article s’intéresse surtout à la partie donnée (PostgreSQL + PostGIS) et moins à la partie conception de l&amp;rsquo;application qui repose sur &lt;a href=&#34;https://www.business-geografic.com/fr/geo-software/geo-technologies.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GEO Software de Business Geografic (Ciril GROUP)&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr class=&#34;wp-block-separator has-alpha-channel-opacity is-style-default&#34;/&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour le suivi, j&amp;rsquo;ai un peu étudier la chose et il s&amp;rsquo;avère qu&amp;rsquo;un traineau magique, ça n’apparait pas sur les radars. Il est donc compliqué de suivre le bonhomme. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Malgré mes nombreux courriers, le Père Noël refuse également de m&amp;rsquo;envoyer son itinéraire détaillé, un petit GPX aurait pourtant bien fait mon affaire mais il semble qu&amp;rsquo;il n&amp;rsquo;utilise pas de GPS&amp;#8230;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il faut donc un peu ruser pour suivre Santa à la trace et voici comment j&amp;rsquo;ai procédé.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le principe est de partir d&amp;rsquo;une liste de destinations que le Père Noël va visiter. On calcule ensuite le trajet pour rejoindre toutes ces destinations en tenant compte du fait que le passage doit s&amp;rsquo;effectuer durant la nuit du 24 au 25 décembre et que la terre tourne donc que l&amp;rsquo;heure de passage s&amp;rsquo;étale de GMT+12 à GMT-12 (d&amp;rsquo;est en ouest). Plus facile à dire qu&amp;rsquo;a faire mais essayons.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;application repose sur PostgreSQL 11 + PostGIS 2.5 (je sais, c&amp;rsquo;est oldschool mais ça tourne bien) mais vous pouvez utiliser les requêtes suivantes dans PostgreSQL 15 + PostGIS 3.x.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous serons dans le schéma suivant :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;CREATE SCHEMA IF NOT EXISTS santa_tracker;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Destination&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A priori, le Père Noël visite toutes les maisons du monde. Ceci dit, « toutes les maisons du monde » c&amp;rsquo;est complexe à cartographier : un igloo doit il être considéré comme une maison même s&amp;rsquo;il n&amp;rsquo;a pas de cheminée ? &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Alors simplifions un peu la chose et basons nous sur l&amp;rsquo;ensemble des villes du monde. Bon là aussi c&amp;rsquo;est complexe car il y a vraiment beaucoup de villes et ça risque d&amp;rsquo;être difficile de suivre tous les déplacements. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Simplifions encore et prenons environ 500 destinations parmi les plus connues dans le monde (avec une sur représentation des villes de l’hexagone ;-).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour récupérer ces données, une petite recherche sur internet et nous voila avec &lt;a rel=&#34;noreferrer noopener nofollow&#34; href=&#34;https://public.opendatasoft.com/explore/dataset/geonames-all-cities-with-a-population-1000/&#34; target=&#34;_blank&#34;&gt;un magnifique jeu de données&lt;/a&gt; du monde entier dont la population est supérieure à 1000 habitants.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Quelques traitements plus tard (rien de bien sorcier, juste des formules magiques pour récupérer les villes qui m&amp;rsquo;intéressent) nous voici avec la table suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;CREATE TABLE santa_tracker.destination (&#xA;&#x9;-- Un identifiant numérique&#xA;&#x9;id_destination int8 PRIMARY KEY,&#xA;&#x9;-- La région de la destination&#xA;&#x9;region text,&#xA;&#x9;-- Le nom de la destination&#xA;&#x9;ville text,&#xA;&#x9;-- Le nombre d&#39;habitant dans cette destination&#xA;&#x9;population int8,&#xA;&#x9;-- L&#39;interval de temps entre le fuseau horaire de la destination et GMT&#xA;&#x9;utc_offset interval,&#xA;&#x9;-- L&#39;emplacement de la destination&#xA;&#x9;geom public.geometry(point, 4326)&#xA;);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Problème, cette table ne possède pas l&amp;#8217;emplacement du Père Noël&amp;#8230; Nous allons rusé pour cela.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Quelques variables&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour les différents calculs que nous allons mener, je vais avoir besoin de définir certains paramètres. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour cela, nous allons créer une vue dans laquelle nous stockerons des variables que nous pourrons utiliser dans nos différentes requêtes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;DROP VIEW IF EXISTS santa_tracker.v_00_variable CASCADE;&#xA;&#xA;CREATE OR REPLACE VIEW santa_tracker.v_00_variable as (&#xA;&#xA;&#x9;SELECT &#xA;&#x9;&#x9;-- Population&#xA;&#x9;&#x9;-- Le nombre total d&#39;être humain sur Terre&#xA;&#x9;&#x9;8000000000 as pop_total,&#xA;&#x9;&#x9;-- Le pourcentage de personne recevant des cadeaux (oui, certains ont été méchants cette année)&#xA;&#x9;&#x9;0.95 as cadeau_par_pop,&#xA;&#x9;&#x9;-- Le nombre de cadeau par personnes&#xA;&#x9;&#x9;1 as cadeau_par_pers,&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;-- Autres données&#xA;&#x9;&#x9;-- Largeur d&#39;une zone de longitude (ce qui permet de diviser le globe en secteurs de passage)&#xA;&#x9;&#x9;10 as largeur_zone_longitude,&#xA;&#x9;&#x9;-- Le pourcentage de temps total passé à voler de maison en maison (ici 90% de temps de vol donc 10% du temps passé dans les maisons)&#xA;&#x9;&#x9;90::numeric as pourcent_temps_de_vol,&#xA;&#x9;&#x9;-- Les informations sur l&#39;emplacement de la maison du Père Noël&#xA;&#x9;&#x9;jsonb_build_object(&#xA;&#x9;&#x9;&#x9;&#39;id&#39;, 0,&#xA;&#x9;&#x9;&#x9;&#39;region&#39;, &#39;Svalbard&#39;,&#xA;&#x9;&#x9;&#x9;&#39;ville&#39;, &#39;Maison de la famille Noël&#39;,&#xA;&#x9;&#x9;&#x9;&#39;population&#39;, 2,&#xA;&#x9;&#x9;&#x9;&#39;utc_offset&#39;, 1,&#xA;&#x9;&#x9;&#x9;&#39;geom_4326&#39;, &#39;SRID=4326;POINT(24 80)&#39;&#xA;&#x9;&#x9;) as maison_pere_noel,&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;-- Dates et horaire&#xA;&#x9;&#x9;-- Les dates contiennent toujours les heures&#xA;&#x9;&#x9;-- Le temps est exprimé en temps UTC&#xA;&#x9;&#x9;-- L&#39;heure exacte du début de la distribution (le 24 décembre à 19h sur le premier fuseau horaire)&#xA;&#x9;&#x9;(extract(year from now()) || &#39;-12-24 19:00:00 +12&#39;)::timestamp with time zone as debut_distrib,&#xA;&#x9;&#x9;-- L&#39;heure exacte de la fin de la distribution (le 25 décembre à 5h sur le dernier fuseau horaire)&#xA;&#x9;&#x9;(extract(year from now()) || &#39;-12-25 05:00:00 -12&#39;)::timestamp with time zone as fin_distrib,&#xA;&#x9;&#x9;-- Durée du trajet pour rejoindre la première destination depuis la maison du Père Noël&#xA;&#x9;&#x9;-- Durée également pour rejoindre la maison du Père Noël depuis la dernière maison&#xA;&#x9;&#x9;&#39;2 minutes&#39;::interval as delai_dest_santa_house,&#xA;&#xA;&#x9;&#x9;-- Heure du début de la transaction&#xA;&#x9;&#x9;--transaction_timestamp() as &#34;now&#34;&#x9;-- Maintenant&#xA;&#xA;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez l&amp;rsquo;utilisation des heures avec fuseau horaire car il faut tenir compte des différents emplacements sur Terre.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour le calcul des dates, on utilise une extraction de l&amp;rsquo;année depuis la fonction &lt;code&gt;transaction_timestamp()&lt;/code&gt; afin de rendre la vue valide tous les ans.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;On définit également une variable &lt;code&gt;now&lt;/code&gt; que l&amp;rsquo;on utilisera lors des calculs à un instant t car cela permet de faire des tests en fixant cette valeur. Cette dernière peut être modifiée pour vos tests, voila quelques moments possibles :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;generic&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Heure du début de la transaction&#xA;transaction_timestamp() as &#34;now&#34;&#x9;-- Maintenant&#xA;&#39;2023-07-03 08:00:00 +0100&#39;::timestamp WITH time zone as &#34;now&#34; -- Fabrication&#xA;&#39;2023-12-24 07:59:00 +0100&#39;::timestamp WITH time zone as &#34;now&#34; -- Voyage aller&#xA;&#39;2023-12-24 19:00:10 +1200&#39;::timestamp WITH time zone as &#34;now&#34; -- Distribution 1ère destination&#xA;&#39;2023-12-24 19:00:45 +1200&#39;::timestamp WITH time zone as &#34;now&#34; -- Voyage depuis 1ère destination&#xA;&#39;2023-12-25 00:29:25 +0100&#39;::timestamp WITH time zone as &#34;now&#34; -- Distribution à Genève&#xA;&#39;2023-12-25 00:30:00 +0100&#39;::timestamp WITH time zone as &#34;now&#34; -- Voyage depuis Genève&#xA;&#39;2023-12-25 05:01:00 -1200&#39;::timestamp WITH time zone as &#34;now&#34; -- Voyage retour&#xA;&#39;2023-12-27 08:00:00 +0100&#39;::timestamp WITH time zone as &#34;now&#34; -- Repos&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Trajet&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous devons maintenant calculer le trajet.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ce trajet doit répondre au critères suivants :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Passer par toutes les destinations&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Démarrer et finir par la maison du Père Noël&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Chaque destination doit être visitée la nuit&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous allons donc devoir découper la Terre en zones de passage dans lesquelles le Père Noël aura un timing bien spécifique à respecter. Le principe est de déterminer l&amp;rsquo;intervalle de temps pendant lequel le Père Noël effectue sa tournée puis de diviser cet intervalle par le nombre de zones de passage.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Dans la vue &lt;code&gt;v_00_variable&lt;/code&gt; j&amp;rsquo;avais indiqué un découpage en zone de 10 degrés mais notez que si aucune destination n’existe dans une zone, il ne faudra alors pas en tenir compte.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;intervalle est définit par les dates de début et de fin de la tournée spécifiées dans la vue &lt;code&gt;v_00_variable&lt;/code&gt; : du 24 décembre à 19h (+12) jusqu&amp;rsquo;au 25 décembre à 5h (-12) : 1j et 10h soit 34h.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour calculer le trajet et pouvoir relancer le calcul facilement, je vais me baser sur plusieurs vues.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Calcul du rang longitudinal&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le principe est d&amp;rsquo;attribuer à chaque destination un numéro de rang correspondant au numéro d&amp;rsquo;ordre de la zone de longitude à laquelle appartient la destination.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Une zone de longitude est une portion de la surface terrestre comprise entre deux bornes de longitudes. Ces bornes sont définies par rapport à un découpage du globe tous les x degrés ; x étant défini dans la vue &lt;code&gt;v_00_variable&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;DROP VIEW IF EXISTS santa_tracker.v_01_destination_rang_longitudeCASCADE;&#xA;&#xA;CREATE OR REPLACE VIEW santa_tracker.v_01_destination_rang_longitude as (&#xA;&#xA;&#x9;SELECT &#xA;&#x9;&#x9;id_destination,&#xA;&#x9;&#x9;region,&#xA;&#x9;&#x9;ville,&#xA;&#x9;&#x9;population,&#xA;&#x9;&#x9;utc_offset,&#xA;&#x9;&#x9;-- Récupération du rang de chaque zone de longitude (plage de x degré définit dans la vue v_00_variable)&#xA;&#x9;&#x9;-- Le fenêtrage permet d&#39;éliminer les zones sans destination&#xA;&#x9;&#x9;dense_rank() OVER zone_longitude as rang_longitude,&#xA;&#x9;&#x9;geom&#xA;&#x9;FROM &#xA;&#x9;&#x9;santa_tracker.destination &#xA;&#x9;CROSS JOIN &#xA;&#x9;&#x9;santa_tracker.v_00_variable as var&#xA;&#x9;WINDOW &#xA;&#x9;&#x9;zone_longitude AS (&#xA;&#x9;&#x9;&#x9;ORDER BY &#xA;&#x9;&#x9;&#x9;&#x9;floor(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(-ST_X(geom) + 180)::numeric &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/ var.largeur_zone_longitude&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;+ 1&#xA;&#x9;&#x9;&#x9;ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING&#xA;&#x9;&#x9;)&#xA;&#xA;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Ordonnancement par latitude&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Au sein de chaque zone de longitude, les destinations sont ordonnancées afin d&amp;rsquo;avoir un trajet cohérent allant du nord au sud dans une zone puis du sud au nord dans la zone suivante dans un mouvement à l&amp;rsquo;effet « yoyo ».&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;DROP VIEW IF EXISTS santa_tracker.v_02_destination_rang_latitude CASCADE;&#xA;&#xA;CREATE VIEW santa_tracker.v_02_destination_rang_latitude as (&#xA;&#xA;&#x9;SELECT &#xA;&#x9;&#x9;id_destination,&#xA;&#x9;&#x9;region,&#xA;&#x9;&#x9;ville,&#xA;&#x9;&#x9;population,&#xA;&#x9;&#x9;utc_offset,&#xA;&#x9;&#x9;rang_longitude,&#xA;&#x9;&#x9;-- Récupération du rang de chaque destination au sein de sa zone de longitude&#xA;&#x9;&#x9;-- Le rang est déterminé par la latitude de l&#39;objet&#xA;&#x9;&#x9;-- Pour faire un effet &#34;yoyo&#34;, on inverse l&#39;ordonnancement des latitudes une zone de longitude sur deux&#xA;&#x9;&#x9;row_number() OVER zone_latitude as rang_latitude,&#xA;&#x9;&#x9;last_value(rang_longitude) OVER all_zone_longitude as nb_zone_longitude,&#xA;&#x9;&#x9;count(id_destination) OVER part_by_zone_longitude as nb_destination_in_zone,&#xA;&#x9;&#x9;geom&#xA;&#x9;FROM &#xA;&#x9;&#x9;santa_tracker.v_01_destination_rang_longitude&#xA;&#x9;WINDOW &#xA;&#x9;&#x9;zone_latitude AS (&#xA;&#x9;&#x9;&#x9;PARTITION BY &#xA;&#x9;&#x9;&#x9;&#x9;rang_longitude&#xA;&#x9;&#x9;&#x9;ORDER BY &#xA;&#x9;&#x9;&#x9;&#x9;rang_longitude,&#xA;&#x9;&#x9;&#x9;&#x9;CASE &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN rang_longitude % 2 = 0 THEN ST_Y(geom)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE -ST_Y(geom)&#xA;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING&#xA;&#x9;&#x9;),&#xA;&#x9;&#x9;part_by_zone_longitude AS (&#xA;&#x9;&#x9;&#x9;PARTITION BY rang_longitude&#xA;&#x9;&#x9;&#x9;ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING&#xA;&#x9;&#x9;),&#xA;&#x9;&#x9;all_zone_longitude AS (&#xA;&#x9;&#x9;&#x9;ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING&#xA;&#x9;&#x9;)&#xA;&#xA;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Consolidation des destinations&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour chaque destination, on va calculer plusieurs valeurs, notamment des cumuls par rapport aux destination précédentes. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cette vue est une sorte de version améliorée de la table &lt;code&gt;destination&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;DROP VIEW IF EXISTS santa_tracker.v_03_destination CASCADE;&#xA;&#xA;CREATE OR REPLACE VIEW santa_tracker.v_03_destination as (&#xA;&#xA;&#x9;SELECT &#xA;&#x9;&#x9;id_destination,&#xA;&#x9;&#x9;region,&#xA;&#x9;&#x9;ville,&#xA;&#x9;&#x9;-- Le fenêtrage permet de récupérer la prochaine destination&#xA;&#x9;&#x9;first_value(id_destination) OVER next_etape as id_destination_next,&#xA;&#x9;&#x9;first_value(region) OVER next_etape as region_next,&#xA;&#x9;&#x9;first_value(ville) OVER next_etape as ville_next,&#xA;&#x9;&#x9;population,&#xA;&#x9;&#x9;-- Création d&#39;une valeur de population fictive&#xA;&#x9;&#x9;-- pour qu&#39;une fois toutes destination visitées, le Père Noël ait vu toute la population mondiale&#xA;&#x9;&#x9;round( &#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(population / sum(population) OVER ()) &#xA;&#x9;&#x9;&#x9;&#x9;* var.pop_total::NUMERIC&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;0&#xA;&#x9;&#x9;) as pop_fictive,&#xA;&#x9;&#x9;utc_offset,&#xA;&#x9;&#x9;rang_longitude,&#xA;&#x9;&#x9;rang_latitude,&#xA;&#x9;&#x9;-- Rang de l&#39;étape&#xA;&#x9;&#x9;row_number() OVER all_etape as rang_etape,&#xA;&#x9;&#x9;nb_zone_longitude,&#xA;&#x9;&#x9;nb_destination_in_zone,&#xA;&#x9;&#x9;-- Temps de passage dans chaque zone&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;(var.fin_distrib - var.debut_distrib) &#xA;&#x9;&#x9;&#x9;/ nb_zone_longitude &#xA;&#x9;&#x9;) AS duree_zone,&#xA;&#x9;&#x9;-- Temps de passage dans chaque destination (distribution + trajet pour la suivante)&#xA;&#x9;&#x9;-- Durée totale / nb zone longitude = durée par zone&#xA;&#x9;&#x9;-- Durée par zone / nb étape dans zone = temps par étape&#xA;&#x9;&#x9;-- Pour la dernière zone, on retire le temps du dernier trajet (retour à la maison du Père Noël)&#xA;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;WHEN rang_longitude = nb_zone_longitude THEN &#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(var.fin_distrib - var.debut_distrib) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/ nb_zone_longitude &#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;/ (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;((nb_destination_in_zone - 1) * (var.pourcent_temps_de_vol/100))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ (nb_destination_in_zone * ((100 - var.pourcent_temps_de_vol)/100))&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;ELSE &#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(var.fin_distrib - var.debut_distrib) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/ nb_zone_longitude &#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;/ nb_destination_in_zone&#xA;&#x9;&#x9;END as duree_destination,&#xA;&#x9;&#x9;-- On reprojete les données pour travailler en coordonnées projetées&#xA;&#x9;&#x9;ST_Transform(geom, 3857) as geom,&#xA;&#x9;&#x9;-- Le fenêtrage permet de récupérer la géométrie de la prochaine destination&#xA;&#x9;&#x9;ST_Transform(&#xA;&#x9;&#x9;&#x9;first_value(geom) OVER next_etape,&#xA;&#x9;&#x9;&#x9;3857&#xA;&#x9;&#x9;) as geom_next&#xA;&#x9;FROM &#xA;&#x9;&#x9;santa_tracker.v_02_destination_rang_latitude&#xA;&#x9;CROSS JOIN &#xA;&#x9;&#x9;santa_tracker.v_00_variable as var&#xA;&#x9;WINDOW &#xA;&#x9;&#x9;all_etape AS (&#xA;&#x9;&#x9;&#x9;ORDER BY &#xA;&#x9;&#x9;&#x9;&#x9;rang_longitude, &#xA;&#x9;&#x9;&#x9;&#x9;rang_latitude&#xA;&#x9;&#x9;),&#xA;&#x9;&#x9;next_etape AS (&#xA;&#x9;&#x9;&#x9;ORDER BY&#xA;&#x9;&#x9;&#x9;&#x9;rang_longitude, &#xA;&#x9;&#x9;&#x9;&#x9;rang_latitude&#xA;&#x9;&#x9;&#x9;ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING&#xA;&#x9;&#x9;)&#xA;&#xA;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Étapes de distribution&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A partir des données des destination, on génère des étapes de distribution des cadeaux.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pendant ces étapes, le Père Noël s&amp;rsquo;arrête dans la destination et distribue les présents.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;DROP VIEW IF EXISTS santa_tracker.v_04_etape_distribution CASCADE;&#xA;&#xA;CREATE OR REPLACE VIEW santa_tracker.v_04_etape_distribution as (&#xA;&#xA;&#x9;SELECT &#xA;&#x9;&#x9;id_destination,&#xA;&#x9;&#x9;region,&#xA;&#x9;&#x9;ville,&#xA;&#x9;&#x9;-- Le fenêtrage permet de récupérer la prochaine destination&#xA;&#x9;&#x9;-- S&#39;il n&#39;y a pas de prochaine destination, alors on retourne chez le Père Noël&#xA;&#x9;&#x9;COALESCE(&#xA;&#x9;&#x9;&#x9;first_value(id_destination) OVER next_etape,&#xA;&#x9;&#x9;&#x9;(maison_pere_noel -&gt;&gt; &#39;id&#39;)::int&#xA;&#x9;&#x9;) as id_destination_next,&#xA;&#x9;&#x9;COALESCE(&#xA;&#x9;&#x9;&#x9;first_value(region) OVER next_etape,&#xA;&#x9;&#x9;&#x9;var.maison_pere_noel -&gt;&gt; &#39;region&#39;&#xA;&#x9;&#x9;) as region_next,&#xA;&#x9;&#x9;COALESCE(&#xA;&#x9;&#x9;&#x9;first_value(ville) OVER next_etape,&#xA;&#x9;&#x9;&#x9;var.maison_pere_noel -&gt;&gt; &#39;ville&#39;&#xA;&#x9;&#x9;) as ville_next,&#xA;&#x9;&#x9;population,&#xA;&#x9;&#x9;-- Création d&#39;une valeur de population fictive&#xA;&#x9;&#x9;-- pour qu&#39;une fois toutes destination visitées, le Père Noël ait vu toute la population mondiale&#xA;&#x9;&#x9;round( &#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;population * var.pop_total::NUMERIC&#xA;&#x9;&#x9;&#x9;&#x9;/ sum(population) OVER ()&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;0&#xA;&#x9;&#x9;) as pop_fictive,&#xA;&#x9;&#x9;utc_offset,&#xA;&#x9;&#x9;COALESCE(&#xA;&#x9;&#x9;&#x9;first_value(utc_offset) OVER next_etape,&#xA;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;utc_offset&#39;)::interval&#xA;&#x9;&#x9;) as utc_offset_next,&#xA;&#x9;&#x9;rang_longitude,&#xA;&#x9;&#x9;rang_latitude,&#xA;&#x9;&#x9;rang_etape,&#xA;&#x9;&#x9;nb_zone_longitude,&#xA;&#x9;&#x9;nb_destination_in_zone,&#xA;&#x9;&#x9;duree_destination,&#xA;&#x9;&#x9;(1 - (var.pourcent_temps_de_vol / 100)) * (duree_destination) AS duree_etape,&#xA;&#x9;&#x9;-- Le fenêtrage permet de récupérer l&#39;heure de début de l&#39;étape&#xA;&#x9;&#x9;var.debut_distrib + &#xA;&#x9;&#x9;coalesce(&#xA;&#x9;&#x9;&#x9;sum(duree_destination) OVER all_preceding_step,&#xA;&#x9;&#x9;&#x9;&#39;0&#39;::interval&#xA;&#x9;&#x9;)&#xA;&#x9;&#x9;as date_debut,&#xA;&#x9;&#x9;-- Le fenêtrage permet de récupérer l&#39;heure de fin de l&#39;étape&#xA;&#x9;&#x9;var.debut_distrib &#xA;&#x9;&#x9;+ (1 - (var.pourcent_temps_de_vol / 100)) * (duree_destination) &#xA;&#x9;&#x9;+ coalesce(&#xA;&#x9;&#x9;&#x9;sum(duree_destination) OVER all_preceding_step,&#xA;&#x9;&#x9;&#x9;&#39;0&#39;::interval&#xA;&#x9;&#x9;)&#xA;&#x9;&#x9;as date_fin,&#xA;&#x9;&#x9;-- Trajet effectué (ici ce sera un point)&#xA;&#x9;&#x9;-- On utilise une géométrie de type ligne pour homogénéïser les types de géométrie avec les trajets&#xA;&#x9;&#x9;ST_MakeLine(geom, geom) as geom,&#xA;&#x9;&#x9;geom AS geom_etape,&#xA;&#x9;&#x9;-- Le fenêtrage permet de récupérer la géométrie de la prochaine destination&#xA;&#x9;&#x9;-- S&#39;il n&#39;y a pas de prochaine destination, alors on retourne chez le Père Noël&#xA;&#x9;&#x9;ST_Transform(&#xA;&#x9;&#x9;&#x9;COALESCE(&#xA;&#x9;&#x9;&#x9;&#x9;first_value(geom) OVER next_etape,&#xA;&#x9;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;geom_4326&#39;)::geometry(point,4326)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;3857&#xA;&#x9;&#x9;) as geom_etape_next&#xA;&#x9;FROM &#xA;&#x9;&#x9;santa_tracker.v_03_destination&#xA;&#x9;CROSS JOIN &#xA;&#x9;&#x9;santa_tracker.v_00_variable as var&#xA;&#x9;WINDOW &#xA;&#x9;&#x9;next_etape AS (&#xA;&#x9;&#x9;&#x9;ORDER BY rang_etape&#xA;&#x9;&#x9;&#x9;ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING&#xA;&#x9;&#x9;),&#xA;&#x9;&#x9;all_preceding_step AS (&#xA;&#x9;&#x9;&#x9;ORDER BY rang_etape&#xA;&#x9;&#x9;&#x9;ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING&#xA;&#x9;&#x9;)&#xA;&#xA;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Étapes de trajet&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A partir des données des destination, on génère également des étapes de trajet.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pendant ces étapes, le Père Noël vol à bord de son traineau de destination en destination.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;DROP VIEW IF EXISTS santa_tracker.v_05_trajet CASCADE;&#xA;&#xA;CREATE OR REPLACE VIEW santa_tracker.v_05_trajet as (&#xA;&#xA;&#x9;SELECT &#xA;&#x9;&#x9;id_destination,&#xA;&#x9;&#x9;region,&#xA;&#x9;&#x9;ville,&#xA;&#x9;&#x9;id_destination_next,&#xA;&#x9;&#x9;region_next,&#xA;&#x9;&#x9;ville_next,&#xA;&#x9;&#x9;-- Il n&#39;y a aucune population lors du vol&#xA;&#x9;&#x9;0 AS population,&#xA;&#x9;&#x9;0 AS pop_fictive,&#xA;&#x9;&#x9;utc_offset,&#xA;&#x9;&#x9;utc_offset_next,&#xA;&#x9;&#x9;rang_longitude,&#xA;&#x9;&#x9;rang_latitude,&#xA;&#x9;&#x9;rang_etape,&#xA;&#x9;&#x9;nb_zone_longitude,&#xA;&#x9;&#x9;nb_destination_in_zone,&#xA;&#x9;&#x9;duree_destination,&#xA;&#x9;&#x9;-- La durée du trajet est égale à la durée totale de la destination moins la durée de l&#39;étape&#xA;&#x9;&#x9;duree_destination - duree_etape AS duree_trajet,&#xA;&#x9;&#x9;-- La date de début du trajet est identique à la date de fin de l&#39;étape&#xA;&#x9;&#x9;date_fin AS date_debut,&#xA;&#x9;&#x9;-- La date de fin correspond à la date de début de l&#39;étape + la durée sur la destination&#xA;&#x9;&#x9;date_debut + duree_destination AS date_fin,&#xA;&#x9;&#x9;-- Trajet effectué&#xA;&#x9;&#x9;ST_MakeLine(geom_etape, geom_etape_next) as geom&#xA;&#x9;FROM &#xA;&#x9;&#x9;santa_tracker.v_04_etape_distribution&#xA;&#x9;CROSS JOIN &#xA;&#x9;&#x9;santa_tracker.v_00_variable as var&#xA;&#x9;-- On ne calcul pas de trajet pour le retour à la maison du Père Noël&#xA;&#x9;WHERE &#xA;&#x9;&#x9;id_destination_next &amp;lt;&gt; 0&#xA;&#xA;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Construction du voyage&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour créer le voyage, les étapes suivantes sont associées (via des &lt;code&gt;UNION ALL&lt;/code&gt;) :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Le trajet de la maison du Père Noël jusqu&amp;rsquo;à la première destination (créé dans la requête).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Les étapes de distribution des cadeaux.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Les étapes de trajet entre destinations.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Le trajet de dernière destination jusqu&amp;rsquo;à la la maison du Père Noël (créé dans la requête).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les éléments sont ensuite réagencés selon l&amp;rsquo;ordre de passage afin de pouvoir calculer certains cumuls (population visitée, cadeaux distribués, distance parcourue&amp;#8230;)&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;DROP VIEW IF EXISTS santa_tracker.v_06_voyage CASCADE;&#xA;&#xA;CREATE OR REPLACE VIEW santa_tracker.v_06_voyage as (&#xA;&#xA;WITH &#xA;&#x9;all_steps AS (&#xA;&#x9;&#x9;-- Trajet de la maison du Père Noël à la première destination&#xA;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;id&#39;)::int AS id_destination,&#xA;&#x9;&#x9;&#x9;var.maison_pere_noel -&gt;&gt; &#39;region&#39; AS region,&#xA;&#x9;&#x9;&#x9;var.maison_pere_noel -&gt;&gt; &#39;ville&#39; AS ville,&#xA;&#x9;&#x9;&#x9;etp.id_destination AS id_destination_next,&#xA;&#x9;&#x9;&#x9;etp.region AS region_next,&#xA;&#x9;&#x9;&#x9;etp.ville AS ville_next,&#xA;&#x9;&#x9;&#x9;-- Il n&#39;y a aucune population lors du vol&#xA;&#x9;&#x9;&#x9;0 AS population,&#xA;&#x9;&#x9;&#x9;0 AS pop_fictive,&#xA;&#x9;&#x9;&#x9;0 AS cadeau_distribue,&#xA;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;utc_offset&#39;)::interval AS utc_offset,&#xA;&#x9;&#x9;&#x9;etp.utc_offset AS utc_offset_next,&#xA;&#x9;&#x9;&#x9;0 AS rang_longitude,&#xA;&#x9;&#x9;&#x9;0 AS rang_latitude,&#xA;&#x9;&#x9;&#x9;0 AS rang_etape,&#xA;&#x9;&#x9;&#x9;1 AS rang_voyage,&#xA;&#x9;&#x9;&#x9;&#39;Trajet&#39; AS type_etape,&#xA;&#x9;&#x9;&#x9;0 AS nb_zone_longitude,&#xA;&#x9;&#x9;&#x9;0 AS nb_destination_in_zone,&#xA;&#x9;&#x9;&#x9;-- La durée totale pour la destination est uniquement la durée du trajet (pas de distribution)&#xA;&#x9;&#x9;&#x9;var.delai_dest_santa_house AS duree_destination,&#xA;&#x9;&#x9;&#x9;-- La durée du trajet est fixée dans les variables&#xA;&#x9;&#x9;&#x9;var.delai_dest_santa_house AS duree_etape,&#xA;&#x9;&#x9;&#x9;-- La date de début du trajet est calculée par rapport aux variables&#xA;&#x9;&#x9;&#x9;var.debut_distrib - var.delai_dest_santa_house AS date_debut,&#xA;&#x9;&#x9;&#x9;-- La date de fin est fixée dans les variables&#xA;&#x9;&#x9;&#x9;var.debut_distrib AS date_fin,&#xA;&#x9;&#x9;&#x9;-- Trajet effectué&#xA;&#x9;&#x9;&#x9;ST_MakeLine(&#xA;&#x9;&#x9;&#x9;&#x9;ST_Transform(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;geom_4326&#39;)::geometry(point,4326),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;3857&#xA;&#x9;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;&#x9;etp.geom_etape&#xA;&#x9;&#x9;&#x9;) AS geom&#x9;&#xA;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;santa_tracker.v_00_variable AS var&#xA;&#x9;&#x9;LEFT JOIN &#xA;&#x9;&#x9;&#x9;santa_tracker.v_04_etape_distribution AS etp&#xA;&#x9;&#x9;&#x9;ON etp.rang_etape = 1&#xA;&#x9;&#x9;UNION ALL &#xA;&#x9;&#x9;-- Etapes de distribution des cadeaux&#xA;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;id_destination,&#xA;&#x9;&#x9;&#x9;region,&#xA;&#x9;&#x9;&#x9;ville,&#xA;&#x9;&#x9;&#x9;id_destination_next,&#xA;&#x9;&#x9;&#x9;region_next,&#xA;&#x9;&#x9;&#x9;ville_next,&#xA;&#x9;&#x9;&#x9;population,&#xA;&#x9;&#x9;&#x9;pop_fictive,&#xA;&#x9;&#x9;&#x9;-- Nombre de cadeau distribué&#xA;&#x9;&#x9;&#x9;round( var.cadeau_par_pop * pop_fictive::numeric, 0) AS cadeau_distribue,&#xA;&#x9;&#x9;&#x9;utc_offset,&#xA;&#x9;&#x9;&#x9;utc_offset_next,&#xA;&#x9;&#x9;&#x9;rang_longitude,&#xA;&#x9;&#x9;&#x9;rang_latitude,&#xA;&#x9;&#x9;&#x9;rang_etape,&#xA;&#x9;&#x9;&#x9;2 AS rang_voyage,&#xA;&#x9;&#x9;&#x9;&#39;Distribution&#39; AS type_etape,&#xA;&#x9;&#x9;&#x9;nb_zone_longitude,&#xA;&#x9;&#x9;&#x9;nb_destination_in_zone,&#xA;&#x9;&#x9;&#x9;duree_destination,&#xA;&#x9;&#x9;&#x9;duree_etape,&#xA;&#x9;&#x9;&#x9;date_debut,&#xA;&#x9;&#x9;&#x9;date_fin,&#xA;&#x9;&#x9;&#x9;geom&#xA;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;santa_tracker.v_04_etape_distribution&#xA;&#x9;&#x9;CROSS JOIN &#xA;&#x9;&#x9;&#x9;santa_tracker.v_00_variable as var&#xA;&#x9;&#x9;UNION ALL &#xA;&#x9;&#x9;-- Trajets entre les étapes de distribution&#xA;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;id_destination,&#xA;&#x9;&#x9;&#x9;region,&#xA;&#x9;&#x9;&#x9;ville,&#xA;&#x9;&#x9;&#x9;id_destination_next,&#xA;&#x9;&#x9;&#x9;region_next,&#xA;&#x9;&#x9;&#x9;ville_next,&#xA;&#x9;&#x9;&#x9;population,&#xA;&#x9;&#x9;&#x9;pop_fictive,&#xA;&#x9;&#x9;&#x9;0 AS cadeau_distribue,&#xA;&#x9;&#x9;&#x9;utc_offset,&#xA;&#x9;&#x9;&#x9;utc_offset_next,&#xA;&#x9;&#x9;&#x9;rang_longitude,&#xA;&#x9;&#x9;&#x9;rang_latitude,&#xA;&#x9;&#x9;&#x9;rang_etape,&#xA;&#x9;&#x9;&#x9;2 AS rang_voyage,&#xA;&#x9;&#x9;&#x9;&#39;Trajet&#39; AS type_etape,&#xA;&#x9;&#x9;&#x9;nb_zone_longitude,&#xA;&#x9;&#x9;&#x9;nb_destination_in_zone,&#xA;&#x9;&#x9;&#x9;duree_destination,&#xA;&#x9;&#x9;&#x9;duree_trajet AS duree_etape,&#xA;&#x9;&#x9;&#x9;date_debut,&#xA;&#x9;&#x9;&#x9;date_fin,&#xA;&#x9;&#x9;&#x9;geom&#xA;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;santa_tracker.v_05_trajet&#xA;&#x9;&#x9;UNION ALL&#xA;&#x9;&#x9;-- Trajet de la dernière destination à la maison du Père Noël&#xA;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;etp.id_destination AS id_destination,&#xA;&#x9;&#x9;&#x9;etp.region AS region,&#xA;&#x9;&#x9;&#x9;etp.ville AS ville,&#xA;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;id&#39;)::int AS id_destination_next,&#xA;&#x9;&#x9;&#x9;var.maison_pere_noel -&gt;&gt; &#39;region&#39; AS region_next,&#xA;&#x9;&#x9;&#x9;var.maison_pere_noel -&gt;&gt; &#39;ville&#39; AS ville_next,&#xA;&#x9;&#x9;&#x9;-- Il n&#39;y a aucune population lors du vol&#xA;&#x9;&#x9;&#x9;0 AS population,&#xA;&#x9;&#x9;&#x9;0 AS pop_fictive,&#xA;&#x9;&#x9;&#x9;0 AS cadeau_distribue,&#xA;&#x9;&#x9;&#x9;etp.utc_offset AS utc_offset,&#xA;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;utc_offset&#39;)::interval AS utc_offset_next,&#xA;&#x9;&#x9;&#x9;0 AS rang_longitude,&#xA;&#x9;&#x9;&#x9;0 AS rang_latitude,&#xA;&#x9;&#x9;&#x9;0 AS rang_etape,&#xA;&#x9;&#x9;&#x9;3 AS rang_voyage,&#xA;&#x9;&#x9;&#x9;&#39;Trajet&#39; AS type_etape,&#xA;&#x9;&#x9;&#x9;0 AS nb_zone_longitude,&#xA;&#x9;&#x9;&#x9;0 AS nb_destination_in_zone,&#xA;&#x9;&#x9;&#x9;-- La durée totale pour la destination est uniquement la durée du trajet (pas de distribution)&#xA;&#x9;&#x9;&#x9;var.delai_dest_santa_house AS duree_destination,&#xA;&#x9;&#x9;&#x9;-- La durée du trajet est fixée dans les variables&#xA;&#x9;&#x9;&#x9;var.delai_dest_santa_house AS duree_etape,&#xA;&#x9;&#x9;&#x9;-- La date de début du trajet est calculée par rapport aux variables&#xA;&#x9;&#x9;&#x9;var.fin_distrib AS date_debut,&#xA;&#x9;&#x9;&#x9;-- La date de fin est fixée dans les variables&#xA;&#x9;&#x9;&#x9;var.fin_distrib + var.delai_dest_santa_house AS date_fin,&#xA;&#x9;&#x9;&#x9;-- Trajet effectué&#xA;&#x9;&#x9;&#x9;ST_MakeLine(&#xA;&#x9;&#x9;&#x9;&#x9;etp.geom_etape,&#xA;&#x9;&#x9;&#x9;&#x9;ST_Transform(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;geom_4326&#39;)::geometry(point,4326),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;3857&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;) AS geom&#x9;&#xA;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;santa_tracker.v_00_variable AS var&#xA;&#x9;&#x9;LEFT JOIN &#xA;&#x9;&#x9;&#x9;santa_tracker.v_04_etape_distribution AS etp&#xA;&#x9;&#x9;&#x9;ON etp.rang_etape = 440&#xA;&#x9;)&#xA;&#x9;SELECT &#xA;&#x9;&#x9;concat_ws(&#xA;&#x9;&#x9;&#x9;&#39;-&#39;,&#xA;&#x9;&#x9;&#x9;rang_voyage::text,&#xA;&#x9;&#x9;&#x9;rang_longitude::text,&#xA;&#x9;&#x9;&#x9;rang_latitude::text,&#xA;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;WHEN type_etape = &#39;Distribution&#39; THEN &#39;d&#39;&#xA;&#x9;&#x9;&#x9;&#x9;ELSE &#39;t&#39;&#xA;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;) AS id_voyage,&#xA;&#x9;&#x9;id_destination,&#xA;&#x9;&#x9;region,&#xA;&#x9;&#x9;ville,&#xA;&#x9;&#x9;id_destination_next,&#xA;&#x9;&#x9;region_next,&#xA;&#x9;&#x9;ville_next,&#xA;&#x9;&#x9;population,&#xA;&#x9;&#x9;pop_fictive,&#xA;&#x9;&#x9;-- Le fenêtrage permet de récupérer le cumul de population visitée&#xA;&#x9;&#x9;coalesce(&#xA;&#x9;&#x9;&#x9;sum(pop_fictive) OVER all_preceding_step,&#xA;&#x9;&#x9;&#x9;0&#xA;&#x9;&#x9;) as pop_fictive_cumul,&#xA;&#x9;&#x9;cadeau_distribue,&#xA;&#x9;&#x9;-- Le fenêtrage permet de récupérer le cumul de population visitée&#xA;&#x9;&#x9;coalesce(&#xA;&#x9;&#x9;&#x9;sum(cadeau_distribue) OVER all_preceding_step,&#xA;&#x9;&#x9;&#x9;0&#xA;&#x9;&#x9;) as cadeau_distribue_cumul,&#xA;&#x9;&#x9;utc_offset,&#xA;&#x9;&#x9;utc_offset_next,&#xA;&#x9;&#x9;rang_longitude,&#xA;&#x9;&#x9;rang_latitude,&#xA;&#x9;&#x9;rang_etape,&#xA;&#x9;&#x9;rang_voyage,&#xA;&#x9;&#x9;type_etape,&#xA;&#x9;&#x9;nb_zone_longitude,&#xA;&#x9;&#x9;nb_destination_in_zone,&#xA;&#x9;&#x9;duree_destination,&#xA;&#x9;&#x9;duree_etape,&#xA;&#x9;&#x9;-- Le fenêtrage permet de récupérer le cumul de temps de voyage&#xA;&#x9;&#x9;coalesce(&#xA;&#x9;&#x9;&#x9;sum(duree_etape) OVER all_preceding_step,&#xA;&#x9;&#x9;&#x9;&#39;0 second&#39;::interval&#xA;&#x9;&#x9;) as duree_etape_cumul,&#xA;&#x9;&#x9;date_debut,&#xA;&#x9;&#x9;date_fin,&#xA;&#x9;&#x9;-- Distance parcourue durant le trajet&#xA;&#x9;&#x9;round(&#xA;&#x9;&#x9;&#x9;ST_Length(geom)::NUMERIC,&#xA;&#x9;&#x9;&#x9;0&#xA;&#x9;&#x9;) as distance_to_next,&#xA;&#x9;&#x9;-- Le fenêtrage permet de récupérer le cumul de distance parcourue&#xA;&#x9;&#x9;coalesce(&#xA;&#x9;&#x9;&#x9;round(&#xA;&#x9;&#x9;&#x9;&#x9;(sum(ST_Length(geom)) OVER all_preceding_step)::NUMERIC,&#xA;&#x9;&#x9;&#x9;&#x9;0&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;0&#xA;&#x9;&#x9;) as distance_cumul,&#xA;&#x9;&#x9;-- Azimuth du symbole sur la carte&#xA;&#x9;&#x9;Degrees(ST_Azimuth(ST_StartPoint(geom),ST_EndPoint(geom))) as azimuth,&#xA;&#x9;&#x9;-- Orientation du symbole sur la carte&#xA;&#x9;&#x9;CASE &#xA;&#x9;&#x9;&#x9;WHEN Degrees(ST_Azimuth(ST_StartPoint(geom),ST_EndPoint(geom))) &amp;lt; 180 THEN &#39;Est&#39; &#xA;&#x9;&#x9;&#x9;ELSE &#39;Ouest&#39;&#xA;&#x9;&#x9;END as orientation,&#xA;&#x9;&#x9;geom::geometry(linestring,3857)&#xA;&#x9;FROM &#xA;&#x9;&#x9;all_steps&#xA;&#x9;WINDOW &#xA;&#x9;&#x9;all_preceding_step AS (&#xA;&#x9;&#x9;&#x9;ORDER BY &#xA;&#x9;&#x9;&#x9;&#x9;rang_voyage,&#xA;&#x9;&#x9;&#x9;&#x9;rang_etape,&#xA;&#x9;&#x9;&#x9;&#x9;type_etape&#xA;&#x9;&#x9;&#x9;ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING&#xA;&#x9;&#x9;)&#xA;&#xA;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;On fixe ensuite les données du voyage dans une vue matérialisée pour améliorer les performance lors de la consultation :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;DROP MATERIALIZED VIEW IF EXISTS santa_tracker.vm_06_voyage CASCADE;&#xA;&#xA;CREATE MATERIALIZED VIEW santa_tracker.vm_06_voyage as (&#xA;&#x9;SELECT * &#xA;&#x9;FROM santa_tracker.v_06_voyage&#xA;)&#xA;WITH DATA&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;L&#39; »instant t »&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Avoir un trajet c&amp;rsquo;est bien mais connaitre toutes les infos sur le trajet à un « instant t », c&amp;rsquo;est mieux.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Données&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous allons créer une nouvelle vue qui va se baser sur la vue matérialisée &lt;code&gt;vm_06_voyage&lt;/code&gt; pour calculer la position du Père Noël et divers les paramètres au moment de la consultation de cette vue.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cette vue définies trois grands temps dans l&amp;rsquo;année :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Du 1er janvier au 24 décembre : le Père Noël se trouve chez lui et fabrique les cadeaux&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Du 24 au 25 décembre : le Père Noël distribue les cadeaux selon les données présentes dans la vue matérialisée &lt;code&gt;vm_06_voyage&lt;/code&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;A partir du 25 décembre : le Père Noël se repose chez lui après tout ce travail.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;&#xA;&#xA;&#xA;DROP VIEW IF EXISTS santa_tracker.v_instant_t CASCADE;&#xA;&#xA;CREATE OR REPLACE VIEW santa_tracker.v_instant_t as (&#xA;&#xA;WITH &#xA;&#x9;voyage_instant_t as (&#xA;&#x9;&#x9;-- Etape de préparation des cadeaux&#xA;&#x9;&#x9;-- Cette étape sera visible du 1er janvier au début de la tournée&#xA;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#39;Préparatifs&#39; as type_trajet,&#xA;&#x9;&#x9;&#x9;&#39;0-0-0-p&#39; AS id_voyage,&#xA;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;id&#39;)::int AS id_destination,&#xA;&#x9;&#x9;&#x9;NULL AS id_destination_next,&#xA;&#x9;&#x9;&#x9;var.maison_pere_noel -&gt;&gt; &#39;region&#39; AS region,&#xA;&#x9;&#x9;&#x9;NULL as region_next,&#xA;&#x9;&#x9;&#x9;var.maison_pere_noel -&gt;&gt; &#39;ville&#39; AS ville,&#xA;&#x9;&#x9;&#x9;NULL as ville_next,&#xA;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;population&#39;)::integer AS population,&#xA;&#x9;&#x9;&#x9;NULL as pop_fictive,&#xA;&#x9;&#x9;&#x9;NULL as pop_fictive_cumul,&#xA;&#x9;&#x9;&#x9;-- Nombre total de cadeau total à fabriquer&#xA;&#x9;&#x9;&#x9;(var.pop_total * var.cadeau_par_pop) as cadeau_distribue,&#xA;&#x9;&#x9;&#x9;0 as cadeau_distribue_cumul,&#xA;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;utc_offset&#39;)::interval AS utc_offset,&#xA;&#x9;&#x9;&#x9;NULL AS utc_offset_next,&#xA;&#x9;&#x9;&#x9;((extract(year from now()) || &#39;-01-01 00:00:00 +01&#39;)::timestamp with time ZONE - var.debut_distrib)::interval as duree_etape,&#xA;&#x9;&#x9;&#x9;&#39;0 second&#39;::interval as duree_etape_cumul,&#xA;&#x9;&#x9;&#x9;-- Début de fabrication le 1er janvier (fuseau horaire du Père Noël)&#xA;&#x9;&#x9;&#x9;(extract(year from now()) || &#39;-01-01 00:00:00 +01&#39;)::timestamp with time zone as date_debut,&#xA;&#x9;&#x9;&#x9;-- Fin de fabrication lors du début de la distribution&#xA;&#x9;&#x9;&#x9;var.debut_distrib as date_fin,&#xA;&#x9;&#x9;&#x9;-- Calcul du pourcentage d&#39;avancement sur l&#39;étape&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;extract(&#39;epoch&#39; from var.&#34;now&#34;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;- extract(&#39;epoch&#39; from ((extract(year from now()) || &#39;-01-01 00:00:00 +01&#39;)::timestamp with time zone))&#xA;&#x9;&#x9;&#x9;&#x9;) / (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;extract(&#39;epoch&#39; from var.debut_distrib)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;- extract(&#39;epoch&#39; from ((extract(year from now()) || &#39;-01-01 00:00:00 +01&#39;)::timestamp with time zone))&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)::NUMERIC as avancement,&#xA;&#x9;&#x9;&#x9;NULL as distance_to_next,&#xA;&#x9;&#x9;&#x9;NULL as distance_cumul,&#xA;&#x9;&#x9;&#x9;0 AS azimuth,&#xA;&#x9;&#x9;&#x9;NULL AS orientation,&#xA;&#x9;&#x9;&#x9;ST_MakeLine(&#xA;&#x9;&#x9;&#x9;&#x9;ST_Transform(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;geom_4326&#39;)::geometry(point,4326), &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;3857&#xA;&#x9;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;&#x9;ST_Transform(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;geom_4326&#39;)::geometry(point,4326),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;3857&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;) as geom &#xA;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;santa_tracker.v_00_variable as var&#xA;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;var.&#34;now&#34; &amp;lt; (var.debut_distrib - var.delai_dest_santa_house)&#xA;&#x9;&#x9;UNION ALL&#xA;&#x9;&#x9;-- Récupération des étapes du voyage&#xA;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;type_etape,&#xA;&#x9;&#x9;&#x9;id_voyage,&#xA;&#x9;&#x9;&#x9;id_destination,&#xA;&#x9;&#x9;&#x9;id_destination_next,&#xA;&#x9;&#x9;&#x9;region,&#xA;&#x9;&#x9;&#x9;region_next,&#xA;&#x9;&#x9;&#x9;ville,&#xA;&#x9;&#x9;&#x9;ville_next,&#xA;&#x9;&#x9;&#x9;population,&#xA;&#x9;&#x9;&#x9;pop_fictive,&#xA;&#x9;&#x9;&#x9;pop_fictive_cumul,&#xA;&#x9;&#x9;&#x9;cadeau_distribue,&#xA;&#x9;&#x9;&#x9;cadeau_distribue_cumul,&#xA;&#x9;&#x9;&#x9;utc_offset,&#xA;&#x9;&#x9;&#x9;utc_offset_next,&#xA;&#x9;&#x9;&#x9;duree_etape,&#xA;&#x9;&#x9;&#x9;duree_etape_cumul,&#xA;&#x9;&#x9;&#x9;date_debut,&#xA;&#x9;&#x9;&#x9;date_fin,&#xA;&#x9;&#x9;&#x9;-- Calcul du pourcentage d&#39;avancement sur l&#39;étape&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;extract(&#39;epoch&#39; from var.&#34;now&#34;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;- extract(&#39;epoch&#39; from date_debut)&#xA;&#x9;&#x9;&#x9;&#x9;) / (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;extract(&#39;epoch&#39; from date_fin)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;- extract(&#39;epoch&#39; from date_debut)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)::NUMERIC as avancement,&#xA;&#x9;&#x9;&#x9;distance_to_next,&#xA;&#x9;&#x9;&#x9;distance_cumul,&#xA;&#x9;&#x9;&#x9;azimuth,&#xA;&#x9;&#x9;&#x9;orientation,&#xA;&#x9;&#x9;&#x9;geom &#xA;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;santa_tracker.vm_06_voyage as t&#xA;&#x9;&#x9;CROSS JOIN &#xA;&#x9;&#x9;&#x9;santa_tracker.v_00_variable as var&#xA;&#x9;&#x9;WHERE &#xA;&#x9;&#x9;&#x9;var.&#34;now&#34; &gt;= date_debut&#xA;&#x9;&#x9;AND &#xA;&#x9;&#x9;&#x9;var.&#34;now&#34; &amp;lt; date_fin&#xA;&#x9;&#x9;UNION ALL&#xA;&#x9;&#x9;-- Ajout d&#39;une étape de repos&#xA;&#x9;&#x9;-- Cette étape sera visible après la fin de la tournée &#xA;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#39;Repos&#39; as type_trajet,&#xA;&#x9;&#x9;&#x9;&#39;0-0-0-r&#39; AS id_voyage,&#xA;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;id&#39;)::int AS id_destination,&#xA;&#x9;&#x9;&#x9;NULL AS id_destination_next,&#xA;&#x9;&#x9;&#x9;var.maison_pere_noel -&gt;&gt; &#39;region&#39; AS region,&#xA;&#x9;&#x9;&#x9;NULL as region_next,&#xA;&#x9;&#x9;&#x9;var.maison_pere_noel -&gt;&gt; &#39;ville&#39; AS ville,&#xA;&#x9;&#x9;&#x9;NULL as ville_next,&#xA;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;population&#39;)::integer AS population,&#xA;&#x9;&#x9;&#x9;NULL as pop_fictive,&#xA;&#x9;&#x9;&#x9;var.pop_total as pop_fictive_cumul,&#xA;&#x9;&#x9;&#x9;(var.pop_total * var.cadeau_par_pop) as cadeau_distribue,&#xA;&#x9;&#x9;&#x9;(var.pop_total * var.cadeau_par_pop) as cadeau_distribue_cumul,&#xA;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;utc_offset&#39;)::interval AS utc_offset,&#xA;&#x9;&#x9;&#x9;NULL AS utc_offset_next,&#xA;&#x9;&#x9;&#x9;((extract(year from now()) || &#39;-12-31 23:59:59 +01&#39;)::timestamp with time ZONE - var.fin_distrib)::interval as duree_etape,&#xA;&#x9;&#x9;&#x9;&#39;0 second&#39;::interval as duree_etape_cumul,&#xA;&#x9;&#x9;&#x9;-- Début du repos à la fin de la distribution&#xA;&#x9;&#x9;&#x9;var.fin_distrib as date_debut,&#xA;&#x9;&#x9;&#x9;-- Fin du repos le 1er janvier à 00h00 (fuseau horaire du Père Noël)&#xA;&#x9;&#x9;&#x9;((extract(year from now()) + 1)::text || &#39;-01-01 00:00:00 +01&#39;)::timestamp with time zone as date_fin,&#xA;&#x9;&#x9;&#x9;-- Calcul du pourcentage d&#39;avancement sur l&#39;étape&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;extract(&#39;epoch&#39; from var.&#34;now&#34;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;- extract(&#39;epoch&#39; from var.fin_distrib)&#xA;&#x9;&#x9;&#x9;&#x9;) / (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;extract(&#39;epoch&#39; from var.fin_distrib)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;- extract(&#39;epoch&#39; from ((extract(year from now()) || &#39;-01-01 00:00:00 +01&#39;)::timestamp with time zone))&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)::NUMERIC as avancement,&#xA;&#x9;&#x9;&#x9;NULL as distance_to_next,&#xA;&#x9;&#x9;&#x9;NULL as distance_cumul,&#xA;&#x9;&#x9;&#x9;0 AS azimuth,&#xA;&#x9;&#x9;&#x9;NULL AS orientation,&#xA;&#x9;&#x9;&#x9;ST_MakeLine(&#xA;&#x9;&#x9;&#x9;&#x9;ST_Transform(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;geom_4326&#39;)::geometry(point,4326), &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;3857&#xA;&#x9;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;&#x9;ST_Transform(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(var.maison_pere_noel -&gt;&gt; &#39;geom_4326&#39;)::geometry(point,4326),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;3857&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;) as geom &#xA;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;santa_tracker.v_00_variable as var&#xA;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;var.&#34;now&#34; &gt; (var.fin_distrib + var.delai_dest_santa_house)&#xA;&#x9;)&#xA;SELECT &#xA;&#x9;type_trajet,&#xA;&#x9;id_voyage,&#xA;&#x9;id_destination,&#xA;&#x9;id_destination_next,&#xA;&#x9;region,&#xA;&#x9;region_next,&#xA;&#x9;ville,&#xA;&#x9;ville_next,&#xA;&#x9;population,&#xA;&#x9;pop_fictive,&#xA;&#x9;pop_fictive_cumul,&#xA;&#x9;-- Calcul du nombre de personnes visitées au moment de la visualisation&#xA;&#x9;round(&#xA;&#x9;&#x9;pop_fictive_cumul + &#xA;&#x9;&#x9;(pop_fictive * avancement)::numeric,&#xA;&#x9;&#x9;0&#xA;&#x9;) as pop_fictive_cumul_actuel,&#xA;&#x9;cadeau_distribue,&#xA;&#x9;cadeau_distribue_cumul,&#xA;&#x9;-- Calcul du nombre de cadeau distribué au moment de la visualisation&#xA;&#x9;round(&#xA;&#x9;&#x9;cadeau_distribue_cumul + &#xA;&#x9;&#x9;(cadeau_distribue * avancement)::numeric,&#xA;&#x9;&#x9;0&#xA;&#x9;) as cadeau_cumul_actuel,&#xA;&#x9;utc_offset,&#xA;&#x9;utc_offset_next,&#xA;&#x9;duree_etape,&#xA;&#x9;date_debut,&#xA;&#x9;date_fin,&#xA;&#x9;avancement,&#xA;&#x9;distance_to_next,&#xA;&#x9;distance_cumul,&#xA;&#x9;-- Calcul de la distance parcourue au moment de la visualisation&#xA;&#x9;round(&#xA;&#x9;&#x9;distance_cumul + &#xA;&#x9;&#x9;(distance_to_next * avancement)::numeric,&#xA;&#x9;&#x9;0&#xA;&#x9;) as distance_cumul_actuel,&#xA;&#x9;azimuth,&#xA;&#x9;orientation,&#xA;&#x9;-- Calcul de l&#39;emplacement au moment de la visualisation&#xA;&#x9;ST_LineInterpolatePoint(geom, avancement)::geometry(point,3857) as geom&#xA;FROM &#xA;&#x9;voyage_instant_t&#xA;&#xA;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Affichage&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Selon le moment de l&amp;rsquo;année, nous n&amp;rsquo;allons pas afficher les mêmes données. Dans le cadre de l&amp;rsquo;application, j&amp;rsquo;ai mis en forme les données avec beaucoup de HTML, c&amp;rsquo;est peu lisible et nous allons donc ici générer quelque chose de beaucoup plus simple mais avec les mêmes informations.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Créons une vue qui récupère les données et les mets en forme :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;DROP VIEW IF EXISTS santa_tracker.v_instant_t_affichage CASCADE;&#xA;&#xA;CREATE OR REPLACE VIEW santa_tracker.v_instant_t_affichage as (&#xA;&#xA;SELECT &#xA;&#x9;id_voyage,&#xA;&#x9;type_trajet,&#xA;&#x9;-- On génère des paroles du Père Noël.&#xA;&#x9;-- Le texte varie selon le moment de l&#39;année et change toutes les 10 secondes&#xA;&#x9;jsonb_extract_path_text(&#xA;&#x9;&#x9;$${&#xA;&#x9;&#x9;&#x9;&#34;Préparatifs&#34;:[&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Vive le vent d&#34;,&#34;hiver !&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Et un cadeau de plus !&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Hum ?!&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Quel beau camion !&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Ah, une belle poupée !&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Oh Oh Oh !&#34;&#xA;&#x9;&#x9;&#x9;],&#xA;&#x9;&#x9;&#x9;&#34;Trajet&#34;:[&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Oh Oh Oh !&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Joyeux Noël !&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Mon beau sapin !&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Hue tornade !&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Allez comète !&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Il fait frais cette nuit !&#34;&#xA;&#x9;&#x9;&#x9;],&#xA;&#x9;&#x9;&#x9;&#34;Distribution&#34;:[&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Oh hisse !&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Serrée cette cheminée !&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Et un cadeau de plus !&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Chut, pas un bruit !&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Hum un petit biscuit...&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;Oh Oh Oh !&#34;&#xA;&#x9;&#x9;&#x9;],&#xA;&#x9;&#x9;&#x9;&#34;Repos&#34;:[&#xA;&#x9;&#x9;&#x9;&#x9;&#34;ZZZ&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;ZZZ ZZZ&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;ZZZ&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;ZZZ ZZZ&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;ZZZ&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;RONFFFFFFFLE&#34;&#xA;&#x9;&#x9;&#x9;]&#xA;&#x9;&#x9;}$$::jsonb,&#xA;&#x9;&#x9;type_trajet,&#xA;&#x9;&#x9;FLOOR(EXTRACT(second from transaction_timestamp()) / 10)::text&#xA;&#x9;) as parole,&#xA;&#x9;CASE &#xA;&#x9;&#x9;WHEN type_trajet = &#39;Préparatifs&#39; THEN &#39;Le Père Noël prépare les cadeaux&#39;&#xA;&#x9;&#x9;WHEN type_trajet = &#39;Trajet&#39; THEN &#39;Le Père Noël voyage vers un nouveau lieu de distribution&#39;&#xA;&#x9;&#x9;WHEN type_trajet = &#39;Distribution&#39; THEN &#39;Le Père Noël est en cours de distribution&#39;&#xA;&#x9;&#x9;WHEN type_trajet = &#39;Repos&#39; THEN &#39;Le Père Noël a terminé et prend un repos bien mérité&#39;&#xA;&#x9;END AS titre,&#xA;&#x9;ville || &#39; (&#39; || region || &#39;)&#39; AS ville,&#xA;&#x9;ville_next || &#39; (&#39; || region_next || &#39;)&#39; AS ville_next,&#xA;&#x9;concat(&#xA;&#x9;&#x9;NULLIF(extract(day from (date_fin - var.&#34;now&#34;)), 0) || &#39; jours, &#39;,&#xA;&#x9;&#x9;NULLIF(extract(hour from (date_fin - var.&#34;now&#34;)), 0) || &#39; heures, &#39;,&#xA;&#x9;&#x9;NULLIF(extract(minute from (date_fin - var.&#34;now&#34;)), 0) || &#39; minutes et &#39;,&#xA;&#x9;&#x9;NULLIF(round(extract(second from (date_fin - var.&#34;now&#34;))::numeric, 0), 0) || &#39; secondes&#39;&#xA;&#x9;) AS timer,&#xA;&#x9;to_char(date_debut,&#39;DD TMmon YYYY&#39;) AS date_debut,&#xA;&#x9;to_char(date_debut,&#39;HH24:MI:SS&#39;) AS heure_debut,&#xA;&#x9;to_char(date_debut AT TIME ZONE utc_offset,&#39;DD TMmon YYYY&#39;) AS date_debut_local,&#xA;&#x9;to_char(date_debut AT TIME ZONE utc_offset,&#39;HH24:MI:SS&#39;) AS heure_debut_local,&#xA;&#x9;to_char(date_fin,&#39;DD TMmon YYYY&#39;) AS date_fin,&#xA;&#x9;to_char(date_fin,&#39;HH24:MI:SS&#39;) AS heure_fin,&#xA;&#x9;to_char(date_fin AT TIME ZONE utc_offset,&#39;DD TMmon YYYY&#39;) AS date_fin_local,&#xA;&#x9;to_char(date_fin AT TIME ZONE utc_offset,&#39;HH24:MI:SS&#39;) AS heure_fin_local,&#xA;&#x9;trim(to_char(cadeau_cumul_actuel, &#39;999 999 999 999&#39;)) AS cadeau,&#xA;&#x9;trim(to_char(pop_fictive_cumul_actuel, &#39;999 999 999 999&#39;)) AS population,&#xA;&#x9;trim(to_char(distance_cumul_actuel/1000, &#39;999 999 999 999 km&#39;)) AS distance&#xA;FROM&#xA;&#x9;santa_tracker.v_instant_t&#xA;CROSS JOIN&#xA;&#x9;santa_tracker.v_00_variable as var &#xA;&#x9;&#xA;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il est maintenant possible d&amp;rsquo;appeler la vue avec un SELECT qui finalise la mise en forme. N&amp;rsquo;hésitez pas à utiliser du HTML.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT &#xA;&#x9;id_voyage,&#xA;&#x9;CASE &#xA;&#x9;&#x9;WHEN type_trajet = &#39;Préparatifs&#39; THEN &#xA;&#x9;&#x9;&#x9;concat_ws(&#xA;&#x9;&#x9;&#x9;&#x9;chr(10),&#xA;&#x9;&#x9;&#x9;&#x9;titre,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Petit mot du Père Noël : &#39; || parole,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Emplacement actuel : &#39; || ville ,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Départ prévu dans &#39; || timer,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;&#x9;le &#39; || date_fin || &#39; à &#39; || heure_fin,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Cadeaux fabriqués : &#39; || cadeau&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;WHEN type_trajet = &#39;Trajet&#39; THEN&#xA;&#x9;&#x9;&#x9;concat_ws(&#xA;&#x9;&#x9;&#x9;&#x9;chr(10),&#xA;&#x9;&#x9;&#x9;&#x9;titre,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Petit mot du Père Noël : &#39; || parole,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Décollage : &#39; || ville ,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;&#x9;le &#39; || date_debut || &#39; à &#39; || heure_debut,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;&#x9;(&#39; || date_debut_local || &#39; à &#39; || heure_debut_local || &#39; heure locale)&#39;,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Arrivée prévue dans &#39; || timer,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Atterissage : &#39; || ville_next ,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;&#x9;le &#39; || date_fin || &#39; à &#39; || heure_fin,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;&#x9;(&#39; || date_fin_local || &#39; à &#39; || heure_fin_local || &#39; heure locale)&#39;,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Cadeaux distribués : &#39; || cadeau,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Population visitée : &#39; || population,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Distance parcourue : &#39; || distance&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;WHEN type_trajet = &#39;Distribution&#39; THEN&#xA;&#x9;&#x9;&#x9;concat_ws(&#xA;&#x9;&#x9;&#x9;&#x9;chr(10),&#xA;&#x9;&#x9;&#x9;&#x9;titre,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Petit mot du Père Noël : &#39; || parole,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Emplacement actuel : &#39; || ville ,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Arrivé sur place le &#39; || date_debut || &#39; à &#39; || heure_debut,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;&#x9;(&#39; || date_debut_local || &#39; à &#39; || heure_debut_local || &#39; heure locale)&#39;,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Prochain départ le &#39; || date_fin || &#39; à &#39; || heure_fin,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;&#x9;(&#39; || date_fin_local || &#39; à &#39; || heure_fin_local || &#39; heure locale)&#39;,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Dans &#39; || timer,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Prochaine destination : &#39; || ville_next ,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Cadeaux distribués : &#39; || cadeau,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Population visitée : &#39; || population,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Distance parcourue : &#39; || distance&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;WHEN type_trajet = &#39;Repos&#39; THEN&#xA;&#x9;&#x9;&#x9;concat_ws(&#xA;&#x9;&#x9;&#x9;&#x9;chr(10),&#xA;&#x9;&#x9;&#x9;&#x9;titre,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Petit mot du Père Noël : &#39; || parole,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Emplacement actuel : &#39; || ville ,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Prochaine fabrication de cadeau dans &#39; || timer,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Le &#39; || date_fin || &#39; à &#39; || heure_fin,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Cadeaux distribués : &#39; || cadeau,&#xA;&#x9;&#x9;&#x9;&#x9;&#39;Population visitée : &#39; || population&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;END as informations&#xA;FROM&#xA;&#x9;santa_tracker.v_instant_t_affichage&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voila un exemple de réponse :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-columns is-layout-flex wp-container-core-columns-layout-1 wp-block-columns-is-layout-flex&#34;&gt;&#xA;&lt;div class=&#34;wp-block-column is-layout-flow wp-block-column-is-layout-flow&#34;&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-column is-layout-flow wp-block-column-is-layout-flow&#34;&gt;&#xA;&lt;p class=&#34;has-text-align-center&#34;&gt;&lt;strong&gt;Le Père Noël est en cours de distribution&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Petit mot du Père Noël : Oh hisse !&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Emplacement actuel : Anadyr (Russie)&lt;br&gt;Arrivé sur place le 24 déc. 2023 à 08:00:00&lt;br&gt;(24 déc. 2023 à 19:00:00 heure locale)&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Prochaine destination : Majuro Atoll (Îles Marshall)&lt;br&gt;Départ dans 36 secondes&lt;br&gt;Le 24 déc. 2023 à 08:00:37&lt;br&gt;(24 déc. 2023 à 19:00:37 heure locale)&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cadeaux distribués : 7 222&lt;br&gt;Population visitée : 7 602&lt;br&gt;Distance parcourue : 18 108 km&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-column is-layout-flow wp-block-column-is-layout-flow&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;L&amp;rsquo;état des lieux&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour chaque destination, il est possible de voir en temps réel si le Père Noël est passé ou non. Pour cela nous allons nous appuyer sur la table des destinations ainsi que la vue matérialisée &lt;code&gt;vm_06_voyage&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Vue contenant toutes les destinations&#xA;DROP VIEW IF EXISTS santa_tracker.v_destination CASCADE;&#xA;&#xA;CREATE OR REPLACE VIEW santa_tracker.v_destination AS &#xA;&#xA;WITH &#xA;&#x9;all_destinations AS (&#xA;&#x9;&#x9;-- Récupération de toutes les destinations&#xA;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;id_destination,&#xA;&#x9;&#x9;&#x9;region,&#xA;&#x9;&#x9;&#x9;ville,&#xA;&#x9;&#x9;&#x9;population,&#xA;&#x9;&#x9;&#x9;utc_offset,&#xA;&#x9;&#x9;&#x9;geom&#xA;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;santa_tracker.destination&#xA;&#x9;&#x9;UNION&#xA;&#x9;&#x9;-- Ajout de la maison du Père Noël&#xA;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;(maison_pere_noel -&gt;&gt; &#39;id&#39;)::integer AS id_destination,&#xA;&#x9;&#x9;&#x9;maison_pere_noel -&gt;&gt; &#39;region&#39; AS region,&#xA;&#x9;&#x9;&#x9;maison_pere_noel -&gt;&gt; &#39;ville&#39; AS ville,&#xA;&#x9;&#x9;&#x9;(maison_pere_noel -&gt;&gt; &#39;population&#39;)::integer AS population,&#xA;&#x9;&#x9;&#x9;(maison_pere_noel -&gt;&gt; &#39;utc_offset&#39;)::interval AS utc_offset,&#xA;&#x9;&#x9;&#x9;(maison_pere_noel -&gt;&gt; &#39;geom_4326&#39;)::geometry(Point,4326) AS geom&#xA;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;santa_tracker.v_00_variable&#xA;&#x9;)&#xA;&#x9;SELECT &#xA;&#x9;&#x9;t1.id_destination,&#xA;&#x9;&#x9;t1.region,&#xA;&#x9;&#x9;t1.ville,&#xA;&#x9;&#x9;t1.population,&#xA;&#x9;&#x9;t1.utc_offset,&#xA;&#x9;&#x9;-- Génération d&#39;un message d&#39;information sur l&#39;état de passage&#xA;&#x9;&#x9;CASE &#xA;&#x9;&#x9;&#x9;-- S&#39;il n&#39;y a pas de date de début (pas de distribution) alors il s&#39;agit de la maison du Père Noël&#xA;&#x9;&#x9;&#x9;WHEN voy.date_debut IS NULL THEN &#xA;&#x9;&#x9;&#x9;&#x9;CASE &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN var.&#34;now&#34; &amp;lt; var.debut_distrib THEN &#39;Le Père Noël prépare les cadeaux&#39;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN var.&#34;now&#34; &amp;lt; var.fin_distrib THEN &#39;Le Père Noël est absent&#39;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE &#39;Le Père Noël se repose&#39;&#xA;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;-- Sinon on détermine si la visite est réalisée en fonction de l&#39;heure de passage&#xA;&#x9;&#x9;&#x9;WHEN var.&#34;now&#34; &gt; voy.date_fin  THEN &#39;A reçu la visite du Père Noël&#39;&#xA;&#x9;&#x9;&#x9;WHEN var.&#34;now&#34; &gt; voy.date_debut  THEN &#39;Le Père Noël est ici, Youpi !&#39;&#xA;&#x9;&#x9;&#x9;ELSE &#39;Attend la visite du Père Noël&#39;&#xA;&#x9;&#x9;END AS informations,&#xA;&#x9;&#x9;t1.geom&#xA;&#x9;FROM &#xA;&#x9;&#x9;all_destinations AS t1&#xA;&#x9;CROSS JOIN &#xA;&#x9;&#x9;santa_tracker.v_00_variable AS var&#xA;&#x9;LEFT JOIN &#xA;&#x9;&#x9;santa_tracker.vm_06_voyage as voy&#xA;&#x9;&#x9;ON voy.id_destination = t1.id_destination&#xA;&#x9;&#x9;AND voy.type_etape = &#39;Distribution&#39;&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;hr class=&#34;wp-block-separator has-alpha-channel-opacity&#34;/&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-text-align-center&#34;&gt;Voila ! J&amp;rsquo;espère que ça vous a plu et n&amp;rsquo;hésitez pas à suivre le Père Noël !!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-text-align-center has-rouge-color has-text-color&#34;&gt;&lt;a href=&#34;https://noel.cirilgroup.com/index.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&lt;strong&gt;noel.cirilgroup.com&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-text-align-center has-rouge-color has-text-color has-large-font-size&#34;&gt;&lt;img src=&#34;https://s.w.org/images/core/emoji/14.0.0/72x72/1f384.png&#34; alt=&#34;🎄&#34; class=&#34;wp-smiley&#34; style=&#34;height: 1em; max-height: 1em;&#34; /&gt; &lt;strong&gt;Joyeux Noël !!&lt;/strong&gt; &lt;img src=&#34;https://s.w.org/images/core/emoji/14.0.0/72x72/1f384.png&#34; alt=&#34;🎄&#34; class=&#34;wp-smiley&#34; style=&#34;height: 1em; max-height: 1em;&#34; /&gt;&lt;/p&gt;&#xA;</content>
    <link href="https://blog.arthurbazin.com/bdd/postgresql/suivons-le-pere-noel-avec-postgis" rel="alternate"></link>
    <summary type="html">Découvrez ce qui se cache derrière une application de suivi du Père Noël. Une liste de destination, quelques requêtes SQL et le tour est joué ? Ce n&#39;est pas aussi simple que ça, vous allez le voir...&#xA;En partenariat avec Ciril GROUP.</summary>
    <author>
      <name>Bazinga</name>
    </author>
  </entry>
  <entry>
    <title>Configurez PostgreSQL</title>
    <updated>2023-10-04T15:09:30Z</updated>
    <id>tag:blog.arthurbazin.com,2023-10-04:/bdd/postgresql/configurez-postgresql</id>
    <content type="html">&#xA;&lt;p&gt;PostgreSQL est conçu pour fonctionner sur un grand nombre de plateformes, y compris celles ayant les performances les plus limitées. Il est donc important de bien le configurer lors de son installation pour que l&amp;rsquo;instance exploite au mieux les capacités de la machine sur laquelle elle se trouve.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour cela, de nombreux paramètres peuvent être modifiés et ce, à différents niveaux. Voici un guide rapide pour s&amp;rsquo;y retrouver.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Surcharge des paramètres&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Lors de la compilation de PostgreSQL (~création du programme) les paramètres de configuration sont initialisés avec une valeur par défaut. Leurs modifications peut se faire à différents niveaux mais respectent toujours l&amp;rsquo;ordre de surcharge suivant :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Valeurs définies lors de la compilation.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Paramètres définis lors de l&amp;rsquo;initialisation d&amp;rsquo;un répertoire de base de données (avec la commande &lt;code&gt;initdb&lt;/code&gt;).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Variables définies dans les variables d&amp;rsquo;environnement (&lt;a href=&#34;https://www.postgresql.org/docs/current/libpq-envars.html&#34; data-type=&#34;link&#34; data-id=&#34;https://www.postgresql.org/docs/current/libpq-envars.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;voir la documentation pour plus d&amp;rsquo;informations&lt;/a&gt;).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Fichier de configuration &lt;em&gt;postgresql.conf&lt;/em&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Commande &lt;code&gt;ALTER SYSTEM SET&lt;/code&gt; (fichier de configuration &lt;em&gt;postgresql.auto.conf&lt;/em&gt;).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Options passées en paramètre de la ligne de commande &lt;code&gt;pg_ctl&lt;/code&gt;, utilisées pour démarrer l&amp;rsquo;instance.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Commande &lt;code&gt;ALTER DATABASE xyz SET&lt;/code&gt; (paramètre spécifié pour une base).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Commande &lt;code&gt;ALTER ROLE abc SET&lt;/code&gt; (paramètre spécifié pour un rôle).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Commande &lt;code&gt;ALTER ROLE abc IN DATABASE xyz SET&lt;/code&gt; (paramètre spécifié pour un rôle pour une base).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Options passées dans la chaine de connexion à l&amp;rsquo;instance par le client.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Commande &lt;code&gt;SET&lt;/code&gt; (paramètre pour une session).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Commande &lt;code&gt;SET LOCAL&lt;/code&gt; (paramètre pour une transaction).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Options définies pour un bloc de fonction.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Récupérer la valeur d&amp;rsquo;un paramètre&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Avec tous ces points d&amp;rsquo;entrée, il peut être difficile de savoir quelle est la valeur d&amp;rsquo;un paramètre. Pour cela, vous pouvez utiliser plusieurs requêtes.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Utiliser &lt;code&gt;SHOW&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Visualiser les paramètres du serveur :&#xA;SHOW mon_parametre;&#xA;&#xA;-- Visualiser tous les paramètres :&#xA;SHOW ALL;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Utiliser la fonction &lt;code&gt;current_setting(&#39;mon_parametre&#39;)&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Récupérer les principaux paramètres du serveur.&#xA;SELECT&#xA;&#x9;current_setting(&#39;SERVER_VERSION&#39;) as &#34;SERVER_VERSION&#34;,&#xA;&#x9;current_setting(&#39;SERVER_ENCODING&#39;) as &#34;SERVER_ENCODING&#34;,&#xA;&#x9;current_setting(&#39;LC_COLLATE&#39;) as &#34;LC_COLLATE&#34;,&#xA;&#x9;current_setting(&#39;data_directory&#39;) as &#34;data_directory&#34;,&#xA;&#x9;current_setting(&#39;config_file&#39;) as &#34;config_file&#34;,&#xA;&#x9;current_setting(&#39;hba_file&#39;) as &#34;hba_file&#34;,&#xA;&#x9;current_setting(&#39;listen_addresses&#39;) as &#34;listen_addresses&#34;,&#xA;&#x9;current_setting(&#39;port&#39;) as &#34;port&#34;,&#xA;&#x9;current_setting(&#39;max_connections&#39;) as &#34;max_connections&#34;,&#xA;&#x9;current_setting(&#39;shared_buffers&#39;) as &#34;shared_buffers&#34;,&#xA;&#x9;current_setting(&#39;work_mem&#39;) as &#34;work_mem&#34;,&#xA;&#x9;current_setting(&#39;log_destination&#39;) as &#34;log_destination&#34;,&#xA;&#x9;current_setting(&#39;log_directory&#39;) as &#34;log_directory&#34;,&#xA;&#x9;current_setting(&#39;log_filename&#39;) as &#34;log_filename&#34;,&#xA;&#x9;current_setting(&#39;log_rotation_age&#39;) as &#34;log_rotation_age&#34;,&#xA;&#x9;current_setting(&#39;log_rotation_size&#39;) as &#34;log_rotation_size&#34;,&#xA;&#x9;current_setting(&#39;log_min_messages&#39;) as &#34;log_min_messages&#34;,&#xA;&#x9;current_setting(&#39;search_path&#39;) as &#34;search_path&#34;,&#xA;&#x9;current_setting(&#39;TimeZone&#39;) as &#34;TimeZone&#34;&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Vous pouvez également visualiser la vue pg_settings qui liste l&amp;rsquo;ensemble des paramètres. Cette vue est très intéressante car elle vous indiquera également l&amp;rsquo;origine de la définition du paramètre, les valeurs possibles (ou min/max) des différentes options ainsi que l&amp;rsquo;obligation ou non de redémarrer l&amp;rsquo;instance ou de se reconnecter pour prendre en compte la nouvelle valeur du paramètre.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;generic&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT &#xA;  * &#xA;FROM &#xA;  pg_catalog.pg_settings&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les paramètres utilisables sont ceux qui se trouvent dans le fichier de configuration de PostgreSQL (voir plus bas).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Configuration personnalisée&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Fichiers de configuration&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il existe plusieurs fichiers de configuration :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;postgresql.conf&lt;/em&gt; : il s&amp;rsquo;agit du fichier principal qui contient tous les paramètres de&lt;br&gt;l&amp;rsquo;instance.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;postgresql.auto.conf&lt;/em&gt; : ce fichier est géré par l&amp;rsquo;instance qui y stocke les paramètres&lt;br&gt;de configuration modifiés depuis la commande &lt;code&gt;ALTER SYSTEM&lt;/code&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;pg_hba.conf&lt;/em&gt; : ce fichier contient les autorisations d&amp;rsquo;authentification à la base. Il&lt;br&gt;s&amp;rsquo;agit d&amp;rsquo;une sorte de pare-feu listant les hôtes autorisés à contacter l&amp;rsquo;instance et par&lt;br&gt;quel moyen. J&amp;rsquo;ai déjà détaillé son contenu dans &lt;a href=&#34;https://blog.arthurbazin.com/bdd/postgresql/postgresql-tout-comprendre-2#pg_hbaconf&#34; data-type=&#34;link&#34; data-id=&#34;https://blog.arthurbazin.com/bdd/postgresql/postgresql-tout-comprendre-2#pg_hbaconf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;cet article&lt;/a&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;em&gt;pg_ident.conf&lt;/em&gt; : ce fichier est en lien avec &lt;em&gt;pg_hba.conf&lt;/em&gt; et est utiliser en cas d&amp;rsquo;utilisation&lt;br&gt;d&amp;rsquo;un mécanisme d&amp;rsquo;authentification externe à la base (via un annuaire par&lt;br&gt;exemple). Il contient la correspondance entre les utilisateurs d&amp;rsquo;un ou plusieurs annuaires&lt;br&gt;avec les utilisateurs de l&amp;rsquo;instance PostgreSQL.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le fichier &lt;em&gt;postgresql.conf&lt;/em&gt; se trouve dans le répertoire « data » de PostgreSQL (avec les données, les logs et tout ce qui se rapporte aux bases gérées par l&amp;rsquo;instance) qui peut se trouver à différents endroits selon le système d&amp;rsquo;exploitation. En général :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Windows : &lt;em&gt;C:\Program Files\PostgreSQL\X\data\postgresql.con&lt;/em&gt;f&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Linux (Red Hat, Cent OS) : &lt;em&gt;/var/lib/pgsql/X/data/postgresql.conf&lt;/em&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Linux (Debian, Ubuntu) : &lt;em&gt;/etc/postgresql/X/main/postgresql.conf&lt;/em&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le plus simple pour le trouver est d&amp;rsquo;utiliser la requête suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SHOW config_file;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;raw&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;config_file |&#xA;------------------------------------------------------+&#xA;C:\Program Files\PostgreSQL\13\data\postgresql.conf |&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ce fichier contient un ensemble de paramètres définis de la façon suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;raw&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;#Ligne de commentaire&#xA;parametre = valeur&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il est également possible de scinder le fichier en plusieurs parties puis de les inclure dans le fichier principal avec paramètres suivants :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;include = &#39;mon_fichier.conf&#39;&lt;/code&gt; : récupérer les valeurs de &lt;em&gt;mon_fichier.conf&lt;/em&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;include_if_exists = &#39;mon_fichier&#39;&lt;/code&gt; : récupérer les valeurs de &lt;em&gt;mon_fichier.conf&lt;/em&gt; sauf si le fichier n&amp;rsquo;existe pas.&lt;br&gt;La directive précédente renvoie une erreur si le fichier n&amp;rsquo;existe pas, pas celle-ci.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;include_dir = &#39;mon_repertoire&#39;&lt;/code&gt; : récupérer les valeurs de tous les fichiers « &lt;em&gt;.conf&lt;/em&gt; » dans le répertoire &lt;em&gt;mon_repertoire&lt;/em&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34;&gt;Commandes de configuration&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Plutôt que de modifier le fichier de configuration principal, il est possible d&amp;rsquo;utiliser des requêtes SQL pour paramétrer l&amp;rsquo;instance.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Configurations permanentes&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici la liste des commandes disponibles pour modifier un paramètre de façon permanente.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour toute l&amp;rsquo;instance (dans le fichier &lt;em&gt;postgresql.auto.conf&lt;/em&gt;) :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;ALTER SYSTEM SET parametre = valeur;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour une seule base de données :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;ALTER DATABASE xyz SET parametre = valeur;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour un seul rôle :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;ALTER ROLE abc SET parametre = valeur;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour un seul rôle au sein d&amp;rsquo;une base de données spécifique :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;ALTER ROLE abc IN DATABASE xyz SET parametre = valeur;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h4 class=&#34;wp-block-heading&#34;&gt;Configurations temporaires&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il est aussi possible de modifier un paramètre de façon temporaire :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour une session (le paramètre sera réinitialisé lors de la prochaine connexion) :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SET parametre = valeur;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour une transaction (entre les mots clés BEGIN et END) :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SET LOCAL parametre = valeur;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour une fonction :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;generic&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;CREATE OR REPLACE FUNCTION ma_fonction_test()&#xA;  RETURNS BOOLEAN&#xA;as $$&#xA;BEGIN&#xA;  SELECT 1;&#xA;  RETURN true;&#xA;END;&#xA;$$&#xA;LANGUAGE plpgsql&#xA;SET parametre = valeur&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Paramètres intéressants&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici quelques liens que vous pouvez suivre pour avoir plus d&amp;rsquo;informations sur les paramètres :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;La documentation de PostgreSQL : &lt;a href=&#34;https://www.postgresql.org/docs/current/runtime-config.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://www.postgresql.org/docs/current/runtime-config.html&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Guide de Dalibo sur le paramétrage de PostgreSQL : &lt;a rel=&#34;noreferrer noopener&#34; href=&#34;https://public.dalibo.com/exports/formation/manuels/modules/m2/m2.handout.html&#34; target=&#34;_blank&#34;&gt;https://public.dalibo.com/exports/formation/manuels/modules/m2/m2.handout.html&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Tous les paramètres de configuration expliqués : &lt;a rel=&#34;noreferrer noopener&#34; href=&#34;https://postgresqlco.nf/doc/fr/param/&#34; target=&#34;_blank&#34;&gt;https://postgresqlco.nf/doc/fr/param/&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Optimisation de PostgreSQL en fonction de la configuration du serveur : &#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a rel=&#34;noreferrer noopener&#34; href=&#34;https://pgtune.leopard.in.ua/#/&#34; data-type=&#34;link&#34; data-id=&#34;https://pgtune.leopard.in.ua/#/&#34; target=&#34;_blank&#34;&gt;https://pgtune.leopard.in.ua/#/&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a rel=&#34;noreferrer noopener&#34; href=&#34;https://pgconfigurator.cybertec-postgresql.com/&#34; target=&#34;_blank&#34;&gt;https://pgconfigurator.cybertec-postgresql.com/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Paramètres à vérifier pour l&amp;rsquo;utilisation de l&amp;rsquo;extension PostGIS :&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a rel=&#34;noreferrer noopener&#34; href=&#34;https://postgis.net/docs/postgis_administration.html#database_tuning_configuration&#34; target=&#34;_blank&#34;&gt;https://postgis.net/docs/postgis_administration.html#database_tuning_configuration&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;a href=&#34;https://postgis.net/workshops/postgis-intro/tuning.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://postgis.net/workshops/postgis-intro/tuning.html&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-449dadad-977a-4b7f-bfd1-bc748556a1b8&#34;&gt;Voici également quelques uns des principaux paramètres et certaines valeurs recommandées ou en exemple.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;listen_adresses&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-ddec9871-53cb-4a66-9f83-405e8b169060&#34;&gt;Définit les adresses IP à écouter. Vous pouvez ainsi définir les valeurs suivantes :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul id=&#34;block-349607a4-e962-472b-b6c8-d09b31850ee9&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;*&lt;/code&gt;&amp;nbsp;: toutes les IP.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;148.3.12.21&lt;/code&gt;&amp;nbsp;: une seule IP.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;148.3.12.21,148.3.12.22&lt;/code&gt;&amp;nbsp;: plusieurs IP.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-ac5df6f8-bb28-431e-bf2f-87fe91c98947&#34;&gt;&lt;strong&gt;Recommandé :&lt;/strong&gt; tout dépend de votre besoin. Pour un maximum de sécurité, ne renseignez que les adresses IP devant contacter le serveur. Sinon vous pouvez autoriser toutes les adresses et gérer la liste dans le fichier &lt;em&gt;pg_hba.conf&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;port&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-6351c7f4-797e-4fd8-9b22-905b6e089f9c&#34;&gt;Définit le port sur lequel PostgreSQL peut être contacté. Vous pouvez indiquer n’importe quel port disponible sur le serveur. Changer le port par défaut apporte un léger gain de sécurité car il faut connaitre le port pour se connecter au serveur.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-e9da9d64-9516-4015-a764-e7b0c2e4d630&#34;&gt;&lt;strong&gt;Défaut&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;port = 5432&lt;/code&gt;&lt;br&gt;&lt;strong&gt;Recommandé :&lt;/strong&gt; un port différent comme 5433 ou 5434 ou un autre.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;max_connections&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-54e4ccaf-cb89-431b-9e37-6e04431c387c&#34;&gt;Définit le nombre connexions simultanées à la base de données. Attention, un client peut utiliser plusieurs connexions simultanées pour accélérer le temps de réponse du serveur.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-716a16ce-530f-4eee-84c2-e699a800c26d&#34;&gt;&lt;strong&gt;Défaut&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;max_connections = 100&lt;/code&gt;&lt;br&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;max_connections = 100&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;superuser_reserved_connections&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-4e227f95-ccd0-4c3e-afd0-99e67b4ed66d&#34;&gt;Définit le nombre de connexions simultanées réservées pour le (ou les) super utilisateur(s).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-aee04b33-df32-4fef-82e6-c3eea1376216&#34;&gt;&lt;strong&gt;Défaut&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;superuser_reserved_connections = 3&lt;/code&gt;&lt;br&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;superuser_reserved_connections = 3&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;shared_buffers&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-d1e3c5aa-e2f7-4866-b58a-7674b5ab618f&#34;&gt;Définit la quantité de mémoire vive allouée à PostgreSQL. N’hésitez pas à augmenter ce paramètre. Comptez environ 75% de la mémoire vive disponible (mémoire vive disponible = mémoire vive total – mémoire vive utilisée par le système – mémoire vive utilisée par les différents logiciels).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-91c5e5da-d3c1-4958-b548-4f7f27b3b2b4&#34;&gt;&lt;strong&gt;Défaut&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;shared_buffers = 128MB&lt;/code&gt;&lt;br&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;shared_buffers = dépend de votre machine&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;work_mem&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-03933552-fa10-4ccb-b587-e55aadd52b73&#34;&gt;Définit la quantité de mémoire vive allouée aux opérations de tri internes (order by, distinct…). Vous pouvez l’augmenter légèrement pour améliorer les performances.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-7de6049f-e3e8-4746-9b4e-9ce8bf474c1f&#34;&gt;&lt;strong&gt;Défaut :&lt;/strong&gt; &lt;code&gt;work_mem = 4MB&lt;/code&gt;&lt;br&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;work_mem = 16MB&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;maintenance_work_mem&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-e70730b3-2e6e-4314-bf8e-5e128ea2210c&#34;&gt;Définit la quantité de mémoire vive allouée aux opérations de maintenance (VACUUM, CREATE INDEX…). Cette valeur peut être largement augmentée car seule une de ces opérations peut être exécutée à la fois dans une session. Attention, les autovacuum utiliseront également cet quantité d’espace et ce, autant de fois que de processus d’autovacuum peuvent être lancés en même temps (voire paramètre autovacuum_max_workers).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-888c8fda-ffe1-4a3e-98cb-aa3da91757d6&#34;&gt;&lt;strong&gt;Défaut :&lt;/strong&gt; &lt;code&gt;maintenance_work_mem = 64MB&lt;/code&gt;&lt;br&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;maintenance_work_mem = 512MB&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;autovacuum_work_mem&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-46486ff6-5721-48e1-9362-1eb4c7dec140&#34;&gt;Définit la quantité de mémoire vive allouée pour chaque processus d’autovacuum. Ceci permet d’avoir une valeur de maintenance_work_mem plus importante sans pour autant allouer trop de ressource aux autovacuum.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-d3977b33-564d-4101-b7d0-ab099c27a6fa&#34;&gt;&lt;strong&gt;Défaut :&lt;/strong&gt; &lt;code&gt;autovacuum_work_mem = -1&lt;/code&gt; (on utilise la valeur de maintenance_work_mem)&lt;br&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;autovacuum_work_mem = 128MB&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;wal_level&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-3189f51c-1a6e-4cee-8a2f-76b1ebd622a9&#34;&gt;Définit la quantité d’information écrite dans les journaux de transaction (wal). Ces journaux permettent de récupérer les données lors d’un crash du serveur PostgreSQL. Plusieurs niveaux existent&amp;nbsp;:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul id=&#34;block-76ef0618-69df-4aed-ba5c-123d3e094cc8&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;Minimal&lt;/code&gt;&amp;nbsp;: ne conserve que les informations nécessaires pour survivre à un arrêt brutal ou immédiat du serveur.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;Replica&lt;/code&gt;&amp;nbsp;: minimal + quelques enregistrements pour permettre l’archivage des journaux de transactions et l’exécution des requêtes en attente.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;Logical&lt;/code&gt;&amp;nbsp;: &lt;code&gt;replica&lt;/code&gt; + des informations pour extraire les modifications logiques.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;Archive&lt;/code&gt; = &lt;code&gt;replica&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;Hot_standby&lt;/code&gt; = &lt;code&gt;replica&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-f0729142-9e71-4fb9-b653-3232aae0c96b&#34;&gt;&lt;strong&gt;Défaut :&lt;/strong&gt; &lt;code&gt;wal_level = minimal&lt;/code&gt;&lt;br&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;wal_level = replica&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;wal_buffers&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-a06ff162-6676-4c55-9704-a28ee29b8558&#34;&gt;Définit la quantité de mémoire vive utilisée pour les données des journaux de transactions qui n’ont pas été écrites sur le disque.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-87bc1fbb-fd59-4c54-b5f0-3b87bd967b63&#34;&gt;&lt;strong&gt;Défaut :&lt;/strong&gt; &lt;code&gt;wal_buffers = -1&lt;/code&gt; (= 1/32&lt;sup&gt;ème&lt;/sup&gt; de shared_buffers)&lt;br&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;wal_buffers =&lt;/code&gt; au moins &lt;code&gt;2 MB&lt;/code&gt; (si 1/32&lt;sup&gt;ème&lt;/sup&gt; de shared_buffer &amp;lt; 2MB, sinon -1)&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_destination&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-4e6caac1-e38c-48d4-817d-03f70126d4b0&#34;&gt;Destination des fichiers log (format de sortie en quelque sorte). Vous pouvez choisir parmi&amp;nbsp;:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul id=&#34;block-b790699f-e8d1-433e-81ab-dee354890623&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;stderr&lt;/code&gt;&amp;nbsp;: sortie par défaut (créé un fichier .log)&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;csvlog&lt;/code&gt;&amp;nbsp;: sortie au format CSV.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;syslog&lt;/code&gt;&amp;nbsp;: sortie dans les journaux système.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;Eventlog&lt;/code&gt;&amp;nbsp;: (Windows uniquement) sortie dans les journaux d’évènement Windows.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;logging_collector&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-42374291-8670-406b-8f2f-4a07744c63a0&#34;&gt;Active le « collecteur de traces » qui capture toutes les traces envoyées vers &lt;code&gt;stderr&lt;/code&gt; et les envoi dans un fichier. En d&amp;rsquo;autres termes : l&amp;rsquo;activation de cette option permet d&amp;rsquo;avoir des fichiers de log.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_directory&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-09c778e6-8c4c-4df3-b7f0-03f8656813a7&#34;&gt;Répertoire d’enregistrement des logs. Vous pouvez soit utiliser un chemin relatif au répertoire PG_DATA soit un chemin absolut (C:\mon\chemin).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-05ee95cf-41b6-4504-9906-8b31e029bb50&#34;&gt;&lt;strong&gt;Défaut :&lt;/strong&gt; &lt;code&gt;log_directory = &#39;pg_log&#39;&lt;/code&gt;&lt;br&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; L&amp;#8217;emplacement qui vous plait mais la valeur par défaut permet de conserver tous les éléments au même endroit.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_filename&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-8e4e22a4-7b2f-4cf6-815f-d25079af4300&#34;&gt;Nom des fichiers de log. Vous pouvez ajouter la date et l’heure via les paramètres suivants&amp;nbsp;:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul id=&#34;block-ebdc0423-0e80-4d35-acf5-0440885312b1&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;%H&lt;/code&gt; : heure (au format 24h) &amp;#8211; Exemple : &lt;code&gt;12&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;%M&lt;/code&gt; : minute &amp;#8211; Exemple &amp;nbsp;: &lt;code&gt;24&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;%S&lt;/code&gt; : seconde &amp;#8211; Exemple &amp;nbsp;: &lt;code&gt;46&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;%R&lt;/code&gt; : heure : minute &amp;#8211; Exemple &amp;nbsp;: &lt;code&gt;12 : 24&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;%T&lt;/code&gt; : heure : minute : seconde &amp;#8211; Exemple &amp;nbsp;: &lt;code&gt;12 : 24 : 46&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;%y&lt;/code&gt; : année (4 chiffres) &amp;#8211; Exemple : &lt;code&gt;2016&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;%Y&lt;/code&gt; : année (2 chiffres) &amp;#8211; Exemple &amp;nbsp;: &lt;code&gt;16&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;%m&lt;/code&gt; : mois &amp;#8211; Exemple &amp;nbsp;: &lt;code&gt;07&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;%d&lt;/code&gt; : jour &amp;#8211; Exemple &amp;nbsp;: &lt;code&gt;14&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;%F&lt;/code&gt; : année &amp;#8211; mois &amp;#8211; jour &amp;#8211; Exemple &amp;nbsp;: &lt;code&gt;2016 - 07 - 14&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-d7b94f98-6c44-4914-93ef-ec6a94f40fa2&#34;&gt;Le nom du fichier est un motif strftime. Vous pourrez trouver d’autres échappements «&amp;nbsp;%&amp;nbsp;» dans ceux listés par la spécification de strftime par l&amp;rsquo;Open Group.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-10224242-ffa1-446d-8ecc-0d96a8eee2d2&#34;&gt;Si le format de sortie est le CSV alors le format .csv est automatiquement ajouté au nom du journal.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-b9a329ae-8432-4bcd-8ae0-d9aef0b8b1fa&#34;&gt;&lt;strong&gt;Exemple :&lt;/strong&gt; &lt;code&gt;log_filename = &#39;Postgresql - %Y-%m-%d.log&#39;&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_rotation_age&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-1180cad9-1fab-4a69-b3de-1d1c4792f195&#34;&gt;Détermine la durée de vie maximal (en minutes) d’un fichier de log. Passé ce délai, un nouveau journal (fichier) est créé.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-e55eaeaf-a2b2-45a5-b082-cab9b7c47a4b&#34;&gt;La valeur «&amp;nbsp;0&amp;nbsp;» (zéro) désactive la limite de durée de vie.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-ff81fbc9-22e9-46a1-9709-08677d0bf7da&#34;&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;log_rotation_age = 1d&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_rotation_size&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-4d4f24c9-01bd-4cc8-b1ce-29d287faf976&#34;&gt;Détermine la taille maximal d’un fichier de log. Passé cette taille, un nouveau journal (fichier) est créé.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-3e539be2-bec1-41a9-aac8-c87a4a12ca07&#34;&gt;La valeur «&amp;nbsp;0&amp;nbsp;» (zéro) désactive la limite de taille.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-846144df-239e-47f8-a0d9-3b682a0acde6&#34;&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;log_rotation_size = 3MB&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_truncate_on_rotation&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-6964801f-a399-489b-91e3-216a1faea848&#34;&gt;Active l’écrasement des fichiers de log plutôt que la création d’un nouveau fichier. L’écrasement ne se produit que pour des fichiers dont le nom existe déjà et uniquement lorsqu’il s’agit d’une limite de temps (log_rotation_age).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-f95a4e98-16d6-4152-a3f4-d919d66badf4&#34;&gt;En utilisant le paramètre &lt;code&gt;log_filename = &#39;mon_log_%H.log&#39;&lt;/code&gt; et le paramètre &lt;code&gt;log_truncate_on_rotation = on&lt;/code&gt;, il est possible de créer un fichier de log par heure écrasés toutes les 24 h.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;client_min_messages&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-57538ef8-9ed3-495d-9844-3ac072822302&#34;&gt;Définit le niveau de verbosité du serveur avec les clients (et donc les utilisateurs). De &lt;code&gt;DEBUG5&lt;/code&gt; : une vraie pipelette à &lt;code&gt;ERROR&lt;/code&gt; : extrêmement peu loquace. Ce sont les messages qui seront renvoyés aux utilisateurs dans leur client.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_min_messages&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-6090fedf-6862-48d8-89d0-506bf5a56f68&#34;&gt;Définit le niveau de verbosité du log serveur. De &lt;code&gt;DEBUG5&lt;/code&gt; : une vraie pipelette à &lt;code&gt;PANIC&lt;/code&gt; : extrêmement peu loquace.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_min_error_statement&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-7f5c803d-4767-43a0-a387-4f255b84253f&#34;&gt;Définit à partir de quel niveau le log doit contenir l’instruction SQL à l’origine de la ligne de log. Utilisez &lt;code&gt;PANIC&lt;/code&gt; pour désactiver le traçage des instructions échouées.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_min_duration_statement&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-85ec1683-f157-4bd9-b8ac-12aec052742a&#34;&gt;Définit la durée minimale en milliseconde d’une instruction SQL terminée pour qu’elle soit loguée. Ceci permet de tracer les requêtes non optimisées des applications. Utilisez la valeur &lt;code&gt;0&lt;/code&gt; (zéro) pour tracer toutes les requêtes et &lt;code&gt;-1&lt;/code&gt; pour n’en tracer aucune.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_connections&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-22355492-d0a1-431a-9722-57da857cd46a&#34;&gt;Logue chaque tentative de connexion au serveur.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_disconnections&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-831853c9-c6a5-42cf-84aa-36b09fae30a1&#34;&gt;Logue chaque déconnexion du serveur.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_duration&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-546dbf9b-ab24-4691-9eda-836b49c7c473&#34;&gt;Logue la durée de toute instruction exécutée. Le texte des requêtes ne sera pas logué (sauf si log_min_duration_statement est défini et que sa valeur est dépassée).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_line_prefix&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-ebbe548c-5b6d-4e17-a039-e0df4f885247&#34;&gt;Définit le préfixe utilisé pour chaque ligne de code.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-f8ae48d7-1895-46a0-aff2-0dba9160fda3&#34;&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;log_line_prefix =&amp;nbsp; &#39;%t - bdd=%d user=%u app=%a client=%h - &#39;&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_error_verbosity&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-efd96d03-a832-41c6-9d84-d9f72296ac0e&#34;&gt;Définit la quantité de détails écrit pour chaque ligne de log.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-60be0541-6750-4a83-a90c-54a19ea159cc&#34;&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;log_error_verbosity = verbose&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;log_statement&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-7c4dab1f-c07a-49a1-b0ef-f4e8671af012&#34;&gt;Définit les instruction SQL à tracer&amp;nbsp;:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul id=&#34;block-bef26125-89a0-4e0f-a8c6-aa6d45c9eff3&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;none&lt;/code&gt; : aucune&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;ddl&lt;/code&gt; : commande de définition&amp;nbsp;: CREATE, ALTER, DROP&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;mod&lt;/code&gt; : commande de données&amp;nbsp;: INSERT, UPDATE, DELETE, TRUNCATE, COPY FROM&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;all&lt;/code&gt; : toutes les commandes&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-2eaeccd6-4c16-499c-a84b-87656a1a1f48&#34;&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;log_statement = &#39;none&#39;&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;search_path&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-ebb389f3-386b-4a7f-a3a8-6ce5eaabd444&#34;&gt;Spécifie le schéma dans lequel les objets seront recherchés par défaut lorsque aucun préfixe n&amp;rsquo;est spécifié dans la requête. Par défaut, le serveur recherche d&amp;rsquo;abord dans le schéma dont le nom est égal au rôle de connexion utilisé puis dans le schéma « public ».&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;include_dir&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-6bf8a58c-db11-4a1a-8034-2624102e8582&#34;&gt;Permet d’inclure un répertoire de configuration supplémentaire. Tous les fichiers de ce répertoire qui finissent par « .conf » seront ainsi inclus comme s&amp;rsquo;ils faisaient parti du fichier principal.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;include&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p id=&#34;block-34918c3e-9b59-4112-b380-0576ad3a93d0&#34;&gt;Permet d’inclure un fichier de configuration supplémentaire comme s&amp;rsquo;ils faisait parti du fichier principal.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Paramètres pour PostGIS&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;PostGIS repose sur des librairies (GEOS, GDAL&amp;#8230;) indépendantes. Certains de leurs paramètres peuvent être contrôlés par l&amp;rsquo;intermédiaire de variables spécifiques.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les variables sont les suivantes :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;postgis.backend&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Permet de définir la librairie à utiliser entre GEOS et SFCGAL pour les fonctions portants les mêmes noms entre ces deux librairies. Défaut : GEOS.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;postgis.backend = geos&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;postgis.gdal_datapath&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Permet de spécifier le répertoire data de GDAL. Si non défini, la variable d&amp;rsquo;environnement GDAL_DATA peut être utilisée.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il est recommandé d&amp;rsquo;utiliser le répertoire &lt;em&gt;gdal-data&lt;/em&gt; fourni par PostGIS lors de son installation et situé dans le répertoire de PostgreSQL.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Recommandé&amp;nbsp;:&lt;/strong&gt; &lt;code&gt;postgis.gdal_datapath = &#34;chemin\vers\PostgreSQL\xx\gdal-data&#34;&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;postgis.gdal_enabled_drivers&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Permet de définir la liste des pilotes GDAL pouvant être utilisés. Si non défini, la variable d&amp;rsquo;environnement POSTGIS_GDAL_ENABLED_DRIVERS peut être utilisée.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Si vous souhaitez utiliser PostGIS raster et le stockage Out-DB, vous pouvez indiquer la liste des formats spécifiques à utiliser :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Un ou plusieurs formats (« short name », séparés par des espaces) parmi ceux listés &lt;a rel=&#34;noreferrer noopener&#34; href=&#34;https://gdal.org/drivers/raster/index.html&#34; data-type=&#34;link&#34; data-id=&#34;https://gdal.org/drivers/raster/index.html&#34; target=&#34;_blank&#34;&gt;sur cette page&lt;/a&gt;.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;DISABLE_ALL&lt;/code&gt; : pour désactiver tous les pilotes.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;&lt;code&gt;ENABLE_ALL&lt;/code&gt; : pour activer tous les pilotes.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;postgis.enable_outdb_rasters&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Permet d&amp;rsquo;activer les rasters avec stockage Out-DB. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p class=&#34;has-bleu-dodger-color has-text-color&#34;&gt;&lt;strong&gt;postgis.gdal_config_options&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Permet de spécifier les options de configuration pour GDAL lors de l&amp;rsquo;utilisation des raster avec stockage Out-DB.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34;&gt;Pour aller plus loin&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cet article fait parti du cours sur PostgreSQL, partie 8 du Vade-mecum.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-buttons is-vertical is-content-justification-center is-layout-flex wp-container-core-buttons-layout-2 wp-block-buttons-is-layout-flex&#34;&gt;&#xA;&lt;div class=&#34;wp-block-button has-custom-width wp-block-button__width-50&#34;&gt;&lt;a class=&#34;wp-block-button__link wp-element-button&#34; href=&#34;https://blog.arthurbazin.com/programmation/sql/postgresql-tout-comprendre-1&#34;&gt;Cours sur PostgreSQL&lt;/a&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-button has-custom-width wp-block-button__width-50&#34;&gt;&lt;a class=&#34;wp-block-button__link wp-element-button&#34; href=&#34;https://blog.arthurbazin.com/programmation/sql/postgresql-vade-mecum-7&#34;&gt;Vade-mecum &amp;#8211; 7 &amp;#8211; Administration serveur&lt;/a&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;</content>
    <link href="https://blog.arthurbazin.com/bdd/postgresql/configurez-postgresql" rel="alternate"></link>
    <summary type="html">PostgreSQL est conçu pour fonctionner sur un grand nombre de plateformes, y compris celles ayant les performances les plus limitées. Il est donc important de bien le configurer lors de son installation pour que l&amp;#8217;instance exploite au mieux les capacités de la machine sur laquelle elle se trouve. Pour cela, de nombreux paramètres peuvent être [&amp;#8230;]</summary>
    <author>
      <name>Bazinga</name>
    </author>
  </entry>
  <entry>
    <title>Importer des données binaires dans PostgreSQL</title>
    <updated>2022-02-06T20:54:04Z</updated>
    <id>tag:blog.arthurbazin.com,2022-02-06:/programmation/importer-des-donnees-binaires-dans-postgresql</id>
    <content type="html">&#xA;&lt;p&gt;Aujourd&amp;rsquo;hui on va s&amp;rsquo;atteler à une fonctionnalité de PostgreSQL que j&amp;rsquo;ai mis pas mal de temps à comprendre car la documentation n&amp;rsquo;est soit pas très fournit, soit peut compréhensible (pour moi-même).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Nous allons parler de l&amp;rsquo;import des données binaires. Il s&amp;rsquo;agit de fichiers de données dans divers formats comme des images, des sons, des vidéos, des programmes&amp;#8230; Car oui, PostgreSQL peut stocker tout type de fichiers !&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;stockage&#34;&gt;Stockage&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Avant de parler import, parlons stockage. Bien comprendre le stockage permettra de bien comprendre comment importer des données.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Tout fichier informatique (y compris les programme car ils sont eux-même constitués de fichiers) est composé de données dans différents langages mais dont le support de stockage est le binaire : une suite de &lt;code&gt;0&lt;/code&gt; et de &lt;code&gt;1&lt;/code&gt;. Ainsi, lorsqu&amp;rsquo;un fichier est copié ou déplacé, l&amp;rsquo;opération est effectué sur le code binaire, cette suite de &lt;code&gt;0&lt;/code&gt; et de &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;PostgreSQL, comme d&amp;rsquo;autres SGBD, permet de stocker ce type de données : les données binaires. Pour cela, deux solutions, que l&amp;rsquo;on peut apparenter au type « standard » BLOB (&lt;a href=&#34;https://fr.wikipedia.org/wiki/Binary_large_object&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Binary Large OBject&lt;/a&gt;), sont disponibles : &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Les &lt;code&gt;large objects&lt;/code&gt; (ou objets larges).&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Le type de données &lt;code&gt;bytea&lt;/code&gt; associé au système de stockage TOAST.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;large-object&#34;&gt;Large object&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le stockage &lt;code&gt;large object&lt;/code&gt; repose sur l&amp;rsquo;importation des fichiers binaires directement dans les répertoires de la base de données. Chaque fichier est découpé en morceaux (nommés les pages). Coté base, chaque fichier est donc identifié par un oid et est lié à une série de numéro de pages (l&amp;rsquo;ensemble des morceaux du fichier).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les &lt;code&gt;large objects&lt;/code&gt; sont particuliers et ne fonctionnent pas comme les autres objets de la base pour lesquels on définit un schéma, un tablespace, un nom&amp;#8230; Ils sont tous regroupés et stockés au même endroit. Deux tables systèmes sont dédiées au stockage des &lt;code&gt;large objects&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;La table &lt;code&gt;pg_largeobject_metadata&lt;/code&gt; liste chaque &lt;code&gt;large object&lt;/code&gt; ainsi que son propriétaire et les droits d&amp;rsquo;accès associés.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;La table &lt;code&gt;pg_largeobject&lt;/code&gt; contient les données découpées en pages : une page par ligne. Chaque ligne contient ainsi l&amp;rsquo;id de l&amp;rsquo;objets correspondant, le numéro de page (en démarrant de 0) et la donnée binaire (d&amp;rsquo;une taille maximale de 2048 octets par défaut).&lt;br&gt;Ceci permet d&amp;rsquo;accéder à des morceaux du fichier sans avoir à récupérer la totalité de la données (par exemple pour ne modifier qu&amp;rsquo;une partie du fichier).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Visualiser la liste des large objects stockés en base&#xA;SELECT &#xA;&#x9;oid,&#xA;&#x9;*&#xA;FROM &#xA;&#x9;pg_largeobject_metadata&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Visualiser les données des large objects stockés en base&#xA;SELECT &#xA;&#x9;*&#xA;FROM &#xA;&#x9;pg_largeobject&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Attention, le stockage de la donnée binaire est effectué dans une colonne de type &lt;code&gt;bytea&lt;/code&gt; mais il n&amp;rsquo;a rien à voir avec le stockage binaire détaillé dans le paragraphe suivant.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les &lt;code&gt;large objects&lt;/code&gt; sont si particuliers qu&amp;rsquo;ils doivent être manipulés à travers une API : des fonctions spécifiques, dédiés à la manipulation des &lt;code&gt;large objects&lt;/code&gt;. Ces fonctions sont appelées via des requêtes SQL mais travaillent sur les &lt;code&gt;large objects&lt;/code&gt; directement, sans SQL. Elles permettent de créer, d&amp;rsquo;écrire, de lire, d&amp;rsquo;importer, d&amp;rsquo;exporter&amp;#8230;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ainsi, l&amp;rsquo;import d&amp;rsquo;un &lt;code&gt;large object&lt;/code&gt; ne se fera pas via un simple &lt;code&gt;INSERT&lt;/code&gt;. Ce qui est intéressant de noter, c&amp;rsquo;est que l&amp;rsquo;import se fait directement via transfert des données binaires brutes. Ce qui permet d&amp;rsquo;être rapide sans trop charger l&amp;rsquo;utilisation du processeur.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;bytea-et-toast&#34;&gt;Bytea et TOAST&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le type de données &lt;code&gt;bytea&lt;/code&gt; est directement accessible en SQL sous PostgreSQL. Il permet de définir une colonne qui contiendra de la donnée au format binaire brute.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;intérêt est la facilité d&amp;rsquo;utilisation, ce type est associé à une colonne standard PostgreSQL : le nom est libre, elle peut faire partie de n&amp;rsquo;importe quelle table (et même plusieurs par table), le tablespace peut être défini&amp;#8230;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;import et l&amp;rsquo;export de données dans ces colonnes se fait au moyen de requêtes SQL standard ce qui impose la conversion de la donnée dans un format textuel pour pouvoir l&amp;rsquo;écrire dans la requête. Plusieurs formats sont disponibles :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Hex : encodage des données binaires sur 2 valeurs hexadécimales par bit (plus d&amp;rsquo;info &lt;a href=&#34;https://www.postgresql.org/docs/current/datatype-binary.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;ici&lt;/a&gt;). Le poids de la données se trouve alourdie d&amp;rsquo;un facteur 2.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Escape : encodage des données binaires sur des caractères ASCII (plus d&amp;rsquo;info &lt;a href=&#34;https://www.postgresql.org/docs/current/datatype-binary.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;ici&lt;/a&gt;). Le poids de la données se trouve alourdie d&amp;rsquo;un facteur 1 à 4.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Base64 : encodage des données binaires sur 64 caractères (plus d&amp;rsquo;info &lt;a href=&#34;https://fr.wikipedia.org/wiki/Base64&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;ici&lt;/a&gt;). Le poids de la données se trouve alourdie d&amp;rsquo;un facteur 4/3 (1/3 de plus) au moins.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La conversion des données d&amp;rsquo;un format textuel comme ceux cités précédemment au format binaire brut implique une consommation de ressource CPU ainsi qu&amp;rsquo;un temps de traitement.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Un exemple :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-block-table&#34;&gt;&lt;table class=&#34;has-fixed-layout&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Valeur textuelle&lt;/th&gt;&lt;th&gt;Encodage &amp;lsquo;Hex&amp;rsquo;&lt;/th&gt;&lt;th&gt;Encodage &amp;lsquo;Escape&amp;rsquo;&lt;/th&gt;&lt;th&gt;Encodage &amp;lsquo;base64&amp;rsquo;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;arthurbazin&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;61727468757262617a696e&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;arthurbazin&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;YXJ0aHVyYmF6aW4=&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Et les &lt;s&gt;biscottes&lt;/s&gt; TOAST dans tout ça ? Il s&amp;rsquo;agit en fait d&amp;rsquo;un fonctionnement interne de PostgreSQL qui permet de stocker de grosses valeurs dans les attributs d&amp;rsquo;une table. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;TOAST = The Oversized-Attribute Storage Technique&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ce type de stockage s&amp;rsquo;applique à certains types de données (numérique, textuel, géométrique et dans notre cas binaire) dont la longueur est variable (un exemple de type à longueur variable : &lt;code&gt;varchar(20)&lt;/code&gt;).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour chaque tuple (= ligne d&amp;rsquo;une table), PostgreSQL stocke la donnée dans ce que l&amp;rsquo;on appelle une « page ». Un tuple ne peut être stocké que dans une seul page maximum mais une page peut contenir plusieurs tuples. Ces pages ne peuvent excéder 8 ko et donc un tuple non plus. Ainsi, lorsqu&amp;rsquo;une donnée excède cette taille, le système TOAST s&amp;rsquo;enclenche pour outrepasser cette limite.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le système TOAST compresse puis divise les données dans plusieurs « sous-tuples » (de nouvelles lignes) ce qui permet de répartir le poids des données et de les stocker de façon classique, sans dépasser la taille limitée d&amp;rsquo;une page. Ces lignes supplémentaires sont créées dans des tables spécifiques nommées &lt;code&gt;pg_toast_xxx&lt;/code&gt; (le &lt;code&gt;xxx&lt;/code&gt; étant remplacé par l&amp;rsquo;oid de la table d&amp;rsquo;origine) et stockées dans le schéma système &lt;code&gt;pg_toast&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Ce fonctionnement est entièrement automatisé et totalement transparent pour l&amp;rsquo;utilisateur qui n&amp;rsquo;a rien à gérer. L&amp;rsquo;activation du système est paramétré par la variable de configuration &lt;code&gt;TOAST_TUPLE_THRESHOLD&lt;/code&gt; qui fixe par défaut à 2 ko la limite à partir de laquelle la données est TOASTée.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Notez que la structure des tables &lt;code&gt;pg_toast_xxx&lt;/code&gt; est identique à la structure de la table &lt;code&gt;pg_largeobject&lt;/code&gt; bien que le système de stockage soit différent.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour identifier la table &lt;code&gt;pg_toast_xxx&lt;/code&gt; liée à une table, vous pouvez utiliser la requête suivante :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;SELECT&#xA;&#x9;reltoastrelid::regclass as nom_table,&#xA;&#x9;pg_relation_filepath(reltoastrelid) as emplacement_stockage,&#xA;&#x9;pg_size_pretty(pg_relation_size(reltoastrelid)) as taille&#xA;FROM&#xA;&#x9;pg_class&#xA;WHERE&#xA;&#x9;relnamespace = &#39;mon_schema&#39;::regnamespace&#xA;AND &#xA;&#x9;relname = &#39;ma_table&#39;&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;import&#34;&gt;Import&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;import de données binaires se résume donc à un déplacement de données du lieu d&amp;rsquo;origine vers l&amp;rsquo;instance PostgreSQL. Selon le type de stockage utilisé, le traitement sera donc différent :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Format &lt;code&gt;large object&lt;/code&gt; : il faut obligatoirement utiliser l&amp;rsquo;API PostgreSQL dédiée.&lt;/li&gt;&#xA;&#xA;&#xA;&#xA;&lt;li&gt;Type de donnée &lt;code&gt;bytea&lt;/code&gt; : la donnée doit être encodée dans un format binaire textuel puis envoyé au moyen d&amp;rsquo;une requête.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici un exemple, Je souhaite importer une image dans une colonne au format bytea : je dois d&amp;rsquo;abord convertir mon image dans un format binaire textuel comme par exemple le base64 via un outil (par exemple &lt;a href=&#34;https://www.base64encode.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;celui-ci&lt;/a&gt;) puis l&amp;rsquo;importer via la fonction &lt;code&gt;decode()&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Import dans un champ bytea d&#39;une image encodée en base64&#xA;INSERT INTO ma_table (&#xA;&#x9;mon_champ_bytea)&#xA;SELECT&#xA;&#x9;decode(&#39;iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAY[...]3+/wA93TsnnJMLsQAAAABJRU5ErkJggg==&#39;, &#39;base64&#39;)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour utiliser une image stockée au format binaire, il est possible de l&amp;rsquo;encoder au format base64 pour l&amp;rsquo;utiliser dans du HTML par exemple.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Création d&#39;une chaine HTML pour afficher une image stockée au format binaire&#xA;SELECT&#xA;&#x9;&#39;&amp;lt;img src=&#34;data:image/png;base64, &#39; || encode(champ_bytea, &#39;base64&#39;) || &#39;&#34; alt=&#34;mon_image&#34; width=&#34;150&#34; height=&#34;150&#34;&gt;&#39;&#xA;FROM&#xA;&#x9;ma_table&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;On le voit donc tout de suite : pour du stockage dans une colonne en &lt;code&gt;bytea&lt;/code&gt;, il faut d&amp;rsquo;abord convertir la donnée d&amp;rsquo;origine avant de pouvoir l&amp;rsquo;inclure dans une requête. Ceci implique donc l&amp;rsquo;utilisation d&amp;rsquo;un logiciel tiers permettant cet encodage&amp;#8230; Pas très simple.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La suite de cet article va donc s&amp;rsquo;intéresser à une méthode d&amp;rsquo;import de données en tant que &lt;code&gt;large object&lt;/code&gt; qui permet ensuite de récupérer ce &lt;code&gt;large object&lt;/code&gt; dans une colonne de type &lt;code&gt;bytea&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le logiciel client utilisé est tout simplement PSQL.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Attention, le programme qui s&amp;rsquo;occupe de l&amp;rsquo;import du fichier (l&amp;rsquo;instance de PostgreSQL ou le logiciel client) doit avoir les autorisations d&amp;rsquo;accès en lecture sur ce fichier.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Pour rappel, toute requête SQL est envoyée par le logiciel client vers le serveur PostgreSQL qui va exécuter cette requête. Cela veut dire que le serveur ne peut atteindre des fichiers situés sur la machine cliente. C&amp;rsquo;est donc au logiciel client d&amp;rsquo;envoyer ces fichiers binaires au serveur.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A l&amp;rsquo;inverse, le serveur PostgreSQL est capable d&amp;rsquo;atteindre tout fichier présent sur la machine sur laquelle l&amp;rsquo;instance est installée.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;donnees-cote-serveur-server-side&#34;&gt;Données coté serveur : server-side&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Lorsque les données à importées sont stockées dans un répertoire accessible par l&amp;rsquo;instance de PostgreSQL (sur la même machine ou dans un répertoire réseau monté sur la machine), il suffit de faire appel aux fonctions fournies par l&amp;rsquo;API &lt;code&gt;large object&lt;/code&gt; au travers de requêtes SQL.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;importation du fichier utilise la fonction &lt;code&gt;lo_import()&lt;/code&gt; qui renvoie l&amp;rsquo;oid du &lt;code&gt;large object&lt;/code&gt; créé.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Importation d&#39;un fichier situé sur le serveur&#xA;SELECT lo_import(/emplacement/de/mon/fichier.ext);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Un &lt;code&gt;large object&lt;/code&gt; peut être récupéré au format &lt;code&gt;bytea&lt;/code&gt; grâce à la fonction &lt;code&gt;lo_get()&lt;/code&gt; à laquelle on passe l&amp;rsquo;oid du &lt;code&gt;large object&lt;/code&gt; à récupérer.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Récupération d&#39;un large object au format bytea&#xA;SELECT lo_get(123456);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cette fonction peut donc être utilisée dans une requête d&amp;rsquo;&lt;code&gt;UPDATE&lt;/code&gt; pour importer le &lt;code&gt;large object&lt;/code&gt; dans une colonne de type &lt;code&gt;bytea&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Importation d&#39;un large object dans une colonne de type bytea&#xA;UPDATE mon_schema.ma_table&#xA;SET ma_colonne_bytea = lo_get(123456)&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;La fonction &lt;code&gt;lo_unlink()&lt;/code&gt; permet de supprimer un &lt;code&gt;large object&lt;/code&gt; en indiquant l&amp;rsquo;oid de celui-ci.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Récupération d&#39;un large object au format bytea&#xA;SELECT lo_unlink(123456);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Il est possible de grouper les différentes étapes dans une fonction d&amp;rsquo;import de données dans le type &lt;code&gt;bytea&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;CREATE OR REPLACE FUNCTION bytea_import(emplacement_fichier text) &#xA;RETURNS bytea AS&#xA;$corps$&#xA;&#x9;DECLARE&#xA;&#x9;&#x9;-- oid du large object importé&#xA;&#x9;&#x9;v_oid_objet oid;&#xA;&#x9;&#x9;-- Données du fichier au format binaire&#xA;&#x9;&#x9;v_donnees;&#xA;&#x9;BEGIN&#xA;&#x9;&#x9;-- Import du fichier sous forme de large objet&#xA;&#x9;&#x9;SELECT lo_import(emplacement_fichier) INTO v_oid_objet;&#xA;&#x9;&#x9;-- Récupération des données du large objet&#xA;&#x9;&#x9;SELECT lo_get(v_oid_objet) INTO v_donnees;&#xA;&#x9;&#x9;-- Suppression du large objet&#xA;&#x9;&#x9;PERFORM lo_unlink(v_oid_objet);&#xA;&#xA;&#x9;&#x9;-- Renvoi des données&#xA;&#x9;&#x9;RETURN v_donnees;&#xA;&#x9;END;&#xA;$corps$&#xA;LANGUAGE PLPGSQL&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;donnees-cote-client-client-side&#34;&gt;Données coté client : client-side&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Lorsque les données à importées sont stockées dans un répertoire situé sur la machine cliente et donc non accessibles par l&amp;rsquo;instance de PostgreSQL, il faut passer par un logiciel client capable d&amp;rsquo;importer les fichiers. Nous allons ici faire appel à PSQL qui possède la même fonction que l&amp;rsquo;API de PostgreSQL : la méta commande &lt;code&gt;\lo_import&lt;/code&gt;. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;importation du fichier utilise la méta commande &lt;code&gt;\lo_import()&lt;/code&gt; qui renvoie l&amp;rsquo;oid du &lt;code&gt;large object&lt;/code&gt; créé.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Importation d&#39;un fichier situé sur la machine cliente&#xA;\lo_import(/emplacement/de/mon/fichier.ext);&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Les autres fonctions sont identiques à la version serveur car une fois le fichier importé, il se trouve coté serveur. C&amp;rsquo;est donc via des requêtes SQL que le &lt;code&gt;large object&lt;/code&gt; sera ensuite traité. &lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Dans ce cas là, il n&amp;rsquo;est pas possible d&amp;rsquo;avoir une fonction qui regroupe les différentes étapes comme dans la partie précédente car la méta commande &lt;code&gt;\lo_import&lt;/code&gt; n&amp;rsquo;est disponible que coté client alors que la fonction sera exécutée cotée serveur.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;import-en-masse&#34;&gt;Import en masse&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;L&amp;rsquo;import d&amp;rsquo;objet en masse est un peu différent car il nécessite de faire appel aux fonctions vues précédemment et de les combiner avec d&amp;rsquo;autres mécanismes pour correctement récupérer les données et leurs informations.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;server-side&#34;&gt;Server-side&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Bien que ça ne soit pas obligatoire, nous allons passer par une procédure pour exécuter toutes les requêtes ce qui permettra l&amp;rsquo;utilisation de variables et pour réutiliser le code plus facilement.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;DO&#xA;$fonction$&#xA;DECLARE&#xA;&#xA;&#x9;-- Table d&#39;import&#xA;&#x9;schema_import TEXT := &#39;public&#39;;&#xA;&#x9;table_import TEXT := &#39;import_fichier&#39;;&#xA;&#xA;&#x9;-- Programme à utiliser pour localiser les fichiers à importer (sous Windows)&#xA;&#x9;&#x9;-- Lister tous les fichiers du répertoire tmp&#xA;&#x9;&#x9;-- WHERE &#34;C:\tmp:*&#34;&#xA;&#x9;&#xA;&#x9;&#x9;-- Lister tous les fichiers jpeg et png du répertoire tmp&#xA;&#x9;&#x9;-- WHERE &#34;C:\tmp:*.jpg&#34; &#34;C:\tmp:*.png&#34;&#xA;&#x9;&#xA;&#x9;&#x9;-- Lister tous les fichiers du répertoire tmp et de ses sous-répertoires&#xA;&#x9;&#x9;-- DIR &#34;C:\tmp&#34; /b /S /a-d&#xA;&#x9;liste_fichier TEXT := &#39;WHERE &#34;C:\tmp:*.jpg&#34;&#39;;&#xA;&#xA;&#xA;&#x9;-- Autres variables&#xA;&#x9;-- Date et heure de démarrage&#xA;&#x9;var_timestamp timestamp := now();&#xA;&#xA;&#xA;BEGIN&#xA;&#x9;&#xA;&#x9;-- Création de la table d&#39;import&#xA;&#x9;EXECUTE &#xA;&#x9;&#x9;$a$CREATE TABLE IF NOT EXISTS $a$ || quote_ident(schema_import) || $a$.$a$ || quote_ident(table_import) || $a$ (&#xA;&#x9;&#x9;-- Un identifiant&#xA;&#x9;&#x9;id serial PRIMARY KEY,&#xA;&#x9;&#x9;-- L&#39;emplacement d&#39;origine du fichier&#xA;&#x9;&#x9;emplacement_fichier TEXT,&#xA;&#x9;&#x9;-- Le nom d&#39;origine du fichier&#xA;&#x9;&#x9;nom_fichier TEXT,&#xA;&#x9;&#x9;-- L&#39;extension d&#39;origine du fichier&#xA;&#x9;&#x9;extension_fichier TEXT,&#xA;&#x9;&#x9;-- L&#39;oid du large object créé&#xA;&#x9;&#x9;lo_oid oid,&#xA;&#x9;&#x9;-- Le fichier stocké au format binaire&#xA;&#x9;&#x9;data bytea,&#xA;&#x9;&#x9;-- Le timestamp d&#39;import&#xA;&#x9;&#x9;date_import timestamp&#xA;&#x9;) $a$&#xA;&#x9;;&#xA;&#xA;&#xA;&#xA;&#x9;-- Récupérer la liste des fichiers situés dans un dossier&#xA;&#x9;EXECUTE &#xA;&#x9;&#x9;$a$COPY $a$ || quote_ident(schema_import) || $a$.$a$ || quote_ident(table_import) || $a$ (emplacement_fichier) &#xA;&#x9;&#x9;&#x9;FROM PROGRAM &#39;$a$ || liste_fichier || $a$&#39; &#xA;&#x9;&#x9;&#x9;WITH (format &#39;csv&#39;)$a$ &#xA;&#x9;;&#xA;&#xA;&#xA;&#xA;&#x9;-- Calcul des métadonnées des fichiers&#xA;&#x9;EXECUTE&#xA;&#x9;&#x9;$a$UPDATE $a$ || quote_ident(schema_import) || $a$.$a$ || quote_ident(table_import) || $a$&#xA;&#x9;&#x9;&#x9;SET &#xA;&#x9;&#x9;&#x9;&#x9;-- Récupération du nom du fichier&#xA;&#x9;&#x9;&#x9;&#x9;nom_fichier = (SELECT regexp_matches(emplacement_fichier,&#39;\\([^\\]*)\.(\w+)$&#39;))[1],&#xA;&#x9;&#x9;&#x9;&#x9;-- Récupération de l&#39;extension du fichier&#xA;&#x9;&#x9;&#x9;&#x9;extension_fichier = (SELECT regexp_matches(emplacement_fichier,&#39;\.(\w+)$&#39;))[1],&#xA;&#x9;&#x9;&#x9;&#x9;-- Création d&#39;un timestamp&#xA;&#x9;&#x9;&#x9;&#x9;date_import = $a$ || quote_literal(var_timestamp)&#xA;&#x9;;&#xA;&#xA;&#xA;&#xA;&#x9;-- Import du document et récupération de l&#39;oid&#xA;&#x9;EXECUTE&#xA;&#x9;&#x9;$a$UPDATE $a$ || quote_ident(schema_import) || $a$.$a$ || quote_ident(table_import) || $a$&#xA;&#x9;&#x9;&#x9;SET &#xA;&#x9;&#x9;&#x9;&#x9;lo_oid = lo_import(emplacement_fichier) $a$&#xA;&#x9;;&#xA;&#xA;&#xA;&#xA;&#x9;-- Récupération des large objects dans la colonne de type bytea&#xA;&#x9;EXECUTE&#xA;&#x9;&#x9;$a$UPDATE $a$ || quote_ident(schema_import) || $a$.$a$ || quote_ident(table_import) || $a$&#xA;&#x9;&#x9;&#x9;SET &#xA;&#x9;&#x9;&#x9;&#x9;data = lo_get(lo_oid) $a$&#xA;&#x9;;&#xA;&#xA;&#xA;&#xA;&#x9;-- Suppression des large objects&#xA;&#x9;EXECUTE&#xA;&#x9;&#x9;$a$SELECT &#xA;&#x9;&#x9;&#x9;lo_unlink(lo_oid)&#xA;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;$a$ || quote_ident(schema_import) || $a$.$a$ || quote_ident(table_import) &#xA;&#x9;;&#xA;&#xA;&#xA;END&#xA;$fonction$&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 class=&#34;wp-block-heading&#34; id=&#34;client-side&#34;&gt;Client-side&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Le principe est similaire à la version server-side mais avec quelques subtilités.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Comme nous allons avoir plusieurs fichiers à traiter, l&amp;rsquo;idéal est de passer par un script batch qui va générer un fichier SQL qui sera ensuite exécuté par PSQL.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;shell&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;Script BATCH&#34; data-enlighter-group=&#34;import_masse_client-bat&#34;&gt;@echo off&#xA;setlocal enabledelayedexpansion&#xA;&#xA;:: ======================================&#xA;:: Définition des variables parametrables&#xA;:: ======================================&#xA;&#xA;:: Connexion BDD&#xA;&#x9;SET param.host=127.0.0.1&#xA;&#x9;SET param.port=5432&#xA;&#x9;SET param.bdd=ma_bdd&#xA;&#x9;SET param.user=postgres&#xA;&#x9;SET param.pwd=postgres&#xA;&#xA;:: Table d&#39;import&#xA;&#x9;SET param.schema_import=public&#xA;&#x9;SET param.table_import=import_fichier&#xA;&#xA;:: Programme à utiliser pour localiser les fichiers à importer&#xA;&#x9;:: Lister tous les fichiers du répertoire tmp&#xA;&#x9;:: WHERE &#34;C:\tmp:*&#34;&#xA;&#xA;&#x9;:: Lister tous les fichiers jpeg et png du répertoire tmp&#xA;&#x9;:: WHERE &#34;C:\tmp:*.jpg&#34; &#34;C:\tmp:*.png&#34;&#xA;&#xA;&#x9;:: Lister tous les fichiers du répertoire tmp et de ses sous-répertoires&#xA;&#x9;:: DIR &#34;C:\tmp&#34; /b /S /a-d&#xA;&#xA;&#x9;SET param.liste_fichier=WHERE &#34;C:\tmp:*.jpg&#34;&#xA;&#xA;&#xA;&#xA;:: Autres variables&#xA;&#x9;SET var_dir_install=%~dp0&#xA;&#x9;SET scriptfile=&#34;%var_dir_install%script_import_bytea.sql&#34;&#xA;&#x9;:: Date et heure de démarrage&#xA;&#x9;:: Le timestamp permettra de gérer plusieurs imports en parallèle si besoin&#xA;&#x9;SET var_timestamp=%date:~6,4%-%date:~3,2%-%date:~0,2% %time:~0,2%:%time:~3,2%:%time:~6,5%&#xA;&#x9;SET &#34;var_timestamp=%var_timestamp:,=.%&#34;&#xA;&#xA;&#xA;:: Initialisation du script SQL&#xA;(&#xA;&#x9;echo -- Script d&#39;import SQL&#xA;) &gt; &#34;%scriptfile%&#34;&#xA;&#xA;&#xA;&#xA;:: Création de la table d&#39;import&#xA;(&#xA;&#x9;echo -- Table d&#39;import&#xA;&#x9;echo CREATE TABLE IF NOT EXISTS &#34;%param.schema_import%&#34;.&#34;%param.table_import%&#34; ^(&#xA;&#x9;echo &#x9;-- Un identifiant&#xA;&#x9;echo &#x9;id serial PRIMARY KEY,&#xA;&#x9;echo &#x9;-- L&#39;emplacement d&#39;origine du fichier&#xA;&#x9;echo &#x9;emplacement_fichier TEXT,&#xA;&#x9;echo &#x9;-- Le nom d&#39;origine du fichier&#xA;&#x9;echo &#x9;nom_fichier TEXT,&#xA;&#x9;echo &#x9;-- L&#39;extension d&#39;origine du fichier&#xA;&#x9;echo &#x9;extension_fichier TEXT,&#xA;&#x9;echo &#x9;-- L&#39;oid du large object créé&#xA;&#x9;echo &#x9;lo_oid oid,&#xA;&#x9;echo &#x9;-- Le fichier stocké au format binaire&#xA;&#x9;echo &#x9;data bytea,&#xA;&#x9;echo &#x9;-- Le timestamp d&#39;import&#xA;&#x9;echo &#x9;date_import timestamp&#xA;&#x9;echo ^)&#xA;&#x9;echo ;&#xA;&#x9;echo.&#xA;&#x9;echo.&#xA;&#x9;echo.&#xA;) &gt;&gt; &#34;%scriptfile%&#34;&#xA;&#xA;&#xA;&#xA;:: Boucle pour chaque fichier à importer &#xA;FOR /f &#34;usebackq delims=|&#34; %%a in (`%param.liste_fichier%`) do (&#xA;&#xA;&#x9;SET import_file=%%a&#xA;&#x9;SET &#34;import_file=%import_file:\=/%&#34;&#xA;&#xA;&#xA;&#x9;(&#xA;&#x9;&#x9;echo -- Fichier : %import_file%&#xA;&#x9;&#x9;echo.&#xA;&#x9;) &gt;&gt; &#34;%scriptfile%&#34;&#xA;&#xA;&#x9;:: Insertion de l&#39;emplacement du fichier dans la table d&#39;import&#xA;&#x9;(&#xA;&#x9;&#x9;echo -- Insertion emplacement du fichier&#xA;&#x9;&#x9;echo INSERT INTO &#34;%param.schema_import%&#34;.&#34;%param.table_import%&#34; ^(&#xA;&#x9;&#x9;echo &#x9;emplacement_fichier,&#xA;&#x9;&#x9;echo &#x9;date_import&#xA;&#x9;&#x9;echo ^)&#xA;&#x9;&#x9;echo VALUES &#xA;&#x9;&#x9;echo &#x9;^(&#39;%import_file%&#39;, &#39;%var_timestamp%&#39;^)&#xA;&#x9;&#x9;echo ;&#xA;&#x9;&#x9;echo.&#xA;&#x9;) &gt;&gt; &#34;%scriptfile%&#34;&#xA;&#xA;&#x9;:: Importation du fichier avec la méta commande \lo_import&#xA;&#x9;(&#xA;&#x9;&#x9;echo -- Importation du fichier avec la méta commande \lo_import&#xA;&#x9;&#x9;echo \lo_import &#39;%import_file%&#39;&#xA;&#x9;&#x9;echo.&#xA;&#x9;) &gt;&gt; &#34;%scriptfile%&#34;&#xA;&#xA;&#x9;:: Récupération de l&#39;OID du large object créé&#xA;&#x9;(&#xA;&#x9;&#x9;echo -- Récupération de l&#39;OID du large object créé&#xA;&#x9;&#x9;echo UPDATE &#34;%param.schema_import%&#34;.&#34;%param.table_import%&#34;&#xA;&#x9;&#x9;echo &#x9;SET lo_oid = :LASTOID&#xA;&#x9;&#x9;echo WHERE emplacement_fichier = &#39;%import_file%&#39;&#xA;&#x9;&#x9;echo AND date_import = &#39;%var_timestamp%&#39;&#xA;&#x9;&#x9;echo ;&#xA;&#x9;&#x9;echo.&#xA;&#x9;&#x9;echo.&#xA;&#x9;) &gt;&gt; &#34;%scriptfile%&#34;&#xA;&#xA;)&#xA;&#xA;&#xA;&#xA;:: Calcul des métadonnées des fichiers&#xA;(&#xA;&#x9;echo.&#xA;&#x9;echo.&#xA;&#x9;echo -- Calcul des métadonnées des fichiers&#xA;&#x9;echo UPDATE &#34;%param.schema_import%&#34;.&#34;%param.table_import%&#34;&#xA;&#x9;echo &#x9;SET&#xA;&#x9;echo &#x9;&#x9;-- Récupération du nom du fichier&#xA;&#x9;echo &#x9;&#x9;nom_fichier = ^(SELECT regexp_matches^(emplacement_fichier,&#39;/^([^^/]*^)\.\w+$&#39;^)^)[1],&#xA;&#x9;echo &#x9;&#x9;-- Récupération de l&#39;extension du fichier&#xA;&#x9;echo &#x9;&#x9;extension_fichier = ^(SELECT regexp_matches^(emplacement_fichier,&#39;\.^(\w+^)$&#39;^)^)[1]&#xA;&#x9;echo WHERE&#xA;&#x9;echo &#x9;date_import = &#39;%var_timestamp%&#39;&#xA;&#x9;echo ;&#xA;&#x9;echo.&#xA;) &gt;&gt; &#34;%scriptfile%&#34;&#xA;&#xA;&#xA;&#xA;:: Récupération des large objects dans la colonne de données binaire&#xA;(&#xA;&#x9;echo.&#xA;&#x9;echo.&#xA;&#x9;echo -- Récupération des large objects dans la colonne de données binaire&#xA;&#x9;echo UPDATE &#34;%param.schema_import%&#34;.&#34;%param.table_import%&#34;&#xA;&#x9;echo &#x9;SET&#xA;&#x9;echo &#x9;&#x9;data = lo_get^(lo_oid^)&#xA;&#x9;echo WHERE&#xA;&#x9;echo &#x9;date_import = &#39;%var_timestamp%&#39;&#xA;&#x9;echo ;&#xA;&#x9;echo.&#xA;) &gt;&gt; &#34;%scriptfile%&#34;&#xA;&#xA;&#xA;&#xA;:: Suppression des large objects&#xA;(&#xA;&#x9;echo.&#xA;&#x9;echo.&#xA;&#x9;echo -- Suppression des large objects&#xA;&#x9;echo SELECT &#xA;&#x9;echo &#x9;lo_unlink^(lo_oid^)&#xA;&#x9;echo FROM&#xA;&#x9;echo &#x9;&#34;%param.schema_import%&#34;.&#34;%param.table_import%&#34;&#xA;&#x9;echo WHERE&#xA;&#x9;echo &#x9;date_import = &#39;%var_timestamp%&#39;&#xA;&#x9;echo ;&#xA;&#x9;echo.&#xA;) &gt;&gt; &#34;%scriptfile%&#34;&#xA;&#xA;&#xA;&#xA;:: Execution du script SQL&#xA;psql -d &#34;postgresql://%param.user%:%param.pwd%@%param.host%:%param.port%/%param.bdd%&#34; -f &#34;%scriptfile%&#34;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;Exemple de SQL généré&#34; data-enlighter-group=&#34;import_masse_client-bat&#34;&gt;-- Script d&#39;import SQL&#xA;-- Table d&#39;import&#xA;CREATE TABLE IF NOT EXISTS &#34;public&#34;.&#34;import_fichier&#34; (&#xA;&#x9;-- Un identifiant&#xA;&#x9;id serial PRIMARY KEY,&#xA;&#x9;-- L&#39;emplacement d&#39;origine du fichier&#xA;&#x9;emplacement_fichier TEXT,&#xA;&#x9;-- Le nom d&#39;origine du fichier&#xA;&#x9;nom_fichier TEXT,&#xA;&#x9;-- L&#39;extension d&#39;origine du fichier&#xA;&#x9;extension_fichier TEXT,&#xA;&#x9;-- L&#39;oid du large object créé&#xA;&#x9;lo_oid oid,&#xA;&#x9;-- Le fichier stocké au format binaire&#xA;&#x9;data bytea,&#xA;&#x9;-- Le timestamp d&#39;import&#xA;&#x9;date_import timestamp&#xA;)&#xA;;&#xA;&#xA;&#xA;&#xA;-- Fichier : C:/tmp/mon_image_1.jpg&#xA;&#xA;-- Insertion emplacement du fichier&#xA;INSERT INTO &#34;public&#34;.&#34;import_fichier&#34; (&#xA;&#x9;emplacement_fichier,&#xA;&#x9;date_import&#xA;)&#xA;VALUES &#xA;&#x9;(&#39;C:/tmp/mon_image_1.jpg&#39;, &#39;2022-02-06 21:00:00.00&#39;)&#xA;;&#xA;&#xA;-- Importation du fichier avec la méta commande \lo_import&#xA;\lo_import &#39;C:/tmp/mon_image_1.jpg&#39;&#xA;&#xA;-- Récupération de l&#39;OID du large object créé&#xA;UPDATE &#34;public&#34;.&#34;import_fichier&#34;&#xA;&#x9;SET lo_oid = :LASTOID&#xA;WHERE emplacement_fichier = &#39;C:/tmp/mon_image_1.jpg&#39;&#xA;AND date_import = &#39;2022-02-06 21:00:00.00&#39;&#xA;;&#xA;&#xA;&#xA;-- Fichier : C:/tmp/mon_image_2.jpg&#xA;&#xA;-- Insertion emplacement du fichier&#xA;INSERT INTO &#34;public&#34;.&#34;import_fichier&#34; (&#xA;&#x9;emplacement_fichier,&#xA;&#x9;date_import&#xA;)&#xA;VALUES &#xA;&#x9;(&#39;C:/tmp/mon_image_2.jpg&#39;, &#39;2022-02-06 21:00:00.00&#39;)&#xA;;&#xA;&#xA;-- Importation du fichier avec la méta commande \lo_import&#xA;\lo_import &#39;C:/tmp/mon_image_2.jpg&#39;&#xA;&#xA;-- Récupération de l&#39;OID du large object créé&#xA;UPDATE &#34;public&#34;.&#34;import_fichier&#34;&#xA;&#x9;SET lo_oid = :LASTOID&#xA;WHERE emplacement_fichier = &#39;C:/tmp/mon_image_2.jpg&#39;&#xA;AND date_import = &#39;2022-02-06 21:00:00.00&#39;&#xA;;&#xA;&#xA;&#xA;&#xA;-- Calcul des métadonnées des fichiers&#xA;UPDATE &#34;public&#34;.&#34;import_fichier&#34;&#xA;&#x9;SET&#xA;&#x9;&#x9;-- Récupération du nom du fichier&#xA;&#x9;&#x9;nom_fichier = (SELECT regexp_matches(emplacement_fichier,&#39;/([^/]*)\.\w+$&#39;))[1],&#xA;&#x9;&#x9;-- Récupération de l&#39;extension du fichier&#xA;&#x9;&#x9;extension_fichier = (SELECT regexp_matches(emplacement_fichier,&#39;\.(\w+)$&#39;))[1]&#xA;WHERE&#xA;&#x9;date_import = &#39;2022-02-06 21:00:00.00&#39;&#xA;;&#xA;&#xA;&#xA;&#xA;-- Récupération des large objects dans la colonne de données binaire&#xA;UPDATE &#34;public&#34;.&#34;import_fichier&#34;&#xA;&#x9;SET&#xA;&#x9;&#x9;data = lo_get(lo_oid)&#xA;WHERE&#xA;&#x9;date_import = &#39;2022-02-06 21:00:00.00&#39;&#xA;;&#xA;&#xA;&#xA;&#xA;-- Suppression des large objects&#xA;SELECT &#xA;&#x9;lo_unlink(lo_oid)&#xA;FROM&#xA;&#x9;&#34;public&#34;.&#34;import_fichier&#34;&#xA;WHERE&#xA;&#x9;date_import = &#39;2022-02-06 21:00:00.00&#39;&#xA;;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;pour-en-savoir-plus&#34;&gt;Pour en savoir plus&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Un comparatif entre les stockages &lt;code&gt;large object&lt;/code&gt; et &lt;code&gt;binary&lt;/code&gt; : &lt;a href=&#34;https://blog-postgresql.verite.pro/2017/11/15/large-objects-bytea.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://blog-postgresql.verite.pro/2017/11/15/large-objects-bytea.html&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Un bel article sur les TOAST : &lt;a href=&#34;https://medium.com/gojekengineering/a-toast-from-postgresql-83b83d0d0683&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://medium.com/gojekengineering/a-toast-from-postgresql-83b83d0d0683&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Un autre article sur les TOAST : &lt;a href=&#34;https://fljd.in/2020/10/12/toast-la-meilleure-chose-depuis-le-pain-en-tranches/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;https://fljd.in/2020/10/12/toast-la-meilleure-chose-depuis-le-pain-en-tranches/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Cet article fait parti du cours sur PostgreSQL, partie 8 du Vade-mecum.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-buttons is-vertical is-content-justification-center is-layout-flex wp-container-core-buttons-layout-3 wp-block-buttons-is-layout-flex&#34;&gt;&#xA;&lt;div class=&#34;wp-block-button has-custom-width wp-block-button__width-50&#34;&gt;&lt;a class=&#34;wp-block-button__link wp-element-button&#34; href=&#34;https://blog.arthurbazin.com/programmation/sql/postgresql-tout-comprendre-1&#34;&gt;Cours sur PostgreSQL&lt;/a&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;wp-block-button has-custom-width wp-block-button__width-50&#34;&gt;&lt;a class=&#34;wp-block-button__link wp-element-button&#34; href=&#34;https://blog.arthurbazin.com/programmation/sql/postgresql-vade-mecum-8#raster2pgsql&#34;&gt;Vade-mecum &amp;#8211; 8 &amp;#8211; Fonctions shell&lt;/a&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;</content>
    <link href="https://blog.arthurbazin.com/programmation/importer-des-donnees-binaires-dans-postgresql" rel="alternate"></link>
    <summary type="html">Voici tous mes conseils sur un sujet qui m&#39;a longtemps tenu en échec : l&#39;import de données binaires en base PostgreSQL</summary>
    <author>
      <name>Bazinga</name>
    </author>
  </entry>
  <entry>
    <title>Reprojeter toutes les tables d’un schéma</title>
    <updated>2022-02-02T19:10:00Z</updated>
    <id>tag:blog.arthurbazin.com,2022-02-02:/programmation/reprojeter-toutes-les-tables-dun-schema</id>
    <content type="html">&#xA;&lt;p&gt;Il arrive parfois que toutes les tables d&amp;rsquo;un schéma doivent être reprojetées. Pour cela, deux opérations doivent être menées :&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;ul&gt;&lt;li&gt;Modifier le modificateur de type de la colonne géométrique.&lt;br&gt;Par exemple de &lt;code&gt;geometry(point, 2154)&lt;/code&gt; vers &lt;code&gt;geometry(point, 3857)&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;Reprojeter la donnée elle même grâce à la fonction &lt;code&gt;ST_Transform()&lt;/code&gt;.&lt;/li&gt;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Voici une procédure qui permet d&amp;rsquo;effectuer toutes ces opérations d&amp;rsquo;un seul coup.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;EnlighterJSRAW&#34; data-enlighter-language=&#34;sql&#34; data-enlighter-theme=&#34;&#34; data-enlighter-highlight=&#34;&#34; data-enlighter-linenumbers=&#34;&#34; data-enlighter-lineoffset=&#34;&#34; data-enlighter-title=&#34;&#34; data-enlighter-group=&#34;&#34;&gt;-- Procédure de reprojection à la volée de toutes les tables d&#39;un schéma&#xA;DO&#xA;&#x9;$CORPS$&#xA;&#x9;&#x9;DECLARE&#xA;&#x9;&#x9;&#x9;-- Nom du schéma à traiter&#xA;&#x9;&#x9;&#x9;schema_exe text := &#39;mon_schema&#39;;&#xA;&#x9;&#x9;&#x9;-- SRID final à utiliser&#xA;&#x9;&#x9;&#x9;srid_final text := &#39;2154&#39;;&#xA;&#xA;&#x9;&#x9;&#x9;-- Tables à traiter&#xA;&#x9;&#x9;&#x9;table_traite record;&#xA;&#xA;&#xA;&#x9;&#x9;BEGIN&#xA;&#xA;&#x9;&#x9;&#x9;-- Pour chaque table géométrique du schéma à traiter&#xA;&#x9;&#x9;&#x9;FOR table_traite IN&#xA;&#x9;&#x9;&#x9;&#x9;-- Récupération de la liste des table et des colonnes geom&#xA;&#x9;&#x9;&#x9;&#x9;EXECUTE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;$a$SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t1.table_schema,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t1.table_name,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t2.f_geometry_column as geometry_column,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t2.srid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t2.type&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;information_schema.&#34;tables&#34; AS t1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;public.geometry_columns AS t2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ON t1.table_schema = t2.f_table_schema&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND t1.table_name = t2.f_table_name&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t1.table_schema = &#39;$a$ || schema_exe || $a$&#39;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t1.table_type = &#39;BASE TABLE&#39;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t2.f_geometry_column IS NOT NULL$a$&#xA;&#xA;&#x9;&#x9;&#x9;LOOP&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;RAISE NOTICE USING MESSAGE = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;$a$ $a$ || chr(10) ||&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;$a$Colonne : $a$ || chr(10) ||&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;$a$&#x9;$a$ || quote_ident(table_traite.table_schema) || $b$.$b$ || quote_ident(table_traite.table_name) || $c$.$c$ || quote_ident(table_traite.geometry_column)&#xA;&#x9;&#x9;&#x9;&#x9;;&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;-- On modifie la table que dans le cas où elle possède un système de coordonnées différent&#xA;&#x9;&#x9;&#x9;&#x9;IF table_traite.srid::text &amp;lt;&gt; srid_final THEN &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;RAISE NOTICE USING MESSAGE = $a$&#x9;=&gt; Reprojection de $a$ || table_traite.srid || $b$ vers $b$ || srid_final;&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;-- Création d&#39;une transaction dédiée pour pouvoir récupérer les erreurs éventuelles&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;BEGIN&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Modification de la table&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXECUTE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;$a$ALTER TABLE $a$ || quote_ident(table_traite.table_schema) || $a$.$a$ || quote_ident(table_traite.table_name) || $a$ &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ALTER COLUMN $a$ || quote_ident(table_traite.geometry_column) || $a$ &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;TYPE Geometry($a$ || table_traite.type || $a$, $a$ || srid_final || $a$) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;USING ST_Transform($a$ || quote_ident(table_traite.geometry_column) || $a$, $a$ || srid_final || $a$)$a$;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Récupération des éventuelles erreurs (si la table est utilisée par une vue ou un trigger)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXCEPTION&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN OTHERS &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN RAISE WARNING USING MESSAGE = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#39;&#x9;/!\ Reprojection impossible&#39; || chr(10) ||&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#39;&#x9;&#39; || SQLSTATE || &#39; - &#39; || SQLERRM ;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END;&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;ELSE &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;RAISE NOTICE USING MESSAGE = $a$&#x9;=&gt; Table déjà dans le système de coordonnées $a$ || srid_final;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;END IF;&#xA;&#xA;&#x9;&#x9;&#x9;END LOOP;&#xA;&#xA;&#x9;&#x9;END;&#xA;&#xA;&#x9;$CORPS$&#xA;;&lt;/pre&gt;&#xA;</content>
    <link href="https://blog.arthurbazin.com/programmation/reprojeter-toutes-les-tables-dun-schema" rel="alternate"></link>
    <summary type="html">Reprojeter le contenu d&#39;un schéma est parfois fastidieux, sauf avec une petite procédure.</summary>
    <author>
      <name>Bazinga</name>
    </author>
  </entry>
  <entry>
    <title>Pseudonymiser vos bases PostgreSQL</title>
    <updated>2024-01-30T17:54:28Z</updated>
    <id>tag:blog.capdata.fr,2024-01-30:/index.php/pseudonymisation-postgresql/</id>
    <content type="html">&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10377&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10377&amp;#038;title=Pseudonymiser%20vos%20bases%20PostgreSQL&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=Pseudonymiser%20vos%20bases%20PostgreSQL&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10377&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;Dans l&amp;#8217;ère numérique actuelle, où la sécurité des données occupe une place centrale, la pseudonymisation émerge comme une stratégie cruciale pour renforcer la confidentialité des informations stockées dans les bases de données. Cette approche, bien que semblable à l&amp;#8217;anonymisation, se distingue par son objectif spécifique de préserver l&amp;#8217;utilité des données tout en masquant l&amp;#8217;identité réelle des individus. Dans le contexte de PostgreSQL, la pseudonymisation offre un équilibre délicat entre protection des renseignements sensibles et préservation de la fonctionnalité des données.&lt;/p&gt;&#xA;&lt;h2&gt;Principe de la Pseudonymisation :&lt;/h2&gt;&#xA;&lt;p&gt;La pseudonymisation implique la substitution des données réelles par des données fictives, mais conservant leur structure originale. Contrairement à l&amp;#8217;anonymisation, qui supprime complètement toute référence à l&amp;#8217;identité d&amp;#8217;un individu, la pseudonymisation permet la réversibilité du processus. Ainsi, les données restent utilisables à des fins légitimes : l&amp;#8217;analyse statistique, ou la réalisation de tests, tout en garantissant la protection des informations confidentielles.&lt;/p&gt;&#xA;&lt;p&gt;L&amp;#8217;utilité fondamentale de la pseudonymisation réside dans sa capacité à concilier deux impératifs apparemment contradictoires : la protection de la vie privée des individus et la nécessité d&amp;#8217;accéder et de traiter des données. Dans un paysage où les fuites de données et les violations de la vie privée sont de plus en plus fréquentes, la pseudonymisation devient une réponse pragmatique aux exigences de conformité réglementaire tout en préservant la valeur analytique des données.&lt;/p&gt;&#xA;&lt;p&gt;Souvent confondue avec la pseudonymisation, l&amp;#8217;anonymisation diffère par son caractère irréversible. Alors que l&amp;#8217;anonymisation supprime toute possibilité de relier des données à une identité spécifique, la pseudonymisation offre une réversibilité calculée, permettant une utilisation future des données tout en maintenant un niveau élevé de sécurité. Cette distinction cruciale souligne l&amp;#8217;importance de choisir la méthode la plus appropriée en fonction des besoins spécifiques de sécurité et des objectifs opérationnels.&lt;/p&gt;&#xA;&lt;h1&gt;Etat de la pseudonymisation actuellement sur PostgreSQL :&lt;/h1&gt;&#xA;&lt;p&gt;Le seul outil actuellement disponible sur le marché permettant de réaliser une pseudonymisation sur PostgreSQL est une extension. Nous l&amp;#8217;avions déjà évoquée lors d&amp;#8217;un précédent article : PostgreSQL Anonymizer. Pour rappel, cette extension est développée par Dalibo, et contient également de nombreuses options d&amp;#8217;anonymisation.&lt;/p&gt;&#xA;&lt;p&gt;Dans cet article, nous allons rappeler l&amp;#8217;installation de cette extension puis nous la verrons à l&amp;#8217;œuvre dans quelques exemples de pseudonymisation de données.&lt;/p&gt;&#xA;&lt;h3&gt;Etape 1 : Installation&lt;/h3&gt;&#xA;&lt;p&gt;La machine choisie pour mon test est une Ubuntu. Il n&amp;#8217;y a pas de package prêt à l&amp;#8217;emploi sur ce système d&amp;#8217;exploitation. Nous devons donc réaliser nous même la compilation de l&amp;#8217;extension pour qu&amp;#8217;elle puisse fonctionner. Nous avons au préalable installé une version 15 de PostgreSQL sur notre machine.&lt;/p&gt;&#xA;&lt;p&gt;Nous commençons par installer les outils de développement de PostgreSQL :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@sarah:~# sudo apt-get install postgresql-server-dev-15&#xD;&#xA;Reading package lists... Done&#xD;&#xA;Building dependency tree&#xD;&#xA;Reading state information... Done&#xD;&#xA;...&#xD;&#xA;Setting up postgresql-server-dev-15 (13.7-1.pgdg18.04+1) ...&#xD;&#xA;Processing triggers for man-db (2.8.3-2ubuntu0.1) ...&#xD;&#xA;Processing triggers for mime-support (3.60ubuntu1) ...&#xD;&#xA;Processing triggers for ureadahead (0.100.0-21) ...&#xD;&#xA;Processing triggers for install-info (6.5.0.dfsg.1-2) ...&#xD;&#xA;Processing triggers for libc-bin (2.27-3ubuntu1.5) ...&#xD;&#xA;Processing triggers for systemd (237-3ubuntu10.53)&lt;/pre&gt;&#xA;&lt;p&gt;Puis on récupère depuis le git de Dalibo les sources à la dernière version disponible :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@sarah:~# git clone &amp;lt;a href=&amp;quot;https://gitlab.com/dalibo/postgresql_anonymizer.git&amp;quot;&amp;gt;https://gitlab.com/dalibo/postgresql_anonymizer.git&amp;lt;/a&amp;gt;&#xD;&#xA;Cloning into &#39;postgresql_anonymizer&#39;...&#xD;&#xA;remote: Enumerating objects: 5145, done.&#xD;&#xA;remote: Counting objects: 100% (487/487), done.&#xD;&#xA;remote: Compressing objects: 100% (271/271), done.&#xD;&#xA;remote: Total 5145 (delta 327), reused 277 (delta 216), pack-reused 4658&#xD;&#xA;Receiving objects: 100% (5145/5145), 25.71 MiB | 19.23 MiB/s, done.&#xD;&#xA;Resolving deltas: 100% (3304/3304), done. &lt;/pre&gt;&#xA;&lt;p&gt;Une fois les sources récupérées, on se positionne dans le répertoire créé par Git ou les sources ont été déposées et on fait un make extension :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@sarah:~/postgresql_anonymizer# make extension &#xD;&#xA;mkdir -p anon&#xD;&#xA;cp anon.sql anon/anon--1.1.0.sql&#xD;&#xA;cp data/*.csv anon/&#xD;&#xA;cp python/populate.py anon/ &lt;/pre&gt;&#xA;&lt;p&gt;Et enfin un Make install pour installer le tout. Il est important de préciser qu&amp;#8217;il est nécessaire que vous ayez installé gcc pour pouvoir compiler les sources de l&amp;#8217;extension (apt install gcc) :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@sarah:~/postgresql_anonymizer# sudo make install &#xD;&#xA;cp anon.sql anon/anon--1.1.0.sql&#xD;&#xA;cp data/*.csv anon/&#xD;&#xA;cp python/populate.py anon/&#xD;&#xA;gcc -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Werror=vla -Wendif-labels -Wmissing- format-attribute -Wimplicit-fallthrough=3 -Wformat-security -fno-strict-aliasing -fwrapv -fexcess-precision=standard -Wno- format-truncation -g -g -O2 -fstack-protector-strong -Wformat -Werror= format-security -fno-omit-frame-pointer -fPIC -Wno-unused-variable -I. -I./ -I/usr/include/postgresql/13/server -I/usr/include/postgresql/internal    -Wdate- time -D_FORTIFY_SOURCE=2 -D_GNU_SOURCE -I/usr/include/libxml2     -c -o anon.o anon.c&#xD;&#xA;gcc -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Werror=vla -Wendif-labels -Wmissing- format-attribute -Wimplicit-fallthrough=3 -Wformat-security -fno-strict-aliasing -fwrapv -fexcess-precision=standard -Wno- format-truncation -g -g -O2 -fstack-protector-strong -Wformat -Werror= format-security -fno-omit-frame-pointer -fPIC -Wno-unused-variable anon.o -L/usr/lib/x86_64-linux-gnu -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now -L/usr/lib/llvm-6.0/lib    -Wl,--as-needed  -shared -o anon.so&#xD;&#xA;/usr/bin/clang-6.0 -Wno-ignored-attributes -fno-strict-aliasing -fwrapv -Wno-unused- command-line-argument -O2  -I. -I./ -I/usr/include/postgresql/13/server -I/usr/include/postgresql/internal    -Wdate- time -D_FORTIFY_SOURCE=2 -D_GNU_SOURCE -I/usr/include/libxml2    -flto=thin -emit-llvm -c -o anon. bc anon.c&#xD;&#xA;/bin/mkdir -p  &#39;/usr/share/postgresql/15/extension&#39;&#xD;&#xA;/bin/mkdir -p  &#39;/usr/share/postgresql/15/extension/anon&#39;&#xD;&#xA;/bin/mkdir -p  &#39;/usr/lib/postgresql/15/lib&#39;&#xD;&#xA;install -d /usr/lib/postgresql/15/bin&#xD;&#xA;install -m 0755 bin/pg_dump_anon.sh /usr/lib/postgresql/15/bin&#xD;&#xA;/usr/bin/install -c -m 644 .//anon.control  &#39;/usr/share/postgresql/15/extension/&#39;&#xD;&#xA;/usr/bin/install -c -m 644 .//anon/*   &#39;/usr/share/postgresql/15/extension/anon/&#39;&#xD;&#xA;/usr/bin/install -c -m 755  anon.so  &#39;/usr/lib/postgresql/15/lib/&#39;&#xD;&#xA;/bin/mkdir -p  &#39;/usr/lib/postgresql/15/lib/bitcode/anon&#39;&#xD;&#xA;/bin/mkdir -p  &#39;/usr/lib/postgresql/15/lib/bitcode&#39;/anon/&#xD;&#xA;/usr/bin/install -c -m 644 anon. bc &#39;/usr/lib/postgresql/15/lib/bitcode&#39;/anon/./&#xD;&#xA;cd &#39;/usr/lib/postgresql/15/lib/bitcode&#39; &amp;amp;&amp;amp; /usr/lib/llvm-6.0/bin/llvm-lto -thinlto -thinlto-action=thinlink -o anon.index. bc anon/anon. bc&lt;/pre&gt;&#xA;&lt;p&gt;Pour ce test, j&amp;#8217;ai importé la base de données exemple dvdrental de PostgreSQL. Elle me permettra d&amp;#8217;illustrer la pseudonymisation facilement et sur une quantité respectable de données. Pour importer cette base de données, rien de plus simple :&lt;/p&gt;&#xA;&lt;p&gt;On la récupère en la téléchargeant sur le site d&amp;#8217;hébergement :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres@sarah:~$ wget https://www.postgresqltutorial.com/wp-content/uploads/2019/05/dvdrental.zip&#xD;&#xA;&#xD;&#xA;--2023-11-29 13:42:52-- https://www.postgresqltutorial.com/wp-content/uploads/2019/05/dvdrental.zip&#xD;&#xA;Resolving www.postgresqltutorial.com (www.postgresqltutorial.com)... 104.21.2.174, 172.67.129.129, 2606:4700:3037::6815:2ae, ...&#xD;&#xA;Connecting to www.postgresqltutorial.com (www.postgresqltutorial.com)|104.21.2.174|:443... connected.&#xD;&#xA;HTTP request sent, awaiting response... 200 OK&#xD;&#xA;Length: 550906 (538K) [application/zip]&#xD;&#xA;Saving to: ‘dvdrental.zip’&#xD;&#xA;&#xD;&#xA;dvdrental.zip 100%[========================================================================================================================================&amp;gt;] 537.99K --.-KB/s in 0.01s&#xD;&#xA;&#xD;&#xA;2023-11-29 13:42:52 (45.5 MB/s) - ‘dvdrental.zip’ saved [550906/550906] &lt;/pre&gt;&#xA;&lt;p&gt;On la dézippe ensuite :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres@sarah:~$ unzip dvdrental.zip&#xD;&#xA;Archive: dvdrental.zip&#xD;&#xA;inflating: dvdrental.tar&lt;/pre&gt;&#xA;&lt;p&gt;On obtient ainsi une archive qu&amp;#8217;on peut utiliser avec un pg_restore pour charger la base de données. Je me suis d&amp;#8217;abbord connectée sur l&amp;#8217;instance pour créer une base de données que j&amp;#8217;ai appelé dvdrental:&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres@ip-172-44-2-72:~$ psql&#xD;&#xA;psql (15.5 (Ubuntu 15.5-1.pgdg22.04+1))&#xD;&#xA;Type &amp;quot;help&amp;quot; for help.&lt;/pre&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;postgres=# create database dvdrental;&#xD;&#xA;CREATE DATABASE&lt;/pre&gt;&#xA;&lt;p&gt;Puis j&amp;#8217;ai restauré la base :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;postgres@ip-172-44-2-72:~$ pg_restore -U postgres -d dvdrental dvdrental.tar&lt;/pre&gt;&#xA;&lt;p&gt;Nous sommes donc prêts à commencer.&lt;/p&gt;&#xA;&lt;p&gt;Il existe un petit nombre de fonctions de pseudonymisation dans PostgreSQL anonymiser. Elles fonctionnent comme les fonctions d&amp;#8217;anonymisation et peuvent être utilisée en masquage statique ou en masquage dynamique.&lt;/p&gt;&#xA;&lt;p&gt;Les fonctions disponibles sont les suivantes :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;anon.pseudo_first_name(&#39;seed&#39;,&#39;salt&#39;)&lt;/code&gt;qui retourne un prénom générique&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;anon.pseudo_last_name(&#39;seed&#39;,&#39;salt&#39;)&lt;/code&gt; qui retourne un nom de famille générique&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;anon.pseudo_email(&#39;seed&#39;,&#39;salt&#39;)&lt;/code&gt; qui retourne une adresse email générique et existante&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;anon.pseudo_city(&#39;seed&#39;,&#39;salt&#39;)&lt;/code&gt; qui retourne le nom d&amp;#8217;une ville existante&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;anon.pseudo_country(&#39;seed&#39;,&#39;salt&#39;)&lt;/code&gt; qui retourne un pays existant&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;anon.pseudo_company(&#39;seed&#39;,&#39;salt&#39;)&lt;/code&gt; qui retourne un nom de société générique&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;anon.pseudo_iban(&#39;seed&#39;,&#39;salt&#39;)&lt;/code&gt; qui retourne un IBAN valide&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;anon.pseudo_siret(&#39;seed&#39;,&#39;salt&#39;) qui retourne un SIRET valide&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Il est important de définir un &lt;em&gt;salt&lt;/em&gt; différent pour chaque base de données. Si un utilisateur quelconque trouve le &lt;em&gt;salt&lt;/em&gt; de votre base de données, il sera ensuite capable de procéder à une attaque par force brute sur toutes les autres données afin de les révéler.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# alter database dvdrental set anon.salt = &#39;This_is_a_salt&#39;;&lt;/pre&gt;&#xA;&lt;p&gt;Pour prendre un exemple, nous pouvons tenter de pseudonymiser les données des clients de notre base dvdrental :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select * from customer limit 5;&#xD;&#xA;customer_id | store_id | first_name | last_name | email | address_id | activebool | create_date | last_update | active&#xD;&#xA;-------------+----------+------------+-----------+-------------------------------------+------------+------------+-------------+-------------------------+--------&#xD;&#xA;524 | 1 | Jared | Ely | jared.ely@sakilacustomer.org | 530 | t | 2006-02-14 | 2013-05-26 14:49:45.738 | 1&#xD;&#xA;1 | 1 | Mary | Smith | mary.smith@sakilacustomer.org | 5 | t | 2006-02-14 | 2013-05-26 14:49:45.738 | 1&#xD;&#xA;2 | 1 | Patricia | Johnson | patricia.johnson@sakilacustomer.org | 6 | t | 2006-02-14 | 2013-05-26 14:49:45.738 | 1&#xD;&#xA;3 | 1 | Linda | Williams | linda.williams@sakilacustomer.org | 7 | t | 2006-02-14 | 2013-05-26 14:49:45.738 | 1&#xD;&#xA;4 | 2 | Barbara | Jones | barbara.jones@sakilacustomer.org | 8 | t | 2006-02-14 | 2013-05-26 14:49:45.738 | 1&#xD;&#xA;(5 rows)&lt;/pre&gt;&#xA;&lt;p&gt;Lors d&amp;#8217;un premier essai, en suivant la documentation officielle disponible &lt;a href=&#34;https://postgresql-anonymizer.readthedocs.io/en/stable/&#34;&gt;ici&lt;/a&gt;, j&amp;#8217;ai utilisé la fonction suivante :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# SECURITY LABEL FOR anon ON COLUMN customer.first_name is &#39;MASKED WITH FUNCTION anon.pseudo_first_name(&#39;seed&#39;, &#39;salt&#39;)&#39;;&#xD;&#xA;SECURITY LABEL&lt;/pre&gt;&#xA;&lt;p&gt;Au moment d&amp;#8217;utiliser le masquage pour pseudonymiser mes données, je suis tombée sur l&amp;#8217;erreur suivante :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# SECURITY LABEL FOR anon ON COLUMN customer.first_name IS &#39;MASKED WITH FUNCTION anon.pseudo_first_name(&#39;seed&#39;,&#39;salt&#39;)&#39;;&#xD;&#xA;ERROR: syntax error at or near &amp;quot;seed&amp;quot; LINE 2: IS &#39;MASKED WITH FUNCTION anon.pseudo_first_name(&#39;seed&#39;,&#39;salt...&lt;/pre&gt;&#xA;&lt;p&gt;Il faut le savoir, car ce n&amp;#8217;est pas forcément bien explicité dans la documentation : le simple guillemet ne permet pas d&amp;#8217;échapper correctement les caractères. Il est donc nécessaire d&amp;#8217;ajouter d&amp;#8217;autres caractères d&amp;#8217;échappement. Dans ce cas, j&amp;#8217;ai choisi d&amp;#8217;utiliser le symbole &amp;#8220;$&amp;#8221;.&lt;br /&gt;&#xA;Ainsi, au deuxième essai, cela m&amp;#8217;a donné :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# SECURITY LABEL FOR anon ON COLUMN customer.first_name is &#39;MASKED WITH FUNCTION anon.pseudo_first_name($$seed$$, $$salt$$)&#39;;&#xD;&#xA;SECURITY LABEL&lt;/pre&gt;&#xA;&lt;p&gt;Ca avait l&amp;#8217;air de fonctionner, j&amp;#8217;ai donc lancé mon anonymisation pour vérifier :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# SELECT anon.anonymize_database();&#xD;&#xA;DEBUG: Anonymize table public.customer with first_name = anon.pseudo_first_name($$seed$$)&#xD;&#xA;ERROR: could not determine polymorphic type because input has type unknown&#xD;&#xA;CONTEXT: SQL statement &amp;quot;UPDATE public.customer SET first_name = anon.pseudo_first_name($$seed$$)&amp;quot;&#xD;&#xA;PL/pgSQL function anon.anonymize_table(regclass) line 38 at EXECUTE&#xD;&#xA;SQL function &amp;quot;anonymize_database&amp;quot; statement 1 &lt;/pre&gt;&#xA;&lt;p&gt;Il s&amp;#8217;avère que la documentation ne précise pas qu&amp;#8217;il faut typer les deux champs qu&amp;#8217;on utilise pour notre fonction, sinon PostgreSQL ne sait pas quoi en faire. Cela donne donc :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# SECURITY LABEL FOR anon ON COLUMN customer.first_name is &#39;MASKED WITH FUNCTION anon.pseudo_first_name(CAST($$seed$$ as text), cast($$salt$$ as text))&#39;;&#xD;&#xA;SECURITY LABEL&lt;/pre&gt;&#xA;&lt;p&gt;Et on applique ensuite les différentes fonctions :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# SELECT anon.anonymize_database();&#xD;&#xA;DEBUG: Anonymize table public.customer with first_name = anon.pseudo_first_name(CAST($$seed$$ as text), cast($$salt$$ as text))&#xD;&#xA;anonymize_database&#xD;&#xA;--------------------&#xD;&#xA;t&#xD;&#xA;(1 row)&lt;/pre&gt;&#xA;&lt;p&gt;On va ensuite vérifier nos données dans la table pour voir si cela a été appliqué :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select * from customer limit 5;&#xD;&#xA;customer_id | store_id | first_name | last_name | email | address_id | activebool | create_date | last_update | active&#xD;&#xA;-------------+----------+------------+-----------+-----------------------------------+------------+------------+-------------+----------------------------+--------&#xD;&#xA;524 | 1 | Taniya | Ely | jared.ely@sakilacustomer.org | 530 | t | 2006-02-14 | 2024-01-29 09:26:48.268084 | 1&#xD;&#xA;15 | 1 | Taniya | Harris | helen.harris@sakilacustomer.org | 19 | t | 2006-02-14 | 2024-01-29 09:26:48.268084 | 1&#xD;&#xA;16 | 2 | Taniya | Martin | sandra.martin@sakilacustomer.org | 20 | t | 2006-02-14 | 2024-01-29 09:26:48.268084 | 0&#xD;&#xA;17 | 1 | Taniya | Thompson | donna.thompson@sakilacustomer.org | 21 | t | 2006-02-14 | 2024-01-29 09:26:48.268084 | 1&#xD;&#xA;18 | 2 | Taniya | Garcia | carol.garcia@sakilacustomer.org | 22 | t | 2006-02-14 | 2024-01-29 09:26:48.268084 | 1&#xD;&#xA;(5 rows)&lt;/pre&gt;&#xA;&lt;p&gt;On se rend alors compte que toutes les données pseudonymisées l&amp;#8217;ont été avec le même résultat.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select distinct first_name from customer;&#xD;&#xA;first_name&#xD;&#xA;------------&#xD;&#xA;Taniya&#xD;&#xA;(1 row)&lt;/pre&gt;&#xA;&lt;p&gt;Il est en effet précisé dans la documentation que si on voulait obtenir des pseudo différents pour chaque ligne, il fallait ajouter un custom dataset d&amp;#8217;un nombre supérieur de ligne au nombres d&amp;#8217;entrées dans notre table.&lt;/p&gt;&#xA;&lt;p&gt;Il existe un dataset fournit par dalibo (en français uniquement), disponible à l&amp;#8217;adresse &lt;a href=&#34;https://gitlab.com/dalibo/postgresql_anonymizer/-/packages&#34;&gt;suivante &lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Pour pouvoir l&amp;#8217;intégrer dans votre extension, il vous faut le télécharger sur votre serveur, le placer dans le dossier de votre choix, et utiliser la commande :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=#SELECT anon.init(&#39;/path/to/custom_csv_files/&#39;)&lt;/pre&gt;&#xA;&lt;p&gt;Vous pouvez également créer votre propre dataset sous la forme d&amp;#8217;un fichier csv avec un script par exemple, pour peupler vos exemples avec vos propres données personnalisées.&lt;/p&gt;&#xA;&lt;p&gt;On peut tenter de réaliser la même opération mais pour une autre donnée. On voit en effet que notre adresse email contient toujours les noms de familles des personnes, ils n&amp;#8217;ont pas été pseudonymisés. On va donc changer cela :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# security label for anon on column customer.email is &#39;MASKED WITH FUNCTION anon.pseudo_email(CAST($$seed$$ as text), cast($$salt$$ as text))&#39;;&#xD;&#xA;SECURITY LABEL &lt;/pre&gt;&#xA;&lt;p&gt;Et une fois appliqué on obtient les données suivantes :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;dvdrental=# select * from customer limit 5;&#xD;&#xA;customer_id | store_id | first_name | last_name | email | address_id | activebool | create_date | last_update | active&#xD;&#xA;-------------+----------+------------+-----------+----------------------------+------------+------------+-------------+----------------------------+--------&#xD;&#xA;524 | 1 | Taniya | Ely | rowesally@kelly-dorsey.com | 530 | t | 2006-02-14 | 2024-01-29 09:42:03.560633 | 1&#xD;&#xA;235 | 1 | Taniya | Lynch | rowesally@kelly-dorsey.com | 239 | t | 2006-02-14 | 2024-01-29 09:42:03.560633 | 1&#xD;&#xA;15 | 1 | Taniya | Harris | rowesally@kelly-dorsey.com | 19 | t | 2006-02-14 | 2024-01-29 09:42:03.560633 | 1&#xD;&#xA;16 | 2 | Taniya | Martin | rowesally@kelly-dorsey.com | 20 | t | 2006-02-14 | 2024-01-29 09:42:03.560633 | 0&#xD;&#xA;17 | 1 | Taniya | Thompson | rowesally@kelly-dorsey.com | 21 | t | 2006-02-14 | 2024-01-29 09:42:03.560633 | 1&#xD;&#xA;(5 rows)&lt;/pre&gt;&#xA;&lt;h2&gt;Les limites de la pseudonymisation Postgres :&lt;/h2&gt;&#xA;&lt;p&gt;Actuellement il n&amp;#8217;existe qu&amp;#8217;une seule extension permettant de faire de la pseudonymisation sur PostgreSQL. Et elle présente plusieurs limites :&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Les fonctions de pseudonymisation de postgresql anonymizer sont déterministes. C&amp;#8217;est à dire que pour deux valeurs identiques, elles donneront toujours le même résultat.&lt;/li&gt;&#xA;&lt;li&gt;Les données pseudonymisée restent des données personnes ! Le &lt;strong&gt;RGPD&lt;/strong&gt; précise très clairement que : « les données à caractère personnel qui ont fait l’objet d’une pseudonymisation […] devraient être considérées comme des informations concernant une personne physique identifiable. »&lt;/li&gt;&#xA;&lt;li&gt;Les coûts en performance, comme évoqué dans mon précédent article pour cette même extension, sont élevés. C&amp;#8217;est quelque chose à considérer quand on veut utiliser cette méthode.&lt;/li&gt;&#xA;&lt;li&gt;Il faut pouvoir gérer correctement les clés qu&amp;#8217;on utilises pour la pseudonymisation, c&amp;#8217;est une charge supplémentaire.&lt;/li&gt;&#xA;&lt;li&gt;La documentation n&amp;#8217;est pas forcément tout à fait bien mise à jour, et certaines choses ne sont pas évidentes à appréhender.&lt;/li&gt;&#xA;&lt;li&gt;L&amp;#8217;extension est toujours en développement et en changements constants, nous ne sommes pas à l&amp;#8217;abris de rencontrer des bugs au fil des versions. Pour écrire cet article, j&amp;#8217;ai du contacter directement le développeur car au début de sa rédaction, les fonctions de pseudonymisation ne fonctionnaient pas.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2&gt;Conclusion :&lt;/h2&gt;&#xA;&lt;p&gt;En conclusion, la pseudonymisation des données dans PostgreSQL se révèle être une stratégie de protection de la vie privée et de conformité réglementaire particulièrement robuste. En adoptant cette approche, les entreprises peuvent tirer parti des avantages significatifs tels que la préservation de la confidentialité des données tout en permettant l&amp;#8217;analyse et le traitement des informations sensibles.&lt;/p&gt;&#xA;&lt;p&gt;D&amp;#8217;un côté, la pseudonymisation offre une solution efficace pour équilibrer la nécessité d&amp;#8217;accéder aux données avec le respect des réglementations de confidentialité. Les données pseudonymisées demeurent utiles pour les analyses internes tout en limitant le risque d&amp;#8217;exploitation malveillante.&lt;/p&gt;&#xA;&lt;p&gt;Cependant, il est crucial de reconnaître que la pseudonymisation n&amp;#8217;est pas une panacée. Elle peut présenter des défis en termes de gestion des clés de pseudonymisation, de complexité accrue dans la maintenance des bases de données, et de potentielles vulnérabilités si elle est mal mise en œuvre.&lt;/p&gt;&#xA;&lt;p&gt;Dans une perspective plus large, il est également pertinent de considérer l&amp;#8217;anonymisation des données comme une alternative. Bien que l&amp;#8217;anonymisation puisse offrir un niveau supérieur de protection, elle peut également rendre les données moins utiles pour certaines applications, limitant ainsi leur valeur pour les analyses internes.&lt;/p&gt;&#xA;&lt;p&gt;En définitive, le choix entre la pseudonymisation et l&amp;#8217;anonymisation dépend des besoins spécifiques de chaque organisation, du contexte réglementaire et des compromis acceptables entre la protection de la vie privée et l&amp;#8217;utilité des données. En élaborant une stratégie de gestion des données judicieuse, les entreprises peuvent naviguer avec succès dans le paysage complexe de la confidentialité des données dans PostgreSQL.&lt;strong&gt;Continuez votre lecture sur le blog :&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul class=&#34;similar-posts&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-anonymizer/&#34; rel=&#34;bookmark&#34; title=&#34;7 juillet 2022&#34;&gt;PostgreSQL Anonymizer&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-planifier-une-tache-avec-pg_cron/&#34; rel=&#34;bookmark&#34; title=&#34;24 septembre 2019&#34;&gt;PostgreSQL : planifier une tâche avec pg_cron&lt;/a&gt; (Emmanuel RAMI) [Non classéPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/hypopg-et-les-index-hypothetiques/&#34; rel=&#34;bookmark&#34; title=&#34;5 août 2022&#34;&gt;HypoPG et les index hypothétiques&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-14-et-le-scram-sha-256/&#34; rel=&#34;bookmark&#34; title=&#34;19 mai 2022&#34;&gt;PostgreSQL 14 et le scram-sha-256&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/pyrseas-et-postgresql-comparer-facilement-des-schema-de-base-de-donnees/&#34; rel=&#34;bookmark&#34; title=&#34;3 janvier 2023&#34;&gt;Pyrseas et Postgresql : Comparer facilement des schémas de base de données&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;!-- Similar Posts took 2.152 ms --&gt;&lt;/p&gt;&#xA;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10377&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10377&amp;#038;title=Pseudonymiser%20vos%20bases%20PostgreSQL&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=Pseudonymiser%20vos%20bases%20PostgreSQL&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10377&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/pseudonymisation-postgresql/&#34;&gt;Pseudonymiser vos bases PostgreSQL&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.capdata.fr/index.php/pseudonymisation-postgresql/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dans l&amp;#8217;ère numérique actuelle, où la sécurité des données occupe une place centrale, la pseudonymisation émerge comme une stratégie cruciale pour renforcer la confidentialité des informations stockées dans les bases de données. Cette approche, bien que semblable à l&amp;#8217;anonymisation, se&amp;#8230; &lt;a href=&#34;https://blog.capdata.fr/index.php/pseudonymisation-postgresql/&#34; class=&#34;more-link&#34;&gt;Continuer la lecture &lt;span class=&#34;meta-nav&#34;&gt;&amp;#8594;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/pseudonymisation-postgresql/&#34;&gt;Pseudonymiser vos bases PostgreSQL&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Sarah FAVEERE</name>
    </author>
  </entry>
  <entry>
    <title>OrioleDB : la promesse d’un No-Vacuum</title>
    <updated>2023-10-11T10:27:27Z</updated>
    <id>tag:blog.capdata.fr,2023-10-11:/index.php/orioledb-la-promesse-dun-no-vacuum/</id>
    <content type="html">&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10248&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10248&amp;#038;title=OrioleDB%20%3A%20la%20promesse%20d%E2%80%99un%20No-Vacuum&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=OrioleDB%20%3A%20la%20promesse%20d%E2%80%99un%20No-Vacuum&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10248&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;La gestion efficace de l&amp;#8217;espace disque dans PostgreSQL est une préoccupation constante pour les administrateurs de bases de données. C&amp;#8217;est là qu&amp;#8217;intervient le processus de &amp;#8220;vacuum&amp;#8221;, une fonctionnalité puissante et complexe qui peut jouer un rôle déterminant dans la performance et la stabilité de votre base de données PostgreSQL. Cependant, comme toute arme à double tranchant, le vacuum apporte à la fois des avantages considérables et des défis potentiels.&lt;/p&gt;&#xA;&lt;p&gt;Le principal reproche que l&amp;#8217;on peut adresser au système de vacuum (et à l&amp;#8217;auto-vacuum par extension) est sa consommation importante de ressources. C&amp;#8217;est l&amp;#8217;une des raisons majeures évoquées par les grandes entreprises qui optent pour un autre SGBD, &lt;a href=&#34;https://www.uber.com/blog/postgres-to-mysql-migration/&#34;&gt;comme Uber, qui a migré vers MySQL pour remplacer PostgreSQL&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/orioledb/orioledb&#34;&gt;OrioleDB &lt;/a&gt;nous propose une approche novatrice de la gestion de la fragmentation (bloat) et de l&amp;#8217;espace disque de vos tables PostgreSQL. La principale promesse de ce nouveau moteur développé par la société Oriole est d&amp;#8217;éliminer le besoin de vacuum régulier et de longues périodes de maintenance pour nos bases de données.&lt;/p&gt;&#xA;&lt;p&gt;Cette innovation s&amp;#8217;articule autour de journaux d&amp;#8217;annulation au niveau de la ligne et du bloc, ainsi que de la fusion automatique des pages. Les journaux d&amp;#8217;annulation au niveau des lignes et des blocs offrent un contrôle plus précis, permettant une gestion plus efficace des modifications de données. La fonction de fusion automatique des pages travaille en arrière-plan pour regrouper les données fragmentées, améliorant ainsi encore davantage l&amp;#8217;efficacité du système. Le moteur est actuellement disponible en version bêta sur le site d&amp;#8217;OrioleDB.&lt;/p&gt;&#xA;&lt;p&gt;Dans cet article, je vais vous montrer comment installer OrioleDB et réaliser un test comparatif entre une instance classique et une instance OrioleDB en termes d&amp;#8217;espace disque occupé. Je vais utiliser &lt;a href=&#34;https://capdata.fr/dbadistance&#34;&gt;notre agent AllDB de supervision des bases de données &lt;/a&gt;pour générer des graphiques de la consommation d&amp;#8217;espace disque.&lt;/p&gt;&#xA;&lt;h2&gt;Installation d&amp;#8217;OrioleDB :&lt;/h2&gt;&#xA;&lt;p&gt;Pour pouvoir tester le nouveau moteur, il nous faut l&amp;#8217;installer. Pour cela, deux solutions s&amp;#8217;offrent à nous. On peut choisir de le compiler nous-mêmes à partir du code source fourni par Oriole, ou on peut choisir d&amp;#8217;utiliser le conteneur Docker mis à notre disposition.&lt;/p&gt;&#xA;&lt;p&gt;Pour des raisons de rapidité de mise en place, j&amp;#8217;ai choisi d&amp;#8217;utiliser le conteneur fourni.&lt;/p&gt;&#xA;&lt;p&gt;Pour commencer, j&amp;#8217;installe Docker sur ma machine.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@ip-172-44-2-190:~$ sudo apt-get update&#xD;&#xA;(...)&#xD;&#xA;Reading package lists... Done&#xD;&#xA;root@ip-172-44-2-190:~$ sudo apt-get install ca-certificates curl gnupg&#xD;&#xA;Reading package lists... Done&#xD;&#xA;(...)&#xD;&#xA;No VM guests are running outdated hypervisor (qemu) binaries on this host.&#xD;&#xA;root@ip-172-44-2-190:~$ sudo install -m 0755 -d /etc/apt/keyrings&#xD;&#xA;root@ip-172-44-2-190:~$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg&#xD;&#xA;root@ip-172-44-2-190:~$ sudo chmod a+r /etc/apt/keyrings/docker.gpg&#xD;&#xA;root@ip-172-44-2-190:~$ echo \&#xD;&#xA;&amp;quot;deb [arch=&amp;quot;$(dpkg --print-architecture)&amp;quot; signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \&#xD;&#xA;&amp;quot;$(. /etc/os-release &amp;amp;amp;&amp;amp;amp; echo &amp;quot;$VERSION_CODENAME&amp;quot;)&amp;quot; stable&amp;quot; | \&#xD;&#xA;sudo tee /etc/apt/sources.list.d/docker.list &amp;amp;gt; /dev/null&#xD;&#xA;sudo apt-get update&#xD;&#xA;Hit:1 http://eu-west-3.ec2.archive.ubuntu.com/ubuntu jammy InRelease&#xD;&#xA;Hit:2 http://eu-west-3.ec2.archive.ubuntu.com/ubuntu jammy-updates InRelease&#xD;&#xA;(...)&#xD;&#xA;No VM guests are running outdated hypervisor (qemu) binaries on this host.&lt;/pre&gt;&#xA;&lt;p&gt;Pour tester que mon installation fonctionne correctement, je peux démarrer l&amp;#8217;image hello-world par défaut de Docker.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@ip-172-44-2-190:~$ sudo docker run hello-world&#xD;&#xA;Unable to find image &#39;hello-world:latest&#39; locally&#xD;&#xA;latest: Pulling from library/hello-world&#xD;&#xA;719385e32844: Pull complete&#xD;&#xA;Digest: sha256:4f53e2564790c8e7856ec08e384732aa38dc43c52f02952483e3f003afbf23db&#xD;&#xA;Status: Downloaded newer image for hello-world:latest&#xD;&#xA;&#xD;&#xA;Hello from Docker!&#xD;&#xA;This message shows that your installation appears to be working correctly.&#xD;&#xA;&#xD;&#xA;To generate this message, Docker took the following steps:&#xD;&#xA;1. The Docker client contacted the Docker daemon.&#xD;&#xA;2. The Docker daemon pulled the &amp;quot;hello-world&amp;quot; image from the Docker Hub.&#xD;&#xA;(amd64)&#xD;&#xA;3. The Docker daemon created a new container from that image which runs the&#xD;&#xA;executable that produces the output you are currently reading.&#xD;&#xA;4. The Docker daemon streamed that output to the Docker client, which sent it&#xD;&#xA;to your terminal.&#xD;&#xA;&#xD;&#xA;To try something more ambitious, you can run an Ubuntu container with:&#xD;&#xA;$ docker run -it ubuntu bash&#xD;&#xA;&#xD;&#xA;Share images, automate workflows, and more with a free Docker ID:&#xD;&#xA;https://hub.docker.com/&#xD;&#xA;&#xD;&#xA;For more examples and ideas, visit:&#xD;&#xA;https://docs.docker.com/get-started/&lt;/pre&gt;&#xA;&lt;p&gt;Docker est correctement installé, nous pouvons à présent aller récupérer l&amp;#8217;image Oriole depuis les dépôts (repositories). J&amp;#8217;ai choisi de récupérer l&amp;#8217;image &amp;#8220;latest&amp;#8221; de la version 14, avec laquelle je vais effectuer mes tests.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@ip-172-44-2-190:~# docker pull orioledb/orioledb:latest-pg14&#xD;&#xA;latest-pg14: Pulling from orioledb/orioledb&#xD;&#xA;7264a8db6415: Pull complete&#xD;&#xA;4e0888d8a332: Pull complete&#xD;&#xA;4b0510894ae7: Pull complete&#xD;&#xA;dc5da57566a1: Pull complete&#xD;&#xA;9611602787a1: Pull complete&#xD;&#xA;8f68f9452236: Pull complete&#xD;&#xA;5c92ed25d025: Pull complete&#xD;&#xA;11bb162cfe7a: Pull complete&#xD;&#xA;6f375d990892: Pull complete&#xD;&#xA;6ac166496e68: Pull complete&#xD;&#xA;Digest: sha256:4d408916e929ff0bcea11fee91ca5e69b0929be1afa58b5dbbcddcce340089ef&#xD;&#xA;Status: Downloaded newer image for orioledb/orioledb:latest-pg14&#xD;&#xA;docker.io/orioledb/orioledb:latest-pg14&lt;/pre&gt;&#xA;&lt;p&gt;On vérifie que notre image est bien présente, et on l&amp;#8217;éxecute :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@ip-172-44-2-190:~# docker image ls --all&#xD;&#xA;REPOSITORY TAG IMAGE ID CREATED SIZE&#xD;&#xA;orioledb/orioledb latest-pg14 cd7f629f705e 10 days ago 270MB&#xD;&#xA;hello-world latest 9c7a54a9a43c 4 months ago 13.3kB &lt;/pre&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@ip-172-44-2-190:~# docker run -e POSTGRES_PASSWORD=password cd7f629f705e&#xD;&#xA;The files belonging to this database system will be owned by user &amp;quot;postgres&amp;quot;.&#xD;&#xA;This user must also own the server process.&#xD;&#xA;&#xD;&#xA;The database cluster will be initialized with locale &amp;quot;en_US.utf8&amp;quot;.&#xD;&#xA;The default database encoding has accordingly been set to &amp;quot;UTF8&amp;quot;.&#xD;&#xA;The default text search configuration will be set to &amp;quot;english&amp;quot;.&#xD;&#xA;&#xD;&#xA;Data page checksums are disabled.&#xD;&#xA;&#xD;&#xA;fixing permissions on existing directory /var/lib/postgresql/data ... ok&#xD;&#xA;creating subdirectories ... ok&#xD;&#xA;selecting dynamic shared memory implementation ... posix&#xD;&#xA;selecting default max_connections ... 100&#xD;&#xA;selecting default shared_buffers ... 128MB&#xD;&#xA;selecting default time zone ... UTC&#xD;&#xA;creating configuration files ... ok&#xD;&#xA;running bootstrap script ... ok&#xD;&#xA;performing post-bootstrap initialization ... sh: locale: not found&#xD;&#xA;2023-09-21 09:51:08.177 UTC [30] WARNING: no usable system locales were found&#xD;&#xA;ok&#xD;&#xA;syncing data to disk ... ok&#xD;&#xA;&#xD;&#xA;Success. You can now start the database server using:&#xD;&#xA;&#xD;&#xA;pg_ctl -D /var/lib/postgresql/data -l logfile start&#xD;&#xA;&#xD;&#xA;initdb: warning: enabling &amp;quot;trust&amp;quot; authentication for local connections&#xD;&#xA;You can change this by editing pg_hba.conf or using the option -A, or&#xD;&#xA;--auth-local and --auth-host, the next time you run initdb.&#xD;&#xA;waiting for server to start....2023-09-21 09:51:09.294 UTC [36] LOG: OrioleDB public beta 2 started&#xD;&#xA;2023-09-21 09:51:09.295 UTC [36] LOG: starting PostgreSQL 14.9 OrioleDB public beta 2 PGTAG=patches14_16 alpine:3.18+clang-15 build:2023-09-10T16:41:50+00:00 on x86_64-pc-linux-musl, compiled by Alpine clang version 15.0.7, 64-bit&#xD;&#xA;2023-09-21 09:51:09.300 UTC [36] LOG: listening on Unix socket &amp;quot;/var/run/postgresql/.s.PGSQL.5432&amp;quot;&#xD;&#xA;2023-09-21 09:51:09.316 UTC [37] LOG: database system was shut down at 2023-09-21 09:51:08 UTC&#xD;&#xA;2023-09-21 09:51:09.316 UTC [38] LOG: orioledb background writer started&#xD;&#xA;2023-09-21 09:51:09.323 UTC [36] LOG: database system is ready to accept connections&#xD;&#xA;done&#xD;&#xA;server started&#xD;&#xA;&#xD;&#xA;/usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/*&#xD;&#xA;&#xD;&#xA;waiting for server to shut down...2023-09-21 09:51:09.350 UTC [36] LOG: received fast shutdown request&#xD;&#xA;.2023-09-21 09:51:09.353 UTC [36] LOG: aborting any active transactions&#xD;&#xA;2023-09-21 09:51:09.354 UTC [38] LOG: orioledb bgwriter is shut down&#xD;&#xA;2023-09-21 09:51:09.357 UTC [36] LOG: background worker &amp;quot;logical replication launcher&amp;quot; (PID 44) exited with exit code 1&#xD;&#xA;2023-09-21 09:51:09.357 UTC [39] LOG: shutting down&#xD;&#xA;2023-09-21 09:51:09.360 UTC [39] LOG: orioledb checkpoint 1 started&#xD;&#xA;2023-09-21 09:51:09.601 UTC [39] LOG: orioledb checkpoint 1 complete&#xD;&#xA;2023-09-21 09:51:09.631 UTC [36] LOG: database system is shut down&#xD;&#xA;done&#xD;&#xA;server stopped&#xD;&#xA;&#xD;&#xA;PostgreSQL init process complete; ready for start up.&#xD;&#xA;&#xD;&#xA;2023-09-21 09:51:09.712 UTC [1] LOG: OrioleDB public beta 2 started&#xD;&#xA;2023-09-21 09:51:09.764 UTC [1] LOG: starting PostgreSQL 14.9 OrioleDB public beta 2 PGTAG=patches14_16 alpine:3.18+clang-15 build:2023-09-10T16:41:50+00:00 on x86_64-pc-linux-musl, compiled by Alpine clang version 15.0.7, 64-bit&#xD;&#xA;2023-09-21 09:51:09.764 UTC [1] LOG: listening on IPv4 address &amp;quot;0.0.0.0&amp;quot;, port 5432&#xD;&#xA;2023-09-21 09:51:09.764 UTC [1] LOG: listening on IPv6 address &amp;quot;::&amp;quot;, port 5432&#xD;&#xA;2023-09-21 09:51:09.770 UTC [1] LOG: listening on Unix socket &amp;quot;/var/run/postgresql/.s.PGSQL.5432&amp;quot;&#xD;&#xA;2023-09-21 09:51:09.778 UTC [49] LOG: database system was shut down at 2023-09-21 09:51:09 UTC&#xD;&#xA;2023-09-21 09:51:09.778 UTC [50] LOG: orioledb background writer started&#xD;&#xA;2023-09-21 09:51:09.785 UTC [1] LOG: database system is ready to accept connections&#xD;&#xA;2023-09-21 09:54:23.633 UTC [68] FATAL: role &amp;quot;root&amp;quot; does not exist&#xD;&#xA;2023-09-21 09:56:09.884 UTC [51] LOG: orioledb checkpoint 2 started&#xD;&#xA;2023-09-21 09:56:10.100 UTC [51] LOG: orioledb checkpoint 2 complete &lt;/pre&gt;&#xA;&lt;p&gt;Notre serveur est correctement démarré. Nous pouvons maintenant nous y connecter à partir d&amp;#8217;un autre terminal et préparer le cas de test. Pour ce faire, nous allons créer une nouvelle base de données sur laquelle nous effectuerons un test de charge avec pg_bench.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;root@ip-172-44-2-190:~# docker ps&#xD;&#xA;CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES&#xD;&#xA;11c0860b7abc cd7f629f705e &amp;quot;docker-entrypoint.s…&amp;quot; 2 minutes ago Up 2 minutes 5432/tcp funny_hellman&#xD;&#xA;root@ip-172-44-2-190:~# docker exec -it 11c0860b7abc bash&#xD;&#xA;11c0860b7abc:/# su - postgres&#xD;&#xA;11c0860b7abc:~$ psql&#xD;&#xA;psql (14.9 OrioleDB public beta 2 PGTAG=patches14_16 alpine:3.18+clang-15 build:2023-09-10T16:41:50+00:00)&#xD;&#xA;Type &amp;quot;help&amp;quot; for help.&lt;/pre&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;postgres=# create database pg_bench;&#xD;&#xA;CREATE DATABASE&#xD;&#xA;postgres=# \c pg_bench&#xD;&#xA;You are now connected to database &amp;quot;pg_bench&amp;quot; as user &amp;quot;postgres&amp;quot;.&#xD;&#xA;pg_bench=# CREATE TABLE test (&#xD;&#xA;pg_bench(# id integer primary key,&#xD;&#xA;pg_bench(# value1 float8 not null,&#xD;&#xA;pg_bench(# value2 float8 not null,&#xD;&#xA;pg_bench(# value3 float8 not null,&#xD;&#xA;pg_bench(# value4 float8 not null,&#xD;&#xA;pg_bench(# ts timestamp not null&#xD;&#xA;pg_bench(# );&#xD;&#xA;CREATE TABLE&#xD;&#xA;pg_bench=# CREATE INDEX test_value1_idx ON test (value1);&#xD;&#xA;CREATE INDEX&#xD;&#xA;pg_bench=# CREATE INDEX test_value2_idx ON test (value2);&#xD;&#xA;CREATE INDEX&#xD;&#xA;pg_bench=# CREATE INDEX test_value3_idx ON test (value3);&#xD;&#xA;CREATE INDEX&#xD;&#xA;pg_bench=# CREATE INDEX test_value4_idx ON test (value4);&#xD;&#xA;CREATE INDEX&#xD;&#xA;pg_bench=# CREATE INDEX test_ts_idx ON test (ts);&#xD;&#xA;CREATE INDEX &lt;/pre&gt;&#xA;&lt;p&gt;Notre environnement de test est prêt. Afin de pouvoir comparer les performances avec une instance PostgreSQL plus traditionnelle, j&amp;#8217;ai également installé une version legacy en local sur la machine que j&amp;#8217;utilise. J&amp;#8217;ai créé la même table et les mêmes index que dans mon conteneur Docker. Pour réaliser ce test, j&amp;#8217;ai repris le script pg_bench de test fourni par Oriole.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;11c0860b7abc:~$ cat test.sql&#xD;&#xA;\set id random(1, 10000000)&#xD;&#xA;INSERT INTO test VALUES(:id, random(), random(), random(), random(), now() - random() * random() * 1800 * interval &#39;1 second&#39;)&#xD;&#xA;ON CONFLICT (id) DO UPDATE SET ts = now();&lt;/pre&gt;&#xA;&lt;p&gt;Ce petit script de test permet de lancer des insertions successives de données dans notre table de test. Il est conçu pour maximiser les chances de fragmentation à mesure que nous insérons des données dans notre table, car les doublons de clé primaire entraînent la mise à jour d&amp;#8217;anciennes lignes. Cela devrait donc nous permettre de constater la différence d&amp;#8217;espace disque entre une version standard de PostgreSQL et la version du moteur développée par Oriole.&lt;/p&gt;&#xA;&lt;h2&gt;Résultats des test :&lt;/h2&gt;&#xA;&lt;p&gt;Mes tests sont réalisés sur une machine Amazon EC2 de type &amp;#8220;large&amp;#8221;, équipée de 7 gigaoctets de RAM et de 2 unités de traitement central (CPU).&lt;/p&gt;&#xA;&lt;p&gt;Voici la capture d&amp;#8217;écran de l&amp;#8217;occupation de l&amp;#8217;espace disque pour le premier test, celui concernant l&amp;#8217;instance OrioleDB :&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.capdata.fr/wp-content/uploads/2023/10/OrioleDB.png&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; src=&#34;https://blog.capdata.fr/wp-content/uploads/2023/10/OrioleDB.png&#34; alt=&#34;&#34; width=&#34;1261&#34; height=&#34;345&#34; class=&#34;aligncenter size-full wp-image-10306&#34; srcset=&#34;https://blog.capdata.fr/wp-content/uploads/2023/10/OrioleDB.png 1261w, https://blog.capdata.fr/wp-content/uploads/2023/10/OrioleDB-300x82.png 300w, https://blog.capdata.fr/wp-content/uploads/2023/10/OrioleDB-1024x280.png 1024w, https://blog.capdata.fr/wp-content/uploads/2023/10/OrioleDB-768x210.png 768w&#34; sizes=&#34;(max-width: 1261px) 100vw, 1261px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;On peut observer que la progression de la taille de l&amp;#8217;instance est régulière et très modérée. Pendant le test, j&amp;#8217;ai surveillé l&amp;#8217;utilisation de la RAM de la machine, qui atteignait un pic à 95 % et demeurait relativement stable pendant toute la durée du test. Conformément à la promesse du moteur, aucun processus d&amp;#8217;autovacuum n&amp;#8217;a été constaté pendant le processus.&lt;/p&gt;&#xA;&lt;p&gt;En comparaison, le graphique de la base de données non Oriole présente une nette différence :&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.capdata.fr/wp-content/uploads/2023/10/nonOrioleDB.png&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; src=&#34;https://blog.capdata.fr/wp-content/uploads/2023/10/nonOrioleDB.png&#34; alt=&#34;&#34; width=&#34;1268&#34; height=&#34;345&#34; class=&#34;aligncenter size-full wp-image-10308&#34; srcset=&#34;https://blog.capdata.fr/wp-content/uploads/2023/10/nonOrioleDB.png 1268w, https://blog.capdata.fr/wp-content/uploads/2023/10/nonOrioleDB-300x82.png 300w, https://blog.capdata.fr/wp-content/uploads/2023/10/nonOrioleDB-1024x279.png 1024w, https://blog.capdata.fr/wp-content/uploads/2023/10/nonOrioleDB-768x209.png 768w&#34; sizes=&#34;(max-width: 1268px) 100vw, 1268px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;On observe notamment de nombreux pics et chutes fréquents dus aux vacuums organisés régulièrement. Le tracé n&amp;#8217;est pas linéaire.&lt;/p&gt;&#xA;&lt;p&gt;De plus, en surveillant les valeurs d&amp;#8217;utilisation CPU, à la différence d&amp;#8217;Oriole où les valeurs étaient constantes car il était toujours en train d&amp;#8217;ajouter des données, les moments de vacuum de la base provoquent d&amp;#8217;importantes montées de charge, suivies de chutes lorsque ces processus sont terminés sur notre instance de base.&lt;/p&gt;&#xA;&lt;h2&gt;Conclusion :&lt;/h2&gt;&#xA;&lt;p&gt;Sur le blog d&amp;#8217;OrioleDB, les graphiques affichés sont le résultat de l&amp;#8217;injection de 80 gigaoctets de données dans leur base de données à l&amp;#8217;aide de pg_bench. Cependant, lorsque l&amp;#8217;on examine les spécifications de la machine qu&amp;#8217;ils ont utilisée pour leurs tests, on se rend compte qu&amp;#8217;elle n&amp;#8217;est pas à la portée de toutes les bourses. La machine utilisée comprend en effet 72 CPU et dispose d&amp;#8217;un total de 144 Go de RAM, une configuration que très peu de personnes, principalement en raison du coût élevé de ce type de matériel, pourraient envisager pour leur infrastructure.&lt;/p&gt;&#xA;&lt;p&gt;Oriole fonctionne, comme nous l&amp;#8217;avons vu sur les graphiques que j&amp;#8217;ai commentés précédemment. Cependant, il s&amp;#8217;agit d&amp;#8217;un outil conçu pour les architectures de très grande envergure et les besoins importants en termes d&amp;#8217;entrées/sorties de données. Les gains ne sont pas aussi significatifs sur des machines de plus petite taille, qui correspondent davantage à la réalité de nombreuses entreprises actuelles.&lt;strong&gt;Continuez votre lecture sur le blog :&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul class=&#34;similar-posts&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/containeriser-une-base-de-donnees-postgresql-avec-docker/&#34; rel=&#34;bookmark&#34; title=&#34;23 septembre 2021&#34;&gt;Containeriser PostgreSQL avec Docker !&lt;/a&gt; (Emmanuel RAMI) [ContainerPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/pyrseas-et-postgresql-comparer-facilement-des-schema-de-base-de-donnees/&#34; rel=&#34;bookmark&#34; title=&#34;3 janvier 2023&#34;&gt;Pyrseas et Postgresql : Comparer facilement des schémas de base de données&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/cybertec-migrator-une-alternative-a-ora2pg/&#34; rel=&#34;bookmark&#34; title=&#34;10 mai 2023&#34;&gt;Cybertec Migrator : une alternative à ora2pg ?&lt;/a&gt; (Sarah FAVEERE) [OraclePostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/comparatif-des-gestionnaires-de-vip-dans-un-cluster-patroni-episode-1-keepalived/&#34; rel=&#34;bookmark&#34; title=&#34;6 mars 2022&#34;&gt;Comparatif des gestionnaires de VIP dans un cluster Patroni : épisode 1 (KEEPALIVED)&lt;/a&gt; (David Baffaleuf) [ContainerPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-la-streaming-replication-en-12/&#34; rel=&#34;bookmark&#34; title=&#34;19 novembre 2019&#34;&gt;PostgreSQL : la streaming replication en 12.&lt;/a&gt; (Emmanuel RAMI) [PostgreSQL]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;!-- Similar Posts took 4.644 ms --&gt;&lt;/p&gt;&#xA;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10248&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10248&amp;#038;title=OrioleDB%20%3A%20la%20promesse%20d%E2%80%99un%20No-Vacuum&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=OrioleDB%20%3A%20la%20promesse%20d%E2%80%99un%20No-Vacuum&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10248&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/orioledb-la-promesse-dun-no-vacuum/&#34;&gt;OrioleDB : la promesse d&amp;#8217;un No-Vacuum&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.capdata.fr/index.php/orioledb-la-promesse-dun-no-vacuum/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;La gestion efficace de l&amp;#8217;espace disque dans PostgreSQL est une préoccupation constante pour les administrateurs de bases de données. C&amp;#8217;est là qu&amp;#8217;intervient le processus de &amp;#8220;vacuum&amp;#8221;, une fonctionnalité puissante et complexe qui peut jouer un rôle déterminant dans la performance&amp;#8230; &lt;a href=&#34;https://blog.capdata.fr/index.php/orioledb-la-promesse-dun-no-vacuum/&#34; class=&#34;more-link&#34;&gt;Continuer la lecture &lt;span class=&#34;meta-nav&#34;&gt;&amp;#8594;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/orioledb-la-promesse-dun-no-vacuum/&#34;&gt;OrioleDB : la promesse d&amp;#8217;un No-Vacuum&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Sarah FAVEERE</name>
    </author>
  </entry>
  <entry>
    <title>Chiffrement sous PostgreSQL : mais sous quelles conditions ?</title>
    <updated>2023-08-02T10:02:56Z</updated>
    <id>tag:blog.capdata.fr,2023-08-02:/index.php/chiffrement-des-donnees-sous-postgresql/</id>
    <content type="html">&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10163&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10163&amp;#038;title=Chiffrement%20sous%20PostgreSQL%20%3A%20mais%20sous%20quelles%20conditions%20%3F&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=Chiffrement%20sous%20PostgreSQL%20%3A%20mais%20sous%20quelles%20conditions%20%3F&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10163&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;alignnone size-medium wp-image-10165&#34; src=&#34;https://blog.capdata.fr/wp-content/uploads/2023/07/cle-300x199.png&#34; alt=&#34;&#34; width=&#34;300&#34; height=&#34;199&#34; srcset=&#34;https://blog.capdata.fr/wp-content/uploads/2023/07/cle-300x199.png 300w, https://blog.capdata.fr/wp-content/uploads/2023/07/cle.png 373w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;Lorsque l&amp;#8217;on parle sécurité des données sur une instance PostgreSQL, nous avons le choix entre le chiffrement &amp;#8220;at rest&amp;#8221; avec TDE (cf &lt;a href=&#34;https://blog.capdata.fr/index.php/transparent-data-encryption-pour-postgresql/&#34;&gt;cet article&lt;/a&gt;), ou bien l&amp;#8217;utilisation de l&amp;#8217;extension, bien connue des DBA PostgreSQL, &lt;strong&gt;pgcrypto&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Cette extension permet de disposer de fonctions de chiffrement via méthode de hashage et dite de &amp;#8220;salage&amp;#8221; pour générer des valeurs aléatoires.&lt;/p&gt;&#xA;&lt;p&gt;Dans cet article, nous allons effectuer une étude comparative sur les différents algorithmes de chiffrement, en portant notre attention sur les temps d&amp;#8217;exécution liés au chiffrage, mais aussi les problématiques de stockage que cela peut engendrer.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;h2&gt;Etat des lieux&lt;/h2&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Afin d&amp;#8217;effectuer les différents tests, nous partons sur une petite configuration machine, à savoir, une EC2 AWS t2.micro, avec 1 CPU et 1 Go de RAM.&lt;/p&gt;&#xA;&lt;p&gt;Cette VM héberge une instance de bases de données PostgreSQL version 13.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres@~]$ cat /proc/cpuinfo | egrep -i &#39;model|Mhz|core&#39;&#xD;&#xA;model : 79&#xD;&#xA;model name : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz&#xD;&#xA;cpu MHz : 2299.980&#xD;&#xA;core id : 0&#xD;&#xA;cpu cores : 1&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres@ ~]$ cat /proc/meminfo | grep -i Total&#xD;&#xA;MemTotal: 834212 kB&#xD;&#xA;SwapTotal: 0 kB&#xD;&#xA;VmallocTotal: 34359738367 kB&#xD;&#xA;HugePages_Total: 0&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Nous savons que ce n&amp;#8217;est pas avec une telle configuration que nous pouvons nous attendre à pas des performances impressionnantes, mais nous aurons au moins de quoi se faire une idée sur les caractéristiques du chiffrement.&lt;/p&gt;&#xA;&lt;p&gt;Pour notre jeu de données, nous nous appuyons sur le site &amp;#8220;DVD Rental&amp;#8221; proposant une base de données fictive de location de DVDs (oui oui cela doit encore exister cette catégorie de société ! ) (DVD Rental sur &lt;a href=&#34;https://www.postgresqltutorial.com/postgresql-getting-started/postgresql-sample-database/&#34;&gt;ce site&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;p&gt;Les tables comportent des données assez représentatives de ce que l&amp;#8217;on souhaite faire pour notre étude.&lt;/p&gt;&#xA;&lt;p&gt;Les tables proposées pour cette base sont les suivantes&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;(postgres@[local]:5433) [dvdrental]  select schemaname,tablename, pg_size_pretty(pg_relation_size(schemaname::varchar||&#39;.&#39;||tablename::varchar)) as Size_table, pg_size_pretty(pg_indexes_size(schemaname::varchar||&#39;.&#39;||tablename::varchar)) as Size_index from pg_tables where schemaname not in (&#39;pg_catalog&#39;,&#39;information_schema&#39;) order by 2 desc;&#xD;&#xA;&#xD;&#xA;------------+---------------+------------+------------&#xD;&#xA;public      | store         | 8192 bytes | 32 kB&#xD;&#xA;public      | staff         | 8192 bytes | 16 kB&#xD;&#xA;public      | rental        | 1200 kB    | 1120 kB&#xD;&#xA;public      | payment       | 864 kB     | 920 kB&#xD;&#xA;public      | language      | 8192 bytes | 16 kB&#xD;&#xA;public      | inventory     | 200 kB     | 208 kB&#xD;&#xA;public      | film_category | 48 kB      | 40 kB&#xD;&#xA;public      | film_actor    | 240 kB     | 216 kB&#xD;&#xA;public      | film          | 432 kB     | 200 kB&#xD;&#xA;public      | customer      | 72 kB      | 112 kB&#xD;&#xA;public      | country       | 8192 bytes | 16 kB&#xD;&#xA;public      | city          | 40 kB      | 48 kB&#xD;&#xA;public      | category      | 8192 bytes | 16 kB&#xD;&#xA;public      | address       | 64 kB      | 64 kB&#xD;&#xA;public      | actor         | 16 kB      | 32 kB&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Si l&amp;#8217;on souhaite avoir la liste des clients et leurs informations personnelles, y compris leur adresse, nous formulons la requête SQL suivante sur notre outil PostgreSQL client.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;div&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;(postgres@[local]:5433) [dvdrental]  select c.customer_id,c.first_name,c.last_name,c.email,c.create_date,a.address,a.district,a.phone from customer c inner join address a on (c.address_id=a.address_id);&#xD;&#xA;&#xD;&#xA;customer_id  | first_name  | last_name    | email                                    | create_date | address                                | district             | phone&#xD;&#xA;-------------+-------------+--------------+------------------------------------------+-------------+----------------------------------------+----------------------+--------------&#xD;&#xA;524          | Jared       | Ely          | jared.ely@sakilacustomer.org             | 2006-02-14  | 1003 Qinhuangdao Street                | West Java            | 35533115997&#xD;&#xA;1            | Mary        | Smith        | mary.smith@sakilacustomer.org            | 2006-02-14  | 1913 Hanoi Way                         | Nagasaki             | 28303384290&#xD;&#xA;2            | Patricia    | Johnson      | patricia.johnson@sakilacustomer.org      | 2006-02-14  | 1121 Loja Avenue                       | California           | 838635286649&#xD;&#xA;3            | Linda       | Williams     | linda.williams@sakilacustomer.org        | 2006-02-14  | 692 Joliet Street                      | Attika               | 448477190408&#xD;&#xA;4            | Barbara     | Jones        | barbara.jones@sakilacustomer.org         | 2006-02-14  | 1566 Inegl Manor                       | Mandalay             | 705814003527&#xD;&#xA;5            | Elizabeth   | Brown        | elizabeth.brown@sakilacustomer.org       | 2006-02-14  | 53 Idfu Parkway                        | Nantou               | 10655648674&#xD;&#xA;6            | Jennifer    | Davis        | jennifer.davis@sakilacustomer.org        | 2006-02-14  | 1795 Santiago de Compostela Way        | Texas                | 860452626434&#xD;&#xA;7            | Maria       | Miller       | maria.miller@sakilacustomer.org          | 2006-02-14  | 900 Santiago de Compostela Parkway     | Central Serbia       | 716571220373&#xD;&#xA;8            | Susan       | Wilson       | susan.wilson@sakilacustomer.org          | 2006-02-14  | 478 Joliet Way                         | Hamilton             | 657282285970&#xD;&#xA;9            | Margaret    | Moore        | margaret.moore@sakilacustomer.org        | 2006-02-14  | 613 Korolev Drive                      | Masqat               | 380657522649&#xD;&#xA;10           | Dorothy     | Taylor       | dorothy.taylor@sakilacustomer.org        | 2006-02-14  | 1531 Sal Drive                         | Esfahan              | 648856936185&#xD;&#xA;11           | Lisa        | Anderson     | lisa.anderson@sakilacustomer.org         | 2006-02-14  | 1542 Tarlac Parkway                    | Kanagawa             | 635297277345&#xD;&#xA;12           | Nancy       | Thomas       | nancy.thomas@sakilacustomer.org          | 2006-02-14  | 808 Bhopal Manor                       | Haryana              | 465887807014&#xD;&#xA;13           | Karen       | Jackson      | karen.jackson@sakilacustomer.org         | 2006-02-14  | 270 Amroha Parkway                     | Osmaniye             | 695479687538&#xD;&#xA;14           | Betty       | White        | betty.white@sakilacustomer.org           | 2006-02-14  | 770 Bydgoszcz Avenue                   | California           | 517338314235&#xD;&#xA;15           | Helen       | Harris       | helen.harris@sakilacustomer.org          | 2006-02-14  | 419 Iligan Lane                        | Madhya Pradesh       | 990911107354&#xD;&#xA;16           | Sandra      | Martin       | sandra.martin@sakilacustomer.org         | 2006-02-14  | 360 Toulouse Parkway                   | England              | 949312333307&#xD;&#xA;17           | Donna       | Thompson     | donna.thompson@sakilacustomer.org        | 2006-02-14  | 270 Toulon Boulevard                   | Kalmykia             | 407752414682&#xD;&#xA; .......&#xD;&#xA;&#xD;&#xA;(599 rows)&#xD;&#xA;&#xD;&#xA;Time: 5.196 ms &lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;div&gt;&lt;/div&gt;&#xA;&lt;div&gt;Les données nous sont renvoyées en clair avec nom, prénom, adresse et téléphone des personnes.&lt;/div&gt;&#xA;&lt;div&gt;La question que l&amp;#8217;on sera amené à se poser est, combien cela va ma couter de &amp;#8220;sécuriser&amp;#8221; ces données afin que ces champs ne soient pas lisibles via un simple &amp;#8220;SELECT &amp;#8221; sans algorithme de chiffrage ?&lt;/div&gt;&#xA;&lt;div&gt;&lt;/div&gt;&#xA;&lt;div&gt;&#xA;&lt;h2&gt;Mise en place&lt;/h2&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Comme évoqué ci-dessus, nous utiliserons l&amp;#8217;extension &amp;#8220;pgcrypto&amp;#8221; pour réaliser nos différents tests de chiffrement.&lt;/p&gt;&#xA;&lt;p&gt;Nous avons la version 1.3 de pgcrypto sur une instance PostgreSQL 13&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;(postgres@[local]:5433) [dvdrental]  \dx&#xD;&#xA;Name      | Version | Schema     | Description&#xD;&#xA;----------+---------+------------+------------------------------&#xD;&#xA;pgcrypto  | 1.3     | public     | cryptographic functions&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;div&gt;&lt;/div&gt;&#xA;&lt;p&gt;Les données que nous nous proposons de traiter seront extraits de la requête avec jointure interne entre la table des clients (customer) et la table des adresses clients (address).&lt;/p&gt;&#xA;&lt;p&gt;Le plan d&amp;#8217;exécution de cette requête est assez simple. 2 lectures séquentielles sont effectuées directement sur les tables heap customer et address dans la mesure ou aucune clause where n&amp;#8217;est indiquée.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;(postgres@[local]:5433) [dvdrental]  explain (analyze, verbose) select c.customer_id,c.first_name,c.last_name,c.email,c.create_date,a.address,a.district,a.phone from customer c inner join address a on (c.address_id=a.address_id);&#xD;&#xA;&#xD;&#xA;QUERY PLAN&#xD;&#xA;---------------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;Hash Join (cost=21.57..38.14 rows=599 width=94) (actual time=0.978..2.295 rows=599 loops=1)&#xD;&#xA;Output: c.customer_id, c.first_name, c.last_name, c.email, c.create_date, a.address, a.district, a.phone&#xD;&#xA;Inner Unique: true&#xD;&#xA;Hash Cond: (c.address_id = a.address_id)&#xD;&#xA;- Seq Scan on public.customer c (cost=0.00..14.99 rows=599 width=55) (actual time=0.009..0.433 rows=599 loops=1)&#xD;&#xA;Output: c.customer_id, c.store_id, c.first_name, c.last_name, c.email, c.address_id, c.activebool, c.create_date, c.last_update, c.active&#xD;&#xA;- Hash (cost=14.03..14.03 rows=603 width=45) (actual time=0.958..0.961 rows=603 loops=1)&#xD;&#xA;Output: a.address, a.district, a.phone, a.address_id&#xD;&#xA;Buckets: 1024 Batches: 1 Memory Usage: 56kB&#xD;&#xA;- Seq Scan on public.address a (cost=0.00..14.03 rows=603 width=45) (actual time=0.007..0.477 rows=603 loops=1)&#xD;&#xA;Output: a.address, a.district, a.phone, a.address_id&#xD;&#xA;Planning Time: 0.271 ms&#xD;&#xA;Execution Time: 2.705 ms&#xD;&#xA;(13 rows)&#xD;&#xA;&#xD;&#xA;Time: 3.476 ms&lt;/pre&gt;&#xA;&lt;p&gt;Pour cette simple requête, nous n&amp;#8217;avons besoin que de 3 millisecondes pour trier les données, avec un coût de 38, et ramener les 599 lignes.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;h3&gt;Chiffrement classique&lt;/h3&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Le chiffrement classique consiste à utiliser les fonctions simples &amp;#8220;encrypt / decrypt&amp;#8221;.&lt;br /&gt;&#xA;Ces 2 fonctions utilisent une clé de chiffrement que l&amp;#8217;on passe à chacun des champs cryptés lors des ordres INSERT et SELECT.&lt;/p&gt;&#xA;&lt;p&gt;Tout d&amp;#8217;abord on crée les 2 tables vides, copies des tables &amp;#8220;customer&amp;#8221; et &amp;#8220;address&amp;#8221;&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;CREATE TABLE IF NOT EXISTS public.customer_encrypt&#xD;&#xA;(&#xD;&#xA;customer_id integer,&#xD;&#xA;store_id smallint ,&#xD;&#xA;first_name bytea ,&#xD;&#xA;last_name bytea ,&#xD;&#xA;email bytea,&#xD;&#xA;address_id smallint,&#xD;&#xA;activebool boolean,&#xD;&#xA;create_date date,&#xD;&#xA;last_update timestamp without time zone,&#xD;&#xA;active integer,&#xD;&#xA;CONSTRAINT customer_pkey_crypt PRIMARY KEY (customer_id)&#xD;&#xA;)&#xD;&#xA;TABLESPACE pg_default;&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;CREATE TABLE IF NOT EXISTS public.address_encrypt&#xD;&#xA;(&#xD;&#xA;address_id integer,&#xD;&#xA;address bytea,&#xD;&#xA;address2 character varying(50),&#xD;&#xA;district character varying(20),&#xD;&#xA;city_id smallint,&#xD;&#xA;postal_code character varying(10),&#xD;&#xA;phone bytea,&#xD;&#xA;last_update timestamp without time zone,&#xD;&#xA;CONSTRAINT address_key_crypt PRIMARY KEY (address_id)&#xD;&#xA;)&#xD;&#xA;TABLESPACE pg_default;&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Puis on y insère les données à partir des tables sources &amp;#8220;customer&amp;#8221; et &amp;#8220;address&amp;#8221;. Pour cela, nous utilisons la fonction &amp;#8220;encrypt&amp;#8221; avec la clé &amp;#8220;capdata2023&amp;#8221; et l&amp;#8217;algorithme aes.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;insert into public.customer_encrypt&#xD;&#xA;select customer_id,&#xD;&#xA;store_id,&#xD;&#xA;encrypt(c.first_name::bytea,&#39;capdata2023&#39;,&#39;aes&#39;),&#xD;&#xA;encrypt(c.last_name::bytea,&#39;capdata2023&#39;,&#39;aes&#39;),&#xD;&#xA;encrypt(c.email::bytea,&#39;capdata2023&#39;,&#39;aes&#39;),&#xD;&#xA;address_id,&#xD;&#xA;activebool,&#xD;&#xA;create_date,&#xD;&#xA;last_update,&#xD;&#xA;active&#xD;&#xA;from customer c;&#xD;&#xA;INSERT 0 599&#xD;&#xA;Time: 5.297 ms&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;insert into public.address_encrypt&#xD;&#xA;select address_id,&#xD;&#xA;encrypt(address::bytea,&#39;capdata2023&#39;,&#39;aes&#39;),&#xD;&#xA;address2,&#xD;&#xA;district,&#xD;&#xA;city_id,&#xD;&#xA;postal_code,&#xD;&#xA;encrypt(phone::bytea,&#39;capdata2023&#39;,&#39;aes&#39;),&#xD;&#xA;last_update&#xD;&#xA;from address;&#xD;&#xA;INSERT 0 603&#xD;&#xA;Time: 4.616 ms&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Les données dans les tables sont bien chiffrées comme le montre le simple SELECT suivant&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;(postgres@[local]:5433) [dvdrental]  select * from customer_encrypt limit 10;&#xD;&#xA;&#xD;&#xA;customer_id  | store_id | first_name                         | last_name                          | email                                                                                              | address_id | activebool | create_date | last_update | active&#xD;&#xA;-------------+----------+------------------------------------+------------------------------------+----------------------------------------------------------------------------------------------------+------------+------------+-------------+-------------------------+--------&#xD;&#xA;524          | 1        | \x18a7f8f4ba98111a01f63aef09773202 | \xdf4bcb77c652d6291c34ec7788cbe881 | \xa536a4f46d1bcc00f7183b46b68da712d70a0f419c1e58d778a4e9a3771828d7                                 | 530 | t | 2006-02-14 | 2013-05-26 14:49:45.738 | 1&#xD;&#xA;1            | 1        | \x4f49ec91c5f38f8d3f751e42966f5695 | \x7c78e265d6e86fc17cdc78ebf1b41dd3 | \xac61ff9165a035a68a821c3959f5867a218fed8e350853e14d0c0a7dcf49b6d5                                 | 5   | t | 2006-02-14 | 2013-05-26 14:49:45.738 | 1&#xD;&#xA;2            | 1        | \x541dec9d2a1688ff55fe0730e184548b | \x15200a194b068c59b0431271cf6f3c12 | \x7c9b39f5896ac24d8bedc08427adbfe1d5c22379d66dfd2881d3bdabe9b5cae60c329724424be9c6bcfe08cffc356c3c | 6   | t | 2006-02-14 | 2013-05-26 14:49:45.738 | 1&#xD;&#xA;3            | 1        | \x4f1dd6b1d35f3024eb7c6cbf5c600269 | \x47d3a708ba137f5b9a0b873df5a7e340 | \x9297172b1a299f013db248a00d7414c7ea1378fbefc143e3f1f632c431ecf8597b5307f415eb82f672b15449c93c297e | 7   | t | 2006-02-14 | 2013-05-26 14:49:45.738 | 1&#xD;&#xA;4            | 2        | \x84554c6f4c26d2f9c0b832b311263883 | \x6eff33a47393acf9d178afa9553ffae4 | \xe912cb073583fb399c92379d3529b18cf39754828ed28e02e31e3b8c9b523d2c02a18bfebc210bab193d8489cdd11914 | 8   | t | 2006-02-14 | 2013-05-26 14:49:45.738 | 1&#xD;&#xA;5            | 1        | \xca5601a262cbc84669558ba7199f5960 | \x99fc3b33675cb5de00c92447f6f7e8ed | \xae7ea0ea5204c1df2e596af38b53a2da84cce415ae4ba5645df6dba7826e868a26eb59af5e79a7f8a4d55abc1382499b | 9   | t | 2006-02-14 | 2013-05-26 14:49:45.738 | 1&#xD;&#xA;6            | 2        | \xb5f9f526337e730b25f4c4f7dab8eb91 | \x52bba94e13cc36be9f1094c1bae22c47 | \x50c4a57f06048c579897fce47603945db4d7143f6deaa5d801c447f23edde371565e24c4bc53e272e0ebf32ace80fbd5 | 10  | t | 2006-02-14 | 2013-05-26 14:49:45.738 | 1&#xD;&#xA;7            | 1        | \xac6e41d9fb3a3eaefd0775e5b646a730 | \xb8ba78ad82aff0a50717301716e59013 | \xad3cec70e819240d7f7ddd6066364332f0c6b504d15b6627516deb13fe591bd2                                 | 11  | t | 2006-02-14 | 2013-05-26 14:49:45.738 | 1&#xD;&#xA;8            | 2        | \x8aeb1a151900c8c2b3ac52c3a9c78a42 | \xea0c5c0e6546ffc8da1ef4f04f5addea | \x5eac14927a3c464e8cd88122d02271333e7235e8d212e1c2722a6b3804ba1672                                 | 12  | t | 2006-02-14 | 2013-05-26 14:49:45.738 | 1&#xD;&#xA;9            | 2        | \x9248a51a98b10f1c0499f37604e2caa3 | \x254b523f8e750e100218947a2f838585 | \x706c681ae5692ba107cb51c3f54b1ef2699c1e463b68b8fbc48f8f9f15c86a45d456498740e41097f99f46c80837dcbf | 13  | t | 2006-02-14 | 2013-05-26 14:49:45.738 | 1&lt;/pre&gt;&#xA;&lt;div&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;/div&gt;&#xA;&lt;p&gt;Pour déchiffrer les données de notre requête SQL avec jointure entre les clients et leurs adresses, nous devons appeler la fonction &amp;#8220;decrypt&amp;#8221; pour chaque champ, avec la clé de chiffrage associée. Afin de lire correctement la valeur, utiliser la fonction &amp;#8220;convert_from&amp;#8221; pour transformer l&amp;#8217;information de façon lisible.&lt;/p&gt;&#xA;&lt;p&gt;Ce qui donne la requête suivante :&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;&#xD;&#xA;&#xD;&#xA;(postgres@[local]:5433) [dvdrental]  select c.customer_id,&#xD;&#xA;convert_from(decrypt(c.first_name,&#39;capdata2023&#39;,&#39;aes&#39;),&#39;UTF8&#39;) as first_name,&#xD;&#xA;convert_from(decrypt(c.last_name,&#39;capdata2023&#39;,&#39;aes&#39;),&#39;UTF8&#39;) as last_name,&#xD;&#xA;convert_from(decrypt(c.email,&#39;capdata2023&#39;,&#39;aes&#39;),&#39;UTF8&#39;) as email,&#xD;&#xA;c.create_date,&#xD;&#xA;convert_from(decrypt(a.address,&#39;capdata2023&#39;,&#39;aes&#39;),&#39;UTF8&#39;) as adresse,&#xD;&#xA;a.district,&#xD;&#xA;convert_from(decrypt(a.phone,&#39;capdata2023&#39;,&#39;aes&#39;),&#39;UTF8&#39;) as telephone&#xD;&#xA;from customer_encrypt c&#xD;&#xA;inner join address_encrypt a&#xD;&#xA;on (c.address_id=a.address_id);&#xD;&#xA;&#xD;&#xA;customer_id  | first_name  | last_name    | email                                    | create_date | adresse                                | district             | telephone&#xD;&#xA;-------------+-------------+--------------+------------------------------------------+-------------+----------------------------------------+----------------------+--------------&#xD;&#xA;524          | Jared       | Ely          | jared.ely@sakilacustomer.org             | 2006-02-14  | 1003 Qinhuangdao Street                | West Java            | 35533115997&#xD;&#xA;1            | Mary        | Smith        | mary.smith@sakilacustomer.org            | 2006-02-14  | 1913 Hanoi Way                         | Nagasaki             | 28303384290&#xD;&#xA;2            | Patricia    | Johnson      | patricia.johnson@sakilacustomer.org      | 2006-02-14  | 1121 Loja Avenue                       | California | 838635286649&#xD;&#xA;3            | Linda       | Williams     | linda.williams@sakilacustomer.org        | 2006-02-14  | 692 Joliet Street                      | Attika | 448477190408&#xD;&#xA;4            | Barbara     | Jones        | barbara.jones@sakilacustomer.org         | 2006-02-14  | 1566 Inegl Manor                       | Mandalay | 705814003527&#xD;&#xA;5            | Elizabeth   | Brown        | elizabeth.brown@sakilacustomer.org       | 2006-02-14  | 53 Idfu Parkway                        | Nantou | 10655648674&#xD;&#xA;6            | Jennifer    | Davis        | jennifer.davis@sakilacustomer.org        | 2006-02-14  | 1795 Santiago de Compostela Way        | Texas | 860452626434&#xD;&#xA;7            | Maria       | Miller       | maria.miller@sakilacustomer.org          | 2006-02-14  | 900 Santiago de Compostela Parkway     | Central Serbia | 716571220373&#xD;&#xA;8            | Susan       | Wilson       | susan.wilson@sakilacustomer.org          | 2006-02-14  | 478 Joliet Way                         | Hamilton | 657282285970&#xD;&#xA;9            | Margaret    | Moore        | margaret.moore@sakilacustomer.org        | 2006-02-14  | 613 Korolev Drive                      | Masqat | 380657522649&#xD;&#xA;10           | Dorothy     | Taylor       | dorothy.taylor@sakilacustomer.org        | 2006-02-14  | 1531 Sal Drive                         | Esfahan | 648856936185&#xD;&#xA;11           | Lisa        | Anderson     | lisa.anderson@sakilacustomer.org         | 2006-02-14  | 1542 Tarlac Parkway                    | Kanagawa | 635297277345&#xD;&#xA;12           | Nancy       | Thomas       | nancy.thomas@sakilacustomer.org          | 2006-02-14  | 808 Bhopal Manor                       | Haryana | 465887807014&#xD;&#xA;13           | Karen       | Jackson      | karen.jackson@sakilacustomer.org         | 2006-02-14  | 270 Amroha Parkway                     | Osmaniye | 695479687538&#xD;&#xA;14           | Betty       | White        | betty.white@sakilacustomer.org           | 2006-02-14  | 770 Bydgoszcz Avenue                   | California | 517338314235&#xD;&#xA;15           | Helen       | Harris       | helen.harris@sakilacustomer.org          | 2006-02-14  | 419 Iligan Lane                        | Madhya Pradesh | 990911107354&#xD;&#xA;16           | Sandra      | Martin       | sandra.martin@sakilacustomer.org         | 2006-02-14  | 360 Toulouse Parkway                   | England | 949312333307&#xD;&#xA;17           | Donna       | Thompson     | donna.thompson@sakilacustomer.org        | 2006-02-14  | 270 Toulon Boulevard                   | Kalmykia | 407752414682&#xD;&#xA;&#xD;&#xA; ...&#xD;&#xA;&#xD;&#xA;(599 rows)&#xD;&#xA;&#xD;&#xA;Time: 5.064 ms&lt;/pre&gt;&#xA;&lt;div&gt;&lt;/div&gt;&#xA;&lt;pre&gt;&lt;/pre&gt;&#xA;&lt;div&gt;&lt;/div&gt;&#xA;&lt;div&gt;Le temps d&amp;#8217;exécution de cette requête est d&amp;#8217;un peu plus de 5 millisecondes, nous sommes donc très proches de ce qui a été relevé sur les tables originales.&lt;/div&gt;&#xA;&lt;div&gt;&lt;/div&gt;&#xA;&lt;h3&gt;Chiffrement PGP symétrique&lt;/h3&gt;&#xA;&lt;div&gt;&lt;/div&gt;&#xA;&lt;div&gt;&#xA;&lt;p&gt;Le chiffrement PGP (Pretty Good Privacy) utilise des standards liés à OpenPGP (RFC 2440).&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div&gt;Le procédé consiste à utiliser un message chiffré PGP en deux parties.&lt;br /&gt;&#xA;&amp;#8211; Un paquet est envoyé avec la clé de session (clé symétrique ou bien une clé publique)&lt;br /&gt;&#xA;&amp;#8211; Paquet contenant les données chiffrées avec la clé de session.&lt;br /&gt;&#xA;Avec un chiffrement à clé symétrique, le mot de passe est envoyé crypté avec l’algorithme String2key (S2K).&lt;/div&gt;&#xA;&lt;div&gt;&lt;/div&gt;&#xA;&lt;div&gt;Si une clé de session choisie par l&amp;#8217;utilisateur, elle sera également chiffrée suivant le même algorithme.&lt;/div&gt;&#xA;&lt;div&gt;&lt;/div&gt;&#xA;&lt;div&gt;Enfin les données sont formatées avec un hachage SHA1, et sont préfixées avec un bloc d’octets pris au hasard.&lt;br /&gt;&#xA;Puis elles sont chiffrées avec la clé de session.&lt;/div&gt;&#xA;&lt;div&gt;&lt;/div&gt;&#xA;&lt;div&gt;L&amp;#8217;étape de création de tables de tests et insertion des données à partir des tables sources &amp;#8220;customer&amp;#8221; et &amp;#8220;address&amp;#8221; est également nécessaire pour notre exemple.&lt;/div&gt;&#xA;&lt;div&gt;&lt;/div&gt;&#xA;&lt;div&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;CREATE TABLE IF NOT EXISTS public.customer_pgp_sym&#xD;&#xA;(&#xD;&#xA;customer_id integer,&#xD;&#xA;store_id smallint , &#xD;&#xA;first_name bytea , &#xD;&#xA;last_name bytea , &#xD;&#xA;email bytea, &#xD;&#xA;address_id smallint, &#xD;&#xA;activebool boolean, &#xD;&#xA;create_date date, &#xD;&#xA;last_update timestamp without time zone, &#xD;&#xA;active integer,&#xD;&#xA;CONSTRAINT customer_pkey_sym PRIMARY KEY (customer_id) &#xD;&#xA;)&#xD;&#xA;TABLESPACE pg_default;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;div&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;/div&gt;&#xA;&lt;div&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;CREATE TABLE IF NOT EXISTS public.address_pgp_sym&#xD;&#xA;(&#xD;&#xA;address_id integer, &#xD;&#xA;address bytea,&#xD;&#xA;address2 character varying(50),&#xD;&#xA;district character varying(20),&#xD;&#xA;city_id smallint,&#xD;&#xA;postal_code character varying(10), &#xD;&#xA;phone bytea,&#xD;&#xA;last_update timestamp without time zone,&#xD;&#xA;CONSTRAINT address_key_sym PRIMARY KEY (address_id)&#xD;&#xA;)&#xD;&#xA;TABLESPACE pg_default;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;div&gt;&lt;/div&gt;&#xA;&lt;div&gt;Insertion des données. Nous utilisons un algorithme &amp;#8220;aes256&amp;#8221; avec compression et clé de session.&lt;/div&gt;&#xA;&lt;div&gt;La clé de chiffrement est toujours &amp;#8216;capdata2023&amp;#8217;&lt;/div&gt;&#xA;&lt;div&gt;&lt;/div&gt;&#xA;&lt;div&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;insert into public.customer_pgp_sym_256&#xD;&#xA;select customer_id,&#xD;&#xA;store_id,&#xD;&#xA;pgp_sym_encrypt(c.first_name,&#39;capdata2023&#39;,&#39;cipher-algo=aes256, compress-algo=1, sess-key=1&#39;),&#xD;&#xA;pgp_sym_encrypt(c.last_name,&#39;capdata2023&#39;,&#39;cipher-algo=aes256, compress-algo=1, sess-key=1&#39;),&#xD;&#xA;pgp_sym_encrypt(c.email,&#39;capdata2023&#39;,&#39;cipher-algo=aes256, compress-algo=1, sess-key=1&#39;),&#xD;&#xA;address_id,&#xD;&#xA;activebool,&#xD;&#xA;create_date,&#xD;&#xA;last_update,&#xD;&#xA;active&#xD;&#xA;from customer c;&#xD;&#xA;&#xD;&#xA;INSERT 0 599&#xD;&#xA;Time: 1822.944 ms (00:01.823)&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;div&gt;&lt;/div&gt;&#xA;&lt;div&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;insert into public.address_pgp_sym_256&#xD;&#xA;select address_id,&#xD;&#xA;pgp_sym_encrypt(address,&#39;capdata2023&#39;,&#39;cipher-algo=aes256, compress-algo=1, sess-key=1&#39;),&#xD;&#xA;address2,&#xD;&#xA;district,&#xD;&#xA;city_id,&#xD;&#xA;postal_code,&#xD;&#xA;pgp_sym_encrypt(phone,&#39;capdata2023&#39;,&#39;cipher-algo=aes256, compress-algo=1, sess-key=1&#39;),&#xD;&#xA;last_update&#xD;&#xA;from address;&#xD;&#xA;&#xD;&#xA;INSERT 0 603&#xD;&#xA;Time: 1244.807 ms (00:01.245)&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;Nous dépassons la seconde à chaque opération d&amp;#8217;insertions dans les nouvelles tables !!&lt;/p&gt;&#xA;&lt;p&gt;Si l&amp;#8217;on souhaite décrypter les champs , nous utilisons la fonction &amp;#8220;pgp_sym_decrypt&amp;#8221; et notre clé de chiffrement.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;&#xD;&#xA;&#xD;&#xA;select c.customer_id,&#xD;&#xA;pgp_sym_decrypt(c.first_name,&#39;capdata2023&#39;) as first_name,&#xD;&#xA;pgp_sym_decrypt(c.last_name,&#39;capdata2023&#39;) as last_name,&#xD;&#xA;pgp_sym_decrypt(c.email,&#39;capdata2023&#39;) as email,&#xD;&#xA;c.create_date,&#xD;&#xA;pgp_sym_decrypt(a.address,&#39;capdata2023&#39;) as adresse,&#xD;&#xA;a.district,&#xD;&#xA;pgp_sym_decrypt(a.phone,&#39;capdata2023&#39;) as telephone&#xD;&#xA;from customer_pgp_sym_256 c&#xD;&#xA;inner join address_pgp_sym_256 a&#xD;&#xA;on (c.address_id=a.address_id);&#xD;&#xA;&#xD;&#xA;customer_id  | first_name  | last_name    | email                                    | create_date | adresse                                | district             | telephone&#xD;&#xA;-------------+-------------+--------------+------------------------------------------+-------------+----------------------------------------+----------------------+--------------&#xD;&#xA;524          | Jared       | Ely          | jared.ely@sakilacustomer.org             | 2006-02-14  | 1003 Qinhuangdao Street                | West Java            | 35533115997&#xD;&#xA;1            | Mary        | Smith        | mary.smith@sakilacustomer.org            | 2006-02-14  | 1913 Hanoi Way                         | Nagasaki             | 28303384290&#xD;&#xA;2            | Patricia    | Johnson      | patricia.johnson@sakilacustomer.org      | 2006-02-14  | 1121 Loja Avenue                       | California           | 838635286649&#xD;&#xA;3            | Linda       | Williams     | linda.williams@sakilacustomer.org        | 2006-02-14  | 692 Joliet Street                      | Attika               | 448477190408&#xD;&#xA;4            | Barbara     | Jones        | barbara.jones@sakilacustomer.org         | 2006-02-14  | 1566 Inegl Manor                       | Mandalay             | 705814003527&#xD;&#xA;5            | Elizabeth   | Brown        | elizabeth.brown@sakilacustomer.org       | 2006-02-14  | 53 Idfu Parkway                        | Nantou               | 10655648674&#xD;&#xA;6            | Jennifer    | Davis        | jennifer.davis@sakilacustomer.org        | 2006-02-14  | 1795 Santiago de Compostela Way        | Texas                | 860452626434&#xD;&#xA;7            | Maria       | Miller       | maria.miller@sakilacustomer.org          | 2006-02-14  | 900 Santiago de Compostela Parkway     | Central Serbia       | 716571220373&#xD;&#xA;8            | Susan       | Wilson       | susan.wilson@sakilacustomer.org          | 2006-02-14  | 478 Joliet Way                         | Hamilton             | 657282285970&#xD;&#xA;9            | Margaret    | Moore        | margaret.moore@sakilacustomer.org        | 2006-02-14  | 613 Korolev Drive                      | Masqat               | 380657522649&#xD;&#xA;10           | Dorothy     | Taylor       | dorothy.taylor@sakilacustomer.org        | 2006-02-14  | 1531 Sal Drive                         | Esfahan              | 648856936185&#xD;&#xA;11           | Lisa        | Anderson     | lisa.anderson@sakilacustomer.org         | 2006-02-14  | 1542 Tarlac Parkway                    | Kanagawa             | 635297277345&#xD;&#xA;12           | Nancy       | Thomas       | nancy.thomas@sakilacustomer.org          | 2006-02-14  | 808 Bhopal Manor                       | Haryana              | 465887807014&#xD;&#xA;13           | Karen       | Jackson      | karen.jackson@sakilacustomer.org         | 2006-02-14  | 270 Amroha Parkway                     | Osmaniye             | 695479687538&#xD;&#xA;14           | Betty       | White        | betty.white@sakilacustomer.org           | 2006-02-14  | 770 Bydgoszcz Avenue                   | California           | 517338314235&#xD;&#xA;15           | Helen       | Harris       | helen.harris@sakilacustomer.org          | 2006-02-14  | 419 Iligan Lane                        | Madhya Pradesh       | 990911107354&#xD;&#xA;16           | Sandra      | Martin       | sandra.martin@sakilacustomer.org         | 2006-02-14  | 360 Toulouse Parkway                   | England              | 949312333307&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; .....&#xD;&#xA;&#xD;&#xA;(599 rows)&#xD;&#xA;&#xD;&#xA;Time: 2887.341 ms (00:02.887)&lt;/pre&gt;&#xA;&lt;div&gt;&lt;/div&gt;&#xA;&lt;div&gt;Ici, nous dépassons les 2 secondes pour renvoyer les données déchiffrées.  Dans le plan d&amp;#8217;exécution de cette requête, on peut voir un coût global multiplié par 3 quasiment, et un temps global sur l&amp;#8217;opération de jointure entre les 2 tables de plus de 2800 millisecondes.&lt;/div&gt;&#xA;&lt;div&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;/div&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;Hash Join (cost=37.57..84.63 rows=599 width=177) (actual time=7.387..2886.456 rows=599 loops=1)&#xD;&#xA;Output: c.customer_id, pgp_sym_decrypt(c.first_name, &#39;capdata2023&#39;::text), pgp_sym_decrypt(c.last_name, &#39;capdata2023&#39;::text), pgp_sym_decrypt(c.email, &#39;capdata2023&#39;::text), c.create_date, pgp_sym_decrypt(a.address, &#39;capdata2023&#39;::text), a.district, pgp_sym_decrypt(a.phone, &#39;capdata2023&#39;::text)&#xD;&#xA;Inner Unique: true&#xD;&#xA;Hash Cond: (c.address_id = a.address_id)&#xD;&#xA;- Seq Scan on public.customer_pgp_sym_256 c (cost=0.00..37.99 rows=599 width=370) (actual time=0.007..0.833 rows=599 loops=1)&#xD;&#xA;Output: c.customer_id, c.store_id, c.first_name, c.last_name, c.email, c.address_id, c.activebool, c.create_date, c.last_update, c.active&#xD;&#xA;- Hash (cost=30.03..30.03 rows=603 width=253) (actual time=1.186..1.189 rows=603 loops=1)&#xD;&#xA;Output: a.address, a.district, a.phone, a.address_id&#xD;&#xA;Buckets: 1024 Batches: 1 Memory Usage: 179kB&#xD;&#xA;- Seq Scan on public.address_pgp_sym_256 a (cost=0.00..30.03 rows=603 width=253) (actual time=0.006..0.516 rows=603 loops=1)&#xD;&#xA;Output: a.address, a.district, a.phone, a.address_id&#xD;&#xA;Planning Time: 0.200 ms&#xD;&#xA;Execution Time: 2887.108 ms&#xD;&#xA;(13 rows)&#xD;&#xA;&#xD;&#xA;Time: 2887.897 ms (00:02.888)&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;h3&gt;Chiffrement PGP avec pair de clés publique/privée&lt;/h3&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;C’est la méthode la plus complexe à mettre en place, mais aussi la plus optimale en termes de sécurité.&lt;br /&gt;&#xA;Le procédé s’appuie également sur OpenPGP, mais utilise, en plus, une clé publique côté serveur de bases de données. Cette clé publique est utilisée pour chiffrer la donnée.&lt;br /&gt;&#xA;C’est au déchiffrage que la clé privée est envoyée depuis l’application pour contrôle, et qui sera utilisée pour lire les champs enregistrés.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;h4&gt;Gestion des clés RSA&lt;/h4&gt;&#xA;&lt;p&gt;Avant d’utiliser les clés publiques et clés privées, il faut les déclarer sur la machine hébergeant la base de données.&lt;/p&gt;&#xA;&lt;p&gt;Pour l’installation, nous utilisons l’utilitaire « &lt;strong&gt;gpg&lt;/strong&gt; ». Lancer la création de clés via l’option « &lt;strong&gt;full-generate-keys&lt;/strong&gt; » pour choisir les options de clés. Nous choisissons des clés RSA signées, avec un codage sur 2048 bits. La période de validité des clés est de 2 ans.&lt;/p&gt;&#xA;&lt;p&gt;Si vous lancez cette commande avec un compte &amp;#8220;non root&amp;#8221;, exécuter l&amp;#8217;option &lt;strong&gt;&amp;#8211;pinentry-mode=loopback&lt;/strong&gt;, sinon vous n&amp;#8217;aurez pas les permissions de&lt;br /&gt;&#xA;modifications des clés éventuellement déjà créées.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres@ ~]$ gpg --full-generate-key --pinentry-mode=loopback&#xD;&#xA;gpg (GnuPG) 2.2.20; Copyright (C) 2020 Free Software Foundation, Inc.&#xD;&#xA;This is free software: you are free to change and redistribute it.&#xD;&#xA;There is NO WARRANTY, to the extent permitted by law.&#xD;&#xA;&#xD;&#xA;Please select what kind of key you want:&#xD;&#xA;(1) RSA and RSA (default)&#xD;&#xA;(2) DSA and Elgamal&#xD;&#xA;(3) DSA (sign only)&#xD;&#xA;(4) RSA (sign only)&#xD;&#xA;(14) Existing key from card&#xD;&#xA;Your selection? 1&#xD;&#xA;RSA keys may be between 1024 and 4096 bits long.&#xD;&#xA;What keysize do you want? (2048) 2048&#xD;&#xA;Requested keysize is 2048 bits&#xD;&#xA;Please specify how long the key should be valid.&#xD;&#xA;0 = key does not expire&#xD;&#xA; = key expires in n days&#xD;&#xA;w = key expires in n weeks&#xD;&#xA;m = key expires in n months&#xD;&#xA;y = key expires in n years&#xD;&#xA;Key is valid for? (0) 2y&#xD;&#xA;Key expires at Wed 09 Jul 2025 02:28:18 PM UTC&#xD;&#xA;Is this correct? (y/N) y&#xD;&#xA;&#xD;&#xA;GnuPG needs to construct a user ID to identify your key.&#xD;&#xA;&#xD;&#xA;Real name: capdata&#xD;&#xA;Email address: &#xD;&#xA;Comment: capdata gpg PG test&#xD;&#xA;You selected this USER-ID:&#xD;&#xA;&amp;quot;capdata (capdata gpg PG test) &amp;quot;&#xD;&#xA;&#xD;&#xA;Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? O&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;pub rsa2048 2023-07-10 [SC] [expires: 2025-07-09]&#xD;&#xA;50B8DAB80C7E568169DCF9A7A38D290FAA943D45&#xD;&#xA;uid capdata (capdata gpg PG test) &#xD;&#xA;sub rsa2048 2023-07-10 [E] [expires: 2025-07-09]&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Vérifications&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres@~]$ gpg --list-keys --keyid-format short&#xD;&#xA;gpg: checking the trustdb&#xD;&#xA;gpg: marginals needed: 3 completes needed: 1 trust model: pgp&#xD;&#xA;gpg: depth: 0 valid: 1 signed: 0 trust: 0-, 0q, 0n, 0m, 0f, 1u&#xD;&#xA;gpg: next trustdb check due at 2025-07-09&#xD;&#xA;/var/lib/pgsql/.gnupg/pubring.kbx&#xD;&#xA;---------------------------------&#xD;&#xA;pub rsa2048/AA943D45 2023-07-10 [SC] [expires: 2025-07-09]&#xD;&#xA;50B8DAB80C7E568169DCF9A7A38D290FAA943D45&#xD;&#xA;uid [ultimate] capdata (capdata gpg PG test) &#xD;&#xA;sub rsa2048/1756306E 2023-07-10 [E] [expires: 2025-07-09]&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;et&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres@~]$ gpg --list-secret-keys --keyid-format short&#xD;&#xA;/var/lib/pgsql/.gnupg/pubring.kbx&#xD;&#xA;---------------------------------&#xD;&#xA;sec rsa2048/AA943D45 2023-07-10 [SC] [expires: 2025-07-09]&#xD;&#xA;50B8DAB80C7E568169DCF9A7A38D290FAA943D45&#xD;&#xA;uid [ultimate] capdata (capdata gpg PG test) &#xD;&#xA;ssb rsa2048/1756306E 2023-07-10 [E] [expires: 2025-07-09]&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Exporter la clé publique et la clé privée&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres@~]$ gpg --armor --export &#39;capdata&#39;&#xD;&#xA;-----BEGIN PGP PUBLIC KEY BLOCK-----&#xD;&#xA;&#xD;&#xA;mQENBGSsFaoBCADMenKoGzxL7hZ1gkVHUrY4UXA34ckuZn6yOeSwb/mrY/HdXVtz&#xD;&#xA;MO+cCCmJyp0rS3WoWAM+2bcstpAOgJaRzjZMbbKx9P0BocwbahwMbEgGY9J10l6S&#xD;&#xA;KT79khDmLrkLuXxiDl3IzsqatqMYIphrdNMZmUYIo5YegX/zcrgY2b3+xRdiPLnk&#xD;&#xA;WOmh/hJqzHd9GnTGCDa5jkUrme0DhBHJOBuAyh1abWGHHCrYlrs2guA1iYUMiq3P&#xD;&#xA;RD8dkIP5vEZO9XBPWRe0S41Et8kuocn0AlABW0VcA0GenMeviLk/xME2Cpnme9Fr&#xD;&#xA;0FDUxVQYi6vFXuf530G5f9QQnIYsQL26DVa1ABEBAAG0OmNhcGRhdGEgKGNhcGRh&#xD;&#xA;dGEgZ3BnIFBHIHRlc3QpIDxlcmFtaUBjYXBkYXRhLW9zbW96aXVtLmNvbT6JAVQE&#xD;&#xA;EwEIAD4WIQRQuNq4DH5WgWnc+aejjSkPqpQ9RQUCZKwVqgIbAwUJA8JnAAULCQgH&#xD;&#xA;AgYVCgkICwIEFgIDAQIeAQIXgAAKCRCjjSkPqpQ9ReqCB/97Fk6gWWYSfHQoQrH4&#xD;&#xA;N7Rlf1tNN0M5N7gmO6qZQVZzR5qiV1y3ahAIBPyIcQla9Nb3ry1NE5QayZ1FyEnu&#xD;&#xA;vTTVF2CWq0yXtes3Sv7Q2DrzoiENVwOeGSxqsx/IqfY8iFL6m3hXwXC51JNraLFh&#xD;&#xA;sTP617LKvfSETr+UFpkctdAfgmxlzJ7cUHF+m0lr7OsN9e5XZ8S9CwInFX6GJPDS&#xD;&#xA;j/CpUr4l/fdZa5H/1pc+gFBDWoaZYquqoYXM2YHOkPp9RZ12uejbRaIn/SlYKutE.......&#xD;&#xA;......&#xD;&#xA;mkx5lbcQlsaWj8PKM56mCgKF&#xD;&#xA;=U1rR&#xD;&#xA;-----END PGP PUBLIC KEY BLOCK-----&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;et&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[postgres@~]$ gpg --armor --export-secret-key &#39;capdata&#39;&#xD;&#xA;-----BEGIN PGP PRIVATE KEY BLOCK-----&#xD;&#xA;&#xD;&#xA;lQOYBGSsFaoBCADMenKoGzxL7hZ1gkVHUrY4UXA34ckuZn6yOeSwb/mrY/HdXVtz&#xD;&#xA;MO+cCCmJyp0rS3WoWAM+2bcstpAOgJaRzjZMbbKx9P0BocwbahwMbEgGY9J10l6S&#xD;&#xA;KT79khDmLrkLuXxiDl3IzsqatqMYIphrdNMZmUYIo5YegX/zcrgY2b3+xRdiPLnk&#xD;&#xA;WOmh/hJqzHd9GnTGCDa5jkUrme0DhBHJOBuAyh1abWGHHCrYlrs2guA1iYUMiq3P&#xD;&#xA;RD8dkIP5vEZO9XBPWRe0S41Et8kuocn0AlABW0VcA0GenMeviLk/xME2Cpnme9Fr&#xD;&#xA;0FDUxVQYi6vFXuf530G5f9QQnIYsQL26DVa1ABEBAAEAB/4poUVeJdtfDxxZ9LmD&#xD;&#xA;lZqdOTFaYzjZHkttoD1H0ahYZUr8+VCQ0XX7A6tnTw20HpMYAME6Zst1Cj8mgLYG&#xD;&#xA;/d+OrGfM9Nac4jLCoxYOTm5UhLa4v6l64vRc3kPcBUet1Cf3c7rS0w0rNgNa+tIi&#xD;&#xA;0IBZDhxUzm9WCyIAb8r83jnhGCSTaAeCBOqHnXE+JgUOdf15k1oVxYZdS73mpoNT&#xD;&#xA;aLXmmJbC7JFC74j40oP4brbUzzWo0mZo0R394ZG0booBJM2BDH4ydrSvGWbsreSF&#xD;&#xA;jo31xkHqsLOPHDlJvdVnbWVSuyjk0oL2bKWgXTz9oT1YxiaN32WRgM6cMXvXHZka&#xD;&#xA;TxhhBADa3SQQjK5+QXRYcTZjnMZ+E15AIk/DklYC1/Q/TYtKKD3w7oaoc7M8sPsq&#xD;&#xA;w7gzTMc9kAKb7NlG4x+v4+Ab5RuV08osS7ZPu3H3gZyPgjjyjwZEKG0pnMJdDfwr&#xD;&#xA;eWqhIdc35gd8FGiNHgoeFVS9pAA5TBB3W+mgR3x9Jdj/Q8htlQQA7yxwQ3/1bYyj&#xD;&#xA;ejd1Hvihq4YtvMyA7pJSkv5ptqyA/qiM6jkjH4WVL4Qew+IrmHOCfVyEjebIQgF......&#xD;&#xA;......&#xD;&#xA;5YLh06oFmkx5lbcQlsaWj8PKM56mCgKF&#xD;&#xA;=fYKN&#xD;&#xA;-----END PGP PRIVATE KEY BLOCK-----&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;La suite consistera à créer les tables pour accueillir ces données chiffrées, et insérer les données à partir des données sources.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;CREATE TABLE IF NOT EXISTS public.customer_pgp_pub&#xD;&#xA;(&#xD;&#xA;customer_id integer,&#xD;&#xA;store_id smallint , &#xD;&#xA;first_name bytea , &#xD;&#xA;last_name bytea , &#xD;&#xA;email bytea, &#xD;&#xA;address_id smallint, &#xD;&#xA;activebool boolean, &#xD;&#xA;create_date date, &#xD;&#xA;last_update timestamp without time zone, &#xD;&#xA;active integer,&#xD;&#xA;CONSTRAINT customer_pkey_pub PRIMARY KEY (customer_id) &#xD;&#xA;)&#xD;&#xA;TABLESPACE pg_default;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;CREATE TABLE IF NOT EXISTS public.address_pgp_pub&#xD;&#xA;(&#xD;&#xA;address_id integer, &#xD;&#xA;address bytea,&#xD;&#xA;address2 character varying(50),&#xD;&#xA;district character varying(20),&#xD;&#xA;city_id smallint,&#xD;&#xA;postal_code character varying(10), &#xD;&#xA;phone bytea,&#xD;&#xA;last_update timestamp without time zone,&#xD;&#xA;CONSTRAINT address_key_pub PRIMARY KEY (address_id)&#xD;&#xA;)&#xD;&#xA;TABLESPACE pg_default;&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Lors de l&amp;#8217;étape d&amp;#8217;insertion de données, nous devons renseigner la clé publique, et utiliser, sur chaque champ, la fonction &amp;#8220;pgp_pub_encrypt&amp;#8221; !&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;insert into public.customer_pgp_pub&#xD;&#xA;select customer_id,&#xD;&#xA;store_id,&#xD;&#xA;pgp_pub_encrypt(c.first_name, keys.pubkey),&#xD;&#xA;pgp_pub_encrypt(c.last_name,keys.pubkey),&#xD;&#xA;pgp_pub_encrypt(c.email,keys.pubkey),&#xD;&#xA;address_id,&#xD;&#xA;activebool,&#xD;&#xA;create_date,&#xD;&#xA;last_update,&#xD;&#xA;active&#xD;&#xA;from customer c&#xD;&#xA;cross join (select dearmor(&#39;-----BEGIN PGP PUBLIC KEY BLOCK-----&#xD;&#xA;&#xD;&#xA;mQENBGSsFaoBCADMenKoGzxL7hZ1gkVHUrY4UXA34ckuZn6yOeSwb/mrY/HdXVtz&#xD;&#xA;MO+cCCmJyp0rS3WoWAM+2bcstpAOgJaRzjZMbbKx9P0BocwbahwMbEgGY9J10l6S&#xD;&#xA;KT79khDmLrkLuXxiDl3IzsqatqMYIphrdNMZmUYIo5YegX/zcrgY2b3+xRdiPLnk&#xD;&#xA;WOmh/hJqzHd9GnTGCDa5jkUrme0DhBHJOBuAyh1abWGHHCrYlrs2guA1iYUMiq3P&#xD;&#xA;RD8dkIP5vEZO9XBPWRe0S41Et8kuocn0AlABW0VcA0GenMeviLk/xME2Cpnme9Fr&#xD;&#xA;0FDUxVQYi6vFXuf530G5f9QQnIYsQL26DVa1ABEBAAG0OmNhcGRhdGEgKGNhcGRh&#xD;&#xA;dGEgZ3BnIFBHIHRlc3QpIDxlcmFtaUBjYXBkYXRhLW9zbW96aXVtLmNvbT6JAVQE&#xD;&#xA;EwEIAD4WIQRQuNq4DH5WgWnc+aejjSkPqpQ9RQUCZKwVqgIbAwUJA8JnAAULCQgH&#xD;&#xA;AgYVCgkICwIEFgIDAQIeAQIXgAAKCRCjjSkPqpQ9ReqCB/97Fk6gWWYSfHQoQrH4.....&#xD;&#xA;....&#xD;&#xA;vrti5S7AxozOn3jUfUawgKGHRhY2/Sm06+dmThnV3O3jRqAJcerTcFyL5YLh06oF&#xD;&#xA;mkx5lbcQlsaWj8PKM56mCgKF&#xD;&#xA;=U1rR&#xD;&#xA;-----END PGP PUBLIC KEY BLOCK-----&#39;) As pubkey) &#xD;&#xA;As keys;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;INSERT 0 599&#xD;&#xA;Time: 159.320 ms&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;insert into public.address_pgp_pub&#xD;&#xA;select address_id,&#xD;&#xA;pgp_pub_encrypt(address,keys.pubkey),&#xD;&#xA;address2,&#xD;&#xA;district,&#xD;&#xA;city_id,&#xD;&#xA;postal_code,&#xD;&#xA;pgp_pub_encrypt(phone,keys.pubkey),&#xD;&#xA;last_update&#xD;&#xA;from address&#xD;&#xA;cross join (select dearmor(&#39;-----BEGIN PGP PUBLIC KEY BLOCK-----&#xD;&#xA;&#xD;&#xA;mQENBGSsFaoBCADMenKoGzxL7hZ1gkVHUrY4UXA34ckuZn6yOeSwb/mrY/HdXVtz&#xD;&#xA;MO+cCCmJyp0rS3WoWAM+2bcstpAOgJaRzjZMbbKx9P0BocwbahwMbEgGY9J10l6S&#xD;&#xA;KT79khDmLrkLuXxiDl3IzsqatqMYIphrdNMZmUYIo5YegX/zcrgY2b3+xRdiPLnk&#xD;&#xA;WOmh/hJqzHd9GnTGCDa5jkUrme0DhBHJOBuAyh1abWGHHCrYlrs2guA1iYUMiq3P&#xD;&#xA;RD8dkIP5vEZO9XBPWRe0S41Et8kuocn0AlABW0VcA0GenMeviLk/xME2Cpnme9Fr&#xD;&#xA;0FDUxVQYi6vFXuf530G5f9QQnIYsQL26DVa1ABEBAAG0OmNhcGRhdGEgKGNhcGRh&#xD;&#xA;dGEgZ3BnIFBHIHRlc3QpIDxlcmFtaUBjYXBkYXRhLW9zbW96aXVtLmNvbT6JAVQE&#xD;&#xA;EwEIAD4WIQRQuNq4DH5WgWnc+aejjSkPqpQ9RQUCZKwVqgIbAwUJA8JnAAULCQgH&#xD;&#xA;AgYVCgkICwIEFgIDAQIeAQIXgAAKCRCjjSkPqpQ9ReqCB/97Fk6gWWYSfHQoQrH4&#xD;&#xA;N7Rlf1tNN0M5N7gmO6qZQVZzR5qiV1y3ahAIBPyIcQla9Nb3ry1NE5QayZ1FyEnu&#xD;&#xA;....&#xD;&#xA;vrti5S7AxozOn3jUfUawgKGHRhY2/Sm06+dmThnV3O3jRqAJcerTcFyL5YLh06oF&#xD;&#xA;mkx5lbcQlsaWj8PKM56mCgKF&#xD;&#xA;&#xD;&#xA;=U1rR&#xD;&#xA;&#xD;&#xA;-----END PGP PUBLIC KEY BLOCK-----&#39;) As pubkey)&amp;amp;amp;amp;amp;nbsp;&#xD;&#xA;&#xD;&#xA; As keys;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;INSERT 0 599&#xD;&#xA;Time: 159.320 ms&lt;/pre&gt;&#xA;&lt;div&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;/div&gt;&#xA;&lt;div&gt;Les insertions sont plutôt rapides vis-à-vis du PGP symétriques avec le chiffrage en aes256.&lt;/div&gt;&#xA;&lt;div&gt;La restitution des données déchiffrées est permise grâce à la clé privée renseignée.&lt;/div&gt;&#xA;&lt;div&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;/div&gt;&#xA;&lt;div&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;select c.customer_id,&#xD;&#xA;pgp_pub_decrypt(c.first_name,keys.pubkey) as first_name,&#xD;&#xA;pgp_pub_decrypt(c.last_name,keys.pubkey) as last_name,&#xD;&#xA;pgp_pub_decrypt(c.email,keys.pubkey) as email,&#xD;&#xA;c.create_date,&#xD;&#xA;pgp_pub_decrypt(a.address,keys.pubkey) as adresse,&#xD;&#xA;a.district,&#xD;&#xA;pgp_pub_decrypt(a.phone,keys.pubkey) as telephone&#xD;&#xA;from customer_pgp_pub c&#xD;&#xA;inner join address_pgp_pub a&#xD;&#xA;on (c.address_id=a.address_id)&#xD;&#xA;cross join (SELECT dearmor(&#39;-----BEGIN PGP PRIVATE KEY BLOCK-----&#xD;&#xA;&#xD;&#xA;lQOYBGSsFaoBCADMenKoGzxL7hZ1gkVHUrY4UXA34ckuZn6yOeSwb/mrY/HdXVtz&#xD;&#xA;MO+cCCmJyp0rS3WoWAM+2bcstpAOgJaRzjZMbbKx9P0BocwbahwMbEgGY9J10l6S&#xD;&#xA;KT79khDmLrkLuXxiDl3IzsqatqMYIphrdNMZmUYIo5YegX/zcrgY2b3+xRdiPLnk&#xD;&#xA;WOmh/hJqzHd9GnTGCDa5jkUrme0DhBHJOBuAyh1abWGHHCrYlrs2guA1iYUMiq3P&#xD;&#xA;RD8dkIP5vEZO9XBPWRe0S41Et8kuocn0AlABW0VcA0GenMeviLk/xME2Cpnme9Fr&#xD;&#xA;0FDUxVQYi6vFXuf530G5f9QQnIYsQL26DVa1ABEBAAEAB/4poUVeJdtfDxxZ9LmD&#xD;&#xA;lZqdOTFaYzjZHkttoD1H0ahYZUr8+VCQ0XX7A6tnTw20HpMYAME6Zst1Cj8mgLYG&#xD;&#xA;/d+OrGfM9Nac4jLCoxYOTm5UhLa4v6l64vRc3kPcBUet1Cf3c7rS0w0rNgNa+tIi&#xD;&#xA;0IBZDhxUzm9WCyIAb8r83jnhGCSTaAeCBOqHnXE+JgUOdf15k1oVxYZdS73mpoNT&#xD;&#xA;aLXmmJbC7JFC74j40oP4brbUzzWo0mZo0R394ZG0booBJM2BDH4ydrSvGWbsreSF&#xD;&#xA;jo31xkHqsLOPHDlJvdVnbWVSuyjk0oL2bKWgXTz9oT1YxiaN32WRgM6cMXvXHZka&#xD;&#xA;TxhhBADa3SQQjK5+QXRYcTZjnMZ+E15AIk/DklYC1/Q/TYtKKD3w7oaoc7M8sPsq&#xD;&#xA;w7gzTMc9kAKb7NlG4x+v4+Ab5RuV08osS7ZPu3H3gZyPgjjyjwZEKG0pnMJdDfwr.....&#xD;&#xA;.....&#xD;&#xA;&#xD;&#xA;Nd51J9eivrti5S7AxozOn3jUfUawgKGHRhY2/Sm06+dmThnV3O3jRqAJcerTcFyL&#xD;&#xA;5YLh06oFmkx5lbcQlsaWj8PKM56mCgKF&#xD;&#xA;=fYKN&#xD;&#xA;-----END PGP PRIVATE KEY BLOCK-----&#39;) As pubkey) As keys;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;customer_id  | first_name  | last_name    | email                                    | create_date | adresse                                | district             | telephone&#xD;&#xA;-------------+-------------+--------------+------------------------------------------+-------------+----------------------------------------+----------------------+--------------&#xD;&#xA;524          | Jared       | Ely          | jared.ely@sakilacustomer.org              | 2006-02-14 | 1003 Qinhuangdao Street                | West Java            | 35533115997&#xD;&#xA;1            | Mary        | Smith        | mary.smith@sakilacustomer.org             | 2006-02-14 | 1913 Hanoi Way                         | Nagasaki             | 28303384290&#xD;&#xA;2            | Patricia    | Johnson      | patricia.johnson@sakilacustomer.org       | 2006-02-14 | 1121 Loja Avenue                       | California           | 838635286649&#xD;&#xA;3            | Linda       | Williams     | linda.williams@sakilacustomer.org         | 2006-02-14 | 692 Joliet Street                      | Attika               | 448477190408&#xD;&#xA;4            | Barbara     | Jones        | barbara.jones@sakilacustomer.org          | 2006-02-14 | 1566 Inegl Manor                       | Mandalay             | 705814003527&#xD;&#xA;5            | Elizabeth   | Brown        | elizabeth.brown@sakilacustomer.org        | 2006-02-14 | 53 Idfu Parkway                        | Nantou               | 10655648674&#xD;&#xA;6            | Jennifer    | Davis        | jennifer.davis@sakilacustomer.org         | 2006-02-14 | 1795 Santiago de Compostela Way        | Texas                | 860452626434&#xD;&#xA;7            | Maria       | Miller       | maria.miller@sakilacustomer.org           | 2006-02-14 | 900 Santiago de Compostela Parkway     | Central Serbia       | 716571220373&#xD;&#xA;8            | Susan       | Wilson       | susan.wilson@sakilacustomer.org           | 2006-02-14 | 478 Joliet Way                         | Hamilton             | 657282285970&#xD;&#xA;9            | Margaret    | Moore        | margaret.moore@sakilacustomer.org         | 2006-02-14 | 613 Korolev Drive                      | Masqat               | 380657522649&#xD;&#xA;10           | Dorothy     | Taylor       | dorothy.taylor@sakilacustomer.org         | 2006-02-14 | 1531 Sal Drive                         | Esfahan              | 648856936185&#xD;&#xA;11           | Lisa        | Anderson     | lisa.anderson@sakilacustomer.org          | 2006-02-14 | 1542 Tarlac Parkway                    | Kanagawa             | 635297277345&#xD;&#xA;12           | Nancy       | Thomas       | nancy.thomas@sakilacustomer.org           | 2006-02-14 | 808 Bhopal Manor                       | Haryana              | 465887807014&#xD;&#xA;13           | Karen       | Jackson      | karen.jackson@sakilacustomer.org          | 2006-02-14 | 270 Amroha Parkway                     | Osmaniye             | 695479687538&#xD;&#xA;14           | Betty       | White        | betty.white@sakilacustomer.org            | 2006-02-14 | 770 Bydgoszcz Avenue                   | California           | 517338314235&#xD;&#xA;15           | Helen       | Harris       | helen.harris@sakilacustomer.org           | 2006-02-14 | 419 Iligan Lane                        | Madhya Pradesh       | 990911107354&#xD;&#xA;16           | Sandra      | Martin       | sandra.martin@sakilacustomer.org          | 2006-02-14 | 360 Toulouse Parkway                   | England              | 949312333307&#xD;&#xA;......&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;(599 rows)&#xD;&#xA;&#xD;&#xA;Time: 11351.879 ms (00:11.352)&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;Des données relevées en 11 secondes. Concernant le plan d&amp;#8217;exécution, , le coût global de notre jointure double vis à vis du chiffrement symétrique (on passe à 175), et un temps d&amp;#8217;exécution bien plus long (11400 millisecondes pour la jointure).&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;Hash Join (cost=74.57..175.63 rows=599 width=177) (actual time=21.263..11498.855 rows=599 loops=1)&#xD;&#xA;Output: c.customer_id, pgp_pub_decrypt(c.first_name, \************************************&#xD;&#xA;Inner Unique: true&#xD;&#xA;Hash Cond: (c.address_id = a.address_id)&#xD;&#xA;- Seq Scan on public.customer_pgp_pub c (cost=0.00..91.99 rows=599 width=1030) (actual time=0.006..1.294 rows=599 loops=1)&#xD;&#xA;Output: c.customer_id, c.store_id, c.first_name, c.last_name, c.email, c.address_id, c.activebool, c.create_date, c.last_update, c.active&#xD;&#xA;- Hash (cost=67.03..67.03 rows=603 width=695) (actual time=1.806..1.809 rows=603 loops=1)&#xD;&#xA;Output: a.address, a.district, a.phone, a.address_id&#xD;&#xA;Buckets: 1024 Batches: 1 Memory Usage: 440kB&#xD;&#xA;- Seq Scan on public.address_pgp_pub a (cost=0.00..67.03 rows=603 width=695) (actual time=0.004..0.556 rows=603 loops=1)&#xD;&#xA;Output: a.address, a.district, a.phone, a.address_id&#xD;&#xA;Planning Time: 0.536 ms&#xD;&#xA;Execution Time: 11499.672 ms&#xD;&#xA;(13 rows)&#xD;&#xA;&#xD;&#xA;Time: 11501.474 ms (00:11.501)&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;h3&gt;Interprétation des résultats.&lt;/h3&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Une fois ces tests effectués, nous pouvons en tirer des conclusions.&lt;/p&gt;&#xA;&lt;h4&gt;stockage&lt;/h4&gt;&#xA;&lt;p&gt;Concernant l&amp;#8217;espace disque de chacune de ces tables, nous voyons de grandes différences&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;(postgres@[local]:5433) [dvdrental] select tablename , pg_size_pretty(pg_table_size(tablename::varchar)) as SizeMo from pg_tables where tablename like &#39;custo%&#39; or tablename like &#39;addre%&#39; order by tablename,2;&#xD;&#xA;tablename             | sizemo&#xD;&#xA;----------------------+--------&#xD;&#xA;address               | 88 kB&#xD;&#xA;address_encrypt       | 104 kB&#xD;&#xA;address_pgp_pub       | 520 kB&#xD;&#xA;address_pgp_sym_256   | 224 kB&#xD;&#xA;customer              | 96 kB&#xD;&#xA;customer_encrypt      | 120 kB&#xD;&#xA;customer_pgp_pub      | 720 kB&#xD;&#xA;customer_pgp_sym_256  | 288 kB&#xD;&#xA;(10 rows)&lt;/pre&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;-&amp;gt; Le chiffrement simple demande donc 20% de stockage en plus par rapport aux tables d&amp;#8217;origine.&lt;/p&gt;&#xA;&lt;p&gt;-&amp;gt; Avec le chiffrement symétrique et compression algo aes256, cela double le volume disque vis-à-vis du chiffrement classique.&lt;/p&gt;&#xA;&lt;p&gt;-&amp;gt; Enfin le chiffrement avec clé publique nécessite des tables 5 à 6 fois plus volumineuses que celles d&amp;#8217;origine.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;h4&gt;Les temps d&amp;#8217;exécution&lt;/h4&gt;&#xA;&lt;p&gt;Comme nous avons pu le constater au cours de ce test, le chiffrement engendre des temps de réponses bien plus importants sur notre requête test.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;-&amp;gt; Pour le chiffrement simple, un temps d&amp;#8217;exécution en insertion et sélection quasi identique. Mais l&amp;#8217;échantillon de données n&amp;#8217;est pas forcément le plus représentatif car celui-ci est plutôt restreint.&lt;/p&gt;&#xA;&lt;p&gt;-&amp;gt; Pour le chiffrement symétrique avec compression algo aes256,  temps d&amp;#8217;exécution de l&amp;#8217;insertion et de la sélection beaucoup plus longs que le chiffrement classique. Nous passons de 5 millisecondes au SELECT et INSERT à plus de 1000 millisecondes pour l&amp;#8217;INSERT et plus de 2800 millisecondes pour le SELECT.&lt;/p&gt;&#xA;&lt;p&gt;-&amp;gt; Pour le chiffrement avec clé publique/clé privée, à l&amp;#8217;insertion, c&amp;#8217;est plutôt rapide (quelques centaines de millisecondes).&lt;br /&gt;&#xA;Au select, nous dépassons les 10 secondes, pour une requête qui met 5 millisecondes sans aucun chiffrage.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Nous devons prendre en compte le fait que pour notre test, nous travaillons sur une VM extrêmement sous dimensionnée (ec2 type t2 micro).&lt;br /&gt;&#xA;Cependant, nous n&amp;#8217;avons sélectionné que quelques centaines de lignes dans nos tables, ce qui représente un échantillon faible.&lt;/p&gt;&#xA;&lt;p&gt;Qu&amp;#8217;en serait-il sur des tables de plus 100 millions de lignes ? La manipulation de données chiffrées volumineuses exigerait, sans aucun doute, plus de ressources en terme de CPU et RAM.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://s.w.org/images/core/emoji/14.0.0/72x72/1f642.png&#34; alt=&#34;🙂&#34; class=&#34;wp-smiley&#34; style=&#34;height: 1em; max-height: 1em;&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;Emmanuel Rami&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;strong&gt;Continuez votre lecture sur le blog :&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul class=&#34;similar-posts&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/pruning-de-partitions-sous-postgresql/&#34; rel=&#34;bookmark&#34; title=&#34;7 décembre 2020&#34;&gt;&amp;#8220;Pruning&amp;#8221; de partitions sous PostgreSQL ou comment bien élaguer !&lt;/a&gt; (Capdata team) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-13-les-nouveautes-interessantes/&#34; rel=&#34;bookmark&#34; title=&#34;30 octobre 2020&#34;&gt;PostgreSQL 13 : présentation&lt;/a&gt; (Emmanuel RAMI) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/quelles-solutions-de-chiffrement-de-donnees-pour-mysql-mariadb/&#34; rel=&#34;bookmark&#34; title=&#34;18 mars 2022&#34;&gt;Quelles solutions de chiffrement de données pour MySQL / MariaDB&lt;/a&gt; (David Baffaleuf) [MySQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/le-chiffrement-et-sql-server-episode-2-mise-en-oeuvre-de-tde/&#34; rel=&#34;bookmark&#34; title=&#34;16 novembre 2023&#34;&gt;Le chiffrement et SQL Server – Episode 2 : Mise en oeuvre de TDE&lt;/a&gt; (Vincent Delabre) [SQL Server]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/le-chiffrement-et-sql-server-episode-1-transparent-data-encryption-tde-vs-always-encrypted/&#34; rel=&#34;bookmark&#34; title=&#34;4 octobre 2023&#34;&gt;Le chiffrement et SQL Server &amp;#8211; Episode 1 : Transparent Data Encryption (TDE) vs Always Encrypted&lt;/a&gt; (Vincent Delabre) [SQL Server]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;!-- Similar Posts took 5.750 ms --&gt;&lt;/p&gt;&#xA;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10163&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10163&amp;#038;title=Chiffrement%20sous%20PostgreSQL%20%3A%20mais%20sous%20quelles%20conditions%20%3F&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=Chiffrement%20sous%20PostgreSQL%20%3A%20mais%20sous%20quelles%20conditions%20%3F&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10163&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/chiffrement-des-donnees-sous-postgresql/&#34;&gt;Chiffrement sous PostgreSQL : mais sous quelles conditions ?&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.capdata.fr/index.php/chiffrement-des-donnees-sous-postgresql/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lorsque l&amp;#8217;on parle sécurité des données sur une instance PostgreSQL, nous avons le choix entre le chiffrement &amp;#8220;at rest&amp;#8221; avec TDE (cf cet article), ou bien l&amp;#8217;utilisation de l&amp;#8217;extension, bien connue des DBA PostgreSQL, pgcrypto. Cette extension permet de disposer&amp;#8230; &lt;a href=&#34;https://blog.capdata.fr/index.php/chiffrement-des-donnees-sous-postgresql/&#34; class=&#34;more-link&#34;&gt;Continuer la lecture &lt;span class=&#34;meta-nav&#34;&gt;&amp;#8594;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/chiffrement-des-donnees-sous-postgresql/&#34;&gt;Chiffrement sous PostgreSQL : mais sous quelles conditions ?&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Sarah FAVEERE</name>
    </author>
  </entry>
  <entry>
    <title>PGO : opérateurs kubernetes pour PostgreSQL, la suite !</title>
    <updated>2023-06-06T12:21:23Z</updated>
    <id>tag:blog.capdata.fr,2023-06-06:/index.php/pgo-operateurs-kubernetes-pour-postgresql-la-suite/</id>
    <content type="html">&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10150&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10150&amp;#038;title=PGO%20%3A%20op%C3%A9rateurs%20kubernetes%20pour%20PostgreSQL%2C%20la%20suite%20%21&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=PGO%20%3A%20op%C3%A9rateurs%20kubernetes%20pour%20PostgreSQL%2C%20la%20suite%20%21&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10150&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;Salut à toutes et tous ! Cette semaine la suite de notre petit tour des opérateurs Kubernetes pour PostgreSQL, et après &lt;a href=&#34;https://blog.capdata.fr/index.php/kubegres-loperateur-kubernetes-cle-en-main-pour-postgresql/&#34;&gt;kubegres&lt;/a&gt;, c&amp;#8217;est au tour de &lt;a href=&#34;https://access.crunchydata.com/documentation/postgres-operator/v5/&#34;&gt;PGO &lt;/a&gt;de CrunchyData. &lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.capdata.fr/wp-content/uploads/2023/06/pgo2.png&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; src=&#34;https://blog.capdata.fr/wp-content/uploads/2023/06/pgo2.png&#34; alt=&#34;&#34; width=&#34;954&#34; height=&#34;717&#34; class=&#34;aligncenter size-full wp-image-10154&#34; srcset=&#34;https://blog.capdata.fr/wp-content/uploads/2023/06/pgo2.png 954w, https://blog.capdata.fr/wp-content/uploads/2023/06/pgo2-300x225.png 300w, https://blog.capdata.fr/wp-content/uploads/2023/06/pgo2-768x577.png 768w&#34; sizes=&#34;(max-width: 954px) 100vw, 954px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Quelques infos générales sur l&amp;#8217;opérateur PGO&lt;/h2&gt;&#xA;&lt;p&gt;Comparé à Kubegres, PGO semble plus complet dans le sens où il intègre de base un réplica par défaut, mais aussi la possibilité de backuper directement avec &lt;a href=&#34;https://pgbackrest.org/&#34;&gt;pgBackRest&lt;/a&gt; dans des repositories locaux ou cloud, un pod &lt;a href=&#34;https://www.pgbouncer.org/&#34;&gt;pgBouncer&lt;/a&gt;, et un exporter pour &lt;a href=&#34;https://prometheus.io/&#34;&gt;Prometheus&lt;/a&gt;. &lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.capdata.fr/wp-content/uploads/2023/06/pgo1-1.png&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; src=&#34;https://blog.capdata.fr/wp-content/uploads/2023/06/pgo1-1.png&#34; alt=&#34;&#34; width=&#34;1074&#34; height=&#34;660&#34; class=&#34;aligncenter size-full wp-image-10156&#34; srcset=&#34;https://blog.capdata.fr/wp-content/uploads/2023/06/pgo1-1.png 1074w, https://blog.capdata.fr/wp-content/uploads/2023/06/pgo1-1-300x184.png 300w, https://blog.capdata.fr/wp-content/uploads/2023/06/pgo1-1-1024x629.png 1024w, https://blog.capdata.fr/wp-content/uploads/2023/06/pgo1-1-768x472.png 768w&#34; sizes=&#34;(max-width: 1074px) 100vw, 1074px&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&#xA;&lt;center&gt;(source : &lt;a href=&#34;https://access.crunchydata.com/documentation/postgres-operator/v5/architecture/overview/&#34;&gt;https://access.crunchydata.com/documentation/postgres-operator/v5/architecture/overview/&lt;/a&gt;)&lt;/center&gt;&lt;/p&gt;&#xA;&lt;p&gt;Comme pour kubegres, l&amp;#8217;operateur PGO encapsule à l&amp;#8217;intérieur de ses &lt;em&gt;deployments &lt;/em&gt;des objets de base Kubernetes tels que des StatefulSets pour les pods primaire et replicas, des Services, des PV et PVC pour le stockage, etc&amp;#8230; comme nous allons le voir lors du deploiement de notre premier cluster. &lt;/p&gt;&#xA;&lt;h2&gt;Installation de l&amp;#8217;opérateur PGO&lt;/h2&gt;&#xA;&lt;p&gt;Première chose à faire avant de créer notre premier cluster, déployer l&amp;#8217;opérateur PGO. Il est possible de le faire au choix soit via &lt;a href=&#34;https://kubernetes.io/docs/tasks/manage-kubernetes-objects/kustomization/&#34;&gt;Kustomize &lt;/a&gt;soit via &lt;a href=&#34;https://helm.sh/&#34;&gt;Helm&lt;/a&gt;. CrunchyData propose &lt;a href=&#34;https://github.com/CrunchyData/postgres-operator-examples/fork&#34;&gt;un repo git à cloner&lt;/a&gt; et qui contient déjà les fichiers de configuration de base, que nous pourrons modifier au besoin pour customiser notre déploiement. Une fois le git cloné sur notre github Capdata, nous pouvons commencer à récupérer les fichiers en local et regarder le contenu des fichiers de définition. Nous utiliserons Kustomize pour l&amp;#8217;exemple :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$ git clone --depth=1 &amp;quot;https://github.com/Capdata/postgres-operator-examples.git&amp;quot;&#xD;&#xA;Cloning into &#39;postgres-operator-examples&#39;...&#xD;&#xA;remote: Enumerating objects: 140, done.&#xD;&#xA;remote: Counting objects: 100% (140/140), done.&#xD;&#xA;remote: Compressing objects: 100% (105/105), done.&#xD;&#xA;remote: Total 140 (delta 33), reused 81 (delta 26), pack-reused 0&#xD;&#xA;Receiving objects: 100% (140/140), 150.57 KiB | 3.01 MiB/s, done.&#xD;&#xA;Resolving deltas: 100% (33/33), done.&#xD;&#xA;&#xD;&#xA;$ cd postgres-operator-examples/kustomize&#xD;&#xA;&#xD;&#xA;$ tree -a install/namespace/&#xD;&#xA;install/namespace/&#xD;&#xA;├── kustomization.yaml&#xD;&#xA;└── namespace.yaml&#xD;&#xA;&#xD;&#xA;$ tree -a install/default/&#xD;&#xA;install/default/&#xD;&#xA;├── kustomization.yaml&#xD;&#xA;└── selectors.yaml&#xD;&#xA;&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;L&amp;#8217;apply de ~kustomize/install/namespace/namespace.yaml va créer un namespace dédié &lt;em&gt;postgres-operator&lt;/em&gt;: &lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;apiVersion: v1&#xD;&#xA;kind: Namespace&#xD;&#xA;metadata:&#xD;&#xA;  name: postgres-operator&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Puis ~kustomize/install/default va créer le reste de l&amp;#8217;opérateur:&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$ kubectl apply --kustomize=kustomize/install/namespace&#xD;&#xA;namespace/postgres-operator created&#xD;&#xA;&#xD;&#xA;$ kubectl apply --server-side --kustomize=kustomize/install/default&#xD;&#xA;customresourcedefinition.apiextensions.k8s.io/pgupgrades.postgres-operator.crunchydata.com serverside-applied&#xD;&#xA;customresourcedefinition.apiextensions.k8s.io/postgresclusters.postgres-operator.crunchydata.com serverside-applied&#xD;&#xA;serviceaccount/pgo serverside-applied&#xD;&#xA;serviceaccount/postgres-operator-upgrade serverside-applied&#xD;&#xA;clusterrole.rbac.authorization.k8s.io/postgres-operator serverside-applied&#xD;&#xA;clusterrole.rbac.authorization.k8s.io/postgres-operator-upgrade serverside-applied&#xD;&#xA;clusterrolebinding.rbac.authorization.k8s.io/postgres-operator serverside-applied&#xD;&#xA;clusterrolebinding.rbac.authorization.k8s.io/postgres-operator-upgrade serverside-applied&#xD;&#xA;deployment.apps/pgo serverside-applied&#xD;&#xA;deployment.apps/pgo-upgrade serverside-applied&#xD;&#xA;&#xD;&#xA;$ kubectl get all --namespace=postgres-operator&#xD;&#xA;NAME                               READY   STATUS    RESTARTS   AGE&#xD;&#xA;pod/pgo-774db98dbc-htm5d           1/1     Running   0          74m&#xD;&#xA;pod/pgo-upgrade-785dd6dc4c-cw2ld   1/1     Running   0          74m&#xD;&#xA;&#xD;&#xA;NAME                          READY   UP-TO-DATE   AVAILABLE   AGE&#xD;&#xA;deployment.apps/pgo           1/1     1            1           74m&#xD;&#xA;deployment.apps/pgo-upgrade   1/1     1            1           74m&#xD;&#xA;&#xD;&#xA;NAME                                     DESIRED   CURRENT   READY   AGE&#xD;&#xA;replicaset.apps/pgo-774db98dbc           1         1         1       74m&#xD;&#xA;replicaset.apps/pgo-upgrade-785dd6dc4c   1         1         1       74m&#xD;&#xA;&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;h2&gt;Création d&amp;#8217;un premier cluster PGO&lt;/h2&gt;&#xA;&lt;p&gt;Maintenant que notre opérateur est installé, c&amp;#8217;est le moment de s&amp;#8217;intéresser au paramétrage du futur cluster. Tout se trouve dans ~kustomize/postgres:&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$ tree -a postgres/&#xD;&#xA;postgres/&#xD;&#xA;├── kustomization.yaml&#xD;&#xA;└── postgres.yaml&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Le coeur de notre cluster se trouve dans postgresl.yaml :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;apiVersion: postgres-operator.crunchydata.com/v1beta1&#xD;&#xA;kind: PostgresCluster&#xD;&#xA;metadata:&#xD;&#xA;  name: hippo&#xD;&#xA;spec:&#xD;&#xA;  image: registry.developers.crunchydata.com/crunchydata/crunchy-postgres:ubi8-15.2-0&#xD;&#xA;  postgresVersion: 15&#xD;&#xA;  instances:&#xD;&#xA;    - name: instance1&#xD;&#xA;      dataVolumeClaimSpec:&#xD;&#xA;        accessModes:&#xD;&#xA;        - &amp;quot;ReadWriteOnce&amp;quot;&#xD;&#xA;        resources:&#xD;&#xA;          requests:&#xD;&#xA;            storage: 1Gi&#xD;&#xA;  backups:&#xD;&#xA;    pgbackrest:&#xD;&#xA;      image: registry.developers.crunchydata.com/crunchydata/crunchy-pgbackrest:ubi8-2.41-4&#xD;&#xA;      repos:&#xD;&#xA;      - name: repo1&#xD;&#xA;        volume:&#xD;&#xA;          volumeClaimSpec:&#xD;&#xA;            accessModes:&#xD;&#xA;            - &amp;quot;ReadWriteOnce&amp;quot;&#xD;&#xA;            resources:&#xD;&#xA;              requests:&#xD;&#xA;                storage: 1Gi&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Comme pour Kubegres, l&amp;#8217;opérateur PGO nous permet de créer un nouveau type d&amp;#8217;objet dans Kubernetes :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;kind: PostgresCluster&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Le nom du cluster par défaut est &amp;#8216;&lt;em&gt;hippo&lt;/em&gt;&amp;#8216; mais nous pourrons le changer sans problème. Pour les pods (primaire, réplicas, pgBackRest), les images sont précisées ainsi que les volumes qui sont rattachés via des abstractions de PVC appelées soit &amp;#8220;&lt;em&gt;dataVolumeClaimSpec&lt;/em&gt;&amp;#8221; pour les pods PostgreSQL soit &amp;#8220;&lt;em&gt;VolumeClaimSpec&lt;/em&gt;&amp;#8221; pour la partie sauvegarde. &lt;/p&gt;&#xA;&lt;p&gt;Nous pouvons compléter le fichier de définition par défaut avec quelques customisations:&lt;br /&gt;&#xA;&amp;#8211; Ajouter des quotas de ressources CPU et mémoire via &lt;em&gt;instances.resources.limits&lt;/em&gt;&lt;br /&gt;&#xA;&amp;#8211; Ajouter un réplica&lt;br /&gt;&#xA;&amp;#8211; Renommer notre cluster &amp;#8216;&lt;em&gt;pgcluster1&lt;/em&gt;&amp;#8216;&lt;br /&gt;&#xA;&amp;#8211; Et enfin ajouter un nodePort pour exposer notre cluster au monde extérieur :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;apiVersion: postgres-operator.crunchydata.com/v1beta1&#xD;&#xA;kind: PostgresCluster&#xD;&#xA;metadata:&#xD;&#xA;  name: pgcluster1&#xD;&#xA;spec:&#xD;&#xA;  image: registry.developers.crunchydata.com/crunchydata/crunchy-postgres:ubi8-15.2-0&#xD;&#xA;  postgresVersion: 15&#xD;&#xA;  instances:&#xD;&#xA;    - name: postgresdb1&#xD;&#xA;      replicas: 2&#xD;&#xA;      resources:&#xD;&#xA;        limits:&#xD;&#xA;          cpu: &amp;quot;0.5&amp;quot;&#xD;&#xA;          memory: 1Gi&#xD;&#xA;      dataVolumeClaimSpec:&#xD;&#xA;        accessModes:&#xD;&#xA;        - &amp;quot;ReadWriteOnce&amp;quot;&#xD;&#xA;        resources:&#xD;&#xA;          requests:&#xD;&#xA;            storage: 1Gi&#xD;&#xA;  backups:&#xD;&#xA;    pgbackrest:&#xD;&#xA;      image: registry.developers.crunchydata.com/crunchydata/crunchy-pgbackrest:ubi8-2.41-4&#xD;&#xA;      repos:&#xD;&#xA;      - name: repo1&#xD;&#xA;        volume:&#xD;&#xA;          volumeClaimSpec:&#xD;&#xA;            accessModes:&#xD;&#xA;            - &amp;quot;ReadWriteOnce&amp;quot;&#xD;&#xA;            resources:&#xD;&#xA;              requests:&#xD;&#xA;                storage: 1Gi&#xD;&#xA;  service:&#xD;&#xA;    metadata:&#xD;&#xA;      annotations:&#xD;&#xA;        annotation1: &amp;quot;mdnodeport1&amp;quot;&#xD;&#xA;      labels:&#xD;&#xA;        label1: &amp;quot;32000&amp;quot;&#xD;&#xA;    type: NodePort&#xD;&#xA;    nodePort: 32000&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Pour la configuration des sauvegardes, nous verrons un peu plus tard. Dans l&amp;#8217;immédiat, créons notre cluster:&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$ kubectl apply -k kustomize/postgres/&#xD;&#xA;postgrescluster.postgres-operator.crunchydata.com/pgcluster1 created&#xD;&#xA;&#xD;&#xA;$ kubectl get all --namespace=postgres-operator&#xD;&#xA;NAME                                READY   STATUS    RESTARTS   AGE&#xD;&#xA;pod/pgcluster1-postgresdb1-55pl-0   4/4     Running   0          11s&#xD;&#xA;pod/pgcluster1-postgresdb1-9w2w-0   4/4     Running   0          11s&#xD;&#xA;pod/pgcluster1-repo-host-0          2/2     Running   0          11s&#xD;&#xA;pod/pgo-774db98dbc-tshp6            1/1     Running   0          68s&#xD;&#xA;pod/pgo-upgrade-785dd6dc4c-ntwkd    1/1     Running   0          68s&#xD;&#xA;&#xD;&#xA;NAME                           TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE&#xD;&#xA;service/pgcluster1-ha          NodePort    10.102.232.74   &amp;lt;none&amp;gt;        5432:32000/TCP   51m&#xD;&#xA;service/pgcluster1-ha-config   ClusterIP   None            &amp;lt;none&amp;gt;        &amp;lt;none&amp;gt;           51m&#xD;&#xA;service/pgcluster1-pods        ClusterIP   None            &amp;lt;none&amp;gt;        &amp;lt;none&amp;gt;           51m&#xD;&#xA;service/pgcluster1-primary     ClusterIP   None            &amp;lt;none&amp;gt;        5432/TCP         51m&#xD;&#xA;service/pgcluster1-replicas    ClusterIP   10.106.148.50   &amp;lt;none&amp;gt;        5432/TCP         51m&#xD;&#xA;&#xD;&#xA;NAME                          READY   UP-TO-DATE   AVAILABLE   AGE&#xD;&#xA;deployment.apps/pgo           1/1     1            1           69s&#xD;&#xA;deployment.apps/pgo-upgrade   1/1     1            1           68s&#xD;&#xA;&#xD;&#xA;NAME                                     DESIRED   CURRENT   READY   AGE&#xD;&#xA;replicaset.apps/pgo-774db98dbc           1         1         1       68s&#xD;&#xA;replicaset.apps/pgo-upgrade-785dd6dc4c   1         1         1       68s&#xD;&#xA;&#xD;&#xA;NAME                                           READY   AGE&#xD;&#xA;statefulset.apps/pgcluster1-postgresdb1-55pl   1/1     11s&#xD;&#xA;statefulset.apps/pgcluster1-postgresdb1-9w2w   1/1     11s&#xD;&#xA;statefulset.apps/pgcluster1-repo-host          1/1     11s&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Il se peut qu&amp;#8217;il y ait des problèmes de quota mémoire / CPU disponible, les pods vont rester en Pending, et la suppression / recréation des objets ne suffit pas. La suppression du namespace se bloque en Terminating il a fallu que je déroule la &lt;a href=&#34;https://www.ibm.com/docs/en/cloud-private/3.2.0?topic=console-namespace-is-stuck-in-terminating-state&#34;&gt;procédure de suppression du namespace à la main&lt;/a&gt; pour repartir de zéro. &lt;/p&gt;&#xA;&lt;p&gt;Bref notre déploiement nous a donc créé 3 nouveaux pods et 3 StatefulSets (primaire, réplica et pgBackRest), 4 services ClusterIP et notre nodePort. &lt;/p&gt;&#xA;&lt;p&gt;Pour nous y connecter, nous avons besoin de récupérer &lt;a href=&#34;https://access.crunchydata.com/documentation/postgres-operator/5.3.1/tutorial/connect-cluster/&#34;&gt;le secret&lt;/a&gt; qui a été créé à l&amp;#8217;initialisation du cluster. Jetons un coup d&amp;#8217;oeil au secret dans sa globalité pour voir ce qu&amp;#8217;il contient:&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$ kubectl get secret --namespace=postgres-operator pgcluster1-pguser-pgcluster1 -o json&#xD;&#xA;{&#xD;&#xA;    &amp;quot;apiVersion&amp;quot;: &amp;quot;v1&amp;quot;,&#xD;&#xA;    &amp;quot;data&amp;quot;: {&#xD;&#xA;        &amp;quot;dbname&amp;quot;: &amp;quot;cGdjbHVzdGVyMQ==&amp;quot;,&#xD;&#xA;        &amp;quot;host&amp;quot;: &amp;quot;cGdjbHVzdGVyMS1wcmltYXJ5LnBvc3RncmVzLW9wZXJhdG9yLnN2Yw==&amp;quot;,&#xD;&#xA;        &amp;quot;jdbc-uri&amp;quot;: &amp;quot;amRiYzpwb3N0Z3Jlc3FsOi8vcGdjbHVzdGVyMS1wcmltYXJ5LnBvc3RncmVzLW9wZXJhdG9yLnN2Yzo1NDMyL3BnY2x1c3RlcjE/cGFzc3dvcmQ9UHBybiUzQnZ1WDlrSiU1RE1WQnZwd3QzTk5wJTJBJnVzZXI9cGdjbHVzdGVyMQ==&amp;quot;,&#xD;&#xA;        &amp;quot;password&amp;quot;: &amp;quot;UHBybjt2dVg5a0pdTVZCdnB3dDNOTnAq&amp;quot;,&#xD;&#xA;        &amp;quot;port&amp;quot;: &amp;quot;NTQzMg==&amp;quot;,&#xD;&#xA;        &amp;quot;uri&amp;quot;: &amp;quot;cG9zdGdyZXNxbDovL3BnY2x1c3RlcjE6UHBybjt2dVg5a0olNURNVkJ2cHd0M05OcCUyQUBwZ2NsdXN0ZXIxLXByaW1hcnkucG9zdGdyZXMtb3BlcmF0b3Iuc3ZjOjU0MzIvcGdjbHVzdGVyMQ==&amp;quot;,&#xD;&#xA;        &amp;quot;user&amp;quot;: &amp;quot;cGdjbHVzdGVyMQ==&amp;quot;,&#xD;&#xA;        &amp;quot;verifier&amp;quot;: &amp;quot;U0NSQU0tU0hBLTI1NiQ0MDk2Olo3OTNBUVIwU0xZUVBDY3BXNkRaSXc9PSRWUWdlc0VlSGVvVnpnakc4emkyRGJJNmlpemo1ZnJGWmN2K3c3NzZScVhVPTpDT1JDVStoQU1IeDBkRzBKaGU3dllwUTdFWTB4QzZ5RzJUUE5NWFV5MTlRPQ==&amp;quot;&#xD;&#xA;    },&#xD;&#xA;    &amp;quot;kind&amp;quot;: &amp;quot;Secret&amp;quot;,&#xD;&#xA;    &amp;quot;metadata&amp;quot;: {&#xD;&#xA;        &amp;quot;creationTimestamp&amp;quot;: &amp;quot;2023-06-05T11:39:32Z&amp;quot;,&#xD;&#xA;        &amp;quot;labels&amp;quot;: {&#xD;&#xA;            &amp;quot;postgres-operator.crunchydata.com/cluster&amp;quot;: &amp;quot;pgcluster1&amp;quot;,&#xD;&#xA;            &amp;quot;postgres-operator.crunchydata.com/pguser&amp;quot;: &amp;quot;pgcluster1&amp;quot;,&#xD;&#xA;            &amp;quot;postgres-operator.crunchydata.com/role&amp;quot;: &amp;quot;pguser&amp;quot;&#xD;&#xA;        },&#xD;&#xA;        &amp;quot;name&amp;quot;: &amp;quot;pgcluster1-pguser-pgcluster1&amp;quot;,&#xD;&#xA;        &amp;quot;namespace&amp;quot;: &amp;quot;postgres-operator&amp;quot;,&#xD;&#xA;        &amp;quot;ownerReferences&amp;quot;: [&#xD;&#xA;            {&#xD;&#xA;                &amp;quot;apiVersion&amp;quot;: &amp;quot;postgres-operator.crunchydata.com/v1beta1&amp;quot;,&#xD;&#xA;                &amp;quot;blockOwnerDeletion&amp;quot;: true,&#xD;&#xA;                &amp;quot;controller&amp;quot;: true,&#xD;&#xA;                &amp;quot;kind&amp;quot;: &amp;quot;PostgresCluster&amp;quot;,&#xD;&#xA;                &amp;quot;name&amp;quot;: &amp;quot;pgcluster1&amp;quot;,&#xD;&#xA;                &amp;quot;uid&amp;quot;: &amp;quot;80bbee62-0602-4012-9c06-dcd23ca7723b&amp;quot;&#xD;&#xA;            }&#xD;&#xA;        ],&#xD;&#xA;        &amp;quot;resourceVersion&amp;quot;: &amp;quot;169451&amp;quot;,&#xD;&#xA;        &amp;quot;uid&amp;quot;: &amp;quot;fe833c97-0585-4910-95ca-fb1c7774d5b2&amp;quot;&#xD;&#xA;    },&#xD;&#xA;    &amp;quot;type&amp;quot;: &amp;quot;Opaque&amp;quot;&#xD;&#xA;}&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;On a donc la possibilité de récupérer le user et le mot de passe :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$ export PGUSER=$(kubectl get secret --namespace=postgres-operator pgcluster1-pguser-pgcluster1 -o jsonpath={.data.user} | base64 -d)&#xD;&#xA;$ export PGPASSWORD=$(kubectl get secret --namespace=postgres-operator pgcluster1-pguser-pgcluster1 -o jsonpath={.data.password} | base64 -d)&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Et tester la connexion (noter que l&amp;#8217;adresse IP est celle du node, ie &lt;em&gt;kubectl describe nodes&lt;/em&gt;):&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$ psql -h 192.168.59.101 -p 32000 -c &amp;quot;select version();&amp;quot;&#xD;&#xA;                                                 version&#xD;&#xA;---------------------------------------------------------------------------------------------------------&#xD;&#xA; PostgreSQL 15.2 on x86_64-pc-linux-gnu, compiled by gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-16), 64-bit&#xD;&#xA;(1 row)&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;h2&gt;Bascules et haute disponibilité&lt;/h2&gt;&#xA;&lt;p&gt;Lançons une connexion en boucle sur le nodePort pour récupérer l&amp;#8217;IP de l&amp;#8217;instance primaire et voir ce qui se passe en cas de bascule. &lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$ while(true); do psql -h 192.168.59.101 -p 32000 -c &amp;quot;select inet_server_addr();&amp;quot;; sleep 1; done&#xD;&#xA; inet_server_addr&#xD;&#xA;------------------&#xD;&#xA; 172.17.0.7&#xD;&#xA;(1 row)&#xD;&#xA;&#xD;&#xA; inet_server_addr&#xD;&#xA;------------------&#xD;&#xA; 172.17.0.7&#xD;&#xA;(1 row)&#xD;&#xA;&#xD;&#xA;(...)&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Pour tester la bascule, nous allons carrément supprimer le StatefulSet de l&amp;#8217;instance primaire, il faut commencer par récupérer son nom, puis on supprime :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$ kubectl -n postgres-operator get pods \&#xD;&#xA;  --selector=postgres-operator.crunchydata.com/role=master \&#xD;&#xA;  -o jsonpath=&#39;{.items[*].metadata.labels.postgres-operator\.crunchydata\.com/instance}&#39;&#xD;&#xA;pgcluster1-postgresdb1-9w2w&#xD;&#xA;&#xD;&#xA;$ kubectl delete statefulset --namespace=postgres-operator pgcluster1-postgresdb1-9w2w&#xD;&#xA;statefulset.apps &amp;quot;pgcluster1-postgresdb1-9w2w&amp;quot; deleted&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;La connexion en boucle indique que l&amp;#8217;on a bien changé d&amp;#8217;IP:&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;(...)&#xD;&#xA; inet_server_addr&#xD;&#xA;------------------&#xD;&#xA; 172.17.0.7&#xD;&#xA;(1 row)&#xD;&#xA;&#xD;&#xA; inet_server_addr&#xD;&#xA;------------------&#xD;&#xA; 172.17.0.7&#xD;&#xA;(1 row)&#xD;&#xA;&#xD;&#xA; inet_server_addr&#xD;&#xA;------------------&#xD;&#xA; 172.17.0.6&#xD;&#xA;(1 row)&#xD;&#xA;&#xD;&#xA; inet_server_addr&#xD;&#xA;------------------&#xD;&#xA; 172.17.0.6&#xD;&#xA;(1 row)&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;&amp;#8230; et minikube a détecté la perte du StatefulSet &lt;em&gt;pgcluster1-postgresdb1-9w2w&lt;/em&gt; et l&amp;#8217;a recréé en arrière plan:&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$ kubectl get statefulset --namespace=postgres-operator&#xD;&#xA;NAME                          READY   AGE&#xD;&#xA;pgcluster1-postgresdb1-55pl   1/1     96m&#xD;&#xA;pgcluster1-postgresdb1-9w2w   1/1     11s&#xD;&#xA;pgcluster1-repo-host          1/1     96m&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Il existe un certain nombre d&amp;#8217;options complémentaires notamment de l&amp;#8217;anti-affinité pour éviter que les pods ne tournent sur les mêmes nodes, voir la &lt;a href=&#34;https://access.crunchydata.com/documentation/postgres-operator/5.3.1/tutorial/high-availability/&#34;&gt;documentation &lt;/a&gt;pour plus de détails.&lt;/p&gt;&#xA;&lt;h2&gt;Mise en place des backups via pgbackrest&lt;/h2&gt;&#xA;&lt;p&gt;Bien qu&amp;#8217;il soit possible de sauvegarder directement sur AWS S3, Azure ou GCP, pour l&amp;#8217;exemple nous avons déployé un volume Kubernetes simple.&lt;br /&gt;&#xA;Pour ajouter une planification et une rétention il faut rajouter quelques propriétés à &lt;em&gt;spec.backups.pgbackrest&lt;/em&gt; :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;  backups:&#xD;&#xA;    pgbackrest:&#xD;&#xA;      image: registry.developers.crunchydata.com/crunchydata/crunchy-pgbackrest:ubi8-2.41-4&#xD;&#xA;        global:&#xD;&#xA;&#x9;  repo1-retention-full: &amp;quot;14&amp;quot;&#xD;&#xA;          repo1-retention-full-type: time&#xD;&#xA;      repos:&#xD;&#xA;      - name: repo1&#xD;&#xA;        volume:&#xD;&#xA;          volumeClaimSpec:&#xD;&#xA;            accessModes:&#xD;&#xA;            - &amp;quot;ReadWriteOnce&amp;quot;&#xD;&#xA;            resources:&#xD;&#xA;              requests:&#xD;&#xA;                storage: 1Gi&#xD;&#xA;&#x9;schedules:&#xD;&#xA;&#x9;  full: &amp;quot;50 15 * * *&amp;quot;&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$ kubectl apply -k kustomize/postgres/&#xD;&#xA;postgrescluster.postgres-operator.crunchydata.com/pgcluster1 configured&#xD;&#xA;&#xD;&#xA;$ kubectl get cronjobs --namespace=postgres-operator&#xD;&#xA;NAME                    SCHEDULE       SUSPEND   ACTIVE   LAST SCHEDULE   AGE&#xD;&#xA;pgcluster1-repo1-full   50 15 * * *    False     0        &amp;lt;none&amp;gt;          106s&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Kubernetes a créé un cronjob associé. Sachant que les backups peuvent être aussi différentiels ou incrémentaux selon la stratégie de sauvegarde envisagée.&lt;br /&gt;&#xA;La rétention quant à elle peut être indiquée en jours (&lt;em&gt;time&lt;/em&gt;) ou en nombre de sauvegardes (&lt;em&gt;count&lt;/em&gt;). Grâce à pgBackRest, PGO permettra ensuite d&amp;#8217;utiliser les backups pour soit cloner les bases vers une autre cluster, soit le restaurer à un point dans le temps vers un nouveau cluster (pour comparer les données ou récupérer des lignes supprimées par erreur par exemple), ou restaurer in-place. Le sujet est assez long et cela pourra faire l&amp;#8217;objet d&amp;#8217;un futur épisode, mais globalement la puissance de feu de pgBackRest au service de la restaurabilité donne un atout supplémentaire à PGO par rapport à ses concurrents. &lt;/p&gt;&#xA;&lt;h2&gt;Conclusion&lt;/h2&gt;&#xA;&lt;p&gt;Dans cette première approche de PGO, nous n&amp;#8217;avons fait qu&amp;#8217;effleurer la surface des possibilités de cet opérateur, qui semble aller plus loin que ses concurrents avec:&lt;br /&gt;&#xA;&amp;#8211; La sauvegarde et restauration via pgBackRest intégré, et la possibilité de sauvegarder directement dans le cloud.&lt;br /&gt;&#xA;&amp;#8211; Intégration avec Promotheus.&lt;br /&gt;&#xA;&amp;#8211; Intégration avec pgBouncer.&lt;br /&gt;&#xA;&amp;#8211; Déployable directement via des standards tels que Kustomize ou Helm.&lt;br /&gt;&#xA;&amp;#8211; Gestion des secrets intégrée.&lt;br /&gt;&#xA;etc&amp;#8230; Sûrement que d&amp;#8217;autres articles pour approfondir PGO viendront compléter celui-ci, en attendant bonne lecture et à bientôt sur le blog Cap Data !&lt;br /&gt;&#xA;&lt;strong&gt;Continuez votre lecture sur le blog :&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul class=&#34;similar-posts&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/kubegres-loperateur-kubernetes-cle-en-main-pour-postgresql/&#34; rel=&#34;bookmark&#34; title=&#34;26 avril 2023&#34;&gt;Kubegres : l&amp;#8217;opérateur Kubernetes clé en main pour PostgreSQL&lt;/a&gt; (David Baffaleuf) [ContainerDevopsPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-sur-la-solution-kubernetes-locale-minikube/&#34; rel=&#34;bookmark&#34; title=&#34;29 mars 2023&#34;&gt;PostgreSQL sur la solution Kubernetes locale Minikube&lt;/a&gt; (Emmanuel RAMI) [ContainerPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/comparatif-des-gestionnaires-de-vip-dans-un-cluster-patroni-episode-2-vip-manager/&#34; rel=&#34;bookmark&#34; title=&#34;11 mars 2022&#34;&gt;Comparatif des gestionnaires de VIP dans un cluster Patroni : épisode 2 (VIP-MANAGER)&lt;/a&gt; (David Baffaleuf) [ContainerPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-comparatif-entre-barman-et-pgbackrest/&#34; rel=&#34;bookmark&#34; title=&#34;4 février 2020&#34;&gt;PostgreSQL : Comparatif entre Barman et pgBackRest&lt;/a&gt; (Capdata team) [PostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/aws-configurer-un-cluster-postgresql-hd-avec-corosync-pacemaker-sur-des-ec2-amazon/&#34; rel=&#34;bookmark&#34; title=&#34;4 septembre 2020&#34;&gt;AWS : Configurer un cluster PostgreSQL HD avec Corosync/Pacemaker sur des EC2 Amazon&lt;/a&gt; (Emmanuel RAMI) [AWSPostgreSQL]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;!-- Similar Posts took 3.305 ms --&gt;&lt;/p&gt;&#xA;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10150&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10150&amp;#038;title=PGO%20%3A%20op%C3%A9rateurs%20kubernetes%20pour%20PostgreSQL%2C%20la%20suite%20%21&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=PGO%20%3A%20op%C3%A9rateurs%20kubernetes%20pour%20PostgreSQL%2C%20la%20suite%20%21&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10150&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/pgo-operateurs-kubernetes-pour-postgresql-la-suite/&#34;&gt;PGO : opérateurs kubernetes pour PostgreSQL, la suite !&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.capdata.fr/index.php/pgo-operateurs-kubernetes-pour-postgresql-la-suite/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Salut à toutes et tous ! Cette semaine la suite de notre petit tour des opérateurs Kubernetes pour PostgreSQL, et après kubegres, c&amp;#8217;est au tour de PGO de CrunchyData. Quelques infos générales sur l&amp;#8217;opérateur PGO Comparé à Kubegres, PGO semble&amp;#8230; &lt;a href=&#34;https://blog.capdata.fr/index.php/pgo-operateurs-kubernetes-pour-postgresql-la-suite/&#34; class=&#34;more-link&#34;&gt;Continuer la lecture &lt;span class=&#34;meta-nav&#34;&gt;&amp;#8594;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/pgo-operateurs-kubernetes-pour-postgresql-la-suite/&#34;&gt;PGO : opérateurs kubernetes pour PostgreSQL, la suite !&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Sarah FAVEERE</name>
    </author>
  </entry>
  <entry>
    <title>Cybertec Migrator : une alternative à ora2pg ?</title>
    <updated>2023-05-10T08:49:33Z</updated>
    <id>tag:blog.capdata.fr,2023-05-10:/index.php/cybertec-migrator-une-alternative-a-ora2pg/</id>
    <content type="html">&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10089&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10089&amp;#038;title=Cybertec%20Migrator%20%3A%20une%20alternative%20%C3%A0%20ora2pg%20%3F&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=Cybertec%20Migrator%20%3A%20une%20alternative%20%C3%A0%20ora2pg%20%3F&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10089&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;Connue pour de nombreux produits développés pour PostgreSQL, &lt;a href=&#34;https://www.cybertec-postgresql.com/en/&#34;&gt;Cybertec&lt;/a&gt; a récemment mis à jour son outil de migration de base de données du moteur Oracle vers le moteur PostgreSQL.&lt;/p&gt;&#xA;&lt;p&gt;Dans cet article, je vais vous expliquer la mise en place de l&amp;#8217;outil, son installation, et vous montrer pas à pas comment migrer une base de données depuis Oracle vers PostgreSQL.&lt;/p&gt;&#xA;&lt;p&gt;Pour l&amp;#8217;exemple que je m&amp;#8217;apprête à vous montrer, je suis partie d&amp;#8217;une machine Rocky Linux 8.7 (Green Obsidian) sur laquelle j&amp;#8217;ai installé une version 19c d&amp;#8217;Oracle en multitenant et une version 13 de PostgreSQL.&lt;/p&gt;&#xA;&lt;p&gt;Sur l&amp;#8217;instance Oracle, j&amp;#8217;ai utilisé une base de données &lt;a href=&#34;https://www.oracletutorial.com/getting-started/oracle-sample-database/&#34;&gt;sample&lt;/a&gt; fournie par Oracle pour avoir de la matière à migrer :&lt;/p&gt;&#xA;&lt;h2&gt;1ère étape : Télécharger la version désirée de Migrator.&lt;/h2&gt;&#xA;&lt;p&gt;Cybertec nous met à disposition trois types de licences pour son nouvel outil :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Une licence standard, qui est une licence gratuite et permet à tout le monde de télécharger l&amp;#8217;outil pour le tester. Cette licence n&amp;#8217;est à utiliser que si vous pouvez vous permettre d&amp;#8217;avoir des temps de maintenance et donc d&amp;#8217;indisponibilité de votre base.&lt;/li&gt;&#xA;&lt;li&gt;Une licence professionnelle, qui garantit des performances de migrations plus hautes, réduisant le temps d&amp;#8217;indisponibilité en augmentant la rapidité d&amp;#8217;exécution de la migration&lt;/li&gt;&#xA;&lt;li&gt;Une licence Enterprise, qui garantit une très nette diminution du temps d&amp;#8217;indisponibilité, passant de quelques heures à quelques minutes pour les bases les plus conséquentes.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Ce test est réalisé avec la version standard de l&amp;#8217;application, celle que l&amp;#8217;on peut obtenir gratuitement. Pour l&amp;#8217;obtenir, il suffit de vous rendre sur le &lt;a href=&#34;https://www.cybertec-postgresql.com/en/products/cybertec-migrator/&#34;&gt;site&lt;/a&gt; de Cybertec, et de cliquer sur &amp;#8220;Download&amp;#8221; en dessous de la case de la Standard Edition.&lt;/p&gt;&#xA;&lt;p&gt;La version actuelle du Migrator est la version 3.16.2, la mise à jour est intervenue pendant que je faisais mes tests, j&amp;#8217;ai donc dû mettre à jour le produit pour pouvoir l&amp;#8217;utiliser correctement.&lt;/p&gt;&#xA;&lt;p&gt;Pour pouvoir télécharger l&amp;#8217;outil, il vous faut vous inscrire en fournissant une adresse email sur laquelle le lien de téléchargement vous sera envoyé. Vous n&amp;#8217;avez plus qu&amp;#8217;à transférer l&amp;#8217;archive ainsi téléchargée sur votre serveur d&amp;#8217;installation.&lt;/p&gt;&#xA;&lt;h2&gt;2ème étape : Les dépendances&lt;/h2&gt;&#xA;&lt;p&gt;Pour pouvoir fonctionner, Migrator nécessite entre autre Git et Docker. L&amp;#8217;application fonctionne sur son propre serveur, d&amp;#8217;où l&amp;#8217;utilisation de Docker. Cela permet entre autre de pouvoir installer facilement celle-ci car il ne s&amp;#8217;agit que de déployer un container sur votre installation et le tour est joué.&lt;/p&gt;&#xA;&lt;p&gt;-&amp;gt; Installer Docker&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;sudo dnf check-update&#xD;&#xA;sudo dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo&#xD;&#xA;sudo dnf install docker-ce docker-ce-cli containerd.io&#xD;&#xA;...&#xD;&#xA;Installed:&#xD;&#xA;container-selinux-2:2.189.0-1.module+el8.7.0+1154+147ffa21.noarch containerd.io-1.6.20-3.1.el8.x86_64 docker-buildx-plugin-0.10.4-1.el8.x86_64 docker-ce-3:23.0.4-1.el8.x86_64&#xD;&#xA;docker-ce-cli-1:23.0.4-1.el8.x86_64 docker-ce-rootless-extras-23.0.4-1.el8.x86_64 docker-compose-plugin-2.17.2-1.el8.x86_64 fuse-common-3.3.0-16.el8.x86_64&#xD;&#xA;fuse-overlayfs-1.9-1.module+el8.7.0+1154+147ffa21.x86_64 fuse3-3.3.0-16.el8.x86_64 fuse3-libs-3.3.0-16.el8.x86_64 iptables-1.8.4-23.el8_7.1.x86_64&#xD;&#xA;iptables-libs-1.8.4-23.el8_7.1.x86_64 libcgroup-0.41-19.el8.x86_64 libnetfilter_conntrack-1.0.6-5.el8.x86_64 libnfnetlink-1.0.1-13.el8.x86_64&#xD;&#xA;libnftnl-1.1.5-5.el8.x86_64 libpcap-14:1.9.1-5.el8.x86_64 libslirp-4.4.0-1.module+el8.7.0+1154+147ffa21.x86_64 slirp4netns-1.2.0-2.module+el8.7.0+1154+147ffa21.x86_64&lt;/pre&gt;&#xA;&lt;p&gt;Complete!&lt;/p&gt;&#xA;&lt;p&gt;-&amp;gt; Installer Git :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;sudo dnf install git&#xD;&#xA;...&#xD;&#xA;Installed:&#xD;&#xA;emacs-filesystem-1:26.1-7.el8.noarch         git-2.31.1-3.el8_7.x86_64                                       git-core-2.31.1-3.el8_7.x86_64                              git-core-doc-2.31.1-3.el8_7.noarch&#xD;&#xA;perl-Carp-1.42-396.el8.noarch                perl-Data-Dumper-2.167-399.el8.x86_64                           perl-Digest-1.17-395.el8.noarch                             perl-Digest-MD5-2.55-396.el8.x86_64&#xD;&#xA;perl-Encode-4:2.97-3.el8.x86_64              perl-Errno-1.28-421.el8.x86_64                                  perl-Error-1:0.17025-2.el8.noarch                           perl-Exporter-5.72-396.el8.noarch&#xD;&#xA;perl-File-Path-2.15-2.el8.noarch             perl-File-Temp-0.230.600-1.el8.noarch                           perl-Getopt-Long-1:2.50-4.el8.noarch                        perl-Git-2.31.1-3.el8_7.noarch&#xD;&#xA;perl-HTTP-Tiny-0.074-1.el8.noarch            perl-IO-1.38-421.el8.x86_64                                     perl-IO-Socket-IP-0.39-5.el8.noarch                         perl-IO-Socket-SSL-2.066-4.module+el8.6.0+957+15d660ad.noarch&#xD;&#xA;perl-MIME-Base64-3.15-396.el8.x86_64         perl-Mozilla-CA-20160104-7.module+el8.6.0+965+850557f9.noarch   perl-Net-SSLeay-1.88-2.module+el8.6.0+957+15d660ad.x86_64   perl-PathTools-3.74-1.el8.x86_64&#xD;&#xA;perl-Pod-Escapes-1:1.07-395.el8.noarch       perl-Pod-Perldoc-3.28-396.el8.noarch                            perl-Pod-Simple-1:3.35-395.el8.noarch                       perl-Pod-Usage-4:1.69-395.el8.noarch&#xD;&#xA;perl-Scalar-List-Utils-3:1.49-2.el8.x86_64   perl-Socket-4:2.027-3.el8.x86_64                                perl-Storable-1:3.11-3.el8.x86_64                           perl-Term-ANSIColor-4.06-396.el8.noarch&#xD;&#xA;perl-Term-Cap-1.17-395.el8.noarch            perl-TermReadKey-2.37-7.el8.x86_64                              perl-Text-ParseWords-3.30-395.el8.noarch                    perl-Text-Tabs+Wrap-2013.0523-395.el8.noarch&#xD;&#xA;perl-Time-Local-1:1.280-1.el8.noarch         perl-URI-1.73-3.el8.noarch                                      perl-Unicode-Normalize-1.25-396.el8.x86_64                  perl-constant-1.33-396.el8.noarch&#xD;&#xA;perl-interpreter-4:5.26.3-421.el8.x86_64     perl-libnet-3.11-3.el8.noarch                                   perl-libs-4:5.26.3-421.el8.x86_64                           perl-macros-4:5.26.3-421.el8.x86_64&#xD;&#xA;perl-parent-1:0.237-1.el8.noarch             perl-podlators-4.11-1.el8.noarch                                perl-threads-1:2.21-2.el8.x86_64                            perl-threads-shared-1.58-2.el8.x86_64&lt;/pre&gt;&#xA;&lt;p&gt;Complete!&lt;/p&gt;&#xA;&lt;h2&gt;Etape 3 : Installer Migrator&lt;/h2&gt;&#xA;&lt;p&gt;Une fois l&amp;#8217;archive téléchargée et uploadée sur votre serveur, la première étape c&amp;#8217;est de décompresser l&amp;#8217;archive. Il est conseillé de le faire avec l&amp;#8217;utilisateur root pour avoir les droits suffisant à faire les installations nécessaires.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[root@oracle-02]# tar xf cybertec_migrator-v3.16.0-standard.tar.gz&#xD;&#xA;[root@oracle-02]# cd cybertec_migrator&lt;/pre&gt;&#xA;&lt;p&gt;Une fois notre archive décompressée, on créé la configuration de base pour notre Migrator.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[root@oracle-02 cybertec_migrator]# ./migrator configure&#xD;&#xA;[OK] Generated environment file&#xD;&#xA;[INFO] Run &#39;./migrator install --archive &amp;lt; archive_file &amp;gt; &#39; to complete setup&lt;/pre&gt;&#xA;&lt;p&gt;Avant de passer à la suite, on s&amp;#8217;assure de bien démarrer notre Docker :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[root@oracle-02 cybertec_migrator]# systemctl start docker&#xD;&#xA;[root@oracle-02 cybertec_migrator]# systemctl status docker&#xD;&#xA;● docker.service - Docker Application Container Engine&#xD;&#xA;Loaded: loaded (/usr/lib/systemd/system/docker.service; disabled; vendor preset: disabled)&#xD;&#xA;Active: active (running) since Tue 2023-05-02 08:53:00 UTC; 7s ago&#xD;&#xA;Docs: https://docs.docker.com&#xD;&#xA;Main PID: 3197 (dockerd)&#xD;&#xA;Tasks: 8&#xD;&#xA;Memory: 119.0M&#xD;&#xA;CGroup: /system.slice/docker.service&#xD;&#xA;└─3197 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock&lt;/pre&gt;&#xA;&lt;p&gt;On lance ensuite notre installation :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[root@oracle-02 cybertec_migrator]# ./migrator install --archive ../cybertec_migrator-v3.16.0-standard.tar.gz&#xD;&#xA;[INFO] Reading version information from archive file &#39;../cybertec_migrator-v3.16.0-standard.tar.gz&#39;&#xD;&#xA;[INFO] Upgrading to version v3.16.0-standard&#xD;&#xA;[INFO] Extracting archive file &#39;../cybertec_migrator-v3.16.0-standard.tar.gz&#39;&#xD;&#xA;[INFO] Loading container images&#xD;&#xA;c9182c130984: Loading layer [==================================================&amp;gt;] 72.53MB/72.53MB&#xD;&#xA;40599cfe08ec: Loading layer [==================================================&amp;gt;] 349.7kB/349.7kB&#xD;&#xA;20b85315cea4: Loading layer [==================================================&amp;gt;] 102.9MB/102.9MB&#xD;&#xA;61a5eccb8646: Loading layer [==================================================&amp;gt;] 9.454MB/9.454MB&#xD;&#xA;459b6b5a3ba3: Loading layer [==================================================&amp;gt;] 3.584kB/3.584kB&#xD;&#xA;8b2451f44e75: Loading layer [==================================================&amp;gt;] 61.95MB/61.95MB&#xD;&#xA;ff1b0bd4bc3d: Loading layer [==================================================&amp;gt;] 2.048kB/2.048kB&#xD;&#xA;105a91dee35e: Loading layer [==================================================&amp;gt;] 115.5MB/115.5MB&#xD;&#xA;8399b2b8ccbe: Loading layer [==================================================&amp;gt;] 3.173MB/3.173MB&#xD;&#xA;4377e9cc2f2c: Loading layer [==================================================&amp;gt;] 25.5MB/25.5MB&#xD;&#xA;8dbaeed3eff6: Loading layer [==================================================&amp;gt;] 2.56kB/2.56kB&#xD;&#xA;Loaded image: cybertecpostgresql/cybertec_migrator-core:v3.16.0-standard&#xD;&#xA;3af14c9a24c9: Loading layer [==================================================&amp;gt;] 84MB/84MB&#xD;&#xA;af29ec691175: Loading layer [==================================================&amp;gt;] 62.5MB/62.5MB&#xD;&#xA;a0b795906dc1: Loading layer [==================================================&amp;gt;] 3.584kB/3.584kB&#xD;&#xA;95457f8a16fd: Loading layer [==================================================&amp;gt;] 4.608kB/4.608kB&#xD;&#xA;4d0bf5b5e17b: Loading layer [==================================================&amp;gt;] 3.584kB/3.584kB&#xD;&#xA;ff4557f62768: Loading layer [==================================================&amp;gt;] 7.168kB/7.168kB&#xD;&#xA;0c1e2a4e5a14: Loading layer [==================================================&amp;gt;] 13.14MB/13.14MB&#xD;&#xA;Loaded image: cybertecpostgresql/cybertec_migrator-web_gui:v3.16.0-standard&#xD;&#xA;7cd52847ad77: Loading layer [==================================================&amp;gt;] 7.338MB/7.338MB&#xD;&#xA;e2b55894f225: Loading layer [==================================================&amp;gt;] 12.8kB/12.8kB&#xD;&#xA;96139409c02a: Loading layer [==================================================&amp;gt;] 2.048kB/2.048kB&#xD;&#xA;c3ec93ee5b48: Loading layer [==================================================&amp;gt;] 233.7MB/233.7MB&#xD;&#xA;99c761a4ed63: Loading layer [==================================================&amp;gt;] 60.42kB/60.42kB&#xD;&#xA;b3357907ccb7: Loading layer [==================================================&amp;gt;] 2.56kB/2.56kB&#xD;&#xA;a7504fa091bf: Loading layer [==================================================&amp;gt;] 3.584kB/3.584kB&#xD;&#xA;a283b778659e: Loading layer [==================================================&amp;gt;] 15.87kB/15.87kB&#xD;&#xA;Loaded image: postgres:13-alpine&#xD;&#xA;[INFO] Container images loaded&#xD;&#xA;[INFO] Archived container images&#xD;&#xA;[INFO] Upgraded to v3.16.0-standard&#xD;&#xA;[WARN] Could not find TLS/SSL certificate&#xD;&#xA;[INFO] Run &#39;./migrator configure --tls self-signed-cert&#39; to generate a self-signed TLS/SSL certificate&lt;/pre&gt;&#xA;&lt;p&gt;Pour pouvoir fonctionner, les nouvelles versions de Migrator nécessitent un certificat TLS, on en génère donc un :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[root@oracle-02 cybertec_migrator]# ./migrator configure --tls self-signed-cert&#xD;&#xA;[INFO] Generating self-signed TLS/SSL certificate&#xD;&#xA;[+] Running 2/1&#xD;&#xA; Network cybertec_migrator_common         Created                                                                                                                                                                                     0.2s&#xD;&#xA; Volume &amp;quot;cybertec_migrator_core_db-data&amp;quot;  Created                                                                                                                                                                                     0.0s&#xD;&#xA;Generating a RSA private key&#xD;&#xA;.................................................................................+++++&#xD;&#xA;............+++++&#xD;&#xA;writing new private key to &#39;/etc/nginx/certs/nginx.key&#39;&#xD;&#xA;-----&#xD;&#xA;You are about to be asked to enter information that will be incorporated&#xD;&#xA;into your certificate request.&#xD;&#xA;What you are about to enter is what is called a Distinguished Name or a DN.&#xD;&#xA;There are quite a few fields but you can leave some blank&#xD;&#xA;For some fields there will be a default value,&#xD;&#xA;If you enter &#39;.&#39;, the field will be left blank.&#xD;&#xA;-----&#xD;&#xA;Country Name (2 letter code) [AU]:FR&#xD;&#xA;...&#xD;&#xA;Email Address []:sfaveere@capdata-osmozium.com&#xD;&#xA;[OK] Generated self-signed TLS/SSL certificate&#xD;&#xA;[INFO] Run &#39;./migrator up&#39; to switch to new version&#xD;&#xA;[WARN] Switching will abort running migrations&lt;/pre&gt;&#xA;&lt;h2&gt;Etape 4 : Démarrage de l&amp;#8217;application et premiers pas&lt;/h2&gt;&#xA;&lt;p&gt;Une fois notre installation terminée, on peut démarrer l&amp;#8217;outil :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;[root@oracle-02 cybertec_migrator]# ./migrator up&#xD;&#xA;[+] Running 3/3&#xD;&#xA; Container cybertec_migrator-core_db-1 Healthy 6.2s&#xD;&#xA; Container cybertec_migrator-core-1 Started 6.6s&#xD;&#xA; Container cybertec_migrator-web_gui-1 Started 7.3s&#xD;&#xA;[OK] Started on &#39;https://***.**.*.**&#39;&lt;/pre&gt;&#xA;&lt;p&gt;L&amp;#8217;URL fournie par la fin de l&amp;#8217;installation est l&amp;#8217;url à laquelle vous devez accéder pour pouvoir voir s&amp;#8217;afficher votre outil de migration web.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Important :&lt;/strong&gt; Avant de vous connecter sur l&amp;#8217;application, il y a certains droits qu&amp;#8217;il faut s&amp;#8217;assurer d&amp;#8217;avoir.&lt;/p&gt;&#xA;&lt;p&gt;Sur Oracle :&lt;br /&gt;&#xA;J&amp;#8217;ai créé un compte Migrator avec des droits particuliers :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;-- On the Oracle database&#xD;&#xA;CREATE USER migrator IDENTIFIED by migrator;&#xD;&#xA;GRANT CONNECT, SELECT_CATALOG_ROLE, SELECT ANY TABLE, FLASHBACK ANY TABLE TO migrator;&lt;/pre&gt;&#xA;&lt;p&gt;Sur PostgreSQL :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;-- As PostgreSQL super user&#xD;&#xA;CREATE DATABASE demo;&#xD;&#xA;CREATE USER demo WITH PASSWORD &#39;demo&#39;;&#xD;&#xA;GRANT CREATE ON DATABASE demo TO demo;&lt;/pre&gt;&#xA;&lt;p&gt;Il ne nous reste plus qu&amp;#8217;à accéder à notre outil de migration, en se rendant au lien précisé à la fin du start-up :&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_KzosVXNkHr.png&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;alignnone wp-image-10106&#34; src=&#34;https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_KzosVXNkHr-300x146.png&#34; alt=&#34;&#34; width=&#34;1079&#34; height=&#34;525&#34; srcset=&#34;https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_KzosVXNkHr-300x146.png 300w, https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_KzosVXNkHr-768x375.png 768w&#34; sizes=&#34;(max-width: 1079px) 100vw, 1079px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Etape 5 : Prévoir sa migration&lt;/h2&gt;&#xA;&lt;p&gt;Une fois que nous avons correctement accès à notre page de garde de Migrator, on peut donc commencer à prévoir une nouvelle migration. En cliquant sur Migration dans le menu à gauche, on accède à une nouvelle fenêtre :&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_jkiw4VdWaK.png&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;alignnone wp-image-10103&#34; src=&#34;https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_jkiw4VdWaK-300x146.png&#34; alt=&#34;&#34; width=&#34;1081&#34; height=&#34;526&#34; srcset=&#34;https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_jkiw4VdWaK-300x146.png 300w, https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_jkiw4VdWaK-768x375.png 768w&#34; sizes=&#34;(max-width: 1081px) 100vw, 1081px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Sur cette nouvelle page, on peut cliquer sur Add New Migration afin d&amp;#8217;accéder à la page de création d&amp;#8217;une nouvelle migration&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_YnojWIrMdM.png&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;alignnone wp-image-10107&#34; src=&#34;https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_YnojWIrMdM-300x146.png&#34; alt=&#34;&#34; width=&#34;1081&#34; height=&#34;526&#34; srcset=&#34;https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_YnojWIrMdM-300x146.png 300w, https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_YnojWIrMdM-768x375.png 768w&#34; sizes=&#34;(max-width: 1081px) 100vw, 1081px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Ce premier écran est celui sur lequel on définit la connexion d&amp;#8217;origine de la base de données, donc notre connexion Oracle.&lt;/p&gt;&#xA;&lt;p&gt;Les deux premiers champs du formulaire permettent de donner un nom et une description à notre migration.&lt;/p&gt;&#xA;&lt;p&gt;Ensuite, on donne une chaine de connexion pour notre base de données source, le username qu&amp;#8217;on a créé plus tôt et le mot de passe qui lui est lié. On clique sur check, et si la connexion est ok, alors on aperçoit un message &amp;#8220;Connection Success&amp;#8221;. On peut donc cliquer sur &amp;#8220;Next&amp;#8221;.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_Jl4fKVz8Cv.png&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;alignnone wp-image-10104&#34; src=&#34;https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_Jl4fKVz8Cv-300x146.png&#34; alt=&#34;&#34; width=&#34;1081&#34; height=&#34;526&#34; srcset=&#34;https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_Jl4fKVz8Cv-300x146.png 300w, https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_Jl4fKVz8Cv-768x375.png 768w&#34; sizes=&#34;(max-width: 1081px) 100vw, 1081px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;L&amp;#8217;écran suivant est l&amp;#8217;écran qui nous permet de gérer le ou les schémas que l&amp;#8217;on souhaite migrer. Dans notre cas, on sélectionne le schéma OT et on clique sur &amp;#8220;Next&amp;#8221;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_4qGPRukA04.png&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;alignnone wp-image-10101&#34; src=&#34;https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_4qGPRukA04-300x141.png&#34; alt=&#34;&#34; width=&#34;1119&#34; height=&#34;526&#34; srcset=&#34;https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_4qGPRukA04-300x141.png 300w, https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_4qGPRukA04-1024x481.png 1024w, https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_4qGPRukA04-768x361.png 768w, https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_4qGPRukA04-1536x722.png 1536w, https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_4qGPRukA04.png 1920w&#34; sizes=&#34;(max-width: 1119px) 100vw, 1119px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;La fenêtre qui s&amp;#8217;affiche permet de voir tout ce que l&amp;#8217;outil Migrator nous permet de migrer. On peut voir que sur cette version standard, on ne sait pas migrer les partitions. On peut cliquer sur &amp;#8220;Finish&amp;#8221;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_69Ikavyp90.png&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;alignnone wp-image-10114&#34; src=&#34;https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_69Ikavyp90-300x141.png&#34; alt=&#34;&#34; width=&#34;1124&#34; height=&#34;528&#34; srcset=&#34;https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_69Ikavyp90-300x141.png 300w, https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_69Ikavyp90-1024x481.png 1024w, https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_69Ikavyp90-768x361.png 768w, https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_69Ikavyp90-1536x722.png 1536w, https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_69Ikavyp90.png 1920w&#34; sizes=&#34;(max-width: 1124px) 100vw, 1124px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;L&amp;#8217;écran suivant est l&amp;#8217;écran de suivi de la migration en lui-même. Il comporte de nombreuses fonctionnalités qui vous permettent de choisir les objets que vous voulez migrer ou non, en les désactivant on peut aisément ne pas importer certains objets.&lt;/p&gt;&#xA;&lt;p&gt;En cliquant dans le menu déroulant à gauche, on peut dérouler les tables et voir  les champs dans ces tables. En cliquant dessus on peut même aller modifier manuellement les types de ces champs pour leur migration, les contraintes, les index, les triggers&amp;#8230;&lt;/p&gt;&#xA;&lt;p&gt;Une fois nos modifications effectuées, pour qu&amp;#8217;elles soient prises en compte on peut cliquer sur le bouton &amp;#8220;Save&amp;#8221; en bas à gauche, juste en dessous de la ligne.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_rTqk14wyi7.png&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;alignnone wp-image-10115&#34; src=&#34;https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_rTqk14wyi7-300x141.png&#34; alt=&#34;&#34; width=&#34;1119&#34; height=&#34;526&#34; srcset=&#34;https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_rTqk14wyi7-300x141.png 300w, https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_rTqk14wyi7-1024x481.png 1024w, https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_rTqk14wyi7-768x361.png 768w, https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_rTqk14wyi7-1536x722.png 1536w, https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_rTqk14wyi7.png 1920w&#34; sizes=&#34;(max-width: 1119px) 100vw, 1119px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Ainsi, on peut par exemple modifier le type des colonnes de clé primaire de Numeric à Integer pour éviter d&amp;#8217;avoir un problème lors de l&amp;#8217;import, dans la mesure où PostgreSQL n&amp;#8217;accepte pas les clé primaires de type Numeric.&lt;/p&gt;&#xA;&lt;p&gt;Une fois que toutes nos modifications sont effectuées, on peut cliquer sur le cercle en bas à gauche pour ouvrir la console qui va nous permettre de lancer la migration.&lt;/p&gt;&#xA;&lt;p&gt;&lt;b&gt;Les quatre étapes de la migration sont les suivantes :&lt;/b&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Schéma : Migrator transfère le schéma depuis l&amp;#8217;ancienne base vers la nouvelle&lt;/li&gt;&#xA;&lt;li&gt;Data : Migrator transfère la data depuis la source vers la destination&lt;/li&gt;&#xA;&lt;li&gt;Integrity : Il transfère les contraintes, les indexes, les clés primaires&lt;/li&gt;&#xA;&lt;li&gt;Logic : Migrator transfère les fonctions, les procédures, les vues et les triggers&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;La petite fenêtre de log peut être étendue vers le haut, et elle vous permet d&amp;#8217;avoir un visuel sur ce qui se passe pendant votre migration, et si des erreurs éventuelles sont rencontrées. La majeure partie des erreurs de migrations sont des problèmes de type que l&amp;#8217;on peut modifier directement sur l&amp;#8217;interface pour ensuite relancer le processus.&lt;/p&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_pweApXNKTc.png&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; class=&#34;alignnone wp-image-10116&#34; src=&#34;https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_pweApXNKTc-300x141.png&#34; alt=&#34;&#34; width=&#34;1119&#34; height=&#34;526&#34; srcset=&#34;https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_pweApXNKTc-300x141.png 300w, https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_pweApXNKTc-1024x481.png 1024w, https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_pweApXNKTc-768x361.png 768w, https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_pweApXNKTc-1536x722.png 1536w, https://blog.capdata.fr/wp-content/uploads/2023/05/chrome_pweApXNKTc.png 1920w&#34; sizes=&#34;(max-width: 1119px) 100vw, 1119px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Quand notre migration est terminée, c&amp;#8217;est affiché dans notre log, et on peut alors aller voir sur l&amp;#8217;environnement PostgreSQL le résultat obtenu.&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: sql; title: ; notranslate&#34;&gt;psql (13.10)&#xD;&#xA;Type &amp;quot;help&amp;quot; for help.&#xD;&#xA;postgres=# \c demo&#xD;&#xA;You are now connected to database &amp;quot;demo&amp;quot; as user &amp;quot;postgres&amp;quot;.&#xD;&#xA;demo=# select * from ot.products;&#xD;&#xA;product_id | product_name | description | standard_cost | list_price | category_id&#xD;&#xA;------------+---------------------------------------------+-----------------------------------------------------------------------+---------------+------------+-------------&#xD;&#xA;228 | Intel Xeon E5-2699 V3 (OEM/Tray) | Speed:2.3GHz,Cores:18,TDP:145W | 2867.51 | 3410.46 | 1&#xD;&#xA;248 | Intel Xeon E5-2697 V3 | Speed:2.6GHz,Cores:14,TDP:145W | 2326.27 | 2774.98 | 1&#xD;&#xA;249 | Intel Xeon E5-2698 V3 (OEM/Tray) | Speed:2.3GHz,Cores:16,TDP:135W | 2035.18 | 2660.72 | 1&#xD;&#xA;...&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Notre schéma PostgreSQL qui ne contenait rien à la base contient maintenant l&amp;#8217;intégralité des données que notre schéma Oracle contenait.&lt;/p&gt;&#xA;&lt;h2&gt;Conclusion :&lt;/h2&gt;&#xA;&lt;p&gt;Sur un marché où de plus en plus de produits open-source nous permettent de faciliter des tâches aussi délicates que de la migration d&amp;#8217;un environnement de base de données à un autre, Migrator et son interface graphique nous offrent une solution user-friendly avec une interface qui permet de simplifier les choses.&lt;br /&gt;&#xA;Il faut cependant garder en tête que cet outil n&amp;#8217;est pas gratuit en dehors de sa version standard, et que pour pouvoir profiter des améliorations de performance pour vos migrations, il faut acheter une licence auprès de Cybertec.&lt;br /&gt;&#xA;L&amp;#8217;installation du produit en elle-même ne pose aucune difficulté, et après un peu de prise en main, il s&amp;#8217;avère relativement facile à utiliser.&lt;strong&gt;Continuez votre lecture sur le blog :&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul class=&#34;similar-posts&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/la-migration-oracle-vers-postgresql-avec-ora2pg/&#34; rel=&#34;bookmark&#34; title=&#34;22 août 2019&#34;&gt;La migration Oracle vers PostgreSQL avec ora2pg&lt;/a&gt; (Emmanuel RAMI) [OraclePostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/gerer-votre-disaster-recovery-oracle-avec-dbvisit-standby/&#34; rel=&#34;bookmark&#34; title=&#34;29 avril 2021&#34;&gt;Une solution de &amp;#8220;Disaster Recovery&amp;#8221; sous Oracle Standard Edition avec DBVisit standby&lt;/a&gt; (Emmanuel RAMI) [GénéralOracle]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-planifier-une-tache-avec-pg_cron/&#34; rel=&#34;bookmark&#34; title=&#34;24 septembre 2019&#34;&gt;PostgreSQL : planifier une tâche avec pg_cron&lt;/a&gt; (Emmanuel RAMI) [Non classéPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/containeriser-une-base-de-donnees-postgresql-avec-docker/&#34; rel=&#34;bookmark&#34; title=&#34;23 septembre 2021&#34;&gt;Containeriser PostgreSQL avec Docker !&lt;/a&gt; (Emmanuel RAMI) [ContainerPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/transparent-data-encryption-pour-postgresql/&#34; rel=&#34;bookmark&#34; title=&#34;13 mai 2022&#34;&gt;Transparent Data Encryption pour PostgreSQL&lt;/a&gt; (Sarah FAVEERE) [PostgreSQL]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;!-- Similar Posts took 2.414 ms --&gt;&lt;/p&gt;&#xA;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10089&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10089&amp;#038;title=Cybertec%20Migrator%20%3A%20une%20alternative%20%C3%A0%20ora2pg%20%3F&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=Cybertec%20Migrator%20%3A%20une%20alternative%20%C3%A0%20ora2pg%20%3F&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D10089&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/cybertec-migrator-une-alternative-a-ora2pg/&#34;&gt;Cybertec Migrator : une alternative à ora2pg ?&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.capdata.fr/index.php/cybertec-migrator-une-alternative-a-ora2pg/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Connue pour de nombreux produits développés pour PostgreSQL, Cybertec a récemment mis à jour son outil de migration de base de données du moteur Oracle vers le moteur PostgreSQL. Dans cet article, je vais vous expliquer la mise en place&amp;#8230; &lt;a href=&#34;https://blog.capdata.fr/index.php/cybertec-migrator-une-alternative-a-ora2pg/&#34; class=&#34;more-link&#34;&gt;Continuer la lecture &lt;span class=&#34;meta-nav&#34;&gt;&amp;#8594;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/cybertec-migrator-une-alternative-a-ora2pg/&#34;&gt;Cybertec Migrator : une alternative à ora2pg ?&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Sarah FAVEERE</name>
    </author>
  </entry>
  <entry>
    <title>Kubegres : l’opérateur Kubernetes clé en main pour PostgreSQL</title>
    <updated>2023-04-26T16:17:16Z</updated>
    <id>tag:blog.capdata.fr,2023-04-26:/index.php/kubegres-loperateur-kubernetes-cle-en-main-pour-postgresql/</id>
    <content type="html">&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D9778&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D9778&amp;#038;title=Kubegres%20%3A%20l%E2%80%99op%C3%A9rateur%20Kubernetes%20cl%C3%A9%20en%20main%20pour%20PostgreSQL&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=Kubegres%20%3A%20l%E2%80%99op%C3%A9rateur%20Kubernetes%20cl%C3%A9%20en%20main%20pour%20PostgreSQL&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D9778&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;&lt;a href=&#34;https://blog.capdata.fr/wp-content/uploads/2023/04/2containers.png&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; src=&#34;https://blog.capdata.fr/wp-content/uploads/2023/04/2containers.png&#34; alt=&#34;&#34; width=&#34;623&#34; height=&#34;416&#34; class=&#34;left size-full wp-image-10070&#34; srcset=&#34;https://blog.capdata.fr/wp-content/uploads/2023/04/2containers.png 623w, https://blog.capdata.fr/wp-content/uploads/2023/04/2containers-300x200.png 300w&#34; sizes=&#34;(max-width: 623px) 100vw, 623px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Hello à toutes et tous !&lt;/p&gt;&#xA;&lt;p&gt;Pour faire suite à &lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-sur-la-solution-kubernetes-locale-minikube/&#34;&gt;l&amp;#8217;article d&amp;#8217;Emmanuel&lt;/a&gt; sur l&amp;#8217;installation de PostgreSQL sur un cluster minikube local, aujourd&amp;#8217;hui nous allons découvrir l&amp;#8217;opérateur &lt;a href=&#34;https://www.kubegres.io/&#34;&gt;Kubegres &lt;/a&gt;qui permet de facilement déployer un cluster PostgreSQL avec Primary et Standby à l&amp;#8217;intérieur de pods K8s, sans avoir à créer chaque brique une par une comme on devrait le faire avec un simple StatefulSet. &lt;/p&gt;&#xA;&lt;h2&gt;Pourquoi Kubegres apporte un vrai plus&lt;/h2&gt;&#xA;&lt;p&gt;En un mot : &lt;strong&gt;SIM-PLI-CI-TE !&lt;/strong&gt; &lt;/p&gt;&#xA;&lt;p&gt;Parce qu&amp;#8217;il introduit un nouveau type d&amp;#8217;objet : &lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;kind: Kubegres&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Les specs à l&amp;#8217;intérieur de cet objet encapsulent déjà tout ce qui est nécessaire pour créer les StatefulSets, les ClusterIPs, le Physical Volumes et le PVC associé, la ConfigMap et les Pods. Pas besoin de tout créer à l&amp;#8217;avance et le fichier de déploiement est beaucoup plus compact !&lt;/p&gt;&#xA;&lt;h2&gt;Installation de Kubegres &lt;/h2&gt;&#xA;&lt;p&gt;Nous utiliserons &lt;a href=&#34;https://kubernetes.io/fr/docs/setup/learning-environment/minikube/&#34;&gt;minikube &lt;/a&gt;pour montrer comment déployer Kubegres, je vous renvoie à l&amp;#8217;article d&amp;#8217;Emmanuel cité plus haut pour son installation. Comme nous allons devoir attribuer des fractions de ressource RAM et CPU entre les pods, j&amp;#8217;activerai juste en plus la partie metrics-server :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;$ minikube addons enable metrics-server&lt;/pre&gt;&#xA;&lt;p&gt;La première étape consiste à installer l&amp;#8217;opérateur. Cette première étape va créer un nombre importants d&amp;#8217;objets pour nous, comme en témoigne le contenu de son fichier de déploiement &lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$ curl --silent https://raw.githubusercontent.com/reactive-tech/kubegres/v1.16/kubegres.yaml \&#xD;&#xA;  | grep  -w &#39;kind:&#39; | awk -F&#39;:&#39; &#39;{print $2}&#39;  \ &#xD;&#xA;  | sort -u&#xD;&#xA;&#xD;&#xA; ClusterRole&#xD;&#xA; ClusterRoleBinding&#xD;&#xA; ConfigMap&#xD;&#xA; ControllerManagerConfig&#xD;&#xA; CustomResourceDefinition&#xD;&#xA; Deployment&#xD;&#xA; Kubegres&#xD;&#xA; Namespace&#xD;&#xA; Role&#xD;&#xA; RoleBinding&#xD;&#xA; Service&#xD;&#xA; ServiceAccount&#xD;&#xA;&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;:&lt;br /&gt;&#xA;On déploie donc via &lt;a href=&#34;https://kubernetes.io/fr/docs/tasks/tools/install-kubectl/&#34;&gt;kubectl&lt;/a&gt;:&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$ kubectl apply -f https://raw.githubusercontent.com/reactive-tech/kubegres/v1.16/kubegres.yaml&#xD;&#xA;namespace/kubegres-system created&#xD;&#xA;customresourcedefinition.apiextensions.k8s.io/kubegres.kubegres.reactive-tech.io created&#xD;&#xA;serviceaccount/kubegres-controller-manager created&#xD;&#xA;role.rbac.authorization.k8s.io/kubegres-leader-election-role created&#xD;&#xA;clusterrole.rbac.authorization.k8s.io/kubegres-manager-role created&#xD;&#xA;clusterrole.rbac.authorization.k8s.io/kubegres-metrics-reader created&#xD;&#xA;clusterrole.rbac.authorization.k8s.io/kubegres-proxy-role created&#xD;&#xA;rolebinding.rbac.authorization.k8s.io/kubegres-leader-election-rolebinding created&#xD;&#xA;clusterrolebinding.rbac.authorization.k8s.io/kubegres-manager-rolebinding created&#xD;&#xA;clusterrolebinding.rbac.authorization.k8s.io/kubegres-proxy-rolebinding created&#xD;&#xA;configmap/kubegres-manager-config created&#xD;&#xA;service/kubegres-controller-manager-metrics-service created&#xD;&#xA;deployment.apps/kubegres-controller-manager created&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Un namespace &lt;em&gt;kubegres-system&lt;/em&gt; a été créé, dans lequel notre cluster pourra éventuellement s&amp;#8217;inscrire. Cela dit, la bonne pratique consisterait à créer un namespace à part et laisser le controller-manager kubegres dans son namespace système, mais pour ne pas interférer avec mes autres namespaces, je vais volontairement rajouter le cluster dedans:&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$ kubectl get all --namespace=kubegres-system&#xD;&#xA;NAME                                               READY   STATUS    RESTARTS   AGE&#xD;&#xA;pod/kubegres-controller-manager-794468bbff-bxzxk   2/2     Running   0          3m35s&#xD;&#xA;&#xD;&#xA;NAME                                                  TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE&#xD;&#xA;service/kubegres-controller-manager-metrics-service   ClusterIP   10.100.182.92   &amp;lt;none&amp;gt;        8443/TCP   3m35s&#xD;&#xA;&#xD;&#xA;NAME                                          READY   UP-TO-DATE   AVAILABLE   AGE&#xD;&#xA;deployment.apps/kubegres-controller-manager   1/1     1            1           3m35s&#xD;&#xA;&#xD;&#xA;NAME                                                     DESIRED   CURRENT   READY   AGE&#xD;&#xA;replicaset.apps/kubegres-controller-manager-794468bbff   1         1         1       3m35s&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;h2&gt;Création du cluster en 15.2&lt;/h2&gt;&#xA;&lt;p&gt;Avant de créer le cluster PostgreSQL, il va falloir créer un secret qui va contenir les mots de passe du primaire et de sa standby. &lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$ vi postgres-secret.yaml&#xD;&#xA;(...)&#xD;&#xA;apiVersion: v1&#xD;&#xA;kind: Secret&#xD;&#xA;metadata:&#xD;&#xA;  name: mypostgres-secret&#xD;&#xA;  namespace: kubegres-system&#xD;&#xA;type: Opaque&#xD;&#xA;stringData:&#xD;&#xA;  superUserPassword: capdata&#xD;&#xA;  replicationUserPassword: capdatarep&#xD;&#xA;&#xD;&#xA;$ kubectl apply -f postgres-secret.yaml -n kubegres-system&#xD;&#xA;secret/mypostgres-secret created&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Enfin nous pouvons créer le cluster avec un seul fichier de déploiement:&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: yaml; title: ; notranslate&#34;&gt;&#xD;&#xA;apiVersion: kubegres.reactive-tech.io/v1&#xD;&#xA;kind: Kubegres&#xD;&#xA;metadata:&#xD;&#xA;  name: kpostgres&#xD;&#xA;  namespace: kubegres-system&#xD;&#xA;&#xD;&#xA;spec:&#xD;&#xA;&#xD;&#xA;  replicas: 2&#xD;&#xA;  image: postgres:15.2&#xD;&#xA;  port: 5432&#xD;&#xA;&#xD;&#xA;  database:&#xD;&#xA;    size: 200Mi&#xD;&#xA;    storageClassName: standard&#xD;&#xA;    volumeMount: /var/lib/postgresql/data&#xD;&#xA;&#xD;&#xA;  failover:&#xD;&#xA;    isDisabled: false&#xD;&#xA;    promotePod: &amp;quot;kpostgres-2-0&amp;quot;&#xD;&#xA;&#xD;&#xA;  resources:&#xD;&#xA;    limits:&#xD;&#xA;      memory: &amp;quot;1Gi&amp;quot;&#xD;&#xA;      cpu: &amp;quot;1&amp;quot;&#xD;&#xA;    requests:&#xD;&#xA;      memory: &amp;quot;500Mi&amp;quot;&#xD;&#xA;      cpu: &amp;quot;0.5&amp;quot;&#xD;&#xA;&#xD;&#xA;  probe:&#xD;&#xA;     livenessProbe:&#xD;&#xA;        exec:&#xD;&#xA;           command:&#xD;&#xA;             - sh&#xD;&#xA;             - -c&#xD;&#xA;             - exec pg_isready -U postgres -h $POD_IP&#xD;&#xA;        failureThreshold: 10&#xD;&#xA;        initialDelaySeconds: 60&#xD;&#xA;        periodSeconds: 20&#xD;&#xA;        successThreshold: 1&#xD;&#xA;        timeoutSeconds: 15&#xD;&#xA;&#xD;&#xA;     readinessProbe:&#xD;&#xA;        exec:&#xD;&#xA;           command:&#xD;&#xA;             - sh&#xD;&#xA;             - -c&#xD;&#xA;             - exec pg_isready -U postgres -h $POD_IP&#xD;&#xA;        failureThreshold: 3&#xD;&#xA;        initialDelaySeconds: 5&#xD;&#xA;        periodSeconds: 5&#xD;&#xA;        successThreshold: 1&#xD;&#xA;        timeoutSeconds: 3&#xD;&#xA;&#xD;&#xA;  env:&#xD;&#xA;    - name: POSTGRES_PASSWORD&#xD;&#xA;      valueFrom:&#xD;&#xA;        secretKeyRef:&#xD;&#xA;          name: mypostgres-secret&#xD;&#xA;          key: superUserPassword&#xD;&#xA;&#xD;&#xA;    - name: POSTGRES_REPLICATION_PASSWORD&#xD;&#xA;      valueFrom:&#xD;&#xA;        secretKeyRef:&#xD;&#xA;          name: mypostgres-secret&#xD;&#xA;          key: replicationUserPassword&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;strong&gt;Remarques sur les sections &lt;/strong&gt;:&lt;br /&gt;&#xA;&amp;#8211; La spec database.size permet de dimensionner le PVC à une taille initiale, mais attention ! En fonction de la version de Kubernetes, il peut être compliqué de modifier cette valeur ensuite comme rapporté dans &lt;a href=&#34;https://github.com/reactive-tech/kubegres/issues/49&#34;&gt;cet issue du github Kubegres&lt;/a&gt;.&lt;br /&gt;&#xA;&amp;#8211; On ne créé &amp;#8216;que&amp;#8217; 2 réplicas au sens StatefulSet, c&amp;#8217;est à dire un primaire et une standby.&lt;br /&gt;&#xA;&amp;#8211; La spec failover permet de désactiver ou d&amp;#8217;activer le promote automatique de la standby, et de dire quel est le noeud préférentiel.&lt;br /&gt;&#xA;&amp;#8211; 2 types de sondes : une pour décider de redémarrer le container en cas d&amp;#8217;échec de connexion (livenessProbe), et une autre pour autoriser les connexions (readinessProbe). Le fonctionnement du failover est expliqué plus loin.&lt;br /&gt;&#xA;&amp;#8211; resources permet de limiter l&amp;#8217;utilisation des pods à des plages de CPU et RAM en jouant avec requests et limit.&lt;br /&gt;&#xA;&amp;#8211; Il est aussi possible d&amp;#8217;utiliser l&amp;#8217;anti-affinité pour empêcher les pods primary et standby d&amp;#8217;atterrir sur le même node K8s. On ne le fait évidemment pas dans notre exemple car sur minikube cela n&amp;#8217;aurait aucun sens. &lt;/p&gt;&#xA;&lt;p&gt;La liste complète des propriétés peut être retrouvée sur &lt;a href=&#34;https://www.kubegres.io/doc/properties-explained.html&#34;&gt;la page de documentation &lt;/a&gt;de Kubegres.&lt;/p&gt;&#xA;&lt;p&gt;Une fois le cluster déployé, nous pouvons vérifier tous les nouveaux objets qui ont été créés:&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$ kubectl apply -f postgres-cluster.yaml -n kubegres-system&#xD;&#xA;kubegres.kubegres.reactive-tech.io/kpostgres created&#xD;&#xA;&#xD;&#xA;$ kubectl get all -n kubegres-system&#xD;&#xA;NAME                                               READY   STATUS    RESTARTS       AGE&#xD;&#xA;pod/kpostgres-1-0                                  1/1     Running   2              5d16h&#xD;&#xA;pod/kpostgres-2-0                                  1/1     Running   3              5d16h&#xD;&#xA;pod/kubegres-controller-manager-794468bbff-bxzxk   2/2     Running   13 (23m ago)   5d18h&#xD;&#xA;&#xD;&#xA;NAME                                                  TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE&#xD;&#xA;service/kpostgres                                     ClusterIP   None            &amp;lt;none&amp;gt;        5432/TCP   5d16h&#xD;&#xA;service/kpostgres-replica                             ClusterIP   None            &amp;lt;none&amp;gt;        5432/TCP   5d16h&#xD;&#xA;service/kubegres-controller-manager-metrics-service   ClusterIP   10.100.182.92   &amp;lt;none&amp;gt;        8443/TCP   5d18h&#xD;&#xA;&#xD;&#xA;NAME                                          READY   UP-TO-DATE   AVAILABLE   AGE&#xD;&#xA;deployment.apps/kubegres-controller-manager   1/1     1            1           5d18h&#xD;&#xA;&#xD;&#xA;NAME                                                     DESIRED   CURRENT   READY   AGE&#xD;&#xA;replicaset.apps/kubegres-controller-manager-794468bbff   1         1         1       5d18h&#xD;&#xA;&#xD;&#xA;NAME                           READY   AGE&#xD;&#xA;statefulset.apps/kpostgres-1   1/1     5d16h&#xD;&#xA;statefulset.apps/kpostgres-2   1/1     5d16h&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;En plus du &lt;em&gt;controller manager&lt;/em&gt;, nous avons donc 2 nouveaux pods, 2 services ClusterIP et 2 StatefulSets, un pour chaque instance PostgreSQL.&lt;br /&gt;&#xA;Nous pouvons à partir de là tester la connexion au service (kpostgres), en démarrant un conteneur client &lt;em&gt;ephemeral&lt;/em&gt; (kubectl run &amp;#8230; &amp;#8211;rm). On rappelle que kubegres ne créé par défaut que des &lt;em&gt;Headless Services &lt;/em&gt;(ClusterIP sans adresse attribuée) pour éviter de les rendre visibles depuis l&amp;#8217;extérieur du cluster. On partira toujours du principe que sur un cluster Kubernetes, &lt;strong&gt;tout est deployment / pod&lt;/strong&gt; :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$ kubectl run postgresql-postgresql-client --rm --tty -i --restart=&#39;Never&#39; \&#xD;&#xA;  --namespace kubegres-system  --image postgres:15.2 \&#xD;&#xA;  --env=&amp;quot;PGPASSWORD=capdata&amp;quot; --command -- psql \&#xD;&#xA;  --host kpostgres -U postgres -c &amp;quot;select version();&amp;quot;&#xD;&#xA;&#xD;&#xA;                    version&#xD;&#xA;&#xD;&#xA;--------------------------------------------------------------------------------&#xD;&#xA;---------------------------------------------&#xD;&#xA; PostgreSQL 15.2 (Debian 15.2-1.pgdg110+1) on x86_64-pc-linux-gnu, compiled by g&#xD;&#xA;cc (Debian 10.2.1-6) 10.2.1 20210110, 64-bit&#xD;&#xA;(1 row)&#xD;&#xA;&#xD;&#xA;pod &amp;quot;postgresql-postgresql-client&amp;quot; deleted&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;h2&gt;Comportement en cas d&amp;#8217;échec du serveur primaire&lt;/h2&gt;&#xA;&lt;p&gt;Le deploiement est configuré avec 2 sondes (liveness et readiness) qui toutes 2 utilisent la commande pg_isready pour vérifier la disponibilité des instances primaire et standby. D&amp;#8217;ailleurs on peut le tester nous-mêmes pour véfifier le retour de la commande :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$ kubectl exec --tty --stdin -n kubegres-system kpostgres-1-0 -- pg_isready -U postgres &amp;amp;&amp;amp; echo $?&#xD;&#xA;/var/run/postgresql:5432 - accepting connections&#xD;&#xA;0&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Notre Failover est paramétré sur automatique, avec une préférence pour repartir sur le noeud 2, on va simuler une perte du service en faisant un pg_ctl stop sur le premier pod:&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$ kubectl exec --tty --stdin -n kubegres-system kpostgres-1-0 -- su postgres \&#xD;&#xA;  -c &amp;quot;pg_ctl stop -D /var/lib/postgresql/data/pgdata -m fast&amp;quot;                                                                          &#xD;&#xA;waiting for server to shut down....command terminated with exit code 137&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;On voit que la reconnexion immédiate ne fonctionne pas tout de suite: &lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$ kubectl run postgresql-postgresql-client --rm --tty -i --restart=&#39;Never&#39; --namespace kubegres-system  --image postgres:15.2 --env=&amp;quot;PGPASSWORD=capdata&amp;quot; --command -- psql --host kpostgres -U postgres -c &amp;quot;select inet_server_addr();&amp;quot;&#xD;&#xA;(...)&#xD;&#xA;psql: error: could not translate host name &amp;quot;kpostgres&amp;quot; to address: Temporary failure in name resolution&#xD;&#xA;pod &amp;quot;postgresql-postgresql-client&amp;quot; deleted&#xD;&#xA;pod kubegres-system/postgresql-postgresql-client terminated (Error)&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;D&amp;#8217;après les logs le failover dure une dizaine de secondes seulement:&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$ kubectl logs pod/kubegres-controller-manager-794468bbff-bxzxk -c manager -n kubegres-system --timestamps | grep &#39;FailOver:&#39;&#xD;&#xA;2023-04-19T20:11:22.687346601Z 1.6819350826873376e+09   INFO    controllers.Kubegres    FailOver: Deleting the failing Primary StatefulSet.     {&amp;quot;Primary name&amp;quot;: &amp;quot;kpostgres-1&amp;quot;}&#xD;&#xA;2023-04-19T20:11:22.690961293Z 1.6819350826909401e+09   INFO    controllers.Kubegres    FailOver: Waiting before promoting a Replica to a Primary...    {&amp;quot;Replica to promote&amp;quot;: &amp;quot;kpostgres-2&amp;quot;}&#xD;&#xA;2023-04-19T20:11:33.712923151Z 1.6819350937128017e+09   INFO    controllers.Kubegres    FailOver: Promoting Replica to Primary. {&amp;quot;Replica to promote&amp;quot;: &amp;quot;kpostgres-2&amp;quot;}&#xD;&#xA;2023-04-19T20:11:33.713030040Z 1.6819350937129502e+09   DEBUG   events  Normal  {&amp;quot;object&amp;quot;: {&amp;quot;kind&amp;quot;:&amp;quot;Kubegres&amp;quot;,&amp;quot;namespace&amp;quot;:&amp;quot;kubegres-system&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;kpostgres&amp;quot;,&amp;quot;uid&amp;quot;:&amp;quot;56c2a503-93f5-4bf8-8d0a-fe88cdaf2bde&amp;quot;,&amp;quot;apiVersion&amp;quot;:&amp;quot;kubegres.reactive-tech.io/v1&amp;quot;,&amp;quot;resourceVersion&amp;quot;:&amp;quot;95195&amp;quot;}, &amp;quot;reason&amp;quot;: &amp;quot;FailOver&amp;quot;, &amp;quot;message&amp;quot;: &amp;quot;FailOver: Promoting Replica to Primary. &#39;Replica to promote&#39;: kpostgres-2&amp;quot;}&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;La nouvelle connexion indique que l&amp;#8217;on a changé de host:&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$ kubectl run postgresql-postgresql-client --rm --tty -i --restart=&#39;Never&#39; --namespace kubegres-system  --image postgres:15.2 --env=&amp;quot;PGPASSWORD=capdata&amp;quot; --command -- psql --host kpostgres -U postgres -c &amp;quot;select inet_server_addr();&amp;quot;&#xD;&#xA; inet_server_addr&#xD;&#xA;------------------&#xD;&#xA; 172.17.0.6&#xD;&#xA;(1 row)&#xD;&#xA;&#xD;&#xA;pod &amp;quot;postgresql-postgresql-client&amp;quot; deleted&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Si on inventorie les objets, on voit qu&amp;#8217;un nouveau Pod et StatefulSet ont été créés (AGE=43s):&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$ kubectl get pods,svc,statefulset -n kubegres-system&#xD;&#xA;NAME                                               READY   STATUS    RESTARTS       AGE&#xD;&#xA;pod/kpostgres-2-0                                  1/1     Running   0              85s&#xD;&#xA;pod/kpostgres-3-0                                  1/1     Running   0              43s&#xD;&#xA;pod/kubegres-controller-manager-794468bbff-bxzxk   2/2     Running   18 (41m ago)   6d7h&#xD;&#xA;&#xD;&#xA;NAME                                                  TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE&#xD;&#xA;service/kpostgres                                     ClusterIP   None            &amp;lt;none&amp;gt;        5432/TCP   6d5h&#xD;&#xA;service/kpostgres-replica                             ClusterIP   None            &amp;lt;none&amp;gt;        5432/TCP   6d5h&#xD;&#xA;service/kubegres-controller-manager-metrics-service   ClusterIP   10.100.182.92   &amp;lt;none&amp;gt;        8443/TCP   6d7h&#xD;&#xA;&#xD;&#xA;NAME                           READY   AGE&#xD;&#xA;statefulset.apps/kpostgres-2   1/1     6d5h&#xD;&#xA;statefulset.apps/kpostgres-3   1/1     43s&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;h2&gt;Paramétrer des sauvegardes&lt;/h2&gt;&#xA;&lt;p&gt;Pour pouvoir générer des sauvegardes de type pg_dumpall, il suffit de créer un PVC dédié et de rajouter une planification dans notre fichier de déploiement, qui à son tour va créer une ressource de type CronJob: &lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$ vi postgres-backup.yaml&#xD;&#xA;(...)&#xD;&#xA;apiVersion: v1&#xD;&#xA;kind: PersistentVolumeClaim&#xD;&#xA;metadata:&#xD;&#xA;  name: my-backup-pvc&#xD;&#xA;  namespace: kubegres-system&#xD;&#xA;spec:&#xD;&#xA;  storageClassName: &amp;quot;standard&amp;quot;&#xD;&#xA;  accessModes:&#xD;&#xA;    - ReadWriteOnce&#xD;&#xA;  resources:&#xD;&#xA;    requests:&#xD;&#xA;      storage: 200Mi&#xD;&#xA;&#xD;&#xA;$ kubectl apply -f postgres-backup.yaml&#xD;&#xA;persistentvolumeclaim/my-backup-pvc created&#xD;&#xA;&#xD;&#xA;$ kubectl get pvc -n kubegres-system&#xD;&#xA;NAME                         STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE&#xD;&#xA;my-backup-pvc                Bound    pvc-b84656cd-904b-4a2b-89b1-e43ddb062be8   200Mi      RWO            standard       16s&#xD;&#xA;postgres-db-kpostgres-1-0    Bound    pvc-03f2e981-a1aa-446e-8f63-e5164a59f742   200Mi      RWO            standard       6d6h&#xD;&#xA;postgres-db-kpostgres-2-0    Bound    pvc-cbdf5810-e5e0-4950-8b06-5243f835be7d   200Mi      RWO            standard       6d6h&#xD;&#xA;postgres-db-kpostgres-3-0    Bound    pvc-dffef05b-f7b6-4618-802f-5fbfff2a0cba   200Mi      RWO            standard       37m&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Le CronJob est alors en place, on a programmé toutes les 5 minutes pour en voir passer un assez rapidement quand même :&lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$ kubectl get CronJob -n kubegres-system&#xD;&#xA;NAME               SCHEDULE      SUSPEND   ACTIVE   LAST SCHEDULE   AGE&#xD;&#xA;backup-kpostgres   */5 * * * *   False     0        72s             3m38s&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;Pour gérer le backup, kubegres créé un nouveau pod à chaque fois, ce qui permet de contrôler le bon fonctionnement des sauvegardes: &lt;/p&gt;&#xA;&lt;pre class=&#34;brush: bash; title: ; notranslate&#34;&gt;&#xD;&#xA;$ kubectl get pods -n kubegres-system&#xD;&#xA;NAME                                           READY   STATUS      RESTARTS       AGE&#xD;&#xA;backup-kpostgres-28032310-97jqx                0/1     Completed   0              85s&#xD;&#xA;kpostgres-4-0                                  1/1     Running     0              5m2s&#xD;&#xA;kpostgres-5-0                                  1/1     Running     0              4m4s&#xD;&#xA;kubegres-controller-manager-794468bbff-bxzxk   2/2     Running     18 (99m ago)   6d8h&#xD;&#xA;&#xD;&#xA;$ kubectl logs backup-kpostgres-28032310-97jqx -n kubegres-system&#xD;&#xA;19/04/2023 21:10:01 - Starting DB backup of Kubegres resource kpostgres into file: /var/lib/backup/kpostgres-backup-19_04_2023_21_10_01.gz&#xD;&#xA;19/04/2023 21:10:01 - Running: pg_dumpall -h kpostgres-replica -U postgres -c | gzip &amp;gt; /var/lib/backup/kpostgres-backup-19_04_2023_21_10_01.&#xD;&#xA;gz&#xD;&#xA;19/04/2023 21:10:01 - DB backup completed for Kubegres resource kpostgres into file: /var/lib/backup/kpostgres-backup-19_04_2023_21_10_01.gz&#xD;&#xA;&lt;/pre&gt;&#xA;&lt;h2&gt;Conclusion&lt;/h2&gt;&#xA;&lt;p&gt;Kubegres apporte une grande aisance dans le déploiement de clusters PostgreSQL avec Streaming Replication. Il aurait été beaucoup plus fastidieux ici de tout créer à la main.&lt;br /&gt;&#xA;Nous ne l&amp;#8217;avons pas abordé ici, mais il est aussi possible de customiser la configuration en réalisant son propre ConfigMap, créer d&amp;#8217;autres PVC pour gérer les archives etc&amp;#8230; Dans le prochain épisode, nous le comparerons à &lt;a href=&#34;https://github.com/CrunchyData/postgres-operator&#34;&gt;PGO&lt;/a&gt;, l&amp;#8217;opérateur concurrent de CrunchyDB.&lt;/p&gt;&#xA;&lt;p&gt;A bientôt et doucement sur les chocolats &lt;img src=&#34;https://s.w.org/images/core/emoji/14.0.0/72x72/1f642.png&#34; alt=&#34;🙂&#34; class=&#34;wp-smiley&#34; style=&#34;height: 1em; max-height: 1em;&#34; /&gt; !&lt;br /&gt;&#xA;&lt;strong&gt;Continuez votre lecture sur le blog :&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul class=&#34;similar-posts&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/pgo-operateurs-kubernetes-pour-postgresql-la-suite/&#34; rel=&#34;bookmark&#34; title=&#34;6 juin 2023&#34;&gt;PGO : opérateurs kubernetes pour PostgreSQL, la suite !&lt;/a&gt; (David Baffaleuf) [ContainerDevopsPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-sur-la-solution-kubernetes-locale-minikube/&#34; rel=&#34;bookmark&#34; title=&#34;29 mars 2023&#34;&gt;PostgreSQL sur la solution Kubernetes locale Minikube&lt;/a&gt; (Emmanuel RAMI) [ContainerPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/comparatif-des-gestionnaires-de-vip-dans-un-cluster-patroni-episode-2-vip-manager/&#34; rel=&#34;bookmark&#34; title=&#34;11 mars 2022&#34;&gt;Comparatif des gestionnaires de VIP dans un cluster Patroni : épisode 2 (VIP-MANAGER)&lt;/a&gt; (David Baffaleuf) [ContainerPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/comparatif-des-gestionnaires-de-vip-dans-un-cluster-patroni-episode-1-keepalived/&#34; rel=&#34;bookmark&#34; title=&#34;6 mars 2022&#34;&gt;Comparatif des gestionnaires de VIP dans un cluster Patroni : épisode 1 (KEEPALIVED)&lt;/a&gt; (David Baffaleuf) [ContainerPostgreSQL]&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.capdata.fr/index.php/postgresql-la-streaming-replication-en-12/&#34; rel=&#34;bookmark&#34; title=&#34;19 novembre 2019&#34;&gt;PostgreSQL : la streaming replication en 12.&lt;/a&gt; (Emmanuel RAMI) [PostgreSQL]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;!-- Similar Posts took 3.140 ms --&gt;&lt;/p&gt;&#xA;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-twitter nolightbox&#34; data-provider=&#34;twitter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Twitter&#34; href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D9778&amp;#038;text=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;twitter&#34; title=&#34;Share on Twitter&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/twitter.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-linkedin nolightbox&#34; data-provider=&#34;linkedin&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; title=&#34;Share on Linkedin&#34; href=&#34;https://www.linkedin.com/shareArticle?mini=true&amp;#038;url=https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D9778&amp;#038;title=Kubegres%20%3A%20l%E2%80%99op%C3%A9rateur%20Kubernetes%20cl%C3%A9%20en%20main%20pour%20PostgreSQL&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px;margin-right:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;linkedin&#34; title=&#34;Share on Linkedin&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/linkedin.png&#34; /&gt;&lt;/a&gt;&lt;a class=&#34;synved-social-button synved-social-button-share synved-social-size-24 synved-social-resolution-single synved-social-provider-mail nolightbox&#34; data-provider=&#34;mail&#34; rel=&#34;nofollow&#34; title=&#34;Share by email&#34; href=&#34;mailto:?subject=Kubegres%20%3A%20l%E2%80%99op%C3%A9rateur%20Kubernetes%20cl%C3%A9%20en%20main%20pour%20PostgreSQL&amp;#038;body=Article%20sur%20le%20blog%20de%20la%20Capdata%20Tech%20Team%20%3A%20:%20https%3A%2F%2Fblog.capdata.fr%2F%3Fp%3D9778&#34; style=&#34;font-size: 0px;width:24px;height:24px;margin:0;margin-bottom:5px&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; alt=&#34;mail&#34; title=&#34;Share by email&#34; class=&#34;synved-share-image synved-social-image synved-social-image-share&#34; width=&#34;24&#34; height=&#34;24&#34; style=&#34;display: inline;width:24px;height:24px;margin: 0;padding: 0;border: none;box-shadow: none&#34; src=&#34;https://blog.capdata.fr/wp-content/plugins/social-media-feather/synved-social/image/social/regular/48x48/mail.png&#34; /&gt;&lt;/a&gt;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/kubegres-loperateur-kubernetes-cle-en-main-pour-postgresql/&#34;&gt;Kubegres : l&amp;#8217;opérateur Kubernetes clé en main pour PostgreSQL&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.capdata.fr/index.php/kubegres-loperateur-kubernetes-cle-en-main-pour-postgresql/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hello à toutes et tous ! Pour faire suite à l&amp;#8217;article d&amp;#8217;Emmanuel sur l&amp;#8217;installation de PostgreSQL sur un cluster minikube local, aujourd&amp;#8217;hui nous allons découvrir l&amp;#8217;opérateur Kubegres qui permet de facilement déployer un cluster PostgreSQL avec Primary et Standby à&amp;#8230; &lt;a href=&#34;https://blog.capdata.fr/index.php/kubegres-loperateur-kubernetes-cle-en-main-pour-postgresql/&#34; class=&#34;more-link&#34;&gt;Continuer la lecture &lt;span class=&#34;meta-nav&#34;&gt;&amp;#8594;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;L’article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr/index.php/kubegres-loperateur-kubernetes-cle-en-main-pour-postgresql/&#34;&gt;Kubegres : l&amp;#8217;opérateur Kubernetes clé en main pour PostgreSQL&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.capdata.fr&#34;&gt;Capdata TECH BLOG&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Sarah FAVEERE</name>
    </author>
  </entry>
  <entry>
    <title>Les rapports de bugs de Postgres en 2023</title>
    <updated>2024-01-24T10:23:10Z</updated>
    <id>tag:blog-postgresql.verite.pro,2024-01-24:/2024/01/24/pgsql-bugs-annee-2023.html</id>
    <link href="https://blog-postgresql.verite.pro/2024/01/24/pgsql-bugs-annee-2023.html" rel="alternate"></link>
    <summary type="html">Une revue quantitative des rapports de bugs de Postgres en 2023</summary>
  </entry>
  <entry>
    <title>Classification des caractères avec ICU</title>
    <updated>2023-06-11T14:32:00Z</updated>
    <id>tag:blog-postgresql.verite.pro,2023-06-11:/2023/06/11/caracteres-icu.html</id>
    <link href="https://blog-postgresql.verite.pro/2023/06/11/caracteres-icu.html" rel="alternate"></link>
    <summary type="html">Avec PostgreSQL 16 où ICU devient le fournisseur de collations par défaut, il y a quelques différences sémantiques à anticiper dans la classification des caractères. Cet article en détaille quelques-unes.</summary>
  </entry>
  <entry>
    <title>Isolation Repeatable Read avec PostgreSQL versus MySQL</title>
    <updated>2020-02-10T17:50:00Z</updated>
    <id>tag:blog-postgresql.verite.pro,2020-02-10:/2020/02/10/isolation-postgresql-vs-mysql.html</id>
    <link href="https://blog-postgresql.verite.pro/2020/02/10/isolation-postgresql-vs-mysql.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Les moteurs SQL permettent aux transactions concurrentes d’être&#xA;isolées les unes des autres pour éviter les interférences.&#xA;Cette propriété d’isolation correspond à la lettre I de l’acronyme&#xA;bien connu &lt;a href=&#34;https://fr.wikipedia.org/wiki/Propri%C3%A9t%C3%A9s_ACID&#34;&gt;“ACID”&lt;/a&gt;,&#xA;les autres propriétés étant Atomicité, Cohérence&#xA;(&lt;em&gt;Consistency&lt;/em&gt; en anglais) et Durabilité.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Recherche et remplacement multiple avec plperl</title>
    <updated>2020-01-22T09:05:14Z</updated>
    <id>tag:blog-postgresql.verite.pro,2020-01-22:/2020/01/22/multi-replace.html</id>
    <link href="https://blog-postgresql.verite.pro/2020/01/22/multi-replace.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Remplacer une chaîne par une autre dans une chaîne plus large est simple&#xA;en SQL, avec la fonction &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;replace&lt;/code&gt;:&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Les collations non déterministes</title>
    <updated>2019-10-16T16:32:15Z</updated>
    <id>tag:blog-postgresql.verite.pro,2019-10-16:/2019/10/16/collations-non-deterministes.html</id>
    <link href="https://blog-postgresql.verite.pro/2019/10/16/collations-non-deterministes.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Depuis la version 12, les collations de PostgreSQL peuvent être créées&#xA;avec un paramètre nommé &lt;strong&gt;deterministic&lt;/strong&gt;, qui peut être vrai&#xA;ou faux, si bien que les collations  sont maintenant&#xA;soit &lt;strong&gt;déterministes&lt;/strong&gt; (ce qu’elles sont par défaut), soit&#xA;&lt;strong&gt;non déterministes&lt;/strong&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Faire une clef synthétique pour se référer aux rôles?</title>
    <updated>2019-09-30T17:50:12Z</updated>
    <id>tag:blog-postgresql.verite.pro,2019-09-30:/2019/09/30/clef-synthetique-roles.html</id>
    <link href="https://blog-postgresql.verite.pro/2019/09/30/clef-synthetique-roles.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dans des tables utilisateurs, on peut avoir besoin de stocker&#xA;une référence aux rôles PostgreSQL, par exemple pour&#xA;représenter des droits d’accès à des fonctionnalités applicatives,&#xA;ou des méta-données associées aux comptes.&#xA;Se pose alors la question de ce qu’on peut utiliser&#xA;comme référence pour désigner un rôle.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>PostgreSQL Hebdo #110</title>
    <updated>2024-01-19T13:28:00Z</updated>
    <id>tag:sebastien.lardiere.net,2024-01-19:/blog/index.php/post/2024/01/19/PostgreSQL-Hebdo-110</id>
    <link href="http://sebastien.lardiere.net/blog/index.php/post/2024/01/19/PostgreSQL-Hebdo-110" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;img src=&#34;http://sebastien.lardiere.net/blog/public/logo_walking_elephant_2.jpg&#34; alt=&#34;logo_walking_elephant_2.jpg, oct. 2023&#34; class=&#34;media-center&#34; title=&#34;Walking Elephant, oct. 2023&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;p&gt;Lu ces dernières semaines :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://adamj.eu/tech/2024/01/03/postgresql-full-text-search-websearch/&#34;&gt;PostgreSQL: Full text search with the “websearch” syntax&lt;/a&gt; : la recherche plein-texte de PostgreSQL est un outil pleinement fonctionnel et il est possible de l&#39;intégrer dans une application web ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.crunchydata.com/blog/postgres-toast-the-greatest-thing-since-sliced-bread&#34;&gt;Postgres TOAST: The Greatest Thing Since Sliced Bread?&lt;/a&gt; : les détails du stockage de données de type text ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/jnidzwetzki/pg-lock-tracer&#34;&gt;Lock tracing tools for PostgreSQL&lt;/a&gt; : des outils pour tracer différents types de verrous dans PostgreSQL ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://ryanguill.com/postgresql/sql/2024/01/08/postgresql-wishlist.html&#34;&gt;My PostgreSQL wishlist&lt;/a&gt; : Noël est passé, c&#39;est donc trop tard pour cette année ! Néanmoins, on y trouve de quoi réflechir sur les fonctionnalités manquantes à PostgreSQL ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cybertec-postgresql.com/en/parallel-query-postgresql-problems-jdbc-dbeaver/&#34;&gt;PostgreSQL parallel query problems in JDBC and DBeaver&lt;/a&gt; : des subtilités du pilote JDBC ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.thenile.dev/blog/transaction-isolation-postgres&#34;&gt;Transaction Isolation in Postgres, explained&lt;/a&gt; : retour sur les niveaux d&#39;isolations des transactions ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://explainextended.com/2023/12/31/happy-new-year-15/&#34;&gt;Happy New Year: GPT in 500 lines of SQL&lt;/a&gt; : Faire du LLM en SQL.&lt;/li&gt;&#xA;&lt;/ul&gt;</summary>
    <author>
      <name>Sébastien Lardière</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL Hebdo #109</title>
    <updated>2023-12-22T12:52:00Z</updated>
    <id>tag:sebastien.lardiere.net,2023-12-22:/blog/index.php/post/2023/12/22/PostgreSQL-Hebdo-109</id>
    <link href="http://sebastien.lardiere.net/blog/index.php/post/2023/12/22/PostgreSQL-Hebdo-109" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;img src=&#34;http://sebastien.lardiere.net/blog/public/logo_walking_elephant_2.jpg&#34; alt=&#34;logo_walking_elephant_2.jpg, oct. 2023&#34; class=&#34;media-center&#34; title=&#34;Walking Elephant, oct. 2023&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;p&gt;Lu ces dernières semaines :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://karenjex.blogspot.com/2023/12/trying-to-be-barbie-in-kens-mojo-dojo.html&#34;&gt;Trying to be Barbie in Ken&#39;s Mojo Dojo Casa House&lt;/a&gt; : À lire ! cette transcription d&#39;une conférence doit vous permettre de prendre conscience de la réalité de nos métiers !&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.phoronix.com/news/Linux-Sched-Postgres-SPR&#34;&gt;New Scheduler Optimization Can Help Out PostgreSQL &amp;amp; More On Sapphire Rapids&lt;/a&gt; : des améliorations dans le noyau Linux qui peuvent concerner PostgreSQL (mais pas seulement) ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://drewdevault.com/2021/08/05/In-praise-of-Postgres.html&#34;&gt;In praise of PostgreSQL&lt;/a&gt;: PostgreSQL est vu, à juste titre, comme une contribution majeure du logiciel libre ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.infoworld.com/article/3711272/9-reasons-sql-has-got-to-go.html&#34;&gt;9 reasons SQL has got to go&lt;/a&gt; et la réponse &lt;a href=&#34;https://www.linkedin.com/pulse/sql-has-died-again-david-rolfe-5jvpe/&#34;&gt;SQL has died (again)&lt;/a&gt; : En réalité, le langage SQL et les SGBDR ont survécu à toutes les technologies censés les enterrer : le problème central reste le modèle de données et son exploitation, et ces « vieilles » technologies ont justement été créées pour cela ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/EnterpriseDB/pg_failover_slots&#34;&gt;pg_failover_slots&lt;/a&gt; : comment fiabiliser la réplication logique en synchronisant l&#39;état du « slot » ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://discuss.systems/@andy_pavlo/111602495241147105&#34; title=&#34;https://discuss.systems/@andy_pavlo/111602495241147105&#34;&gt;https://discuss.systems/@andy_pavlo...&lt;/a&gt; : optimisation du fonctionnement de pgbouncer avec un kernel Linux ;&lt;/li&gt;&#xA;&lt;li&gt;Extracting SQL from WAL? &lt;a href=&#34;https://rjuju.github.io/postgresql/2023/12/06/extract-sql-from-wal.html&#34;&gt;part 1&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://rjuju.github.io/postgresql/2023/12/20/extract-sql-from-wal-part2.html&#34;&gt;part2&lt;/a&gt; : plongeons dans le code de PostgreSQL pour retrouver les données ;&lt;/li&gt;&#xA;&lt;/ul&gt;</summary>
    <author>
      <name>Sébastien Lardière</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL Hebdo #108</title>
    <updated>2023-11-10T13:23:00Z</updated>
    <id>tag:sebastien.lardiere.net,2023-11-10:/blog/index.php/post/2023/11/10/PostgreSQL-Hebdo-108</id>
    <link href="http://sebastien.lardiere.net/blog/index.php/post/2023/11/10/PostgreSQL-Hebdo-108" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;img src=&#34;http://sebastien.lardiere.net/blog/public/logo_walking_elephant_2.jpg&#34; alt=&#34;logo_walking_elephant_2.jpg, oct. 2023&#34; class=&#34;media-center&#34; title=&#34;Walking Elephant, oct. 2023&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;p&gt;Lu ces dernières semaines :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://jpcamara.com/2023/04/12/pgbouncer-is-useful.html&#34;&gt;PgBouncer is useful, important, and fraught with peril&lt;/a&gt; : article très complet sur l&#39;utilisation de PgBouncer, qui un outil très utile pour réaliser la montée en charge d&#39;une instance PostgreSQL, avec des points techniques à prendre en compte ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.techbuddies.io/2023/10/30/unlock-your-arsenals-gdb-debugging-essentials-with-postgresql/&#34;&gt;Unlock Your Arsenals: GDB Debugging Essentials with PostgreSQL&lt;/a&gt; : très bon résumé du déboguage de PostgreSQL avec GDB ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://xata.io/blog/pgroll-schema-migrations-postgres&#34;&gt;Introducing pgroll: zero-downtime, reversible, schema migrations for Postgres&lt;/a&gt; : un nouvel outil pour gérer les évolutions de schéma des bases de donnnées ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://andyatkinson.com/blog/2023/11/01/PostgreSQL-IO-Visibility-wehack-pg_stat_io&#34;&gt;PostgreSQL IO Visibility: #wehack PostgreSQL Internals and pg_stat_io&lt;/a&gt; : quelques détails sur la vue pg_stat_io, apparue dans PostgreSQL 16 :&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.hezmatt.org/~mpalmer/blog/2023/11/07/postgresql-encryption-options.html&#34;&gt;PostgreSQL Encryption: The Available Options&lt;/a&gt; : le chiffrement des données dans une base de données est effectivement une tâche complexe ;&lt;/li&gt;&#xA;&lt;li&gt;Pgconf.eu 2023 &lt;a href=&#34;https://www.postgresql.eu/events/pgconfeu2023/schedule/&#34;&gt;Conference Schedule&lt;/a&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://notes.eatonphil.com/2023-11-01-postgres-table-access-methods.html&#34;&gt;Writing a storage engine for Postgres: an in-memory Table Access Method&lt;/a&gt; : un exemple d&#39;écriture d&#39;un moteur de stockage de données en mémoire ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/news/postgresql-161-155-1410-1313-1217-and-1122-released-2749/&#34;&gt;PostgreSQL 16.1, 15.5, 14.10, 13.13, 12.17, and 11.22 Released!&lt;/a&gt; : Mise à jour mineure de PostgreSQL, nécessitant la reconstruction de certains index. Il s&#39;agit de la dernière mise à jour de PostgreSQL 11 ;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.loxodata.com/post/postgresql-16-1/&#34;&gt;PostgreSQL 16.1 et autres correctifs&lt;/a&gt; : Notes de publication en français :&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</summary>
    <author>
      <name>Sébastien Lardière</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL Hebdo #107</title>
    <updated>2023-10-27T15:53:00Z</updated>
    <id>tag:sebastien.lardiere.net,2023-10-27:/blog/index.php/post/2023/10/27/PostgreSQL-Hebdo-107</id>
    <link href="http://sebastien.lardiere.net/blog/index.php/post/2023/10/27/PostgreSQL-Hebdo-107" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;img src=&#34;http://sebastien.lardiere.net/blog/public/logo_walking_elephant_2.jpg&#34; alt=&#34;logo_walking_elephant_2.jpg, oct. 2023&#34; class=&#34;media-center&#34; title=&#34;logo_walking_elephant_2.jpg, oct. 2023&#34; /&gt;&lt;/p&gt; &lt;p&gt;Lu ces dernières semaines :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/pgbouncer/pgbouncer/releases/tag/pgbouncer_1_21_0&#34;&gt;PgBouncer 1.21.0 - &#34;The one with prepared statements&#34; &lt;/a&gt; : une nouvelle version du pooler intégrant la gestion des requêtes préparées ;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.crunchydata.com/blog/prepared-statements-in-transaction-mode-for-pgbouncer&#34;&gt;Prepared Statements in Transaction Mode for PgBouncer&lt;/a&gt; : et un article expliquant la notion ;&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.paradedb.com/blog/introducing_bm25&#34;&gt;pg_bm25: Elastic-Quality Full Text Search Inside Postgres&lt;/a&gt; : une alternative à la recherche plein-texte integrée à PostgreSQL, s&#39;appuyant sur des projets existants ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://martinheinz.dev/blog/105&#34;&gt;You Don&#39;t Need a Dedicated Cache Service - PostgreSQL as a Cache&lt;/a&gt; : utiliser PostgreSQL comme cache, et pourquoi pas ?&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://vadimkravcenko.com/shorts/database-migrations/&#34;&gt;Database Migrations&lt;/a&gt; : le changement de modèle de données, appelé ici une migration, est toujours une étape délicate à opérer à chaud. Pour bien faire, il faut maitriser des outils et méthodes dédiés, et bien étudier chaque phase ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://postgresql.verite.pro/blog/2023/10/20/icu-73-versioning.html&#34;&gt;The collation versioning problem with ICU 73&lt;/a&gt; : les collations ICU sont très utiles, mais attention aux changements de versions, vraiment surprenant, qui nécessite de reconstruire les index ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/zalando/patroni/blob/master/docs/releases.rst#version-320&#34;&gt;Patroni 3.2.0&lt;/a&gt; : il est maintenant possible de marquer un nœud préféré pour une bascule sur incident (failover) ;&lt;/li&gt;&#xA;&lt;/ul&gt;</summary>
    <author>
      <name>Sébastien Lardière</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL Hebdo #106</title>
    <updated>2023-10-11T13:46:00Z</updated>
    <id>tag:sebastien.lardiere.net,2023-10-11:/blog/index.php/post/2023/10/11/PostgreSQL-Hebdo-106</id>
    <link href="http://sebastien.lardiere.net/blog/index.php/post/2023/10/11/PostgreSQL-Hebdo-106" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lu ces dernières semaines :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://postgresql.verite.pro/blog/2023/09/27/icu-traditional-calendars.html&#34;&gt;Using traditional calendars with ICU&lt;/a&gt; : très instructif, la conversion de date d&#39;un calendrier à un autre en utilisant ICU ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://peter.eisentraut.org/blog/2023/09/20/grouping-digits-in-sql&#34;&gt;Grouping digits in SQL&lt;/a&gt; : le chemin pour intégrer cette fonctionnalité n&#39;est pas le plus simple, mais au moins, la notation est dans la norme SQL ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kmoppel.github.io/2023-09-28-til-when-was-my-postgres-cluster-initialized/&#34;&gt;TIL - When was my Postgres cluster initialized?&lt;/a&gt; : Ou l&#39;on voit qu&#39;on peut connaitre l&#39;age d&#39;une instance à partir de son identifiant ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.sequin.io/all-the-ways-to-capture-changes-in-postgres/&#34;&gt;All the ways to capture changes in Postgres&lt;/a&gt; : Intercepter un changement a de nombreuses applications possibles, et selon le besoin, différentes techniques existent ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.crunchydata.com/blog/five-great-features-of-postgres-partition-manager&#34;&gt;Five Great Features of the PostgreSQL Partition Manager&lt;/a&gt; : pg_partman est le principal outil aidant à la mise en œuvre du partitionnement, et il s&#39;enrichit de fonctionnalité avec la version 5 récemment publiée ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.crunchydata.com/blog/understanding-postgres-iops&#34;&gt;Understanding Postgres IOPS: Why They Matter Even When Everything Fits in Cache&lt;/a&gt; : Comprendre les IOPS, comment PostgreSQL s&#39;en sert, comment on peut observer les métriques associées et comment optimiser leurs utilisations ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cybertec-postgresql.com/en/pg_resetwal-when-to-reset-the-wal-in-postgresql/&#34;&gt;pg_resetwal: When to reset the WAL in PostgreSQL&lt;/a&gt; : Toujours être très attentif aux conditions d&#39;utilisation de cet outil, car il entraine une perte de données : à n&#39;utiliser qu&#39;en cas d&#39;absolu nécessité !&lt;/li&gt;&#xA;&lt;/ul&gt;</summary>
    <author>
      <name>Sébastien Lardière</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL Hebdo #105</title>
    <updated>2023-09-20T14:50:00Z</updated>
    <id>tag:sebastien.lardiere.net,2023-09-20:/blog/index.php/post/2023/09/20/PostgreSQL-Hebdo-105</id>
    <link href="http://sebastien.lardiere.net/blog/index.php/post/2023/09/20/PostgreSQL-Hebdo-105" rel="alternate"></link>
    <summary type="html">&lt;p&gt;lu ces dernières semaines :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/news/postgresql-16-released-2715/&#34;&gt;PostgreSQL 16 Released!&lt;/a&gt; : pas besoin de rc2, PostgreSQL 16 est disponible !&#xA;&lt;ul&gt;&#xA;&lt;li&gt;et en français : &lt;a href=&#34;https://www.loxodata.com/post/postgresql-16/&#34;&gt;Sortie de PostgreSQL 16&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.crunchydata.com/blog/active-active-postgres-16&#34;&gt;Active Active in Postgres 16&lt;/a&gt; : Avec PostgreSQL 16, il est maintenant possible d&#39;utiliser la réplication logique dans 2 directions pour une même table, avec quelques précautions ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://learnsql.com/blog/history-of-sql-standards/&#34;&gt;The History of SQL Standards&lt;/a&gt; : la norme SQL a une histoire qui permet d&#39;expliquer certaines particularités du language ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.eversql.com/my-oracle-to-postgresql-migration-the-7-tools-that-made-it-possible/&#34;&gt;My Oracle to PostgreSQL Migration: The 7 Tools That Made It Possible&lt;/a&gt; : Un DBA Oracle montre sa boite à outils de migration vers PostgreSQL ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://stormatics.tech/umairs-planet-postgresql/improving-update-query-performance-using-heap-only-tuples-hot&#34;&gt;Improving UPDATE query performance using Heap-Only Tuples (HOT)&lt;/a&gt; : Comment optimiser les mises à jour de données ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://fluca1978.github.io/2023/09/19/PostgreSQLFORAutodeclaredVariables.html&#34;&gt;FOR loops automatically declared variables in PL/PgSQL&lt;/a&gt; : Attention aux déclarations implicites des variables dans Pl/pgSQL ;&lt;/li&gt;&#xA;&lt;/ul&gt;</summary>
    <author>
      <name>Sébastien Lardière</name>
    </author>
  </entry>
  <entry>
    <title>Memento PostgreSQL 16</title>
    <updated>2023-12-21T13:00:00Z</updated>
    <id>tag:www.loxodata.com,2023-12-21:/post/refcardv16/</id>
    <link href="http://www.loxodata.com/post/refcardv16/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Depuis quelques années, nous produisons et diffusons la version papier&#xA;de notre memento sur PostgreSQL. Ce memento est adapté à chaque version,&#xA;au fur et à mesure de leurs publications.&lt;/p&gt;&#xA;&lt;p&gt;La version 16 de PostgreSQL ayant été publiée le 14 septembre, nous&#xA;mettons à disposition ce memento mis à jour.&lt;/p&gt;&#xA;&lt;p&gt;Ce document reprend, sur deux triptryques, l&amp;rsquo;ensemble des utilitaires&#xA;et commandes qui nous semblent essentiels pour travailler avec&#xA;PostgreSQL. Nous vous proposons de le retrouver ici sous la forme d&amp;rsquo;un&#xA;fichier PDF, disponible en deux langues :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;version française : &lt;a href=&#34;http://www.loxodata.com/downloads/files/RefCard_Fr_PostgreSQL16.pdf&#34; download=&#34;&#34;&gt;RefCard_Fr_PostgreSQL16.pdf&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;version anglaise : &lt;a href=&#34;http://www.loxodata.com/downloads/files/RefCard_En_PostgreSQL16.pdf&#34; download=&#34;&#34;&gt;RefCard_En_PostgreSQL16.pdf&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Il suffit de l&amp;rsquo;imprimer en recto-verso et de le plier en 3, ou, tout&#xA;simplement, de conserver et consulter le fichier PDF.&lt;/p&gt;&#xA;&lt;p&gt;Si vous avez des remarques ou des suggestions, vous pouvez nous écrire&#xA;à l&amp;rsquo;adresse &lt;a href=&#34;mailto:contact@loxodata.com&#34;&gt;contact@loxodata.com&lt;/a&gt;, nous serons heureux de faire évoluer&#xA;ce memento.&lt;/p&gt;</summary>
    <author>
      <name>Loxodata</name>
    </author>
  </entry>
  <entry>
    <title>Loxodata participe à PGConf.eu 2023</title>
    <updated>2023-12-06T14:20:00Z</updated>
    <id>tag:www.loxodata.com,2023-12-06:/post/pgconf-eu-2023/</id>
    <link href="http://www.loxodata.com/post/pgconf-eu-2023/" rel="alternate"></link>
    <summary type="html">&lt;h1 id=&#34;pgconf-europe-2023&#34;&gt;PgConf Europe 2023&lt;/h1&gt;&#xA;&lt;p&gt;La prochaine &lt;a href=&#34;https://2023.pgconf.eu/&#34;&gt;PGConf Europe&lt;/a&gt; se tiendra du 12 au 15 décembre à Prague, capitale de la Tchéquie.&lt;/p&gt;&#xA;&lt;p&gt;Le déroulement de l&amp;rsquo;évènement suivra l&amp;rsquo;habituelle formule avec une journée de formation et trois journées de conférences autour de PostgreSQL et son écosystème.&lt;/p&gt;&#xA;&lt;p&gt;Le programme de la conférence est disponible sur le site &lt;a href=&#34;https://www.postgresql.eu/events/pgconfeu2023/schedule/&#34;&gt;https://2023.pgconf.eu/&lt;/a&gt;. Il est toujours possible de s&#39;&lt;a href=&#34;https://2023.pgconf.eu/registration/&#34;&gt;inscrire&lt;/a&gt; à l&amp;rsquo;évènement.&lt;/p&gt;&#xA;&lt;p&gt;LOXODATA sera cette année partenaire Bronze de l&amp;rsquo;évènement, et nous nous ferons un plaisir d&amp;rsquo;échanger avec vous entre deux conférences.&lt;/p&gt;</summary>
    <author>
      <name>Loxodata</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL 16.1 et autres correctifs</title>
    <updated>2023-11-10T08:00:00Z</updated>
    <id>tag:www.loxodata.com,2023-11-10:/post/postgresql-16-1/</id>
    <link href="http://www.loxodata.com/post/postgresql-16-1/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Le PGDG a publié une mise à jour de toutes les versions supportées de&#xA;PostgreSQL. Il s&amp;rsquo;agit des versions 16.1, 15.5, 14.10, 13.13, 12.17 et 11.22.&#xA;Cette publication corrige près de 55 bogues repérés durant les derniers mois.&lt;/p&gt;&#xA;&lt;p&gt;Cette publication inclut des correctifs sur les index. Il peut s&amp;rsquo;avérer nécessaire de réindexer certains index. Se référer à la section &amp;ldquo;Mise à jour&amp;rdquo; pour plus de détails.&lt;/p&gt;&#xA;&lt;h2 id=&#34;annonce-de-fin-de-support-pour-postgresql-11&#34;&gt;Annonce de fin de support pour PostgreSQL 11&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Ceci est la dernière publication pour PostgreSQL 11&lt;/strong&gt;. PostgreSQL 11 arrive au terme de son support et ne recevra plus de correctifs de sécurité ou de bogues. Si vous utilisez PostgreSQL 11 en production, nous vous encourageons à mettre à jour vers une version plus récente et supportée de PostgreSQL. Se référer à notre &lt;a href=&#34;https://www.postgresql.org/support/versioning/&#34;&gt;politique de version&lt;/a&gt; pour plus d&amp;rsquo;informations.&lt;/p&gt;&#xA;&lt;h2 id=&#34;problèmes-de-sécurité&#34;&gt;Problèmes de sécurité&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/support/security/CVE-2023-5868/&#34;&gt;CVE-2023-5868&lt;/a&gt; : Divulgation mémoire dans les appels de fonctions d&amp;rsquo;aggrégation&lt;/p&gt;&#xA;&lt;p&gt;CVSS v3 Base Score : &lt;a href=&#34;https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N&#34;&gt;4.3&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Versions affectées : 11 - 16. L&amp;rsquo;équipe de sécurité ne teste pas les versions non supportées, mais c&amp;rsquo;est un problème de longue date.&lt;/p&gt;&#xA;&lt;p&gt;Certains appels à des fonctions d&amp;rsquo;aggrégation recevant en paramètre des arguments de type &amp;ldquo;unknown&amp;rdquo; peuvent divulguer des octets de mémoire du serveur depuis la fin de la valeur &amp;ldquo;unknown&amp;rdquo; jusqu&amp;rsquo;au prochain octet vide. Il est possible d&amp;rsquo;obtenir une valeur de type &amp;ldquo;unknown&amp;rdquo; par l&amp;rsquo;utilisation d&amp;rsquo;une chaîne littérale sans désignation de type. Nous n&amp;rsquo;avons pas confirmé ou évalué la viabilité des attaques qui pourraient profiter de la présence de données confidentielles dans les octets divulgués.&lt;/p&gt;&#xA;&lt;p&gt;Le projet PostgreSQL remercie Jingzhou Fu pour avoir signalé ce problème.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/support/security/CVE-2023-5869/&#34;&gt;CVE-2023-5869&lt;/a&gt; : Dépassement de tampon lors d&amp;rsquo;un débordement d&amp;rsquo;entier dans une modification de tableau&lt;/p&gt;&#xA;&lt;p&gt;CVSS v3 Base Score: &lt;a href=&#34;https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H&#34;&gt;8.8&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Versions affectées: 11 - 16. L&amp;rsquo;équipe de sécurité ne teste pas les versions non supportées, mais c&amp;rsquo;est un problème ancien.&lt;/p&gt;&#xA;&lt;p&gt;Lors de la modification de certaines valeurs de tableaux SQL, des contrôles de débordement manquants permettent à des utilisateurs de bases de données authentifiés d&amp;rsquo;écrire des octets arbitraires dans une zone mémoire qui facilite l&amp;rsquo;exécution de code arbitraire. Les contrôles de débordement manquants permettent également aux utilisateurs authentifiés de la base de données de lire une large zone de la mémoire du serveur. Le correctif &lt;a href=&#34;https://www.postgresql.org/support/security/CVE-2021-32027/&#34;&gt;CVE-2021-32027&lt;/a&gt; a couvert certaines attaques de cette description, mais il en a manqué d&amp;rsquo;autres.&lt;/p&gt;&#xA;&lt;p&gt;Le projet PostgreSQL remercie Pedro Gallegos pour avoir signalé le problème.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/support/security/CVE-2023-5870/&#34;&gt;CVE-2023-5870&lt;/a&gt; : Le rôle &amp;lsquo;pg_cancel_backend&amp;rsquo; peut signaler certains processus superutilisateur&lt;/p&gt;&#xA;&lt;p&gt;CVSS v3 Base Score: &lt;a href=&#34;https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:N/AC:H/PR:H/UI:N/S:U/C:N/I:N/A:L&#34;&gt;2.2&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Versions affectées : 11 - 16. L&amp;rsquo;équipe de sécurité ne teste pas les versions non supportées, mais c&amp;rsquo;est un problème ancien.&lt;/p&gt;&#xA;&lt;p&gt;La documentation stipule que le rôle &amp;lsquo;pg_cancel_backend&amp;rsquo; ne peut signaler &amp;ldquo;un processus backend appartenant à un superutilisateur&amp;rdquo;. À l&amp;rsquo;inverse, il peut signaler des processus en tâche de fond, incluant l&amp;rsquo;exécuteur de la réplication logique. Il peut signaler les processus d&amp;rsquo;autovacuum et l&amp;rsquo;exécuteur d&amp;rsquo;autovacuum. Signaler les processus d&amp;rsquo;autovacuum et les deux exécuteurs ne permet pas d&amp;rsquo;exploiter quoi que ce soit. C&amp;rsquo;est pourquoi l&amp;rsquo;exploitation de cette vulnérabilté requiert une extension non supportée avec un processus de tâche de fond moins résilient. Par exemple, un processus de tâche de fond non légitime qui ne redémarre pas automatiquement se verra attribuer un refus de service eu égard de ce processus de tâche de fond.&lt;/p&gt;&#xA;&lt;p&gt;Le projet PostgreSQL remercie Hemanth Sandrana et Mahendrakar Srinivasarao pour avoir signalé le problème.&lt;/p&gt;&#xA;&lt;h2 id=&#34;corrections-des-bogues-et-améliorations&#34;&gt;Corrections des bogues et améliorations&lt;/h2&gt;&#xA;&lt;p&gt;Cette mise à jour corrige près de 55 bogues qui ont été reportés depuis ces derniers mois. Les problèmes listés ci-dessous affectent la version 16 de PostgreSQL. Certaines peuvent aussi affecter d&amp;rsquo;autres versions supportées de PostgreSQL.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Correction d&amp;rsquo;un problème où les index GiST avaient un comportement incorrect pendant une opération de &amp;ldquo;division de page&amp;rdquo; pouvant mener à des résultats incorrects dans des recherches d&amp;rsquo;index ultérieures.&#xA;Merci de &lt;a href=&#34;https://www.postgresql.org/docs/current/sql-reindex.html&#34;&gt;réindexer&lt;/a&gt; les index GiST après la mise à jour.&lt;/li&gt;&#xA;&lt;li&gt;Correction d&amp;rsquo;un problème avec les index B-tree qui peuvent ne pas dédupliquer correctement des colonnes de type &lt;code&gt;interval&lt;/code&gt;. Merci de &lt;a href=&#34;https://www.postgresql.org/docs/current/sql-reindex.html&#34;&gt;réindexer&lt;/a&gt; tous les index B-tree incluant des colonnes de type &lt;code&gt;interval&lt;/code&gt; après la mise à jour.&lt;/li&gt;&#xA;&lt;li&gt;Amélioration de l&amp;rsquo;efficacité de l&amp;rsquo;indexation de valeurs de type &lt;code&gt;date&lt;/code&gt;, &lt;code&gt;timestamptz&lt;/code&gt; et &lt;code&gt;timestamp&lt;/code&gt; dans des index BRIN. Bien que non nécéssaire, nous vous recommandons de &lt;a href=&#34;https://www.postgresql.org/docs/current/sql-reindex.html&#34;&gt;réindexer&lt;/a&gt; après la mise à jour les index BRIN pouvant inclure ces types de colonnes.&lt;/li&gt;&#xA;&lt;li&gt;Correction de l&amp;rsquo;insertion par lot dans des tables partitionnées.&lt;/li&gt;&#xA;&lt;li&gt;Correction pour les tables partitionnées par hash avec plusieurs clés de partitionnement pendant les phases de génération et de pruning à l&amp;rsquo;éxécution pouvant entraîner des crashs dans certains cas.&lt;/li&gt;&#xA;&lt;li&gt;Envoyer l&amp;rsquo;erreur correcte si &lt;a href=&#34;https://www.postgresql.org/docs/current/pgrowlocks.html&#34;&gt;&lt;code&gt;pgrowlocks()&lt;/code&gt;&lt;/a&gt; est appliqué à une table partitionnée.&lt;/li&gt;&#xA;&lt;li&gt;Correction d&amp;rsquo;une revalidation inconsistente de mise à jour concurentielle de lignes lors d&amp;rsquo;un &lt;a href=&#34;https://www.postgresql.org/docs/current/sql-merge.html&#34;&gt;&lt;code&gt;MERGE&lt;/code&gt;&lt;/a&gt; avec le mode d&amp;rsquo;isolation &lt;a href=&#34;https://www.postgresql.org/docs/current/transaction-iso.html#XACT-READ-COMMITTED&#34;&gt;&lt;code&gt;READ COMMITTED&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Identifier correctement la table cible lors d&amp;rsquo;un &lt;code&gt;UPDATE&lt;/code&gt;/&lt;code&gt;DELETE&lt;/code&gt;/&lt;code&gt;MERGE&lt;/code&gt; hérité même lorsque la table parente est exclue par contraintes.&lt;/li&gt;&#xA;&lt;li&gt;Corrige la sur-allocation d&amp;rsquo;un &lt;a href=&#34;https://www.postgresql.org/docs/current/datatype-textsearch.html#DATATYPE-TSVECTOR&#34;&gt;&lt;code&gt;tsvector&lt;/code&gt;&lt;/a&gt; construit.&lt;/li&gt;&#xA;&lt;li&gt;Corrige la commande &lt;a href=&#34;https://www.postgresql.org/docs/current/sql-altersubscription.html&#34;&gt;&lt;code&gt;ALTER SUBSCRIPTION&lt;/code&gt;&lt;/a&gt; pour appliquer les changements avec l&amp;rsquo;option &lt;code&gt;run_as_owner&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Plusieurs corrections pour la commande &lt;a href=&#34;https://www.postgresql.org/docs/current/sql-copy.html&#34;&gt;&lt;code&gt;COPY FROM&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Plusieurs corrections pour la gestion des lectures dégradées avec &lt;a href=&#34;https://www.postgresql.org/docs/current/wal-internals.html&#34;&gt;&lt;code&gt;pg_control&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Corrige les erreurs &amp;ldquo;could not find pathkey item to sort&amp;rdquo; survenant lors de la planification de fonctions d&amp;rsquo;aggrégation avec les options &lt;code&gt;ORDER BY&lt;/code&gt; ou &lt;code&gt;DISTINCT&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Ajouter le temps des opérations d&amp;rsquo;extension de relation au temps d&amp;rsquo;écriture lorsque le paramètre &lt;a href=&#34;https://www.postgresql.org/docs/current/runtime-config-statistics.html#GUC-TRACK-IO-TIMING&#34;&gt;&lt;code&gt;track_io_timing&lt;/code&gt;&lt;/a&gt; est activé.&lt;/li&gt;&#xA;&lt;li&gt;Suivre les dépendances de requêtes &lt;a href=&#34;https://www.postgresql.org/docs/current/sql-call.html&#34;&gt;&lt;code&gt;CALL&lt;/code&gt;&lt;/a&gt; en cache, et les replanifier au besoin.&lt;/li&gt;&#xA;&lt;li&gt;Considérer les erreurs &amp;ldquo;out-of-memory&amp;rdquo; comme &lt;code&gt;FATAL&lt;/code&gt; pendant la lecture des WAL.&lt;/li&gt;&#xA;&lt;li&gt;Corrige la commande &lt;a href=&#34;https://www.postgresql.org/docs/current/app-pgdump.html&#34;&gt;&lt;code&gt;pg_dump&lt;/code&gt;&lt;/a&gt; pour exporter la nouvelle option &lt;code&gt;run_as_owner&lt;/code&gt; des souscriptions.&lt;/li&gt;&#xA;&lt;li&gt;Corrige la commande &lt;a href=&#34;https://www.postgresql.org/docs/current/app-pgrestore.html&#34;&gt;&lt;code&gt;pg_restore&lt;/code&gt;&lt;/a&gt; pour inclure lors de restaurations sélectives les droits de niveau table et colonne pour les tables sélectionnées.&lt;/li&gt;&#xA;&lt;li&gt;Ajout de la vérification dans la commande &lt;a href=&#34;https://www.postgresql.org/docs/current/pgupgrade.html&#34;&gt;&lt;code&gt;pg_upgrade&lt;/code&gt;&lt;/a&gt; de l&amp;rsquo;utilisation de types de données obsolètes &lt;code&gt;abstime&lt;/code&gt;, &lt;code&gt;reltime&lt;/code&gt; et &lt;code&gt;tinterval&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Corrige la commande &lt;a href=&#34;https://www.postgresql.org/docs/current/app-vacuumdb.html&#34;&gt;&lt;code&gt;vacuumdb&lt;/code&gt;&lt;/a&gt; afin de prendre en compte l&amp;rsquo;exclusion de tables dans des schémas différents avec plusieurs option &lt;code&gt;-N&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/amcheck.html&#34;&gt;&lt;code&gt;amcheck&lt;/code&gt;&lt;/a&gt; ne reportera plus les interruptions de suppression de page comme des corruptions.&lt;/li&gt;&#xA;&lt;li&gt;Corrige les index &lt;code&gt;btree_gin&lt;/code&gt; sur les colonnes de type &lt;code&gt;interval&lt;/code&gt; afin de retourner correctement les données lors de l&amp;rsquo;utilisation des opérateurs &lt;code&gt;&amp;lt;&lt;/code&gt; et &lt;code&gt;&amp;lt;=&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;mise-à-jour&#34;&gt;Mise à jour&lt;/h2&gt;&#xA;&lt;p&gt;Toutes les publications de mises à jour de PostgreSQL sont&#xA;cumulatives. Comme pour les autres mises à jour mineures, il n&amp;rsquo;est pas&#xA;nécessaire d&amp;rsquo;extraire et de recharger les bases de données ni&#xA;d&amp;rsquo;utiliser &lt;code&gt;pg_upgrade&lt;/code&gt; pour appliquer cette mise à jour ;&#xA;il suffit simplement d&amp;rsquo;arrêter PostgreSQL et de mettre à jour les binaires.&lt;/p&gt;&#xA;&lt;p&gt;Nous recommandons de &lt;a href=&#34;https://www.postgresql.org/docs/current/sql-reindex.html&#34;&gt;reindexer&lt;/a&gt; certains types d&amp;rsquo;index après la mise à jour, dont :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;les index GiST&lt;/li&gt;&#xA;&lt;li&gt;les index B-tree utilisant le type de données &lt;code&gt;interval&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;les index BRIN utilisant les types de données &lt;code&gt;date&lt;/code&gt;, &lt;code&gt;timestamptz&lt;/code&gt; et &lt;code&gt;timestamp&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Avec PostgreSQL 12 et plus récent, vous pouvez utiliser la commande &lt;a href=&#34;https://www.postgresql.org/docs/current/sql-reindex.html&#34;&gt;&lt;code&gt;REINDEX CONCURRENTLY&lt;/code&gt;&lt;/a&gt; pour ne pas bloquer les écritures sur les index et tables affectés, par exemple :&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;REINDEX INDEX CONCURRENTLY your_index_name;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Les utilisateurs ayant sauté une ou plusieurs mises à jour peuvent&#xA;avoir besoin d&amp;rsquo;étapes additionnelles après la mise à jour.&#xA;Les notes de publication des versions précédentes fournissent les détails.&lt;/p&gt;&#xA;&lt;p&gt;Pour plus de détails, se référer à la &lt;a href=&#34;https://www.postgresql.org/docs/release/&#34;&gt;note de publication de versions&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;liens&#34;&gt;Liens&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/download/&#34;&gt;Téléchargements&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/release/&#34;&gt;Notes de version&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/support/security/&#34;&gt;Page sur la sécurité&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/support/versioning/&#34;&gt;Politique de version&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/press/&#34;&gt;Annonce de la sortie de PostgreSQL 16&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://twitter.com/postgresql&#34;&gt;Suivre @postgresql sur Twitter&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/donate/&#34;&gt;Faire un don&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Si vous avez des corrections ou suggestions sur cette annonce de publication, merci de les envoyer à la mailing list publique &lt;a href=&#34;https://www.postgresql.org/list/&#34;&gt;&lt;em&gt;pgsql-www@lists.postgresql.org&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;</summary>
    <author>
      <name>Loxodata</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL 16</title>
    <updated>2023-09-14T13:30:00Z</updated>
    <id>tag:www.loxodata.com,2023-09-14:/post/postgresql-16/</id>
    <link href="http://www.loxodata.com/post/postgresql-16/" rel="alternate"></link>
    <summary type="html">&lt;h1 id=&#34;sortie-de-postgresql-16&#34;&gt;Sortie de PostgreSQL 16&lt;/h1&gt;&#xA;&lt;p&gt;Le 14 septembre 2023 - Le PostgreSQL Global Development Group annonce&#xA;aujourd’hui la publication de PostgreSQL 16, dernière version de la base de&#xA;données open source la plus avancée du monde.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/docs/16/release-16.html&#34;&gt;PostgreSQL 16&lt;/a&gt; augmente ses&#xA;performances avec des améliorations notables apportées dans la parallélisation&#xA;des requêtes, le chargement en masse et la réplication logique. Cette version&#xA;inclut de nombreuses fonctionnalités pour les développeurs et développeuses et&#xA;pour les administrateurs et administratrices en embarquant plus d&amp;rsquo;éléments de&#xA;syntaxes SQL/JSON, de nouvelles statistiques de suivi de la charge de travail et&#xA;plus de flexibilité dans la définition des règles de contrôle d&amp;rsquo;accès pour la&#xA;gestion des politiques applicables à de grandes flottes de serveurs.&lt;/p&gt;&#xA;&lt;p&gt;« Les utilisations des bases de données évoluant, PostgreSQL continue&#xA;d’améliorer les performances en recherche et gestion des données à mesure que&#xA;les volumes augmentent, » déclare Dave Page, membre de la Core-Team PostgreSQL.&#xA;« PostgreSQL 16 offre aux utilisateurs et utilisatrices de nouvelles méthodes&#xA;pour accroître et répartir la charge, tout en offrant de nouveaux moyens&#xA;d’observer et optimiser la gestion de leurs données. »&lt;/p&gt;&#xA;&lt;p&gt;Connu pour sa fiabilité et sa robustesse, PostgreSQL est le résultat d&amp;rsquo;un&#xA;développement open source de plus de 25 ans par une communauté mondiale de&#xA;développement. PostgreSQL est devenu le système de gestion de base de données&#xA;relationnelles open source préféré d&amp;rsquo;organismes de toutes tailles.&lt;/p&gt;&#xA;&lt;p&gt;PostgreSQL, système innovant de gestion des données, connu pour sa fiabilité et&#xA;sa robustesse, bénéficie depuis plus de 35 ans d&amp;rsquo;un développement open source&#xA;par une communauté de développeurs et développeuses mondiale. Il est devenu le&#xA;système de gestion de bases de données relationnelles de référence pour des&#xA;organisations de toute taille.&lt;/p&gt;&#xA;&lt;h3 id=&#34;améliorations-des-performances&#34;&gt;Améliorations des performances&lt;/h3&gt;&#xA;&lt;p&gt;PostgreSQL 16 améliore la performance de fonctionnalités existantes via de&#xA;nouvelles optimisations du planificateur de requêtes. Dans cette nouvelle&#xA;version, le planificateur de requête peut&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/16/parallel-query.html&#34;&gt;paralléliser&lt;/a&gt; les&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/16/queries-table-expressions.html#QUERIES-JOIN&#34;&gt;jointures&lt;/a&gt;&#xA;&lt;code&gt;FULL&lt;/code&gt; et &lt;code&gt;RIGHT&lt;/code&gt;, générer de meilleurs plans pour les requêtes qui utilisent&#xA;des &lt;a href=&#34;https://www.postgresql.org/docs/16/functions-aggregate.html&#34;&gt;fonction&#xA;d’agrégation&lt;/a&gt; avec&#xA;des clauses &lt;code&gt;DISTINCT&lt;/code&gt; ou &lt;code&gt;ORDER BY&lt;/code&gt;, bénéficier de tris incrémentaux pour les&#xA;requêtes &lt;a href=&#34;https://www.postgresql.org/docs/16/queries-select-lists.html#QUERIES-DISTINCT&#34;&gt;&lt;code&gt;SELECT DISTINCT&lt;/code&gt;&lt;/a&gt;&#xA;et d’exécuter des &lt;a href=&#34;https://www.postgresql.org/docs/16/sql-expressions.html#SYNTAX-WINDOW-FUNCTIONS&#34;&gt;requêtes&#xA;fenêtrées&lt;/a&gt;&#xA;plus efficacement. Il introduit également les « anti-jointures » &lt;code&gt;RIGHT&lt;/code&gt; et&#xA;&lt;code&gt;OUTER&lt;/code&gt; permettant ainsi d&amp;rsquo;identifier les lignes qui ne sont pas présentes dans&#xA;une table jointe.&lt;/p&gt;&#xA;&lt;p&gt;Cette version inclut des améliorations sur le chargement en masse utilisant&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/16/sql-copy.html&#34;&gt;&lt;code&gt;COPY&lt;/code&gt;&lt;/a&gt; en opérations&#xA;unitaires ou concurrentes. Les tests ont pu montrer un gain de performance&#xA;allant jusqu&amp;rsquo;à 300% dans certaines conditions. PostgreSQL ajoute également le&#xA;support de la &lt;a href=&#34;https://www.postgresql.org/docs/16/libpq-connect.html#LIBPQ-CONNECT-LOAD-BALANCE-HOSTS&#34;&gt;répartition de&#xA;charge&lt;/a&gt; pour&#xA;les clients utilisant &lt;code&gt;libpq&lt;/code&gt; et des améliorations dans la stratégie de vacuum&#xA;réduisant la nécessité de verrouiller l&amp;rsquo;ensemble d&amp;rsquo;une table. De plus,&#xA;PostgreSQL 16 introduit une accélération processeur en utilisant &lt;code&gt;SIMD&lt;/code&gt; pour les&#xA;architectures x86 et ARM. Cette accélération permet des gains de performance&#xA;lors du traitement des chaînes ASCII et des types JSON ainsi que lors de&#xA;recherches dans les tableaux ou les sous-transactions.&lt;/p&gt;&#xA;&lt;h3 id=&#34;réplication-logique&#34;&gt;Réplication logique&lt;/h3&gt;&#xA;&lt;p&gt;La &lt;a href=&#34;https://www.postgresql.org/docs/16/logical-replication.html&#34;&gt;réplication&#xA;logique&lt;/a&gt; permet aux&#xA;utilisateurs et utilisatrices de PostgreSQL d’envoyer des données au fil de&#xA;l’eau à d’autres instances PostgreSQL ou à des destinataires capables&#xA;d&amp;rsquo;interpréter le protocole de réplication logique de PostgreSQL. À partir de&#xA;PostgreSQL 16, les utilisateurs et utilisatrices peuvent utiliser la réplication&#xA;logique depuis une instance de réplication physique secondaire. Cela signifie&#xA;qu’une instance secondaire peut publier des modifications logiques à destination&#xA;d’autres serveurs. Les développeurs et développeuses ont ainsi accès à de&#xA;nouvelles options de répartition de la charge – par exemple, en utilisant un&#xA;serveur secondaire en lieu et place du primaire déjà fortement chargé pour&#xA;répliquer des modifications logiques vers des serveurs en aval.&lt;/p&gt;&#xA;&lt;p&gt;PostgreSQL 16 apporte également de nombreuses améliorations des performances de&#xA;la réplication logique. Les souscripteurs peuvent maintenant appliquer de larges&#xA;transactions en utilisant le parallélisme. Pour les tables sans &lt;a href=&#34;https://www.postgresql.org/docs/16/ddl-constraints.html#DDL-CONSTRAINTS-PRIMARY-KEYS&#34;&gt;clé&#xA;primaire&lt;/a&gt;,&#xA;les souscripteurs peuvent utiliser un index B-tree en lieu et place des parcours&#xA;séquentiels pour trouver des lignes. Sous certaines conditions, les utilisateurs&#xA;et utilisatrices peuvent aussi accélérer la synchronisation des tables en&#xA;utilisant un format binaire.&lt;/p&gt;&#xA;&lt;p&gt;PostgreSQL 16 inclut plusieurs améliorations de gestion des accès comme le&#xA;nouveau &lt;a href=&#34;https://www.postgresql.org/docs/16/predefined-roles.html&#34;&gt;rôle&#xA;prédéfini&lt;/a&gt;&#xA;&lt;code&gt;pg_create_subscription&lt;/code&gt; qui permet d’accorder le droit de créer de nouveaux&#xA;abonnements logiques. Enfin, cette version apporte les prémices d’une&#xA;réplication logique bidirectionnelle en permettant de répliquer des données&#xA;entre deux tables provenant de sources différentes.&lt;/p&gt;&#xA;&lt;h3 id=&#34;expérience-développeurdéveloppeuse&#34;&gt;Expérience développeur/développeuse&lt;/h3&gt;&#xA;&lt;p&gt;PostgreSQL 16 ajoute des syntaxes du standard&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/16/functions-json.html&#34;&gt;SQL/JSON&lt;/a&gt; comme les&#xA;constructeurs et prédicats &lt;code&gt;JSON_ARRAY()&lt;/code&gt;, &lt;code&gt;JSON_ARRAYAGG()&lt;/code&gt;, et &lt;code&gt;IS JSON&lt;/code&gt;.&#xA;Cette version propose également la possibilité d’utiliser des underscores comme&#xA;séparateur de milliers (par exemple &lt;code&gt;5_432_000&lt;/code&gt;) pour les valeurs numériques&#xA;entières comme &lt;code&gt;0x1538&lt;/code&gt;, &lt;code&gt;0o12470&lt;/code&gt;, and &lt;code&gt;0b1010100111000&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Les développeurs et développeuses utilisant PostgreSQL 16 bénéficient également&#xA;de l’ajout de plusieurs commandes au client &lt;code&gt;psql&lt;/code&gt;, comme la commande&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/16/app-psql.html#APP-PSQL-META-COMMAND-BIND&#34;&gt;&lt;code&gt;\bind&lt;/code&gt;&lt;/a&gt;,&#xA;qui permet aux utilisateurs et utilisatrices d’exécuter une requête paramétrée&#xA;(par exemple &lt;code&gt;SELECT $1 + $2&lt;/code&gt;) puis d’utiliser &lt;code&gt;\bind&lt;/code&gt; pour valoriser les&#xA;variables.&lt;/p&gt;&#xA;&lt;p&gt;PostgreSQL 16 améliore de manière le support général des différentes&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/16/collation.html&#34;&gt;collations&lt;/a&gt;, qui définissent&#xA;les règles de tri des champs texte. PostgreSQL 16,  compilé par défaut avec&#xA;prise en charge de ICU (International Components for Unicode), détermine la&#xA;locale ICU par défaut à partir de l&amp;rsquo;environnement et permet aux utilisateurs et&#xA;utilisatrices de définir des comportements personnalisés liés à une collation&#xA;ICU.&lt;/p&gt;&#xA;&lt;h3 id=&#34;suivi-dexploitation&#34;&gt;Suivi d&amp;rsquo;exploitation&lt;/h3&gt;&#xA;&lt;p&gt;Un des points clés du réglage de la performance d’un trafic de base de données&#xA;est de comprendre l’impact des opérations d’entrées/sorties sur son système.&#xA;PostgreSQL 16 simplifie l’analyse de ces données avec la nouvelle vue&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/16/monitoring-stats.html#MONITORING-PG-STAT-IO-VIEW&#34;&gt;&lt;code&gt;pg_stat_io&lt;/code&gt;&lt;/a&gt;&#xA;qui enregistre les statistiques clés des entrées/sorties comme le taux de succès&#xA;dans le &lt;code&gt;shared_buffer&lt;/code&gt; et la latence en entrée/sortie.&lt;/p&gt;&#xA;&lt;p&gt;Cette version ajoute également un nouveau champ à la vue&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/16/monitoring-stats.html#MONITORING-PG-STAT-ALL-TABLES-VIEW&#34;&gt;&lt;code&gt;pg_stat_all_tables&lt;/code&gt;&lt;/a&gt;&#xA;qui indique le dernier instant où une table ou un index a été parcouru.&#xA;PostgreSQL 16 rend aussi&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/16/auto-explain.html&#34;&gt;&lt;code&gt;auto_explain&lt;/code&gt;&lt;/a&gt; plus&#xA;lisible en traçant les valeurs passées dans les requêtes paramétrées et améliore&#xA;la précision de l’algorithme de suivi des requêtes utilisé par&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/16/pgstatstatements.html&#34;&gt;&lt;code&gt;pg_stat_statements&lt;/code&gt;&lt;/a&gt;&#xA;et&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/16/monitoring-stats.html#MONITORING-PG-STAT-ACTIVITY-VIEW&#34;&gt;&lt;code&gt;pg_stat_activity&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;contrôle-daccès-et-sécurité&#34;&gt;Contrôle d&amp;rsquo;accès et sécurité&lt;/h3&gt;&#xA;&lt;p&gt;PostgreSQL 16 fournit des options plus fines pour la gestion du contrôle d’accès&#xA;et améliore les fonctionnalités de sécurité. Cette version améliore la gestion&#xA;des fichiers&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/16/auth-pg-hba-conf.html&#34;&gt;&lt;code&gt;pg_hba.conf&lt;/code&gt;&lt;/a&gt; et&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/16/auth-username-maps.html&#34;&gt;&lt;code&gt;pg_ident.conf&lt;/code&gt;&lt;/a&gt; en&#xA;incluant la possibilité de définir des expressions rationnelles applicables sur&#xA;les noms des utilisateurs et utilisatrices et des bases de données ainsi que la&#xA;directive &lt;code&gt;include&lt;/code&gt; pour les fichiers de configuration externes.&lt;/p&gt;&#xA;&lt;p&gt;Cette version ajoute plusieurs paramètres de connexion orientés sécurité au&#xA;niveau des clients. Ainsi &lt;code&gt;require_auth&lt;/code&gt; permet à un client de spécifier les&#xA;paramètres d’authentification qu’il accepte de la part du serveur. Le&#xA;paramètre&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/16/libpq-connect.html#LIBPQ-CONNECT-SSLROOTCERT&#34;&gt;&lt;code&gt;sslrootcert=&amp;quot;system&amp;quot;&lt;/code&gt;&lt;/a&gt;&#xA;permet d’indiquer à PostgreSQL qu’il doit utiliser le magasin d’autorité de&#xA;certification de confiance (CA) fourni par le système d’exploitation du client.&#xA;De plus, cette version ajoute le support de la délégation d’identification de&#xA;Kerberos. Cela permet aux extensions comme&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/16/postgres-fdw.html&#34;&gt;&lt;code&gt;postgres_fdw&lt;/code&gt;&lt;/a&gt; et&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/16/dblink.html&#34;&gt;&lt;code&gt;dblink&lt;/code&gt;&lt;/a&gt; d’utiliser ce&#xA;mécanisme d&amp;rsquo;identification pour se connecter à des services de confiance.&lt;/p&gt;&#xA;&lt;h3 id=&#34;à-propos-de-postgresql&#34;&gt;À propos de PostgreSQL&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org&#34;&gt;PostgreSQL&lt;/a&gt; est le système de gestion de bases de&#xA;données libre de référence. Sa communauté mondiale est composée de plusieurs&#xA;milliers d’utilisateurs, utilisatrices, contributeurs, contributrices,&#xA;entreprises et institutions. Le projet PostgreSQL, démarré il y a plus de 30 ans&#xA;à l’université de Californie, à Berkeley, a atteint aujourd’hui un rythme de&#xA;développement sans pareil. L’ensemble des fonctionnalités proposées est mature,&#xA;et dépasse même celui des systèmes commerciaux leaders sur les fonctionnalités&#xA;avancées, les extensions, la sécurité et la stabilité.&lt;/p&gt;&#xA;&lt;h3 id=&#34;liens&#34;&gt;Liens&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/download/&#34;&gt;Téléchargements&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/16/release-16.html&#34;&gt;Notes de version&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/press/&#34;&gt;Dossier de presse&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/support/security/&#34;&gt;Page sécurité&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/support/versioning/&#34;&gt;Politique des versions&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://twitter.com/postgresql&#34;&gt;Suivre @postgresql sur Twitter&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/donate/&#34;&gt;Dons&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;en-savoir-plus-sur-les-fonctionnalités&#34;&gt;En savoir plus sur les fonctionnalités&lt;/h2&gt;&#xA;&lt;p&gt;Pour de plus amples informations sur les fonctionnalités ci-dessus et toutes les&#xA;autres, vous pouvez consulter les liens suivants :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/16/release-16.html&#34;&gt;Notes de version&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/featurematrix/&#34;&gt;Matrice de fonctionnalités&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;où-télécharger&#34;&gt;Où télécharger&lt;/h2&gt;&#xA;&lt;p&gt;Il existe plusieurs façons de télécharger PostgreSQL 16, dont :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;la &lt;a href=&#34;https://www.postgresql.org/download/&#34;&gt;page de téléchargement&lt;/a&gt; , qui&#xA;contient les installeurs et les outils pour&#xA;&lt;a href=&#34;https://www.postgresql.org/download/windows/&#34;&gt;Windows&lt;/a&gt;,&#xA;&lt;a href=&#34;https://www.postgresql.org/download/&#34;&gt;Linux&lt;/a&gt;,&#xA;&lt;a href=&#34;https://www.postgresql.org/download/macosx/&#34;&gt;macOS&lt;/a&gt;, et bien plus ;&lt;/li&gt;&#xA;&lt;li&gt;le &lt;a href=&#34;https://www.postgresql.org/ftp/source/v16.0&#34;&gt;code source&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;D&amp;rsquo;autres outils et extensions sont disponibles sur le &lt;a href=&#34;http://pgxn.org/&#34;&gt;PostgreSQL Extension&#xA;Network&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;documentation&#34;&gt;Documentation&lt;/h2&gt;&#xA;&lt;p&gt;La documentation au format HTML et les pages de manuel sont installées avec&#xA;PostgreSQL. La documentation peut également être &lt;a href=&#34;https://www.postgresql.org/docs/16/&#34;&gt;consultée en&#xA;ligne&lt;/a&gt; ou récupérée au format&#xA;&lt;a href=&#34;https://www.postgresql.org/files/documentation/pdf/16/postgresql-16-A4.pdf&#34;&gt;PDF&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;licence&#34;&gt;Licence&lt;/h2&gt;&#xA;&lt;p&gt;PostgreSQL utilise la &lt;a href=&#34;https://www.postgresql.org/about/licence/&#34;&gt;licence&#xA;PostgreSQL&lt;/a&gt;, licence « permissive »&#xA;de type BSD. Cette &lt;a href=&#34;http://www.opensource.org/licenses/postgresql/&#34;&gt;licence certifiée&#xA;OSI&lt;/a&gt; est largement appréciée&#xA;pour sa flexibilité et sa compatibilité avec le monde des affaires, puisqu&amp;rsquo;elle&#xA;ne restreint pas l&amp;rsquo;utilisation de PostgreSQL dans les applications propriétaires&#xA;ou commerciales. Associée à un support proposé par de multiples sociétés et une&#xA;propriété publique du code, sa licence rend PostgreSQL très populaire parmi les&#xA;revendeurs souhaitant embarquer une base de données dans leurs produits sans&#xA;avoir à se soucier des prix de licence, des verrous commerciaux ou modifications&#xA;des termes de licence.&lt;/p&gt;&#xA;&lt;h2 id=&#34;contacts&#34;&gt;Contacts&lt;/h2&gt;&#xA;&lt;p&gt;Site internet&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/&#34;&gt;https://www.postgresql.org/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Courriel&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;mailto:press@postgresql.org&#34;&gt;press@postgresql.org&lt;/a&gt; ou&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;mailto:fr@postgresql.org&#34;&gt;fr@postgreql.org&lt;/a&gt; pour un contact francophone&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;images-et-logos&#34;&gt;Images et logos&lt;/h2&gt;&#xA;&lt;p&gt;Postgres, PostgreSQL et le logo éléphant (Slonik) sont des marques déposées de&#xA;l&#39;&lt;a href=&#34;https://www.postgres.ca&#34;&gt;Association de la Communauté PostgreSQL&lt;/a&gt;. Si vous&#xA;souhaitez utiliser ces marques, vous devez vous conformer à la &lt;a href=&#34;https://www.postgresql.org/about/policies/trademarks/&#34;&gt;politique de la&#xA;marque&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;support-professionnel&#34;&gt;Support professionnel&lt;/h2&gt;&#xA;&lt;p&gt;PostgreSQL bénéficie du support de nombreuses sociétés, qui financent des&#xA;développeurs et développeuses, fournissent l&amp;rsquo;hébergement ou un support&#xA;financier. Les plus fervents supporters sont listés sur la page des&#xA;&lt;a href=&#34;https://www.postgresql.org/about/sponsors/&#34;&gt;sponsors&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Il existe également une très grande communauté de​ &lt;a href=&#34;https://www.postgresql.org/support/professional_support/&#34;&gt;sociétés offrant du support&#xA;PostgreSQL&lt;/a&gt;, du&#xA;consultant indépendant aux entreprises multinationales.&lt;/p&gt;&#xA;&lt;p&gt;Les &lt;a href=&#34;https://www.postgresql.org/about/donate/&#34;&gt;dons&lt;/a&gt; au PostgreSQL Global&#xA;Development Group, ou à l&amp;rsquo;une des associations à but non lucratif, sont acceptés&#xA;et encouragés.&lt;/p&gt;&#xA;&lt;p&gt;Photo fournie par Neil et Zulma Scott, sur Unsplash.&lt;/p&gt;</summary>
    <author>
      <name>Loxodata</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL 16 en RC1</title>
    <updated>2023-08-31T13:30:00Z</updated>
    <id>tag:www.loxodata.com,2023-08-31:/post/postgresql-16-rc1/</id>
    <link href="http://www.loxodata.com/post/postgresql-16-rc1/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Le PostgreSQL Global Development Group a annoncé la publication de la première&#xA;Release Candidate de PostgreSQL 16. En tant que Release Candidate, la version&#xA;de PostgreSQL 16 RC1 sera quasiment identique à la publication initiale de&#xA;PostgreSQL 16, cependant, des corrections pourront être appliquées avant la&#xA;mise à disposition de la version finale de PostgreSQL 16.&lt;/p&gt;&#xA;&lt;p&gt;La date de publication pour la version finale de PostgreSQL 16 est prévue au 14&#xA;septembre 2023. Consulter la section &lt;a href=&#34;#planning-des-publications&#34;&gt;Planning des publications&lt;/a&gt;&#xA;pour plus de détails.&lt;/p&gt;&#xA;&lt;h1 id=&#34;mise-à-jour-vers-la-rc1-de-postgresql-16&#34;&gt;Mise à jour vers la RC1 de PostgreSQL 16&lt;/h1&gt;&#xA;&lt;p&gt;Pour mettre à jour votre version de PostgreSQL depuis une précédente version de&#xA;PostgreSQL, vous pouvez utiliser la même stratégie que pour mettre à jour vers&#xA;toute version majeure de PostgreSQL (par exemple avec la commande &lt;code&gt;pg_upgrade&lt;/code&gt;&#xA;ou &lt;code&gt;pg_dump&lt;/code&gt;/&lt;code&gt;pg_restore&lt;/code&gt;).&lt;/p&gt;&#xA;&lt;p&gt;Pour plus d&amp;rsquo;information, consultez la section &lt;a href=&#34;https://www.postgresql.org/docs/16/upgrading.html&#34;&gt;mise à jour&lt;/a&gt;&#xA;de la documentation officielle : &lt;a href=&#34;https://www.postgresql.org/docs/16/upgrading.html&#34;&gt;https://www.postgresql.org/docs/16/upgrading.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;changements-depuis-la-bêta-3&#34;&gt;Changements depuis la bêta 3&lt;/h1&gt;&#xA;&lt;p&gt;Plusieurs corrections ont été apportées à PostgreSQL 16 suite aux remontées&#xA;d&amp;rsquo;utilisateurs ayant testé la bêta 3.&lt;/p&gt;&#xA;&lt;p&gt;La principale concerne la correction d&amp;rsquo;un problème de performance lors de chargements parallèles sur une table unique à l&amp;rsquo;aide de la commande &lt;code&gt;COPY&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Pour la liste complète des corrections, veuillez consulter la page des&#xA;&lt;a href=&#34;https://wiki.postgresql.org/wiki/PostgreSQL_16_Open_Items#resolved_before_16rc1&#34;&gt;tickets&lt;/a&gt; ouverts.&lt;/p&gt;&#xA;&lt;h1 id=&#34;planning-des-publications&#34;&gt;Planning des publications&lt;/h1&gt;&#xA;&lt;p&gt;Il s&amp;rsquo;agit de la première Release Candidate de la version 16. Sauf à découvrir un&#xA;problème imposant un nouveau délai ou une nouvelle Release Candidate, PostgreSQL&#xA;16 devrait être publiée le 14 septembre 2023.&lt;/p&gt;&#xA;&lt;p&gt;Pour plus d&amp;rsquo;information, veuillez consulter la page &lt;a href=&#34;https://www.postgresql.org/developer/beta/&#34;&gt;Beta Testing&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;liens&#34;&gt;Liens&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/download/&#34;&gt;Téléchargement&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/developer/beta/&#34;&gt;Information sur le Bêta Testing&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/16/release-16.html&#34;&gt;Note de publication de PostgreSQL 16&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://wiki.postgresql.org/wiki/PostgreSQL_16_Open_Items&#34;&gt;Problèmes connus de PostgreSQL 16&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/featurematrix/#configuration-management&#34;&gt;Matrice de fonctionnalités&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/account/submitbug/&#34;&gt;Soumettre un bogue&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://twitter.com/postgresql&#34;&gt;Suivre @postgresql sur Twitter&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/donate/&#34;&gt;Faire un don&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</summary>
    <author>
      <name>Loxodata</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL 15.4, 14.9, 13.12, 12.16, 11.21 et 16 bêta 3</title>
    <updated>2023-08-17T13:30:00Z</updated>
    <id>tag:www.loxodata.com,2023-08-17:/post/postgresql-16-beta3-and-fix/</id>
    <link href="http://www.loxodata.com/post/postgresql-16-beta3-and-fix/" rel="alternate"></link>
    <summary type="html">&lt;h1 id=&#34;publication-des-mises-à-jour-de-postgresql-154-149-1312-1216-1121-et-de-postgresql-16-bêta-3&#34;&gt;Publication des mises à jour de PostgreSQL 15.4, 14.9, 13.12, 12.16, 11.21 et de PostgreSQL 16 bêta 3&lt;/h1&gt;&#xA;&lt;p&gt;Le PostgreSQL Global Development Group a annoncé la publication d&amp;rsquo;une mise à jour&#xA;pour toutes les versions supportées de PostgreSQL, incluant les versions 15.4,&#xA;14.9, 13.12, 12.16 et 11.21 ainsi que la bêta 3 de PostgreSQL 16.&#xA;Cette publication inclut le correctif de deux failles de sécurité et de plus de 40&#xA;bugs reportés ces derniers mois.&lt;/p&gt;&#xA;&lt;p&gt;Si vous utilisez des index BRIN pour vérifier les valeurs NULL, vous aurez&#xA;besoin de &lt;a href=&#34;https://www.postgresql.org/docs/current/sql-reindex.html&#34;&gt;réindexer&lt;/a&gt;&#xA;ces derniers après la mise à jour. Sur PostgreSQL 12 et supérieur, vous pouvez&#xA;utiliser &lt;a href=&#34;https://www.postgresql.org/docs/current/sql-reindex.html&#34;&gt;&lt;code&gt;REINDEX CONCURRENTLY&lt;/code&gt;&lt;/a&gt;&#xA;pour ne pas bloquer les écritures sur les index concernés et leur table, par&#xA;exemple :&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;REINDEX INDEX CONCURRENTLY your_index_name;&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Pour plus de détails, se référer à la &lt;a href=&#34;https://www.postgresql.org/docs/release/&#34;&gt;note de version&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;notice-de-dépréciation-de-postgresql-11&#34;&gt;Notice de dépréciation de PostgreSQL 11&lt;/h2&gt;&#xA;&lt;p&gt;PostgreSQL 11 ne recevra plus de correctifs à partir du 9 novembre 2023. Si vous&#xA;utilisez cette version sur un environnement de production, nous vous recommandons&#xA;de mettre à jour vers une version plus récente et supportée de PostgreSQL.&#xA;Merci de consulter notre &lt;a href=&#34;https://www.postgresql.org/support/versioning/&#34;&gt;politique de gestion de version&lt;/a&gt;&#xA;pour plus de détails.&lt;/p&gt;&#xA;&lt;h2 id=&#34;failles-de-sécurité&#34;&gt;Failles de sécurité&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/support/security/CVE-2023-39417/&#34;&gt;CVE-2023-39417&lt;/a&gt;: Les &lt;code&gt;@substitutions@&lt;/code&gt; entre guillements dans les scripts d&amp;rsquo;extension permettent l&amp;rsquo;injection SQL.&lt;/p&gt;&#xA;&lt;p&gt;Versions supportées vulnérables : 11 - 15. L&amp;rsquo;équipe de sécurité ne teste&#xA;pas les versions non supportées, mais ce problème est assez ancien.&lt;/p&gt;&#xA;&lt;p&gt;Un &lt;a href=&#34;https://www.postgresql.org/docs/current/extend-extensions.html&#34;&gt;script d&amp;rsquo;extension&lt;/a&gt;&#xA;est vulnérable s&amp;rsquo;il utilise &lt;code&gt;@extowner@&lt;/code&gt;, &lt;code&gt;@extschema@&lt;/code&gt; ou &lt;code&gt;@extschema&lt;/code&gt;:&amp;hellip;@ à&#xA;l&amp;rsquo;intérieur d&amp;rsquo;une construction de guillemets (guillemets dollars, &lt;code&gt;&#39;&#39;&lt;/code&gt;, ou &lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;).&#xA;Aucune extension incluse n&amp;rsquo;est vulnérable. Les utilisations vulnérables&#xA;apparaissent dans un exemple de documentation et dans des extensions non incluses.&#xA;Par conséquent, la condition préalable à l&amp;rsquo;attaque est qu&amp;rsquo;un administrateur ait&#xA;installé des fichiers d&amp;rsquo;une extension vulnérable, fiable et non incluse. Sous&#xA;réserve de cette condition préalable, cela permet à un attaquant ayant les&#xA;privilèges &lt;code&gt;CREATE&lt;/code&gt; au niveau de la base de données d&amp;rsquo;exécuter du code arbitraire&#xA;en tant que super-utilisateur de démarrage. PostgreSQL bloquera cette attaque&#xA;dans le serveur principal, il n&amp;rsquo;est donc pas nécessaire de modifier les&#xA;extensions individuelles.&lt;/p&gt;&#xA;&lt;p&gt;Le projet PostgreSQL remercie Micah Gate, Valerie Woolard, Tim Carey-Smith, et&#xA;Christoph Berg pour avoir rapporté ce problème.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/support/security/CVE-2023-39418/&#34;&gt;CVE-2023-39418&lt;/a&gt;: &lt;code&gt;MERGE&lt;/code&gt; ne vérifie pas les règles de sécurité de lignes sur &lt;code&gt;UPDATE&lt;/code&gt; ou &lt;code&gt;SELECT&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Versions supportées vulnérables : 15.&lt;/p&gt;&#xA;&lt;p&gt;PostgreSQL 15 a introduit la commande &lt;a href=&#34;https://www.postgresql.org/docs/current/sql-merge.html&#34;&gt;&lt;code&gt;MERGE&lt;/code&gt;&lt;/a&gt;&#xA;qui échoue à la vérification des règles de sécurité sur de nouvelles lignes pour&#xA;un &lt;code&gt;UPDATE&lt;/code&gt; ou &lt;code&gt;SELECT&lt;/code&gt;. Si des règles sur &lt;code&gt;UPDATE&lt;/code&gt; ou &lt;code&gt;SELECT&lt;/code&gt; interdisent des&#xA;lignes que des règles sur &lt;code&gt;INSERT&lt;/code&gt; autorisent, alors un utilisateur peut stocker&#xA;ces lignes. Les autres conséquences dépendent de l&amp;rsquo;application. Ceci n&amp;rsquo;affecte&#xA;que les bases de données pour lesquelles une règle de sécurité de&#xA;niveau ligne a été créée avec l&amp;rsquo;instruction &lt;a href=&#34;https://www.postgresql.org/docs/current/sql-createpolicy.html&#34;&gt;CREATE POLICY&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Le projet PostgreSQL remercie Dean Rasheed pour avoir rapporté ce problème.&lt;/p&gt;&#xA;&lt;h2 id=&#34;note-sur-la-bêta-3-de-postgresql-16&#34;&gt;Note sur la bêta 3 de PostgreSQL 16&lt;/h2&gt;&#xA;&lt;p&gt;Cette publication marque la disponibilité de la bêta 3 de PostgreSQL 16 et rapproche&#xA;la communauté d&amp;rsquo;une possible mise à disposition globale vers la fin du troisième&#xA;trimestre.&lt;/p&gt;&#xA;&lt;p&gt;Dans l&amp;rsquo;esprit de la communauté open source PostgreSQL, nous vous&#xA;encourageons fortement à tester les nouvelles fonctionnalités de&#xA;PostgreSQL dans vos systèmes de bases de données. Ceci afin de nous&#xA;aider à éliminer les bogues et autres problèmes qui pourraient encore&#xA;exister. Bien que nous ne vous conseillions pas de faire fonctionner&#xA;PostgreSQL 16 bêta 3 dans vos environnements de production, nous vous&#xA;encourageons à trouver des moyens de faire fonctionner votre charge&#xA;applicative typique avec cette publication bêta.&lt;/p&gt;&#xA;&lt;p&gt;Vos tests et vos commentaires aideront la communauté à s&amp;rsquo;assurer que&#xA;PostgreSQL 16 respecte nos standards de stabilité et de fiabilité, pour&#xA;continuer à proposer la base de données open source la plus avancée au monde. Regardez&#xA;plus en détails le &lt;a href=&#34;https://www.postgresql.org/developer/beta/&#34;&gt;processus de bêta test&lt;/a&gt;&#xA;pour savoir comment vous pouvez y contribuer :&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/developer/beta/&#34;&gt;https://www.postgresql.org/developer/beta/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Vous trouverez plus d&amp;rsquo;informations sur toutes les fonctionnalités de PostgreSQL&#xA;16 et les changements dans la &lt;a href=&#34;https://www.postgresql.org/docs/16/release-16.html&#34;&gt;note de version&lt;/a&gt; :&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/docs/16/release-16.html&#34;&gt;https://www.postgresql.org/docs/16/release-16.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;correction-de-bogues-et-améliorations&#34;&gt;Correction de bogues et améliorations&lt;/h2&gt;&#xA;&lt;p&gt;Cette mise à jour corrige plus de 40 bogues reportés ces derniers mois. Les&#xA;problèmes listés ci-dessous affecte PostgreSQL 15. Certains de ces problèmes&#xA;peuvent aussi affecter d&amp;rsquo;autres versions de PostgreSQL.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Correction de la gestion des valeurs &lt;code&gt;NULL&lt;/code&gt; dans les index &lt;a href=&#34;https://www.postgresql.org/docs/current/brin-intro.html&#34;&gt;&lt;code&gt;BRIN&lt;/code&gt;&lt;/a&gt;.&#xA;Ce correctif ne s&amp;rsquo;applique pas sur des index &lt;code&gt;BRIN&lt;/code&gt; déjà existant &amp;ndash; vous&#xA;devrez procéder à un &lt;a href=&#34;https://www.postgresql.org/docs/current/sql-reindex.html&#34;&gt;&lt;code&gt;REINDEX&lt;/code&gt;&lt;/a&gt; pour corriger tous les index utilisés pour rechercher valeurs &lt;code&gt;NULL&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;Ne pas laisser une base de données corrompue lorsqu&amp;rsquo;un &lt;code&gt;DROP DATABASE&lt;/code&gt; est&#xA;interrompu ;&lt;/li&gt;&#xA;&lt;li&gt;Plusieurs corrections d&amp;rsquo;index partitionnés ;&lt;/li&gt;&#xA;&lt;li&gt;Correction de &lt;a href=&#34;https://www.postgresql.org/docs/current/sql-alterextension.html&#34;&gt;&lt;code&gt;ALTER EXTENSION ... SET SCHEMA&lt;/code&gt;&lt;/a&gt; pour déclencher&#xA;une erreur si l&amp;rsquo;extension contient des objets en dehors du schéma de&#xA;cette dernière ;&lt;/li&gt;&#xA;&lt;li&gt;Correction de la gestion de dépendance des méthodes d&amp;rsquo;accès des tables ;&lt;/li&gt;&#xA;&lt;li&gt;Ne pas utiliser d&amp;rsquo;index uniques partiels pour la vérification d&amp;rsquo;unicité&#xA;dans le planificateur ;&lt;/li&gt;&#xA;&lt;li&gt;Gestion correcte des sous-requêtes dans les expressions de règles RLS et vues&#xA;de sécurité à l&amp;rsquo;instanciation des actions de règles ;&lt;/li&gt;&#xA;&lt;li&gt;Correction des conditions de concurrence dans la détection de conflit pour le mode d&amp;rsquo;isolation de transaction &lt;code&gt;SERIALIZABLE&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;Correction d&amp;rsquo;erreurs intermittentes lors de la mise à jour d&amp;rsquo;un champ d&amp;rsquo;une colonne composite qui nécessite un &lt;a href=&#34;https://www.postgresql.org/docs/current/storage-toast.html&#34;&gt;TOASTing hors ligne&lt;/a&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;Correction de plusieurs fuites mémoire survenues pendant la durée de vie d&amp;rsquo;une requête ;&lt;/li&gt;&#xA;&lt;li&gt;Autoriser les fractions de secondes en paramètre de la méthode &lt;a href=&#34;https://www.postgresql.org/docs/current/functions-json.html#FUNCTIONS-SQLJSON-PATH-OPERATORS&#34;&gt;&lt;code&gt;jsonpath datetime()&lt;/code&gt;&lt;/a&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;Augmentation de la limite des tokens dans &lt;code&gt;pg_hba.conf&lt;/code&gt; et &lt;code&gt;pg_ident.conf&lt;/code&gt; à 10240 octets ;&lt;/li&gt;&#xA;&lt;li&gt;Une erreur de mémoire insuffisante provenant du compilateur JIT provoquera désormais une erreur &lt;code&gt;FATAL&lt;/code&gt; PostgreSQL au lieu d&amp;rsquo;une exception C++ ;&lt;/li&gt;&#xA;&lt;li&gt;Autoriser &lt;code&gt;VACUUM&lt;/code&gt; à continuer après avoir détecté certains types de corruption d&amp;rsquo;index B-tree. Bien que cette correction permette à &lt;code&gt;VACUUM&lt;/code&gt; de continuer, il reste nécessaire de corriger l&amp;rsquo;index corrompu avec &lt;code&gt;REINDEX&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;Éviter le double rejeu des transactions préparées lors de la récupération après un crash ;&lt;/li&gt;&#xA;&lt;li&gt;S&amp;rsquo;assurer qu&amp;rsquo;un checkpoint appelle &lt;code&gt;fsync&lt;/code&gt; sur une table nouvellement créée mais vide ;&lt;/li&gt;&#xA;&lt;li&gt;Rendre silencieux les erreurs &amp;ldquo;missing contrecord&amp;rdquo; pour éviter de journaliser des messages inexacts de &lt;code&gt;pg_waldump&lt;/code&gt; et &lt;code&gt;walsender&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;Correction de la fonction &lt;a href=&#34;https://www.postgresql.org/docs/current/fuzzystrmatch.html&#34;&gt;fuzzystrmatch&lt;/a&gt; &lt;a href=&#34;https://www.postgresql.org/docs/current/fuzzystrmatch.html#id-1.11.7.26.6&#34;&gt;Soundex &lt;code&gt;difference()&lt;/code&gt;&lt;/a&gt; pour gérer correctement les entrées vides ;&lt;/li&gt;&#xA;&lt;li&gt;Plusieurs corrections pour &lt;a href=&#34;https://www.postgresql.org/docs/current/intarray.html&#34;&gt;intarray&lt;/a&gt;, y compris l&amp;rsquo;interdiction des paramètres d&amp;rsquo;entrée de type tableaux de dépasser la limite de type dans un index GiST ;&lt;/li&gt;&#xA;&lt;li&gt;Correction de &lt;code&gt;pg_dump&lt;/code&gt; pour gérer correctement les corps de fonctions en SQL standard (&lt;code&gt;BEGIN ATOMIC&lt;/code&gt;) qui requièrent des dépendances au moment du parsing sur des index uniques.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Pour la liste complète de changements disponibles, se référer à la &lt;a href=&#34;https://www.postgresql.org/docs/release/&#34;&gt;note de version&lt;/a&gt;/&lt;/p&gt;&#xA;&lt;h2 id=&#34;correctifs-sur-la-bêta-3-de-postgresql-16&#34;&gt;Correctifs sur la bêta 3 de PostgreSQL 16&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Ajout de la commande &lt;code&gt;\drg&lt;/code&gt; à &lt;code&gt;psql&lt;/code&gt; pour afficher des informations sur les&#xA;permissions de rôles ;&lt;/li&gt;&#xA;&lt;li&gt;Ajout de l&amp;rsquo;identifiant de timeline aux noms de fichiers générés avec &lt;code&gt;pg_waldump --save-fullpage&lt;/code&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;Correction d&amp;rsquo;un crash après la survenue d&amp;rsquo;un deadlock dans un worker parallèle&#xA;de &lt;code&gt;VACUUM&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Consulter la &lt;a href=&#34;https://www.postgresql.org/docs/16/release-16.html&#34;&gt;note de version&lt;/a&gt;&#xA;pour une liste complète de nouvelles fonctionnalités ou changements :&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/docs/16/release-16.html&#34;&gt;https://www.postgresql.org/docs/16/release-16.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;mise-à-jour&#34;&gt;Mise à jour&lt;/h2&gt;&#xA;&lt;p&gt;Toutes les mises à jour PostgreSQL sont cumulatives. Comme toutes les publications&#xA;de versions mineures, les utilisateurs ne sont pas obligés de sauvegarder et&#xA;restaurer leur bases de données ou d&amp;rsquo;utiliser &lt;code&gt;pg_upgrade&lt;/code&gt; pour appliquer cette&#xA;mise à jour ; il vous suffit de stopper PostgreSQL et mettre à jour les&#xA;binaires.&lt;/p&gt;&#xA;&lt;p&gt;Si vous utilisez des index BRIN pour vérifier les valeurs NULL, vous aurez&#xA;besoin de &lt;a href=&#34;https://www.postgresql.org/docs/current/sql-reindex.html&#34;&gt;réindexer&lt;/a&gt;&#xA;ces derniers après la mise à jour. Sur PostgreSQL 12 et supérieur, vous pouvez&#xA;utiliser &lt;a href=&#34;https://www.postgresql.org/docs/current/sql-reindex.html&#34;&gt;&lt;code&gt;REINDEX CONCURRENTLY&lt;/code&gt;&lt;/a&gt;&#xA;pour ne pas bloquer les écritures sur les index concernés et leur tables, par&#xA;exemple :&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;REINDEX INDEX CONCURRENTLY your_index_name;&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Les utilisateurs qui ont omis une ou plusieurs mises à jour mineures devront&#xA;effectuer des étapes supplémentaires ; se référer aux notes de versions&#xA;précédentes pour plus de détails.&lt;/p&gt;&#xA;&lt;p&gt;Pour plus de détails, se référer à la &lt;a href=&#34;https://www.postgresql.org/docs/release/&#34;&gt;note de version&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;mise-à-jour-vers-la-bêta-3-de-postgresql-16&#34;&gt;Mise à jour vers la bêta 3 de PostgreSQL 16&lt;/h2&gt;&#xA;&lt;p&gt;Pour mettre à jour votre version de PostgreSQL depuis une&#xA;précédente version de PostgreSQL (bêta ou non) vers la version bêta 3 de PostgreSQL 16, vous&#xA;pouvez utiliser la même stratégie que pour mettre à jour vers toute version&#xA;majeure de PostgreSQL (par exemple avec la commande &lt;code&gt;pg_upgrade&lt;/code&gt; ou &lt;code&gt;pg_dump&lt;/code&gt;/&lt;code&gt;pg_restore&lt;/code&gt;).&#xA;Pour plus d&amp;rsquo;information, consultez la section &lt;a href=&#34;https://www.postgresql.org/docs/16/static/upgrading.html&#34;&gt;mise à jour&lt;/a&gt;&#xA;de la documentation officielle.&lt;/p&gt;&#xA;&lt;h2 id=&#34;tests-pour-le-débogage-et-la-compatibilité&#34;&gt;Tests pour le débogage et la compatibilité&lt;/h2&gt;&#xA;&lt;p&gt;La stabilité de chaque publication de PostgreSQL dépend de vous, la&#xA;communauté. En testant la version à venir avec votre charge et vos outils de&#xA;tests, vous pourrez nous aider à trouver les bogues et régressions avant la&#xA;publication de PostgreSQL 16.&lt;/p&gt;&#xA;&lt;p&gt;Étant donné qu&amp;rsquo;il s&amp;rsquo;agit d&amp;rsquo;une version bêta, des changements mineurs dans le&#xA;comportement de la base de données, des détails et des APIs sont toujours&#xA;possibles. Vos retours et tests aideront à déterminer les ajustements finaux&#xA;des nouvelles fonctionnalités.&lt;/p&gt;&#xA;&lt;p&gt;La qualité des tests aide à déterminer le moment de la publication&#xA;finale.&lt;/p&gt;&#xA;&lt;p&gt;Une liste des &lt;a href=&#34;https://wiki.postgresql.org/wiki/PostgreSQL_16_Open_Items&#34;&gt;problèmes ouverts&lt;/a&gt;&#xA;est publiquement disponible dans le wiki de PostgreSQL. Vous pouvez&#xA;&lt;a href=&#34;https://www.postgresql.org/account/submitbug/&#34;&gt;rapporter des bogues&lt;/a&gt;&#xA;en utilisant le formulaire présent sur le site web de PostgreSQL :&#xA;&lt;a href=&#34;https://www.postgresql.org/account/submitbug/&#34;&gt;https://www.postgresql.org/account/submitbug/&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;liens&#34;&gt;Liens&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/download/&#34;&gt;Téléchargement&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/release/&#34;&gt;Note de publication&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/support/security/&#34;&gt;Sécurité&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/support/versioning/&#34;&gt;Gestion des versions&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/developer/beta/&#34;&gt;Information sur le Bêta Testing&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/16/release-16.html&#34;&gt;Note de publication de PostgreSQL 16 Bêta&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://wiki.postgresql.org/wiki/PostgreSQL_16_Open_Items&#34;&gt;Problèmes connus de PostgreSQL 16&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://twitter.com/postgresql&#34;&gt;Suivre @postgresql sur Twitter&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/donate/&#34;&gt;Faire un don&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</summary>
    <author>
      <name>Loxodata</name>
    </author>
  </entry>
  <entry>
    <title>Présentation de pglift</title>
    <updated>2023-10-17T05:00:00Z</updated>
    <id>tag:blog.dalibo.com,2023-10-17://2023/10/17/pglift-intro.html</id>
    <link href="https://blog.dalibo.com//2023/10/17/pglift-intro.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;em&gt;Toulouse, le 17 octobre 2023&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Aujourd’hui, nous annonçons la &lt;strong&gt;version 1.0 de &lt;a href=&#34;https://pglift.readthedocs.io/&#34;&gt;pglift&lt;/a&gt;&lt;/strong&gt;, un nouvel outil pour&#xA;déployer et exploiter PostgreSQL à grande échelle. Le projet fournit à la fois&#xA;une interface en ligne de commande pour gérer le cycle de vie de vos bases de&#xA;données et une collection de modules Ansible pour piloter votre infrastructure&#xA;&lt;em&gt;as code&lt;/em&gt; dans un contexte de production.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;À partir de ce jalon 1.0, l’interface utilisateur est stable et le produit&#xA;considéré comme apte à une utilisation générale.&lt;/p&gt;&#xA;&#xA;&lt;!--MORE--&gt;&#xA;&#xA;&lt;h1 id=&#34;quest-ce-que-pglift-&#34;&gt;Qu’est-ce que pglift ?&lt;/h1&gt;&#xA;&#xA;&lt;p&gt;Le projet vient du besoin des clients de Dalibo de déployer et d’exploiter un&#xA;grand nombre d’instances PostgreSQL dans leur contexte de &lt;em&gt;production&lt;/em&gt;, et ce&#xA;d’une manière &lt;em&gt;uniforme&lt;/em&gt; au sein de leur infrastructure :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;L’aspect &lt;em&gt;production&lt;/em&gt; signifie que PostgreSQL, le moteur de base de&#xA;données, a souvent besoin d’être complété par d’autres services de&#xA;sauvegarde, supervision ou haute disponibilité.&lt;/li&gt;&#xA;  &lt;li&gt;L’aspect &lt;em&gt;uniforme&lt;/em&gt; fait typiquement référence à l’&lt;em&gt;automatisation&lt;/em&gt;, ce qui&#xA;signifie que les DBAs veulent rationaliser le déploiement de leur service de&#xA;base de données afin de l’exploiter d’une manière plus sûre.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;pglift essaie de répondre à ces enjeux en fournissant :&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;  &lt;li&gt;une ligne de commande unifiée et accessible pour exploiter les instances de&#xA;bases de données d’&lt;em&gt;un site&lt;/em&gt;, et,&lt;/li&gt;&#xA;  &lt;li&gt;une collection de modules Ansible pour automatiser le déploiement et&#xA;l’exploitation &lt;em&gt;au sein d’une infrastructure&lt;/em&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;Dans les deux cas, le comportement de pglift est très configurable, depuis la&#xA;façon dont l’instance PostgreSQL est déployée (authentification, stockage,&#xA;journalisation, sauvegarde) jusqu’aux composants qui sont configurés à coté de&#xA;l’instance pour permettre son exploitation dans un contexte de production&#xA;(sauvegarde physique, supervision, haute disponibilité).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Quiconque souhaitant déployer et exploiter PostgreSQL à un niveau plus élevé&#xA;que les commandes &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;initdb&lt;/code&gt; ou &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_ctl&lt;/code&gt; ou avec un besoin plus important&#xA;d’automatisation pourra trouver un intérêt dans pglift.&#xA;Ceci va des services informatiques de l’entreprise aux &lt;em&gt;devops&lt;/em&gt; qui gèrent&#xA;leurs infrastructures en suivant les principes du GitOps.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;D’un autre coté, pglift n’a pas vocation à être l’unique solution à tous les&#xA;cas d’usage mais plutôt à être une brique logicielle composable avec d’autres.&#xA;De ce fait, alors que pglift est un outil &lt;em&gt;local&lt;/em&gt; et indépendant d’un&#xA;&lt;em&gt;framework&lt;/em&gt; de gestion d’infrastructure particulier, il s’intègre d’ores et&#xA;déjà avec Ansible et pourrait être interfacé avec Terraform (ou Kubernetes)&#xA;de manière similaire.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Même s’il reste aussi configurable que possible, son comportement résulte&#xA;parfois de choix métiers particuliers, en général guidés par l’expertise de&#xA;Dalibo.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Fini la théorie, voyons maintenant ce que pglift peut faire !&lt;/p&gt;&#xA;&#xA;&lt;h1 id=&#34;la-ligne-de-commande&#34;&gt;La ligne de commande&lt;/h1&gt;&#xA;&#xA;&lt;p&gt;L’élément fondamental de pglift est l’&lt;em&gt;instance&lt;/em&gt;, qui est constituée &lt;em&gt;a&#xA;minima&lt;/em&gt; d’une instance PostgreSQL mais inclut généralement des &lt;em&gt;composants&#xA;satellites&lt;/em&gt;.&#xA;La création d’une instance en ligne de commande se fait comme suit :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pglift instance create main &lt;span class=&#34;nt&#34;&gt;--pgbackrest-stanza&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;main&#xA;&lt;span class=&#34;go&#34;&gt;INFO     initializing PostgreSQL&#xA;INFO     configuring PostgreSQL authentication&#xA;INFO     configuring PostgreSQL&#xA;INFO     starting PostgreSQL 16-main&#xA;INFO     creating role &#39;powa&#39;&#xA;INFO     creating role &#39;prometheus&#39;&#xA;INFO     creating role &#39;backup&#39;&#xA;INFO     altering role &#39;backup&#39;&#xA;INFO     creating &#39;powa&#39; database in 16/main&#xA;INFO     creating extension &#39;btree_gist&#39; in database powa&#xA;INFO     creating extension &#39;pg_qualstats&#39; in database powa&#xA;INFO     creating extension &#39;pg_stat_statements&#39; in database powa&#xA;INFO     creating extension &#39;pg_stat_kcache&#39; in database powa&#xA;INFO     creating extension &#39;powa&#39; in database powa&#xA;INFO     configuring Prometheus postgres_exporter 16-main&#xA;INFO     configuring pgBackRest stanza &#39;main&#39; for&#xA;         pg1-path=/srv/pgsql/16/main/data&#xA;INFO     creating pgBackRest stanza main&#xA;INFO     starting Prometheus postgres_exporter 16-main&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Nous voyons que, à coté de PostgreSQL, l’instance inclut un ensemblre&#xA;d’extensions nécessaires à l’utilisation de &lt;a href=&#34;http://powa.readthedocs.io/&#34;&gt;PoWA&lt;/a&gt;, un service de&#xA;supervision &lt;a href=&#34;https://github.com/prometheus-community/postgres_exporter&#34;&gt;Prometheus postgres_exporter&lt;/a&gt; et un service &lt;a href=&#34;https://pgbackrest.org/&#34;&gt;pgBackRest&lt;/a&gt;&#xA;pour la sauvegarde physique. Ces &lt;em&gt;intégrations&lt;/em&gt; ne sont pas déclarées au&#xA;moment de l’exploitation, mais plutôt configurées en avance de phase,&#xA;localement, via ce que l’on appelle la &lt;em&gt;configuration du site&lt;/em&gt;, sous la forme&#xA;d’un fichier YAML tel que :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-yaml highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;c1&#34;&gt;# file: /etc/pglift/settings.yaml&lt;/span&gt;&#xA;&lt;span class=&#34;na&#34;&gt;prefix&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;/srv&lt;/span&gt;&#xA;&lt;span class=&#34;na&#34;&gt;postgresql&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt;&#xA;  &lt;span class=&#34;na&#34;&gt;auth&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt;&#xA;    &lt;span class=&#34;na&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;scram-sha-256&lt;/span&gt;&#xA;&lt;span class=&#34;na&#34;&gt;prometheus&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt;&#xA;  &lt;span class=&#34;na&#34;&gt;execpath&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;/usr/bin/prometheus-postgres-exporter&lt;/span&gt;&#xA;&lt;span class=&#34;na&#34;&gt;pgbackrest&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt;&#xA;  &lt;span class=&#34;na&#34;&gt;repository&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt;&#xA;    &lt;span class=&#34;na&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;path&lt;/span&gt;&#xA;    &lt;span class=&#34;na&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;/srv/pgsql-backups&lt;/span&gt;&#xA;&lt;span class=&#34;na&#34;&gt;powa&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;pi&#34;&gt;{}&lt;/span&gt;&#xA;&lt;span class=&#34;na&#34;&gt;systemd&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;pi&#34;&gt;{}&lt;/span&gt;&#xA;&lt;span class=&#34;na&#34;&gt;rsyslog&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;pi&#34;&gt;{}&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;En plus des services qui tournent à coté de PostgreSQL (supervision,&#xA;sauvegarde), pglift gère aussi des intégrations “système” telles que &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;systemd&lt;/code&gt;&#xA;ou &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;rsyslog&lt;/code&gt; comme dans notre exemple. Tout ceci fonctionne sans privilège&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;root&lt;/code&gt; pour une meilleure séparation des responsabilités et une meilleure&#xA;sécurité.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Une caractéristique fondamentale de pglift est d’être &lt;em&gt;sans état&lt;/em&gt; tout en&#xA;restant conscient de l’&lt;em&gt;état&lt;/em&gt; des objets qu’il gère à l’exécution ;&#xA;typiquement, cela permet de récupérer l’état d’une instance (à un moment&#xA;donné) :&lt;/p&gt;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pglift instance get main &lt;span class=&#34;nt&#34;&gt;-o&lt;/span&gt; json&#xA;&lt;span class=&#34;go&#34;&gt;{&#xA;  &#34;name&#34;: &#34;main&#34;,&#xA;  &#34;version&#34;: &#34;16&#34;,&#xA;  &#34;port&#34;: 5432,&#xA;  &#34;settings&#34;: {&#xA;    &#34;unix_socket_directories&#34;: &#34;/run/user/1000/pglift/postgresql&#34;,&#xA;    &#34;shared_buffers&#34;: &#34;1 GB&#34;,&#xA;    &#34;wal_level&#34;: &#34;replica&#34;,&#xA;    &#34;archive_mode&#34;: true,&#xA;    &#34;archive_command&#34;: &#34;/usr/bin/pgbackrest --config-path=/etc/pgbackrest --stanza=main --pg1-path=/srv/pgsql/16/main/data archive-push %p&#34;,&#xA;    &#34;effective_cache_size&#34;: &#34;4 GB&#34;,&#xA;    &#34;log_destination&#34;: &#34;syslog&#34;,&#xA;    &#34;logging_collector&#34;: true,&#xA;    &#34;log_directory&#34;: &#34;/var/log/postgresql&#34;,&#xA;    &#34;log_filename&#34;: &#34;16-main-%Y-%m-%d_%H%M%S.log&#34;,&#xA;    &#34;syslog_ident&#34;: &#34;postgresql-16-main&#34;,&#xA;    &#34;cluster_name&#34;: &#34;main&#34;,&#xA;    &#34;lc_messages&#34;: &#34;C&#34;,&#xA;    &#34;lc_monetary&#34;: &#34;C&#34;,&#xA;    &#34;lc_numeric&#34;: &#34;C&#34;,&#xA;    &#34;lc_time&#34;: &#34;C&#34;,&#xA;    &#34;shared_preload_libraries&#34;: &#34;pg_qualstats, pg_stat_statements, pg_stat_kcache&#34;&#xA;  },&#xA;  &#34;data_checksums&#34;: false,&#xA;  &#34;locale&#34;: &#34;C&#34;,&#xA;  &#34;encoding&#34;: &#34;UTF8&#34;,&#xA;  &#34;standby&#34;: null,&#xA;  &#34;state&#34;: &#34;started&#34;,&#xA;  &#34;pending_restart&#34;: false,&#xA;  &#34;wal_directory&#34;: &#34;/srv/pgsql/16/main/wal&#34;,&#xA;  &#34;prometheus&#34;: {&#xA;    &#34;port&#34;: 9187&#xA;  },&#xA;  &#34;data_directory&#34;: &#34;/srv/pgsql/16/main/data&#34;,&#xA;  &#34;powa&#34;: {},&#xA;  &#34;pgbackrest&#34;: {&#xA;    &#34;stanza&#34;: &#34;main&#34;&#xA;  }&#xA;}&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&lt;p&gt;ou de modifier l’instance :&lt;/p&gt;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pglift pgconf &lt;span class=&#34;nt&#34;&gt;-i&lt;/span&gt; main &lt;span class=&#34;nb&#34;&gt;set &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;log_connections&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;on&#xA;&lt;span class=&#34;go&#34;&gt;INFO     configuring PostgreSQL&#xA;INFO     instance 16/main needs reload due to parameter changes: log_connections&#xA;INFO     reloading PostgreSQL configuration for 16-main&#xA;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;log_connections: None -&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;True&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pglift instance alter main &lt;span class=&#34;nt&#34;&gt;--prometheus-port&lt;/span&gt; 8188&#xA;&lt;span class=&#34;go&#34;&gt;INFO     configuring PostgreSQL&#xA;INFO     reconfiguring Prometheus postgres_exporter 16-main&#xA;INFO     instance 16/main needs reload due to parameter changes: log_connections&#xA;INFO     reloading PostgreSQL configuration for 16-main&#xA;INFO     starting Prometheus postgres_exporter 16-main&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pglift instance get main&#xA;&lt;span class=&#34;go&#34;&gt; name  version  port  data_checksums  locale  encoding  pending_restart  prometheus  pgbackrest&#xA; main  16       5432  False           C       UTF8      False            port: 9187  stanza: main&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;pglift peut aussi exploiter des objets PostgreSQL : bases de données, rôles,&#xA;schémas, privilèges, etc.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;De plus, les instances et les autres objets PostgreSQL peuvent être manipulés&#xA;à l’aide des outils &lt;em&gt;natifs&lt;/em&gt; de PostgreSQL depuis la ligne de commande pglift&#xA;qui est composable en cela qu’elle transmet l’environnement de l’instance à la&#xA;commande invoquée :&lt;/p&gt;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pglift instance &lt;span class=&#34;nb&#34;&gt;exec &lt;/span&gt;main &lt;span class=&#34;nt&#34;&gt;--&lt;/span&gt; pgbench &lt;span class=&#34;nt&#34;&gt;-i&lt;/span&gt; bench&#xA;&lt;span class=&#34;go&#34;&gt;creating tables...&#xA;generating data (client-side)...&#xA;100000 of 100000 tuples (100%) done (elapsed 0.06 s, remaining 0.00 s)&#xA;vacuuming...&#xA;creating primary keys...&#xA;done in 0.18 s (drop tables 0.00 s, create tables 0.01 s, client-side generate 0.08 s, vacuum 0.04 s, primary keys 0.05 s).&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pglift instance &lt;span class=&#34;nb&#34;&gt;exec &lt;/span&gt;main &lt;span class=&#34;nt&#34;&gt;--&lt;/span&gt; pgbench bench&#xA;&lt;span class=&#34;go&#34;&gt;pgbench (16.0 (Debian 16.0-1.pgdg120+1))&#xA;starting vacuum...end.&#xA;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;transaction type: &amp;lt;builtin: TPC-B (sort of)&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;scaling factor: 1&#xA;query mode: simple&#xA;number of clients: 1&#xA;number of threads: 1&#xA;maximum number of tries: 1&#xA;number of transactions per client: 10&#xA;number of transactions actually processed: 10/10&#xA;number of failed transactions: 0 (0.000%)&#xA;latency average = 1.669 ms&#xA;initial connection time = 4.544 ms&#xA;tps = 599.125277 (without initial connection time)&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&lt;p&gt;Ceci s’applique aussi à des outils tiers, par exemple :&lt;/p&gt;&#xA;&lt;div class=&#34;language-console highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pglift instance &lt;span class=&#34;nb&#34;&gt;exec &lt;/span&gt;main &lt;span class=&#34;nt&#34;&gt;--&lt;/span&gt; pgbackrest info&#xA;&lt;span class=&#34;go&#34;&gt;stanza: main&#xA;    status: ok&#xA;    cipher: none&#xA;&#xA;    db (current)&#xA;        wal archive min/max (16): 000000010000000000000001/000000010000000000000007&#xA;&#xA;        full backup: 20231016-092726F&#xA;            timestamp start/stop: 2023-10-16 09:27:26+02 / 2023-10-16 09:27:31+02&#xA;            wal start/stop: 000000010000000000000004 / 000000010000000000000004&#xA;            database size: 32.0MB, database backup size: 32.0MB&#xA;            repo1: backup set size: 4.2MB, backup size: 4.2MB&#xA;&#xA;        diff backup: 20231016-092726F_20231016-092821D&#xA;            timestamp start/stop: 2023-10-16 09:28:21+02 / 2023-10-16 09:28:24+02&#xA;            wal start/stop: 000000010000000000000007 / 000000010000000000000007&#xA;            database size: 54.5MB, database backup size: 22.6MB&#xA;            repo1: backup set size: 6MB, backup size: 1.8MB&#xA;            backup reference list: 20231016-092726F&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Pour plus de détails, voir le &lt;a href=&#34;https://pglift.readthedocs.io/en/latest/tutorials/cli.html&#34;&gt;tutoriel de la ligne de commande&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;h1 id=&#34;les-modules-ansible&#34;&gt;Les modules Ansible&lt;/h1&gt;&#xA;&#xA;&lt;p&gt;pglift fournit une collection de modules Ansible, sous l’espace de noms&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;dalibo.pglift&lt;/code&gt;. Voici un exemple de &lt;em&gt;playbook&lt;/em&gt; illustrant ses capacités :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-yaml highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;&lt;span class=&#34;pi&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;Set up database instances&lt;/span&gt;&#xA;  &lt;span class=&#34;na&#34;&gt;hosts&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;dbserver&lt;/span&gt;&#xA;  &lt;span class=&#34;na&#34;&gt;tasks&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt;&#xA;    &lt;span class=&#34;pi&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;main instance&lt;/span&gt;&#xA;      &lt;span class=&#34;na&#34;&gt;dalibo.pglift.instance&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt;&#xA;        &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;main&lt;/span&gt;&#xA;        &lt;span class=&#34;na&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;started&lt;/span&gt;&#xA;        &lt;span class=&#34;na&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5444&lt;/span&gt;&#xA;        &lt;span class=&#34;na&#34;&gt;settings&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt;&#xA;          &lt;span class=&#34;na&#34;&gt;max_connections&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;100&lt;/span&gt;&#xA;          &lt;span class=&#34;na&#34;&gt;shared_buffers&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;1GB&lt;/span&gt;&#xA;          &lt;span class=&#34;na&#34;&gt;shared_preload_libraries&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;pg_stat_statements,&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;passwordcheck&#39;&lt;/span&gt;&#xA;        &lt;span class=&#34;na&#34;&gt;surole_password&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;postgresql_surole_password&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;}}&#39;&lt;/span&gt;&#xA;        &lt;span class=&#34;na&#34;&gt;pgbackrest&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt;&#xA;          &lt;span class=&#34;na&#34;&gt;stanza&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;main&lt;/span&gt;&#xA;          &lt;span class=&#34;na&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;backup_role_password&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;}}&#39;&lt;/span&gt;&#xA;        &lt;span class=&#34;na&#34;&gt;prometheus&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt;&#xA;          &lt;span class=&#34;na&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;prometheus_role_password&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;}}&#39;&lt;/span&gt;&#xA;          &lt;span class=&#34;na&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;9186&lt;/span&gt;&#xA;        &lt;span class=&#34;na&#34;&gt;roles&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt;&#xA;          &lt;span class=&#34;pi&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;admin&lt;/span&gt;&#xA;            &lt;span class=&#34;na&#34;&gt;login&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;true&lt;/span&gt;&#xA;            &lt;span class=&#34;na&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;admin_password&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;}}&#39;&lt;/span&gt;&#xA;            &lt;span class=&#34;na&#34;&gt;connection_limit&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&#xA;            &lt;span class=&#34;na&#34;&gt;validity&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;2025-01-01T00:00&#39;&lt;/span&gt;&#xA;            &lt;span class=&#34;na&#34;&gt;in_roles&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt;&#xA;              &lt;span class=&#34;pi&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;pg_read_all_stats&lt;/span&gt;&#xA;              &lt;span class=&#34;pi&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;pg_signal_backend&lt;/span&gt;&#xA;        &lt;span class=&#34;na&#34;&gt;databases&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt;&#xA;          &lt;span class=&#34;pi&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;main&lt;/span&gt;&#xA;            &lt;span class=&#34;na&#34;&gt;owner&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;admin&lt;/span&gt;&#xA;            &lt;span class=&#34;na&#34;&gt;settings&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt;&#xA;              &lt;span class=&#34;na&#34;&gt;work_mem&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;3MB&lt;/span&gt;&#xA;            &lt;span class=&#34;na&#34;&gt;extensions&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt;&#xA;              &lt;span class=&#34;pi&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;unaccent&lt;/span&gt;&#xA;                &lt;span class=&#34;na&#34;&gt;schema&lt;/span&gt;&lt;span class=&#34;pi&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;public&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Nous voyons que le module &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;dalibo.pglift.instance&lt;/code&gt; permet de gérer non&#xA;seulement l’&lt;em&gt;instance&lt;/em&gt;, mais aussi les objets reliés comme des rôles ou des&#xA;bases de données. Les données sensibles (comme les mots de passe) peuvent être&#xA;pris en charge par une solution de gestion de secrets, telle que Ansible&#xA;vault. Les modules Ansible permettent un contrôle plus important que la ligne&#xA;de commandes, au sens où les champs imbriquées ou complexes, tels que les&#xA;la configuration de l’instance ou des bases de données, les extensions, etc.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Cette interface est complètement déclarative et &lt;em&gt;idempotente&lt;/em&gt;, mais reste sans&#xA;état (comme le sont les modules Ansible en général). Comme pour la ligne de&#xA;commande, référez-vous au &lt;a href=&#34;https://pglift.readthedocs.io/en/latest/tutorials/ansible.html&#34;&gt;tutoriel Ansible&lt;/a&gt; de la&#xA;documentation pour plus de détails. Notons aussi que ces modules fonctionnent&#xA;avec d’autres modules Ansible, tels que &lt;a href=&#34;https://docs.ansible.com/ansible/latest/collections/community/postgresql/&#34;&gt;community.postgresql&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;h1 id=&#34;à-propos-du-projet&#34;&gt;À propos du projet&lt;/h1&gt;&#xA;&#xA;&lt;p&gt;Sous le capôt, toute la logique métier est implémentée sous la forme d’une API&#xA;Python. L’idée phare de pglift est de rendre la gestion d’infrastructure&#xA;PostgreSQL &lt;em&gt;déclarative&lt;/em&gt; et &lt;em&gt;sans état&lt;/em&gt; afin de l’exploiter selon les&#xA;principes de l’&lt;em&gt;infrastructure-as-code&lt;/em&gt;. Cette conception a permis de&#xA;développer à la fois une interface &lt;em&gt;impérative&lt;/em&gt; en ligne de commandes et une&#xA;interface &lt;em&gt;déclarative&lt;/em&gt;, sous la forme de modules Ansible.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Le projet est nativement &lt;em&gt;open source&lt;/em&gt;, mis à disposition sous licence GPLv3.&#xA;Il est le fruit du travail d’une équipe de développeurs et d’administrateurs&#xA;poursuivant l’objectif de pérenniser l’expertise de Dalibo dans un outil&#xA;puissant, souple et accessible pour l’administration quotidienne de&#xA;PostgreSQL. Son développement se passe en public :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;à &lt;a href=&#34;https://gitlab.com/dalibo/pglift/&#34;&gt;https://gitlab.com/dalibo/pglift/&lt;/a&gt;, pour le projet principal (API Python&#xA;et interface en ligne de commande), et,&lt;/li&gt;&#xA;  &lt;li&gt;à &lt;a href=&#34;https://gitlab.com/dalibo/pglift-ansible/&#34;&gt;https://gitlab.com/dalibo/pglift-ansible/&lt;/a&gt;, pour la collection Ansible&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;dalibo.pglift&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Enfin, une grande attention a été portée à l’écriture d’une &lt;a href=&#34;https://pglift.readthedocs.io/&#34;&gt;documentation&lt;/a&gt;&#xA;exhaustive et accessible, incluant des tutoriels, des guides d’utilisations ou&#xA;des recettes.&lt;/p&gt;&#xA;&#xA;&lt;!--&#xA;  vim: spelllang=fr spell&#xA;  --&gt;</summary>
    <author>
      <name>blog.dalibo.com</name>
    </author>
  </entry>
  <entry>
    <title>Les modes de transfert dans une migration</title>
    <updated>2023-10-11T00:00:00Z</updated>
    <id>tag:fljd.in,2023-10-11:/2023/10/11/les-modes-de-transfert-dans-une-migration/</id>
    <link href="https://fljd.in/2023/10/11/les-modes-de-transfert-dans-une-migration/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;En informatique, un projet de migration consiste à changer un ou plusieurs&#xA;composants techniques sans qu&amp;rsquo;aucun comportement des applications n&amp;rsquo;en soit&#xA;impacté. Dans le paysage des bases de données (et le métier que j&amp;rsquo;exerce), il&#xA;s&amp;rsquo;agira de choisir un nouveau système (comme PostgreSQL) en remplacement d&amp;rsquo;un&#xA;autre (comme Oracle ou Microsoft SQL Server).&lt;/p&gt;&#xA;&lt;p&gt;Dans un &lt;a href=&#34;https://fljd.in/2021/12/06/migrer-vers-postgresql/&#34;&gt;précédent article&lt;/a&gt;, je décrivais les étapes exhaustives pour&#xA;réaliser une migration complète à l&amp;rsquo;aide de la technologie des &lt;em&gt;Foreign Data&#xA;Wrappers&lt;/em&gt;, mais l&amp;rsquo;étape critique de transfert des données qui y était décrite ne&#xA;s&amp;rsquo;adapte pas à toutes les situations. Voyons ensemble les alternatives qui&#xA;permettent de couvrir une grande partie des besoins.&lt;/p&gt;</summary>
    <author>
      <name>Florent Jardin</name>
    </author>
  </entry>
  <entry>
    <title>En route vers la liberté avec db_migrator</title>
    <updated>2023-07-28T00:00:00Z</updated>
    <id>tag:fljd.in,2023-07-28:/2023/07/28/en-route-vers-la-liberte-avec-db_migrator/</id>
    <link href="https://fljd.in/2023/07/28/en-route-vers-la-liberte-avec-db_migrator/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;J&amp;rsquo;ai passé plusieurs semaines ces derniers mois à contribuer à l&amp;rsquo;extension&#xA;&lt;a href=&#34;https://github.com/cybertec-postgresql/db_migrator&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;db_migrator&lt;/a&gt;. Rédigée uniquement en PL/pgSQL, elle permet de migrer les schémas&#xA;et les données d&amp;rsquo;un système de bases de données vers PostgreSQL à l&amp;rsquo;aide des&#xA;données externes que j&amp;rsquo;avais déjà présentées il y a &lt;a href=&#34;https://fljd.in/2021/07/16/parlons-un-peu-des-donnees-externes/&#34;&gt;quelques années&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Dans cet article, je présente le fonctionnement de l&amp;rsquo;outil, sa philosophie et la&#xA;raison d&amp;rsquo;être que je lui ai trouvée, alors même qu&amp;rsquo;il rejoint l&amp;rsquo;écosystème des&#xA;projets libres déjà bien installés dans le paysage de la migration. Que vaut-il&#xA;aux côtés d&amp;rsquo;&lt;a href=&#34;https://ora2pg.darold.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ora2Pg&lt;/a&gt; ou de &lt;a href=&#34;https://pgloader.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pgloader&lt;/a&gt; ?&lt;/p&gt;</summary>
    <author>
      <name>Florent Jardin</name>
    </author>
  </entry>
  <entry>
    <title>Les colonnes générées</title>
    <updated>2023-03-22T00:00:00Z</updated>
    <id>tag:fljd.in,2023-03-22:/2023/03/22/les-colonnes-generees/</id>
    <link href="https://fljd.in/2023/03/22/les-colonnes-generees/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;La norme ISO SQL/Foundation (&lt;a href=&#34;https://www.iso.org/standard/63556.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ISO/IEC 9075-2:2016&lt;/a&gt;) fait partie du standard&#xA;SQL et définit les règles pour la définition des relations et la manipulation&#xA;des données. En adoptant cette norme, les moteurs de bases de données&#xA;garantissent une interopérabilité avec leurs concurrents et permettent aux&#xA;entreprises de bénéficier d&amp;rsquo;une plus grande flexibilité lorsqu&amp;rsquo;elles souhaitent&#xA;passer de l&amp;rsquo;un à l&amp;rsquo;autre sans (trop) réécrire leur modèle de données ou leurs&#xA;requêtes SQL.&lt;/p&gt;&#xA;&lt;p&gt;Dans sa publication SQL:2003, la norme a introduit le concept de &lt;strong&gt;colonnes&#xA;générées&lt;/strong&gt; comme nouvelle spécification technique. Parfois appelées &lt;em&gt;colonnes&#xA;calculées&lt;/em&gt; ou &lt;em&gt;colonnes virtuelles&lt;/em&gt;, leurs valeurs dérivent de celles des autres&#xA;colonnes de la table. &lt;a href=&#34;https://modern-sql.com/caniuse/generated-always-as&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Un des articles&lt;/a&gt; de Markus Winand passe au crible les&#xA;différents systèmes du marché pour voir s&amp;rsquo;ils respectent ce standard.&lt;/p&gt;</summary>
    <author>
      <name>Florent Jardin</name>
    </author>
  </entry>
  <entry>
    <title>Le fenêtrage à la rescousse</title>
    <updated>2023-02-10T00:00:00Z</updated>
    <id>tag:fljd.in,2023-02-10:/2023/02/10/le-fenetrage-a-la-rescousse/</id>
    <link href="https://fljd.in/2023/02/10/le-fenetrage-a-la-rescousse/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PostgreSQL propose un certain nombre de fonctions qui permettent de calculer des&#xA;valeurs agrégées ou relatives sur un ensemble de lignes qui se situent dans une&#xA;« fenêtre » autour de la ligne courante. En utilisant de telles fonctions,&#xA;n&amp;rsquo;importe qui peut créer des requêtes plus avancées et plus efficaces pour&#xA;l&amp;rsquo;analyse de leur base de données.&lt;/p&gt;&#xA;&lt;p&gt;Depuis plusieurs semaines, je contribue à un projet de conversion de modèles de&#xA;données vers PostgreSQL, appelé &lt;a href=&#34;https://github.com/cybertec-postgresql/db_migrator&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;db_migrator&lt;/a&gt;. À cette occasion, j&amp;rsquo;ai&#xA;(re)découvert la puissance de ces &lt;a href=&#34;https://www.postgresql.org/docs/current/functions-window.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;fonctions de fenêtrage&lt;/a&gt; avec le langage&#xA;SQL. Dans cet article, je reviens sur un &lt;a href=&#34;https://github.com/cybertec-postgresql/db_migrator/pull/11&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cas concret&lt;/a&gt; de transformation des&#xA;bornes supérieures d&amp;rsquo;une table partitionnée en tableau de valeur.&lt;/p&gt;</summary>
    <author>
      <name>Florent Jardin</name>
    </author>
  </entry>
  <entry>
    <title>Construire PostgreSQL avec Meson</title>
    <updated>2022-09-29T00:00:00Z</updated>
    <id>tag:fljd.in,2022-09-29:/2022/09/29/construire-postgresql-avec-meson/</id>
    <link href="https://fljd.in/2022/09/29/construire-postgresql-avec-meson/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Alors que la version 15 de PostgreSQL se prépare à sortir dans les &lt;a href=&#34;https://www.postgresql.org/about/news/postgresql-15-rc-1-released-2516/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;prochains&#xA;jours&lt;/a&gt;, le groupe de développement du projet communautaire ont intégré &lt;a href=&#34;https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=e6927270cd18d535b77cbe79c55c6584351524be&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;leurs&#xA;récents travaux&lt;/a&gt; pour accélérer les tâches d&amp;rsquo;automatisation et de compilation&#xA;à l&amp;rsquo;aide du système de construction &lt;a href=&#34;https://mesonbuild.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Meson&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Ce chantier n&amp;rsquo;est pas anodin et redessine les contours de l&amp;rsquo;écosystème du moteur&#xA;de bases de données open-source le plus avancé au monde. Depuis sa forme libre&#xA;publiée en 1998, PostgreSQL repose sur des solutions robustes et éprouvées, mais&#xA;de plus en plus complexes à maintenir pour les nouvelles générations de&#xA;contributeur·rices. En proposant de se tourner vers un logiciel comme Meson, ces&#xA;amoureux et amoureuses du libre se tournent résolument vers l&amp;rsquo;avenir.&lt;/p&gt;</summary>
    <author>
      <name>Florent Jardin</name>
    </author>
  </entry>
  <entry>
    <title>Mesurer facilement la latence I/O avec PostgreSQL 16</title>
    <updated>2023-09-02T16:30:00Z</updated>
    <id>tag:pgphil.ovh,2023-09-02:/traqueur_16_01.php</id>
    <link href="http://pgphil.ovh/traqueur_16_01.php" rel="alternate"></link>
    <summary type="html">Démonstration avec le traqueur d&#39;une nouvelle fonctionnalité PostgreSQL 16 facilitant le suivi des performances et le diagnostic des ralentissements</summary>
    <author>
      <name>pgphil.ovh</name>
    </author>
  </entry>
  <entry>
    <title>Mettre à jour PostgreSQL pour améliorer les performances</title>
    <updated>2023-05-21T09:00:00Z</updated>
    <id>tag:pgphil.ovh,2023-05-21:/migration_performance_14_15_01.php</id>
    <link href="http://pgphil.ovh/migration_performance_14_15_01.php" rel="alternate"></link>
    <summary type="html">Pagination, ex aequo...obtenez vos résultats triés bien plus rapidement avec PostgreSQL 15</summary>
    <author>
      <name>pgphil.ovh</name>
    </author>
  </entry>
  <entry>
    <title>PostgreSQL inspire les autres SGBD ?</title>
    <updated>2023-04-12T09:00:00Z</updated>
    <id>tag:pgphil.ovh,2023-04-12:/oracle23c_ou_oracle23p_comme_postgresql.php</id>
    <link href="http://pgphil.ovh/oracle23c_ou_oracle23p_comme_postgresql.php" rel="alternate"></link>
    <summary type="html">Oracle 23c ou 23p comme PostgreSQL ?</summary>
    <author>
      <name>pgphil.ovh</name>
    </author>
  </entry>
  <entry>
    <title>CYCLE</title>
    <updated>2022-12-03T15:00:00Z</updated>
    <id>tag:pgphil.ovh,2022-12-03:/nocycle_15_01.php</id>
    <link href="http://pgphil.ovh/nocycle_15_01.php" rel="alternate"></link>
    <summary type="html">Nouveautés autour des requêtes hiérarchiques avec PostgreSQL 14 et versions supérieures</summary>
    <author>
      <name>pgphil.ovh</name>
    </author>
  </entry>
  <entry>
    <title>MERGE</title>
    <updated>2022-03-29T17:30:00Z</updated>
    <id>tag:pgphil.ovh,2022-03-29:/upsert_15_devel_01.php</id>
    <link href="http://pgphil.ovh/upsert_15_devel_01.php" rel="alternate"></link>
    <summary type="html">Introduction de la commande MERGE par PostgreSQL 15</summary>
    <author>
      <name>pgphil.ovh</name>
    </author>
  </entry>
  <entry>
    <title>Limitations du planner (optimiseur) de PostgreSQL</title>
    <updated>2022-03-06T18:45:00Z</updated>
    <id>tag:pgphil.ovh,2022-03-06:/limitations_planner_13_01.php</id>
    <link href="http://pgphil.ovh/limitations_planner_13_01.php" rel="alternate"></link>
    <summary type="html">Est-il toujours possible en 2022 de faire trébucher l&#39;optimiseur statistique de PostgreSQL ? Comment y remédier ?</summary>
    <author>
      <name>pgphil.ovh</name>
    </author>
  </entry>
  <entry>
    <title>[Infographie] PostgreSQL</title>
    <updated>2021-02-11T11:23:13Z</updated>
    <id>tag:blog.atolcd.com,2021-02-11:/infographie-postgresql/</id>
    <content type="html">&#xA;&lt;p&gt;PostgreSQL est un SGBD que nous affectionnons particulièrement chez Atol CD ! Retrouvez dans cette infographie quelques caractéristiques techniques, des chiffres-clé, son histoire mais aussi pourquoi nous l&amp;rsquo;aimons et notre Top5 des fonctionnalités côté développement.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;wp-container-2 wp-block-gallery-1 wp-block-gallery columns-1 is-cropped&#34;&gt;&lt;ul class=&#34;blocks-gallery-grid&#34;&gt;&lt;li class=&#34;blocks-gallery-item&#34;&gt;&lt;figure&gt;&lt;img width=&#34;866&#34; height=&#34;2560&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-scaled.jpg&#34; alt=&#34;&#34; data-id=&#34;4477&#34; data-full-url=&#34;https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-scaled.jpg&#34; data-link=&#34;https://blog.atolcd.com/infographie-postgresql/infographie_postgresql/&#34; class=&#34;wp-image-4477&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-scaled.jpg 866w, https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-101x300.jpg 101w, https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-346x1024.jpg 346w, https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-768x2271.jpg 768w, https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-520x1536.jpg 520w, https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-693x2048.jpg 693w, https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-600x1774.jpg 600w, https://blog.atolcd.com/wp-content/uploads/2021/02/infographie_PostgreSQL-945x2794.jpg 945w&#34; sizes=&#34;(max-width: 866px) 100vw, 866px&#34; /&gt;&lt;/figure&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/figure&gt;&#xA;&lt;p&gt;Cet article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.atolcd.com/infographie-postgresql/&#34;&gt;[Infographie] PostgreSQL&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.atolcd.com/infographie-postgresql/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=infographie-postgresql" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PostgreSQL est un SGBD que nous affectionnons particulièrement chez Atol CD ! Retrouvez dans cette infographie quelques caractéristiques techniques, des chiffres-clé, son histoire mais aussi pourquoi nous l&amp;#8217;aimons et notre Top5 des fonctionnalités côté développement.&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.atolcd.com/infographie-postgresql/&#34;&gt;[Infographie] PostgreSQL&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Caroline Chanlon</name>
    </author>
  </entry>
  <entry>
    <title>Sortie de PostgreSQL 13</title>
    <updated>2020-09-24T05:54:57Z</updated>
    <id>tag:blog.atolcd.com,2020-09-24:/sortie-de-postgresql-13/</id>
    <content type="html">&#xA;&lt;p&gt;&lt;span style=&#34;font-weight: 400;&#34;&gt;&lt;img loading=&#34;lazy&#34; class=&#34;alignnone size-full wp-image-4130&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2020/09/pg13.jpg&#34; alt=&#34;&#34; width=&#34;960&#34; height=&#34;540&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2020/09/pg13.jpg 960w, https://blog.atolcd.com/wp-content/uploads/2020/09/pg13-300x169.jpg 300w, https://blog.atolcd.com/wp-content/uploads/2020/09/pg13-768x432.jpg 768w, https://blog.atolcd.com/wp-content/uploads/2020/09/pg13-600x338.jpg 600w, https://blog.atolcd.com/wp-content/uploads/2020/09/pg13-945x532.jpg 945w&#34; sizes=&#34;(max-width: 960px) 100vw, 960px&#34; /&gt;Malgré des actualités plutôt moroses au Botswana concernant nos chers éléphants, il y en a un qui se porte bien et est encore plus fort à savoir PostgreSQL qui sort en version 13 stable ce jeudi 24 septembre 2020. &lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;span style=&#34;font-weight: 400;&#34;&gt;Après seulement 3 versions Bêta et une RC le voilà dans les starting blocks pour débarquer sur vos serveurs ! Et comme à chaque nouvelle version son&lt;/span&gt; &lt;span style=&#34;font-weight: 400;&#34;&gt;lot de nouveautés&lt;/span&gt;&lt;span style=&#34;font-weight: 400;&#34;&gt;.&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;span style=&#34;font-weight: 400;&#34;&gt;Un petit rappel qui peut parfois éviter bien des catastrophes, si vous avez prévu de migrer vers PostgreSQL 13, vous devriez jeter un oeil sur &lt;a href=&#34;https://www.postgresql.org/docs/13/release-13.html#id-1.11.6.5.4&#34;&gt;les potentielles incompatibilités avec les précédentes versions&lt;/a&gt;  (et aussi sur les versions intermédiaires si vous faite un gap de plusieurs versions d&amp;rsquo;un coup), il est toujours préférable d&amp;rsquo;identifier ces légers changements en amont plutôt qu&amp;rsquo;une fois en production. Mais rassurez-vous, dans cette version pas de quoi freiner significativement une migration.&lt;/span&gt;&lt;/p&gt;&#xA;&lt;h1&gt;Partitionnement&lt;/h1&gt;&#xA;&lt;p&gt;Des améliorations sont ajoutées sur le partitionnement de tables, tant au niveau performance avec l&amp;rsquo;ajout de cas où une jointure directe entre partition peut être utilisée dans une requête, mais aussi de fonctionnalités telles que  la gestion des triggers avec le support de la clause BEFORE ou bien encore la réplication logique sans avoir besoin de publier chaque partition.&lt;/p&gt;&#xA;&lt;h1&gt;Index&lt;/h1&gt;&#xA;&lt;p&gt;Là aussi des améliorations de performances mais aussi des gains d&amp;rsquo;espace disque sur les index B-tree surtout pour ceux contenant des doublons, mais si vous passez par un pg_upgrade il voudra passer par un reindex pour bénéficier de ces changements.&lt;/p&gt;&#xA;&lt;h1&gt;Planificateur&lt;/h1&gt;&#xA;&lt;p&gt;Le planificateur de requête PostgreSQL a lui aussi eu le droit à quelques améliorations notamment au niveau des statistiques ce qui peut améliorer les plans d&amp;rsquo;exécution et donc les performances.&lt;/p&gt;&#xA;&lt;h1&gt;Performance générale&lt;/h1&gt;&#xA;&lt;p&gt;Les performances ne sont pas en reste dans cette nouvelle version, avec l&amp;rsquo;ajout du &lt;span style=&#34;font-weight: 400;&#34;&gt;tri incrémentiel ce qui accélère le tri des données dans certains cas,  sur les agrégations de hachage qui peuvent désormais utiliser le stockage sur disque dans le cadre de grands ensembles d&amp;rsquo;agrégation, sur la conversion de type entier vers texte.&lt;/span&gt;&lt;/p&gt;&#xA;&lt;h1&gt;Vues système&lt;/h1&gt;&#xA;&lt;p&gt;De nouvelles vues système font leur apparition :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/13/progress-reporting.html#BASEBACKUP-PROGRESS-REPORTING&#34;&gt;pg_stat_progress_basebackup &lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/13/progress-reporting.html#ANALYZE-PROGRESS-REPORTING&#34;&gt;pg_stat_progress_analyze &lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/13/view-pg-shmem-allocations.html&#34;&gt;pg_shmem_allocations &lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/13/monitoring-stats.html#MONITORING-PG-STAT-SLRU-VIEW&#34;&gt;pg_stat_slru&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;la vue &lt;a href=&#34;https://www.postgresql.org/docs/13/monitoring-stats.html#PG-STAT-ACTIVITY-VIEW&#34;&gt;pg_stat_activity&lt;/a&gt; se voit elle ajoutée une colonne leader_pid ce qui permet de retrouver rapidement tous les processus impliqués dans une requête parallèle.&lt;/p&gt;&#xA;&lt;h1&gt;Fonctionnalités&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ajout de la fonctionnalité &lt;a href=&#34;https://www.postgresql.org/docs/13/sql-select.html#SQL-LIMIT&#34;&gt;FETCH FIRST WITH TIES&lt;/a&gt; (vous trouverez &lt;a href=&#34;http://pgphil.ovh/topn_13_beta_01.php&#34;&gt;ici&lt;/a&gt; un exemple)&lt;/li&gt;&#xA;&lt;li&gt;Ajout de la fonction gen_random_uuid() utilisable sans activer d’extensions&lt;/li&gt;&#xA;&lt;li&gt;Ajout de la possibilité de renommer une colonne d&amp;rsquo;une vue :&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;ALTER VIEW [ IF EXISTS ] name RENAME [ COLUMN ] column_name TO new_column_name&lt;/pre&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Ajout de la fonction .datetime() dans les jsonpath pour convertir automatique une chaîne en date ou horodatage&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1&gt;Client psql&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Ajout de nouvelles commandes pour afficher la description de classe d&amp;rsquo;opérateur et famille d&amp;rsquo;opérateur&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a class=&#34;link&#34; title=&#34;Meta-Commands&#34; href=&#34;https://www.postgresql.org/docs/13/app-psql.html#APP-PSQL-META-COMMANDS&#34;&gt;&lt;code class=&#34;literal&#34;&gt;\dAc&lt;/code&gt;&lt;/a&gt;, &lt;code class=&#34;literal&#34;&gt;\dAf&lt;/code&gt;, &lt;code class=&#34;literal&#34;&gt;\dAo&lt;/code&gt;, et &lt;code class=&#34;literal&#34;&gt;\dAp&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Ajout du statut de la transaction dans le prompt &lt;br /&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;* dans une transaction&lt;/li&gt;&#xA;&lt;li&gt;! dans un échec de transaction&lt;/li&gt;&#xA;&lt;li&gt;? pour un état indéterminé de la transaction&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1&gt;Administration&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Ajout de la capacité de la commande VACUUM à traiter des index en parallèle&lt;/li&gt;&#xA;&lt;li&gt;la commande reindexdb peut aussi paralléliser les tâches&lt;/li&gt;&#xA;&lt;li&gt;introduction de la notion de « trusted extension » qui permet à un super utilisateur de définir les extensions qu’un utilisateur a le droit d&amp;rsquo;installer dans sa base de données en ayant le droit CREATE.&lt;/li&gt;&#xA;&lt;li&gt;Ajout pour pg_dump de l&amp;rsquo;option &amp;#8211;include-foreign-data pour inclure dans la sauvegarde les données de serveurs distants&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;La liste des nouveautés dans cette version est grande, toutes les nouveautés n&amp;rsquo;ont pas été abordées mais vous pouvez bien sur les retrouver dans la &lt;a href=&#34;https://www.postgresql.org/docs/13/release-13.html&#34;&gt;note de version&lt;/a&gt;. Le focus a surtout été fait sur le côté utilisateur plutôt qu&amp;rsquo;administrateur de PostgreSQL.&lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.atolcd.com/sortie-de-postgresql-13/&#34;&gt;Sortie de PostgreSQL 13&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.atolcd.com/sortie-de-postgresql-13/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=sortie-de-postgresql-13" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Malgré des actualités plutôt moroses au Botswana concernant nos chers éléphants, il y en a un qui se porte bien et est encore plus fort à savoir PostgreSQL qui sort en version 13 stable ce jeudi 24 septembre 2020.  Après... &lt;a class=&#34;more-link&#34; href=&#34;https://blog.atolcd.com/sortie-de-postgresql-13/&#34;&gt;Continue Reading &amp;#8594;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.atolcd.com/sortie-de-postgresql-13/&#34;&gt;Sortie de PostgreSQL 13&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Caroline Chanlon</name>
    </author>
  </entry>
  <entry>
    <title>Sortie de PostgreSQL 11</title>
    <updated>2018-10-19T13:12:39Z</updated>
    <id>tag:blog.atolcd.com,2018-10-19:/sortie-de-postgresql-11/</id>
    <content type="html">&lt;p&gt;Après seulement une release candidate (mais auparavant 4 version bêta), PostgreSQL 11 vient de sortir!!!! Et comme à chaque nouvelle version son lot de nouveautés que nous allons essayer de passer rapidement en revue.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter size-full wp-image-3169&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2018/10/PostGresql11.jpg&#34; alt=&#34;&#34; width=&#34;826&#34; height=&#34;540&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2018/10/PostGresql11.jpg 826w, https://blog.atolcd.com/wp-content/uploads/2018/10/PostGresql11-300x196.jpg 300w, https://blog.atolcd.com/wp-content/uploads/2018/10/PostGresql11-768x502.jpg 768w, https://blog.atolcd.com/wp-content/uploads/2018/10/PostGresql11-600x392.jpg 600w&#34; sizes=&#34;(max-width: 826px) 100vw, 826px&#34; /&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Amélioration de la parallélisation&lt;/h2&gt;&#xA;&lt;p&gt;Quoi de mieux que de commencer le tour des nouveautés par un sujet que l&amp;rsquo;on a abordé lors du &lt;a href=&#34;https://blog.atolcd.com/conference-la-parallelisation-au-service-de-loptimisation/&#34;&gt;PG Day France 2018&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;PostgreSQL 11 va encore plus loin dans la parallélisation avec :&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Création d&amp;rsquo;index B-tree en parallèle&lt;/li&gt;&#xA;&lt;li&gt;Parallélisation des UNION ALL&lt;/li&gt;&#xA;&lt;li&gt;Amélioration du Parallel hash join (paralléliser le remplissage d’une seule table de hachage, partagée) et parallelized sequential scans&lt;/li&gt;&#xA;&lt;li&gt;Parallélisation sur la création de vue matérialisée et table à partir des résultats d&amp;rsquo;une requête&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE TABLE .. AS, SELECT INTO et CREATE MATERIALIZED VIEW.&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout d&amp;rsquo;un paramètre de configuration du serveur « parallel_leader_participation » qui permet de contrôler si le processus leader participe à l&amp;rsquo;exécution des sous plans d&amp;rsquo;exécution&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;Amélioration du partitionnement&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;La possibilité de partitionner une table par hashage de clé (en plus des autres)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE TABLE hash1 (col1 NUMERIC, col2 VARCHAR(10)) PARTITION BY HASH(col1);&#xD;&#xA;CREATE TABLE hash1a PARTITION OF hash1 FOR VALUES WITH (MODULUS 4, REMAINDER 0) ;&#xD;&#xA;CREATE TABLE hash1b PARTITION OF hash1 FOR VALUES WITH (MODULUS 4, REMAINDER 1) ;&#xD;&#xA;CREATE TABLE hash1c PARTITION OF hash1 FOR VALUES WITH (MODULUS 4, REMAINDER 2) ;&#xD;&#xA;CREATE TABLE hash1d PARTITION OF hash1 FOR VALUES WITH (MODULUS 4, REMAINDER 3) ;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout possible d&amp;rsquo;une partition par défaut pour les données ne correspondant à aucune partition&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE TABLE table1d PARTITION OF table1 DEFAULT;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;La possibilité de créer des clés primaires, clés étrangères, index et triggers qui seront automatiquement applicables sur l&amp;rsquo;ensemble des partitions&lt;/li&gt;&#xA;&lt;li&gt;Support du changement automatique de partition en cas de mise à jour de la clé de partitionnement&lt;/li&gt;&#xA;&lt;li&gt;Amélioration des performances lors des SELECT sur la lecture des partitions&lt;/li&gt;&#xA;&lt;li&gt;Support des upsert sur les tables partitionnées&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;INSERT  INTO  tablep1 (col1, col2) &#xD;&#xA;VALUES  (100,  &#39;update&#39;) &#xD;&#xA;ON  CONFLICT ON CONSTRAINT tablep1_pkey &#xD;&#xA;DO UPDATE SET col2=&#39;update&#39; ;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Gestion des transactions dans les procédures stockées&lt;/h2&gt;&#xA;&lt;p&gt;PostgreSQL 11 introduit la possibilité de créer des procédures (en PL/pgSQL, PL/Perl, PL/Python, et PL/Tcl). Depuis de nombreuses années, il est possible dans PostgreSQL de créer des fonctions et bien ici ça y ressemble fortement, sauf que l&amp;rsquo;on ne retourne pas de résultats et que l&amp;rsquo;on peut gérer les transactions !&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE PROCEDURE transaction_test1()&#xD;&#xA;LANGUAGE plpgsql&#xD;&#xA;AS $$&#xD;&#xA;BEGIN&#xD;&#xA;  FOR i IN 0..9 LOOP&#xD;&#xA;    INSERT INTO table1 (col1) VALUES (i) ;&#xD;&#xA;    IF i % 2 = 0 THEN&#xD;&#xA;      COMMIT;&#xD;&#xA;    ELSE&#xD;&#xA;      ROLLBACK;&#xD;&#xA;    END IF;&#xD;&#xA;  END LOOP;&#xD;&#xA;END;&#xD;&#xA;$$;&lt;/pre&gt;&lt;p&gt;L&amp;rsquo;exécution de ces procédures se fait en utilisant la commande CALL&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CALL transaction_test1();&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Compilation JIT&lt;/h2&gt;&#xA;&lt;p&gt;PostgreSQL 11 introduit le support de la compilation Just-in-Time (JIT) pour optimiser l’exécution de code et d’autres opérations. Utilisant des composants du projet LLVM, l’introduction de JIT dans PostgreSQL accélère les requêtes utilisant des expressions, listes, agrégats, projections, ainsi que certaines opérations internes.&lt;/p&gt;&#xA;&lt;p&gt;Pour pouvoir utiliser la compilation JIT, vous devrez installer la dépendance LLVM puis activer la compilation JIT soit dans le fichier de configuration (jit = on), soit durant votre session en exécutant SET jit = on.&lt;/p&gt;&#xA;&lt;p&gt;La compilation JIT bénéficie surtout aux requêtes de longue durée et limitées par le processeur. Ce seront souvent des requêtes analytiques (OLAP). Pour les requêtes courtes, le surcoût apporté par la compilation JIT sera souvent supérieur au temps qu&amp;rsquo;elle permet de gagner.&lt;/p&gt;&#xA;&lt;h2&gt;Améliorations générales SQL&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Support de toutes les clauses (SQL:2011) dans les fonctions de fenêtrage ce qui permet maintenant l’utilisation de RANGE dans des clauses PRECEDING/FOLLOWING, GROUPS ou d’exclusion&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;WINDOW window_name AS ( &#xD;&#xA;  [ PARTITION BY expression [, ...] ]&#xD;&#xA;  [ ORDER BY expression [ ASC | DESC | USING operator ] [ NULLS { FIRST | LAST } ] [, ...] ]&#xD;&#xA;  [ frame_clause ]&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;frame_clause :&#xD;&#xA;{ RANGE | ROWS | GROUPS } frame_start [ frame_exclusion ]&#xD;&#xA;{ RANGE | ROWS | GROUPS } BETWEEN frame_start AND frame_end [ frame_exclusion ]&#xD;&#xA;&#xD;&#xA;frame_start / frame_end :&#xD;&#xA;&#xD;&#xA;UNBOUNDED PRECEDING&#xD;&#xA;offset PRECEDING&#xD;&#xA;CURRENT ROW&#xD;&#xA;offset FOLLOWING&#xD;&#xA;UNBOUNDED FOLLOWING&#xD;&#xA;&#xD;&#xA;frame_exclusion :&#xD;&#xA;&#xD;&#xA;EXCLUDE CURRENT ROW&#xD;&#xA;EXCLUDE GROUP&#xD;&#xA;EXCLUDE TIES&#xD;&#xA;EXCLUDE NO OTHERS&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout de fonctions de hash sha-2 : sha224(), sha256(), sha384() et sha512()&lt;/li&gt;&#xA;&lt;li&gt;Ajout de fonctions de recherche plein texte : json(b)_to_tsvector() et websearch_to_tsquery()&lt;/li&gt;&#xA;&lt;li&gt;Ajout de l&amp;rsquo;opérateur ^@ identique à LIKE &amp;lsquo;mot%&amp;rsquo; mais plus efficace sur un index b-tree&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;text ^@ text&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Amélioration des index avec l&amp;rsquo;ajout du mot clef INCLUDE, qui permet d&amp;rsquo;indiquer une liste de colonnes qui seront incluses dans l&amp;rsquo;index comme des colonnes non clés. L&amp;rsquo;ajout de colonnes dans la création d&amp;rsquo;index permet alors l&amp;rsquo;utilisation de parcours d&amp;rsquo;index couvrants.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE [ UNIQUE ] INDEX [ CONCURRENTLY ] [ [ IF NOT EXISTS ] nom ] ON [ ONLY ] nom_table [ USING méthode ]&#xD;&#xA;    ( { nom_colonne | ( expression ) } [ COLLATE collation ] [ classeop ] [ ASC | DESC ] [ NULLS { FIRST | LAST } ] [, ...] )&#xD;&#xA;    [ INCLUDE ( nom_colonne [, ...] ) ]&#xD;&#xA;    [ WITH ( parametre_stockage = valeur [, ... ] ) ]&#xD;&#xA;    [ TABLESPACE nom_espacelogique ]&#xD;&#xA;    [ WHERE prédicat ]&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Amélioration de l’ordre ALTER TABLE .. ADD COLUMN .. DEFAULT .. avec une valeur par défaut non NULL n’a plus besoin de réécrire entièrement la table lors de son exécution, ce qui entraîne une grosse amélioration des performances.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;Authentification&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout de l&amp;rsquo;authentification LDAP, mais celle ci n&amp;rsquo;est utilisée que pour valider les paires nom d&amp;rsquo;utilisateur/mot de passe. De ce fait, pour pouvoir utiliser LDAP comme méthode d&amp;rsquo;authentification, l&amp;rsquo;utilisateur doit préalablement exister dans la base.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;psql&lt;/h2&gt;&#xA;&lt;p&gt;Le client psql évolue lui aussi :&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout des commandes « quit » et « exit » dans le client psql&amp;#8230; (fini les personnes prisent de panique pour sortir de leur terminal ??? )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/xTk9ZBWrma4PIC9y4E/giphy.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout de la commande \gdesc pour afficher les noms et types de colonnes du résultat de la requête&lt;/li&gt;&#xA;&lt;li&gt;Ajout de variables pour les erreurs et activités des requêtes ERROR, SQLSTATE, ROW_COUNT, LAST_ERROR_MESSAGE, and LAST_ERROR_SQLSTATE.&lt;/li&gt;&#xA;&lt;li&gt;Ajout de la possibilité de tester l&amp;rsquo;existence d&amp;rsquo;une variable par exemple dans un if&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;\if :{?variable_name}&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Amélioration de la complétion dans l&amp;rsquo;écriture de requêtes&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;En dehors de ces nouveautés en terme d&amp;rsquo;utilisation, cette nouvelle version apporte aussi des améliorations de performance et d&amp;rsquo;utilisation de mémoire.&lt;/p&gt;&#xA;&lt;p&gt;Et voilà, nous avons fini notre petit tour rapide des nouveautés de postgreSQL 11, mais ne vous inquiétez pas une version 12 est déjà en préparation pour le troisième trimestre 2019.&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.atolcd.com/sortie-de-postgresql-11/&#34;&gt;Sortie de PostgreSQL 11&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.atolcd.com/sortie-de-postgresql-11/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=sortie-de-postgresql-11" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Après seulement une release candidate (mais auparavant 4 version bêta), PostgreSQL 11 vient de sortir!!!! Et comme à chaque nouvelle version son lot de nouveautés que nous allons essayer de passer rapidement en revue. Amélioration de la parallélisation Quoi de... &lt;a class=&#34;more-link&#34; href=&#34;https://blog.atolcd.com/sortie-de-postgresql-11/&#34;&gt;Continue Reading &amp;#8594;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.atolcd.com/sortie-de-postgresql-11/&#34;&gt;Sortie de PostgreSQL 11&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Caroline Chanlon</name>
    </author>
  </entry>
  <entry>
    <title>Pimp My PostgreSQL</title>
    <updated>2018-01-26T11:07:23Z</updated>
    <id>tag:blog.atolcd.com,2018-01-26:/pimp-my-postgresql/</id>
    <content type="html">&lt;p&gt;&lt;img loading=&#34;lazy&#34; class=&#34;alignright wp-image-2934&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2018/01/pimp-my-postgresql.png&#34; alt=&#34;&#34; width=&#34;491&#34; height=&#34;290&#34; /&gt;Une question qui se pose souvent après l&amp;rsquo;installation d&amp;rsquo;une instance postgreSQL, c&amp;rsquo;est comment configurer ce fichier postgresql.conf. Dans le doute souvent, beaucoup de personnes conservent la configuration par défaut, ce qui ne va pas poser vraiment de problème pour une utilisation légère. Mais si on a une instance postgreSQL avec postGIS et des millions d&amp;rsquo;enregistrements, cela va rapidement se trouver problématique si on laisse les valeurs par défaut&amp;#8230;&lt;/p&gt;&#xA;&lt;p&gt;Pour les initiés qui installent régulièrement de nouvelles instances postgreSQL, se plonger dans les plus de 600 lignes du fichier de configuration par défaut ne les effraie pas. Mais on n&amp;rsquo;installe pas forcément tous les jours un nouveau serveur avec des caractéristiques différentes. Il faut donc soit se replonger pour une centième fois dans la documentation de postgres pour se rappeler à notre bonne mémoire les différents paramètres et les valeurs à adapter en fonction de la ram, disque, cpu&amp;#8230;&lt;/p&gt;&#xA;&lt;p&gt;En plus de devoir se rappeler les &lt;strong&gt;paramètres à modifier,&lt;/strong&gt; il faut aussi connaître les &lt;strong&gt;règles de calcul &lt;/strong&gt;pour les valeurs comme par exemple le « effective_cache_size » qui est préconisé à 75% de la ram total du serveur si celui-ci est dédié à postgres.&lt;/p&gt;&#xA;&lt;p&gt;Le but de cet article n&amp;rsquo;est pas de voir ni de détailler tous les paramètres de configuration possibles et inimaginables, mais de voir cela comme un mémo pour les initiés ou de s’interroger sur les &lt;strong&gt;paramètres qui seraient potentiellement à modifier en fonction du serveur&lt;/strong&gt; (et des applications qui l&amp;rsquo;utilisent) si l&amp;rsquo;on ne connait pas l&amp;rsquo;utilisation des paramètres de ce fichier postgresql.conf.&lt;/p&gt;&#xA;&lt;p&gt;Pour cela un petit outil a été conçu par Cybertec, qui permet de renseigner quelques caractéristiques et de voir évoluer en conséquence le fichier postgresql.conf notamment en fonction de la ram du serveur, du nombre de cpu, de la taille de la base&amp;#8230; etc.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; class=&#34;alignnone size-full wp-image-2925&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2018/01/pgconfigurator.png&#34; alt=&#34;&#34; width=&#34;1005&#34; height=&#34;993&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2018/01/pgconfigurator.png 1005w, https://blog.atolcd.com/wp-content/uploads/2018/01/pgconfigurator-300x296.png 300w, https://blog.atolcd.com/wp-content/uploads/2018/01/pgconfigurator-768x759.png 768w, https://blog.atolcd.com/wp-content/uploads/2018/01/pgconfigurator-945x934.png 945w, https://blog.atolcd.com/wp-content/uploads/2018/01/pgconfigurator-600x593.png 600w&#34; sizes=&#34;(max-width: 1005px) 100vw, 1005px&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cela ne remplace pas une connaissance aguerrie de postgreSQL et de sa configuration mais ça permet de se faire une idée des paramètres à adapter en fonction de son serveur et de ses besoins.&lt;/p&gt;&#xA;&lt;p&gt;Cet outil est disponible en ligne à cette adresse : &lt;a href=&#34;http://pgconfigurator.cybertec.at/&#34;&gt;http://pgconfigurator.cybertec.at/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.atolcd.com/pimp-my-postgresql/&#34;&gt;Pimp My PostgreSQL&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.atolcd.com/pimp-my-postgresql/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=pimp-my-postgresql" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Une question qui se pose souvent après l&amp;#8217;installation d&amp;#8217;une instance postgreSQL, c&amp;#8217;est comment configurer ce fichier postgresql.conf. Dans le doute souvent, beaucoup de personnes conservent la configuration par défaut, ce qui ne va pas poser vraiment de problème pour une... &lt;a class=&#34;more-link&#34; href=&#34;https://blog.atolcd.com/pimp-my-postgresql/&#34;&gt;Continue Reading &amp;#8594;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.atolcd.com/pimp-my-postgresql/&#34;&gt;Pimp My PostgreSQL&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Caroline Chanlon</name>
    </author>
  </entry>
  <entry>
    <title>Sortie de PostgreSQL 10</title>
    <updated>2017-10-05T13:28:32Z</updated>
    <id>tag:blog.atolcd.com,2017-10-05:/sortie-de-postgresql-10/</id>
    <content type="html">&lt;p&gt;Aujourd&amp;rsquo;hui, c&amp;rsquo;est la sortie de &lt;strong&gt;PostgreSQL 10&lt;/strong&gt;!!!! Première révolution, la numérotation des versions : on passe de 9.4&amp;#8230;9.6 pour les versions majeures à 10, 11, 12&amp;#8230; Ce point est important car un changement de version majeure implique une migration des données. Une opération beaucoup plus lourde que la seule mise à jour des exécutables !&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter size-full wp-image-2788&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2017/10/postgresql-10.jpg&#34; alt=&#34;&#34; width=&#34;558&#34; height=&#34;337&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2017/10/postgresql-10.jpg 558w, https://blog.atolcd.com/wp-content/uploads/2017/10/postgresql-10-300x181.jpg 300w&#34; sizes=&#34;(max-width: 558px) 100vw, 558px&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;Voici quelques détails sur cette&lt;strong&gt; nouvelle version 10&lt;/strong&gt; et ce qu&amp;rsquo;elle apporte :&lt;/p&gt;&#xA;&lt;h2&gt;Performance et partitionnement&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Le partitionnement de table est maintenant un attribut de la table :&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE TABLE table_name ( ... )&#xD;&#xA;[ PARTITION BY { RANGE | LIST } ( { column_name | ( expression ) }&#xD;&#xA;&#xD;&#xA;CREATE TABLE table_name&#xD;&#xA;PARTITION OF parent_table [ (&#xD;&#xA;) ] FOR VALUES partition_bound_spec&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;PostgreSQL 10 va plus loin dans la parallélisation avec le parallélisme des Index-Only Scan, Index Scan, Bitmap Heap Scan, Merge Join / Gather Merge, Subplan-Related Improvements&lt;/li&gt;&#xA;&lt;li&gt;Amélioration des performances pour les agrégats et jointures avec &lt;code&gt;postgres_fdw&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Amélioration des performances de l&amp;rsquo;analyseur de requête&lt;/li&gt;&#xA;&lt;li&gt;Apparition des statistiques multi-colonnes&lt;/li&gt;&#xA;&lt;li&gt;Amélioration du plan d’exécution des requêtes&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;Réplication et scalabilité&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Réplication logique : légère et basée sur les WAL, répliquant les objets individuellement via les commandes PUBLICATION (primaire) et SUBSCRIPTION (secondaire)&lt;/li&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE PUBLICATION financials FOR TABLE ONLY loans, ONLY fines;&lt;/pre&gt;&lt;br /&gt;&#xA;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE SUBSCRIPTION financials&#xD;&#xA;CONNECTION &#39;dbname=libdata user=postgres host=172.17.0.2&#39;&#xD;&#xA;PUBLICATION financials;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;QUORUM replication : avec ANY et FIRST pour synchronous_standby_names;&lt;/li&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;synchronous_standby_names = ANY 2(node1,node2,node3);&#xD;&#xA;synchronous_standby_names = FIRST 2(node1,node2);&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Suppression automatique à la fin de la session des slots de réplication temporaires&lt;/li&gt;&#xA;&lt;li&gt;Amélioration de libpq permettant des connexions a de multiples systèmes&lt;/li&gt;&#xA;&lt;li&gt;Amélioration des performances de la réplication physique&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;Administration&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Support de la compression pour pg_receivewal&lt;/li&gt;&#xA;&lt;li&gt;Ajout d&amp;rsquo;informations sur les Background processes et Wait Events dans pg_stat_activity&lt;/li&gt;&#xA;&lt;li&gt;Ajout de fonctions qui remontent à l&amp;rsquo;utilisateur des informations sur le status de transaction. L&amp;rsquo;usage principal de ces fonctions est de déterminer les transactions commitées entre deux snapshots.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;txid_status(bigint)&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Fonctionnalités SQL et développeurs&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Gestion de colonne Identity qui vise à remplacer l&amp;rsquo;utilisation du type serial et qui est conforme au standard SQL&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE TABLE test_new (&#xD;&#xA;    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,&#xD;&#xA;    payload text&#xD;&#xA;);&lt;/pre&gt;&lt;p&gt;plus d&amp;rsquo;informations sur ce sujet &lt;a href=&#34;https://blog.2ndquadrant.com/postgresql-10-identity-columns/&#34;&gt;ici par exemple&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Possibilité de renommer la valeur d&amp;rsquo;une énumération&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE TYPE langage AS ENUM (&#39;SQL&#39;, &#39;JAVA&#39;, &#39;HTML&#39;) ;&#xD;&#xA;ALTER TYPE langage RENAME VALUE &#39;HTML&#39; TO &#39;HTML5&#39; ;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout des triggers AFTER STATEMENT qui peuvent avoir accès à l’ensemble des lignes modifiées, avant et après changement, à travers une pseudo-variable de type table&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE TRIGGER nom_trigger AFTER DELETE ON nom_table&#xD;&#xA;REFERENCING OLD TABLE AS OLD&#xD;&#xA;FOR EACH STATEMENT&#xD;&#xA;EXECUTE PROCEDURE nom_procedure();&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout de la fonction xmltable qui produit une table basée sur la valeur XML donnée.&lt;/li&gt;&#xA;&lt;li&gt;Supprimer des éléments d&amp;rsquo;un JSONB&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;SELECT &#39;{&#34;a&#34;:1 , &#34;b&#34;:2, &#34;c&#34;:3}&#39;::jsonb - &#39;{a,c}&#39;::text[] ;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Il est possible de créer des indexes full text sur une colonne JSON ou JSONB&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE INDEX bookdata_fts ON bookdata&#xD;&#xA;USING gin (( to_tsvector(&#39;english&#39;,bookdata) ));&#xD;&#xA;&#xD;&#xA;SELECT bookdata -&amp;gt; &#39;title&#39;&#xD;&#xA;FROM bookdata&#xD;&#xA;WHERE to_tsvector(&#39;english&#39;,bookdata) @@ to_tsquery(&#39;duke&#39;);&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Sécurité&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Authentification SCRAM plus sécurisée que md5&lt;/li&gt;&#xA;&lt;li&gt;Création de nouveau rôle pour le monitoring évitant ainsi d&amp;rsquo;être super utilisateur&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;pg_read_all_settings : Lit toutes les variables de configuration, y compris celles normalement visibles des seuls super-utilisateurs.&#xD;&#xA;pg_read_all_stats : Lit toutes les vues pg_stat_* et utilise plusieurs extensions relatives aux statistiques, y compris celles normalement visibles des seuls super-utilisateurs.&#xD;&#xA;pg_stat_scan_tables : Exécute des fonctions de monitoring pouvant prendre des verrous verrous ACCESS SHARE sur les tables, potentiellement pour une longue durée.&#xD;&#xA;pg_monitor : Lit et exécute plusieurs vues et fonctions de monitoring. Ce rôle est membre de pg_read_all_settings, pg_read_all_stats et pg_stat_scan_tables.&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;Ajout de politiques restrictive dans les politiques de sécurité pour l&amp;rsquo;accès aux lignes et plus seulement de politiques permissives&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;/p&gt;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE POLICY admin_local_only ON passwd AS RESTRICTIVE TO admin&#xD;&#xA;    USING (pg_catalog.inet_client_addr() IS NULL);&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Autres fonctionnalités&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;file_fdw peut maintenant utiliser les programmes&lt;/li&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE FOREIGN TABLE&#xD;&#xA;   test(a int, b text)&#xD;&#xA;   SERVER csv&#xD;&#xA;   OPTIONS (program &#39;gunzip -c /tmp/data.czv.gz&#39;);&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;support des collations ICU&lt;/li&gt;&#xA;&lt;li&gt;Ajout d&amp;rsquo;un module amcheck permettant de vérifier cohérence / corruption d&amp;rsquo;un index B-Tree&lt;/li&gt;&#xA;&lt;li style=&#34;list-style-type: none;&#34;&gt;&#xA;&lt;pre class=&#34;crayon-plain-tag&#34;&gt;CREATE EXTENSION amcheck ;&#xD;&#xA;   SELECT bt_index_check(&#39;idx1_check1&#39;) ;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;Modifications entrainant une incompatibilité ascendante&lt;/h2&gt;&#xA;&lt;ul style=&#34;list-style-type: disc;&#34;&gt;&#xA;&lt;li&gt;“xlog” et “clog” qui deviennent respectivement “wal” et “xact”.&lt;/li&gt;&#xA;&lt;li&gt;fin du support du protocole client/serveur 1.0 (clients datant d’avant la version 6.3)&lt;/li&gt;&#xA;&lt;li&gt;changement de valeurs par défaut pour pg_basebackup&lt;/li&gt;&#xA;&lt;li&gt;fin du support des TIMESTAMP avec floating point.&lt;/li&gt;&#xA;&lt;li&gt;Le module contrib/tsearch2 a été supprimé qui permettait une comptabilité avec les fonction de recherche full text avant la version 8.3&lt;/li&gt;&#xA;&lt;li&gt;fin du support de la commande pg_dump pour les bases de données plus anciennes que la version 8.0&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;Et voilà, nous avons fini notre petit tour rapide des nouveautés de postgreSQL 10 mais une version 11 est déjà prévue pour dans 12 mois !&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.atolcd.com/sortie-de-postgresql-10/&#34;&gt;Sortie de PostgreSQL 10&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.atolcd.com/sortie-de-postgresql-10/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=sortie-de-postgresql-10" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Aujourd&amp;#8217;hui, c&amp;#8217;est la sortie de PostgreSQL 10!!!! Première révolution, la numérotation des versions : on passe de 9.4&amp;#8230;9.6 pour les versions majeures à 10, 11, 12&amp;#8230; Ce point est important car un changement de version majeure implique une migration des... &lt;a class=&#34;more-link&#34; href=&#34;https://blog.atolcd.com/sortie-de-postgresql-10/&#34;&gt;Continue Reading &amp;#8594;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.atolcd.com/sortie-de-postgresql-10/&#34;&gt;Sortie de PostgreSQL 10&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Caroline Chanlon</name>
    </author>
  </entry>
  <entry>
    <title>Nouveau module d’export de données pour REMOcRA</title>
    <updated>2017-05-12T13:52:26Z</updated>
    <id>tag:blog.atolcd.com,2017-05-12:/nouveau-module-dexport-de-donnees-remocra/</id>
    <content type="html">&lt;h1&gt;Objectif du module&lt;/h1&gt;&#xA;&lt;p&gt;Le SDIS du Var ne disposait pas jusqu&amp;rsquo;à ce jour, à travers la plate-forme collaborative &lt;a href=&#34;http://sdis.atolcd.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;REMOcRA&lt;/a&gt;, d&amp;rsquo;une méthode simple pour exporter le contenu de la base de données auprès de ses partenaires. Les demandes étant de plus en plus récurrentes, le SDIS du Var a décidé &lt;strong&gt;de faire évoluer l&amp;rsquo;application pour l&amp;rsquo;enrichir d&amp;rsquo;un module dédié aux exports&lt;/strong&gt; et a confié à Atol Conseils et Développements sa réalisation en veillant à respecter les besoins suivants :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;En tant qu&amp;rsquo;administrateur de l&amp;rsquo;extranet, être en mesure de réaliser facilement des exports de données en se basant sur des modèles administrables. Ce module devait être en mesure de produire des fichiers tabulaires ou des fichiers géographiques.&lt;/li&gt;&#xA;&lt;li&gt;En tant que partenaire, être en mesure d&amp;rsquo;exporter soit même les données mises à disposition par le SDIS sur un territoire autorisé.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1&gt;Comment ça marche ?&lt;/h1&gt;&#xA;&lt;h2&gt;Un fonctionnement basé sur des modèles d&amp;rsquo;exports&lt;/h2&gt;&#xA;&lt;p&gt;Le mécanisme d&amp;rsquo;export repose sur des modèles. Ces derniers peuvent être référencés directement par les administrateurs de la plate-forme REMOcRA grâce à des fichiers de définition de modèle (format XML) déposés fia FTP dans un sous-dossier de REMOcRA.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter size-large wp-image-2626&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-1-1024x220.png&#34; alt=&#34;&#34; width=&#34;676&#34; height=&#34;145&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-1-1024x220.png 1024w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-1-300x64.png 300w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-1-768x165.png 768w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-1-945x203.png 945w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-1-600x129.png 600w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-1.png 1067w&#34; sizes=&#34;(max-width: 676px) 100vw, 676px&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;Le fichier XML précise principalement la requête SQL à utiliser pour filtrer et formater les données à la bonne structure. L&amp;rsquo;attribut spatial du nœud racine permet de préciser si l&amp;rsquo;export est de type tabulaire (CSV) ou géographique (Esri Shapefile). Dans le cas d&amp;rsquo;un export géographique, la colonne « wkt » contenant la géométrie encodée en WKT est exploitée.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter size-full wp-image-2627&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-2.png&#34; alt=&#34;&#34; width=&#34;822&#34; height=&#34;341&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-2.png 822w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-2-300x124.png 300w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-2-768x319.png 768w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-2-600x249.png 600w&#34; sizes=&#34;(max-width: 822px) 100vw, 822px&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;Le référencement des modèles est réalisé directement depuis l&amp;rsquo;interface en exécutant depuis REMOcRA le traitement « Référencer les modèles d&amp;rsquo;export de données » disponible dans la catégorie d&amp;rsquo;applications « Divers »&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter size-full wp-image-2628&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-3.png&#34; alt=&#34;&#34; width=&#34;968&#34; height=&#34;288&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-3.png 968w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-3-300x89.png 300w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-3-768x228.png 768w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-3-945x281.png 945w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-3-600x179.png 600w&#34; sizes=&#34;(max-width: 968px) 100vw, 968px&#34; /&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Un traitement spécifique intégrant le filtrage spatial des données&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter size-large wp-image-2629&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-4-1024x525.png&#34; alt=&#34;&#34; width=&#34;676&#34; height=&#34;347&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-4-1024x525.png 1024w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-4-300x154.png 300w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-4-768x394.png 768w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-4-945x484.png 945w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-4-600x307.png 600w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-4.png 1167w&#34; sizes=&#34;(max-width: 676px) 100vw, 676px&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;La réalisation d&amp;rsquo;un export de données depuis le système REMOcRA se base sur le mécanisme suivant :&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;L&amp;rsquo;utilisateur de profil « administrateur » dispose d&amp;rsquo;un nouveau traitement intitulé « Exporter les données à partir d&amp;rsquo;un modèle ». Ce dernier permet de réaliser des exports de données en s&amp;rsquo;appuyant sur la liste de modèles.&lt;/li&gt;&#xA;&lt;li&gt;Après avoir choisi son modèle, la demande d&amp;rsquo;export formulée par l&amp;rsquo;utilisateur est stockée en file d&amp;rsquo;attente. Une tâche planifiée vérifie régulièrement la présence de demandes en attente&lt;/li&gt;&#xA;&lt;li&gt;Lors de l’exécution de la tâche planifiée, le moteur ETL exécute les demandes d&amp;rsquo;export en attente en s&amp;rsquo;appuyant sur les informations contenues dans le modèle pour générer un fichier CSV (dans le cas de données non géographiques) ou des fichiers de formes (fichiers ESRI Shapefile).&lt;/li&gt;&#xA;&lt;li&gt;A l&amp;rsquo;issu du traitement, les fichiers produits sont compressés au format ZIP et un lien de téléchargement est fourni dans un mél envoyé au demandeur du traitement.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter size-full wp-image-2630&#34; src=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-5.png&#34; alt=&#34;&#34; width=&#34;962&#34; height=&#34;367&#34; srcset=&#34;https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-5.png 962w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-5-300x114.png 300w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-5-768x293.png 768w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-5-945x361.png 945w, https://blog.atolcd.com/wp-content/uploads/2017/05/billet-remocra-5-600x229.png 600w&#34; sizes=&#34;(max-width: 962px) 100vw, 962px&#34; /&gt;&lt;/p&gt;&#xA;&lt;h2&gt;Une mutualisation des connaissances !&lt;/h2&gt;&#xA;&lt;p&gt;Le SDIS du Var (83), à l&amp;rsquo;initiative de la plate-forme collaborative métier REMOcRA, a décidé de faire bénéficier ses confrères de sa démarche en redistribuant gratuitement l&amp;rsquo;outil et ce module sous licence Creative Commons.&lt;br /&gt;&#xA;Dans cette démarche open source, la solution et le nouveau module sont disponibles sur Github pour installation et test à tous les SDIS sur &lt;a href=&#34;https://github.com/atolcd/sdis-remocra&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;https://github.com/atolcd/sdis-remocra&lt;/a&gt;. Pour plus d&amp;rsquo;information sur la solution REMOcRA, consulter &lt;a href=&#34;http://sdis.atolcd.com&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;http://sdis.atolcd.com&lt;/a&gt;&lt;br /&gt;&#xA;&lt;em&gt;REMOcRA est cofinancé par l’Union européenne. L’Europe s’engage avec le Fonds européen de développement régional.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.atolcd.com/nouveau-module-dexport-de-donnees-remocra/&#34;&gt;Nouveau module d&amp;rsquo;export de données pour REMOcRA&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
    <link href="https://blog.atolcd.com/nouveau-module-dexport-de-donnees-remocra/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=nouveau-module-dexport-de-donnees-remocra" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Objectif du module Le SDIS du Var ne disposait pas jusqu&amp;#8217;à ce jour, à travers la plate-forme collaborative REMOcRA, d&amp;#8217;une méthode simple pour exporter le contenu de la base de données auprès de ses partenaires. Les demandes étant de plus... &lt;a class=&#34;more-link&#34; href=&#34;https://blog.atolcd.com/nouveau-module-dexport-de-donnees-remocra/&#34;&gt;Continue Reading &amp;#8594;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cet article &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.atolcd.com/nouveau-module-dexport-de-donnees-remocra/&#34;&gt;Nouveau module d&amp;rsquo;export de données pour REMOcRA&lt;/a&gt; est apparu en premier sur &lt;a rel=&#34;nofollow&#34; href=&#34;https://blog.atolcd.com&#34;&gt;Atol Open Blog&lt;/a&gt;.&lt;/p&gt;&#xA;</summary>
    <author>
      <name>Caroline Chanlon</name>
    </author>
  </entry>
  <entry>
    <title>Nouveau dans pg13: Colonne leader_pid dans pg_stat_activity</title>
    <updated>2020-03-08T05:33:26Z</updated>
    <id>tag:rjuju.github.io,2020-03-08:/postgresqlfr/2020/03/08/nouveau-dans-pg13-leader_pid.html</id>
    <content type="html">&lt;h3 id=&#34;nouvelle-colonne-leader_pid-dans-la-vue-pg_stat_activity&#34;&gt;Nouvelle colonne leader_pid dans la vue pg_stat_activity&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Étonnamment, depuis que les requêtes parallèles ont été ajoutées dans&#xA;PostgreSQL 9.6, il était impossible de savoir à quel processus client était lié&#xA;un worker parallèle.  Ainsi, comme &lt;a href=&#34;https://twitter.com/g_lelarge/status/1209486212190343168&#34;&gt;Guillaume l’a fait&#xA;remarquer&lt;/a&gt;, it makes&#xA;il est assez difficile de construire des outils simples permettant&#xA;d’échantillonner les événements d’attente liés à tous les processus impliqués&#xA;dans une requête.  Une solution simple à ce problème est d’exporter&#xA;l’information de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;lock group leader&lt;/code&gt; disponible dans le processus client au&#xA;niveau SQL :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-plaintext highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;commit b025f32e0b5d7668daec9bfa957edf3599f4baa8&#xA;Author: Michael Paquier &amp;lt;michael@paquier.xyz&amp;gt;&#xA;Date:   Thu Feb 6 09:18:06 2020 +0900&#xA;&#xA;Add leader_pid to pg_stat_activity&#xA;&#xA;This new field tracks the PID of the group leader used with parallel&#xA;query.  For parallel workers and the leader, the value is set to the&#xA;PID of the group leader.  So, for the group leader, the value is the&#xA;same as its own PID.  Note that this reflects what PGPROC stores in&#xA;shared memory, so as leader_pid is NULL if a backend has never been&#xA;involved in parallel query.  If the backend is using parallel query or&#xA;has used it at least once, the value is set until the backend exits.&#xA;&#xA;Author: Julien Rouhaud&#xA;Reviewed-by: Sergei Kornilov, Guillaume Lelarge, Michael Paquier, Tomas&#xA;Vondra&#xA;Discussion: https://postgr.es/m/CAOBaU_Yy5bt0vTPZ2_LUM6cUcGeqmYNoJ8-Rgto+c2+w3defYA@mail.gmail.com&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Avec cette modification, il est maintenant très simple de trouver tous les&#xA;processus impliqués dans une requête parallèle.  Par exemple :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;leader_pid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;  &lt;span class=&#34;n&#34;&gt;array_agg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;leader_pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;members&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_stat_activity&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;leader_pid&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IS&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NULL&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;BY&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;leader_pid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;       &lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;leader_pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;members&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;-------------------+------------+---------------&lt;/span&gt;&#xA; &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;      &lt;span class=&#34;mi&#34;&gt;31630&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32269&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32268&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Attention toutefois, comme indiqué dans le message de commit, si la colonne&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;leader_pid&lt;/code&gt; à la même valeur que la colonne &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pid&lt;/code&gt;, cela ne veut pas forcément&#xA;dire que le processus client est actuellement en train d’effectuer une requête&#xA;parallèle, car une fois que le champ est positionné il n’est jamais&#xA;réinitialisé.  De plus, pour éviter tout surcoût, aucun verrou supplémentaire&#xA;n’est maintenu lors de l’affichage de ces données.  Cela veut dire que chaque&#xA;ligne est traitée indépendamment.  Ainsi, bien que cela soit fort peu probable,&#xA;vous pouvez obtenir des données incohérentes dans certaines circonstances,&#xA;comme par exemple un worker paralèlle pointant vers un pid qui est déjà&#xA;déconnecté.&lt;/p&gt;&#xA;&#xA;    &lt;p&gt;&lt;a href=&#34;https://rjuju.github.io/postgresqlfr/2020/03/08/nouveau-dans-pg13-leader_pid.html&#34;&gt;Nouveau dans pg13: Colonne leader_pid dans pg_stat_activity&lt;/a&gt; was originally published by Julien Rouhaud at &lt;a href=&#34;https://rjuju.github.io&#34;&gt;rjuju&#39;s home&lt;/a&gt; on March 08, 2020.&lt;/p&gt;</content>
    <link href="https://rjuju.github.io/postgresqlfr/2020/03/08/nouveau-dans-pg13-leader_pid.html" rel="alternate"></link>
    <summary type="html"></summary>
    <author>
      <name>Julien Rouhaud</name>
    </author>
  </entry>
  <entry>
    <title>pg qualstats 2: Suggestion d&#39;index globale</title>
    <updated>2020-01-06T12:23:29Z</updated>
    <id>tag:rjuju.github.io,2020-01-06:/postgresqlfr/2020/01/06/pg_qualstats-2-suggestion-index-globale.html</id>
    <content type="html">&lt;p&gt;Parvenir à une suggestion d’index de qualité peut être une tâche complexe.&#xA;Cela nécessite à la fois une connaissance des requêtes applicatives et des&#xA;spécificités de la base de données.  Avec le temps de nombreux projets ont&#xA;essayé de résoudre ce problème, l’un d’entre eux étant &lt;a href=&#34;https://powa.readthedocs.io/&#34;&gt;PoWA version&#xA;3&lt;/a&gt;, avec l’aide de &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/stats_extensions/pg_qualstats.html&#34;&gt;pg_qualstats&#xA;extension&lt;/a&gt;.&#xA;Cet outil donne de plutôt bonnes suggestions d’index, mais il est nécessaire&#xA;d’installer et configurer PoWA, alors que certains utilisateurs aimeraient&#xA;n’avoir que la suggestion d’index globale.  Pour répondre à ce besoin de&#xA;simplicité, l’algorithme utilisé dans PoWA est maintenant disponible dans&#xA;pg_qualstats version 2, sans avoir besoin d’utiliser des composants&#xA;additionnels.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;EDIT: La fonction &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_qualstats_index\_advisor()&lt;/code&gt; a été changée pour retourner&#xA;du &lt;strong&gt;json&lt;/strong&gt; plutôt que du &lt;strong&gt;jsonb&lt;/strong&gt;, afin de conserver la compatibilité avec PostgreSQL&#xA;9.3.  Les requêtes d’exemples sont donc également modifiées pour utiliser&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;json_array_elements()&lt;/code&gt; plutôt que &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;jsonb_array_elements()&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;quest-ce-que-pg_qualstats&#34;&gt;Qu’est-ce que pg_qualstats&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Une manière simple d’expliquer ce qu’est pg_qualstats serait de dire qu’il&#xA;s’agit d’une extension similaire à&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/current/pgstatstatements.html&#34;&gt;pg_stat_statements&lt;/a&gt;&#xA;mais travaillant au niveaux des prédicats.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Cette extension sauvegarde des statistiques utiles pour les clauses &lt;strong&gt;WHERE&lt;/strong&gt;&#xA;et &lt;strong&gt;JOIN&lt;/strong&gt; : à quelle table et quelle colonne un prédicat fait référénce, le&#xA;nombre de fois qu’un prédicat a été utilisé, le nombre d’exécutions de&#xA;l’opérateur sous-jacent, si le prédicat provient d’un parcours d’index ou non,&#xA;la sélectivité, la valeur des constantes et bien plus encore.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Il est possible de déduire beaucoup de choses depuis ces informations.  Par&#xA;exemple, si vous examinez les prédicats qui contiennent des références à des&#xA;tables différentes, vous pouvez trouver quelles tables sont jointes ensembles,&#xA;et à quel point les conditions de jointures sont sélectives.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;suggestion-globale-&#34;&gt;Suggestion Globale ?&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Comment je l’ai mentionné, la suggestion d’index globale ajoutée dans&#xA;pg_qualstats 2 utilise la même approche que celle de PoWA, ainsi cet article&#xA;peut servir à décrire le fonctionnement des deux outils.  La seule différence&#xA;est que vous obtiendrez probablement une suggestion de meilleure qualité avec&#xA;PoWA, puisque plus de prédicats seront disponibles, et que vous pourrez&#xA;également choisir sur quel intervalle de temps vous souhaitez effectuer une&#xA;suggestion d’index manquants.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La chose importante à retenir ici est qu’il s’agit d’une suggestion effectuée&#xA;de manière &lt;strong&gt;globale&lt;/strong&gt;, c’est-à-dire en prenant en compte tous les prédicats&#xA;intéressant en même temps.  Cette approche est différente de toutes les autres&#xA;dont j’ai connaissance, qui ne prennent en compte qu’une seule requête à la&#xA;fois.  Selon moi, une approche globale est meilleure, car il est possible de&#xA;réduire le nombre total d’index, en maximisant l’efficacité des index&#xA;multi-colonnes.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;comment-marche-la-suggestion-globale&#34;&gt;Comment marche la suggestion globale&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;La première étape consiste à récupérer tous les prédicats qui pourraient&#xA;bénéficier de nouveaux index.  C’est particulièrement facile à obtenir avec&#xA;pg_qualstats.  En filtrant les prédicats venant d’un parcours séquentiel,&#xA;exécutés de nombreuses fois et qui filtrent de nombreuses lignes (à la fois en&#xA;nombre et en pourcentage), vous obtenez une liste parfaite de prédicats qui&#xA;auraient très probablement besoin d’un index (ou alors dans certains cas une&#xA;liste des requêtes mal écrites).  Voyons regardons par exemple le cas d’une&#xA;applications qui utiliserait ces 4 prédicats:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/global_advisor_1_quals.png&#34;&gt;&lt;img src=&#34;/images/global_advisor_1_quals.png&#34; alt=&#34;Liste de tous les prédicats&#xA;trouvés&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Ensuite, il faut construire l’ensemble entier des chemins de toutes les&#xA;prédicats joints par un AND logique, qui contiennent d’autres prédicats, qui&#xA;peuvent être eux-meme également joints par des AND logiques.  En utilisants les&#xA;même 4 prédicats vus précédemments, nous obtenons ces chemins :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/global_advisor_2_graphs.png&#34;&gt;&lt;img src=&#34;/images/global_advisor_2_graphs.png&#34; alt=&#34;Construction de tous les chemins de prédicats&#xA;possibles&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Une fois tous les chemins construits, il suffit d’obtenir le meilleur chemin&#xA;pour trouver le meilleur index à suggérer.  Le classement de ces chemins est&#xA;pour le moment fait en donnant un poids à chaque nœud de chaque chemin qui&#xA;correspond au nombre de prédicats simple qu’il contient, et en additionnant le&#xA;poids pour chaque chemin.  C’est une approche très simple, et qui permet de&#xA;favoriser un nombre minimal d’index qui optimisent le plus de requêtes&#xA;possible.  Avec nos exemple, nous obtenons :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/global_advisor_3_weighted.png&#34;&gt;&lt;img src=&#34;/images/global_advisor_3_weighted.png&#34; alt=&#34;Ajout d&#39;un poids à tous les chemins et choix du score le plus&#xA;haut&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Bien évidemment, d’autres approches de classement pourraient être utilisée pour&#xA;prendre en compte d’autres paramètres, et potentiellement obtenir une meilleur&#xA;suggestion.  Par exemple, en prenant en compte également le nombre d’exécution&#xA;ou la sélectivité des prédicats.  Si le ratio de lecture/écriture pour chaque&#xA;table est connu (ce qui est disponible avec l’extension&#xA;&lt;a href=&#34;https://github.com/powa-team/powa-archivist&#34;&gt;powa-archivist&lt;/a&gt;), il serait&#xA;également possible d’adapter le classement pour limiter la suggestion d’index&#xA;pour les tables qui ne sont accédées presque exclusivement en écriture.  Avec&#xA;cet algorithme, ces ajustements seraient relativement simples à faire.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Une fois que le meilleur chemin est trouvé, on peut générer l’ordre de création&#xA;de l’index !  Comme l’ordre des colonnes peut être important, l’ordre est&#xA;généré en récupérant les colonnes de chaque nœud par poids croissant.  Avec&#xA;notre exemple, l’index suivant est généré :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INDEX&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;ON&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Une fois que l’index est trouvé, on supprime simplement les prédicats contenus&#xA;de la liste globale de prédicats et on reprendre de zéro jusqu’à ce qu’il n’y&#xA;ait plus de prédicats.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;un-peu-plus-de-détails-et-mise-en-garde&#34;&gt;Un peu plus de détails et mise en garde&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Bien évidemment, il s’agit ici d’une version simplifiée de l’algorithme de&#xA;suggestion, car d’autres informations sont nécessaires.  Par exemple, la liste&#xA;des prédicats est en réalité ajustée avec les &lt;a href=&#34;https://www.postgresql.org/docs/current/indexes-opclass.html&#34;&gt;classes d’opérateurs et méthode&#xA;d’acces&lt;/a&gt; en&#xA;fonction du type de la colonne et de sont opérateur, afin de s’assurer&#xA;d’obtenir des index valides.  Si plusieurs méthodes d’accès aux index sont&#xA;trouvées pour un même meilleur chemin, &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;btree&lt;/code&gt; sera choisi en priorité.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Cela nous amène à un autre détail : cette approche est principalement pensée&#xA;pour les index &lt;strong&gt;btree&lt;/strong&gt;, pour lesqules l’ordre des colonnes est critiques.&#xA;D’autres méthodes d’accès ne requièrent pas un ordre spécifique pour les&#xA;colonnes, et pour ces méthodes d’accès il est possible qu’une suggestion plus&#xA;optimale soit possible si l’ordre des colonnes n’était pas pris en compte.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Un autre point important est que les classes d’opérateurs et méthodes d’accès&#xA;ne sont pas gérés en dur mais récupérés à l’exécution en utilisant les&#xA;catalogues locaux.  Par conséquent, vous pouvez obtenir des résultats&#xA;différents (et potentiellement meilleurs) si vous faites en sorte d’avoir&#xA;toutes les classes d’opérateur additionelles disponibles quand vous utilisez la&#xA;suggestion d’index globale.  Cela pourrait être les extensions &lt;strong&gt;btree_gist&lt;/strong&gt;&#xA;et &lt;strong&gt;btree_gist&lt;/strong&gt;, mais également d’autres méthodes d’accès aux index.  Il est&#xA;également possible que certain types / opérateurs n’aient pas de méthode&#xA;d’accès associée dans les catalogues.  Dans ce cas, ces prédicats sont&#xA;retournées séparément dans une liste de prédicats non optimisables&#xA;automatiquement, et pour lequel une analyse manuelle est nécessaire.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Enfin, comme pg_qualstats ne traite pas les prédicats composés d’expressions,&#xA;l’outil ne peut pas suggérer d’index sur des expressions, par exemple en cas&#xA;d’utilisateur de recherche plein texte.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;exemple-dutilisation&#34;&gt;Exemple d’utilisation&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Une simple fonction est fournie, avec des paramètres facultatifs, qui retourne&#xA;une valeur de type json :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;REPLACE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FUNCTION&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_qualstats_index_advisor&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;min_filter&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;DEFAULT&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;min_selectivity&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;DEFAULT&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;forbidden_am&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;DEFAULT&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;{}&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;RETURNS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Les noms de paramètres sont parlants :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;min_filter&lt;/code&gt;: combien de lignes le prédicat doit-il filtrer en moyenne pour&#xA;être pris en compte par la suggestion globale, par défaut &lt;strong&gt;1000&lt;/strong&gt; ;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;min_selectivity&lt;/code&gt;: quelle doit être la sélectivité moyenne d’un prédicat&#xA;pour qu’il soit pris en compte par la suggestion globale, par défaut&#xA;&lt;strong&gt;30%&lt;/strong&gt; ;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;forbidden_am&lt;/code&gt;: liste des méthodes d’accès aux index à ignorer.  Aucune par&#xA;défaut, bien que pour les version 9.6 et inférieures &lt;strong&gt;les index hash sont&#xA;ignoré en interne&lt;/strong&gt;, puisque ceux-ci ne sont sur que depuis la version 10.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Voici un exemple simple, tirés des tests de non régression de pg_qualstats :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pgqs&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;a&#39;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;generate_series&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id1&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id2&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id3&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;line &#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;generate_series&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_qualstats_reset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;meh&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;meh&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;meh&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;meh&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;meh&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adv&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;ILIKE&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;moh&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;COUNT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pgqs&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Et voici ce que la fonction retourne :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&#xA;  &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;json_array_elements&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;pg_qualstats_index_advisor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min_filter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;indexes&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&#xA;  &lt;span class=&#34;k&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;BY&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;COLLATE&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;C&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;                               &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;---------------------------------------------------------------&lt;/span&gt;&#xA; &lt;span class=&#34;nv&#34;&gt;&#34;CREATE INDEX ON public.adv USING btree (id1)&#34;&lt;/span&gt;&#xA; &lt;span class=&#34;nv&#34;&gt;&#34;CREATE INDEX ON public.adv USING btree (val, id1, id2, id3)&#34;&lt;/span&gt;&#xA; &lt;span class=&#34;nv&#34;&gt;&#34;CREATE INDEX ON public.pgqs USING btree (id)&#34;&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&#xA;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&#xA;  &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;json_array_elements&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;pg_qualstats_index_advisor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min_filter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;unoptimised&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&#xA;  &lt;span class=&#34;k&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;BY&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;COLLATE&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;C&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;        &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;-----------------&lt;/span&gt;&#xA; &lt;span class=&#34;nv&#34;&gt;&#34;adv.val ~~* ?&#34;&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;La &lt;a href=&#34;https://github.com/powa-team/pg_qualstats/&#34;&gt;version 2 de pg_qualstats&lt;/a&gt;&#xA;n’est pas encore disponible en version stable, mais n’hésitez pas à la tester&#xA;et &lt;a href=&#34;https://github.com/powa-team/pg_qualstats/issues&#34;&gt;rapporter tout problème que vous pourriez&#xA;rencontrer&lt;/a&gt; !&lt;/p&gt;&#xA;&#xA;    &lt;p&gt;&lt;a href=&#34;https://rjuju.github.io/postgresqlfr/2020/01/06/pg_qualstats-2-suggestion-index-globale.html&#34;&gt;pg qualstats 2: Suggestion d&#39;index globale&lt;/a&gt; was originally published by Julien Rouhaud at &lt;a href=&#34;https://rjuju.github.io&#34;&gt;rjuju&#39;s home&lt;/a&gt; on January 06, 2020.&lt;/p&gt;</content>
    <link href="https://rjuju.github.io/postgresqlfr/2020/01/06/pg_qualstats-2-suggestion-index-globale.html" rel="alternate"></link>
    <summary type="html"></summary>
    <author>
      <name>Julien Rouhaud</name>
    </author>
  </entry>
  <entry>
    <title>PoWA 4: Nouveau daemon powa-collector</title>
    <updated>2019-12-10T18:54:17Z</updated>
    <id>tag:rjuju.github.io,2019-12-10:/postgresqlfr/2019/12/10/powa-4-nouveau-powa-collector.html</id>
    <content type="html">&lt;p&gt;Cet article fait partie d’une série d’article sur &lt;a href=&#34;http://powa.readthedocs.io/&#34;&gt;la beta de PoWA&#xA;4&lt;/a&gt;, et décrit le nouveau &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/index.html&#34;&gt;daemon&#xA;powa-collector&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;nouveau-daemon-powa-collector&#34;&gt;Nouveau &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/index.html&#34;&gt;daemon powa-collector&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Ce daemon remplace le précédent &lt;em&gt;background worker&lt;/em&gt; lorsque le nouveau &lt;a href=&#34;https://powa.readthedocs.io/en/latest/remote_setup.html&#34;&gt;mode&#xA;remote&lt;/a&gt; est utilisé.&#xA;Il s’agit d’un simple daemon écrit en python, qui s’occupera de toutes les&#xA;étapes nécessaires pour effectuer des &lt;em&gt;snapshots distants&lt;/em&gt;.  Il est &lt;a href=&#34;https://pypi.org/project/powa-collector/&#34;&gt;disponible&#xA;sur pypi&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Comme je l’ai expliqué dans mon &lt;a href=&#34;/postgresql/2019/05/17/powa-4-with-remote-mode-beta-is-available.html&#34;&gt;précédent article introduistant PoWA 4&lt;/a&gt;, ce&#xA;daemon est nécessaire  pour la configuration d’un mode remote, en gardant cette&#xA;architecture à l’esprit :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/powa_4_remote.svg&#34;&gt;&lt;img src=&#34;/images/powa_4_remote.svg&#34; alt=&#34;Architecture de PoWA 4 en mode distant&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Sa configuration est très simple.  Il vous suffit tout simplement de renommer&#xA;le fichier &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa-collector.conf.sample&lt;/code&gt; fourni, et d’adapter &lt;a href=&#34;https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING&#34;&gt;l’URI de&#xA;connexion&lt;/a&gt;&#xA;pour décrire comment se connecter sur votre &lt;em&gt;serveur repository&lt;/em&gt; dédié, et&#xA;c’est fini.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Une configuration typique devrait ressembler à :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-conf&#34; data-lang=&#34;conf&#34;&gt;{&#xA;    &lt;span class=&#34;s2&#34;&gt;&#34;repository&#34;&lt;/span&gt;: {&#xA;        &lt;span class=&#34;s2&#34;&gt;&#34;dsn&#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&#34;postgresql://powa_user@server_dns:5432/powa&#34;&lt;/span&gt;,&#xA;    },&#xA;    &lt;span class=&#34;s2&#34;&gt;&#34;debug&#34;&lt;/span&gt;: &lt;span class=&#34;n&#34;&gt;true&lt;/span&gt;&#xA;}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;La liste des &lt;em&gt;serveur distants&lt;/em&gt;, leur configuration ainsi que tout le reste qui&#xA;est nécessaire pour le bon fonctionnement sera automatiquement récupéré depuis&#xA;le &lt;em&gt;serveur repository&lt;/em&gt; que vous ave déjà configuré.  Une fois démarré, il&#xA;démarrera un thread dédié par &lt;em&gt;serveur distant&lt;/em&gt; déclaré, et maintiendra une&#xA;&lt;strong&gt;connexion persistente&lt;/strong&gt; sur ce &lt;em&gt;serveur distant&lt;/em&gt;.  Chaque thread effectuera&#xA;un &lt;em&gt;snapshot distant&lt;/em&gt;, exportant les données sur le &lt;em&gt;serveur repository&lt;/em&gt; en&#xA;utilisant les nouvelles &lt;em&gt;fonctions sources&lt;/em&gt;.  Chaque thread ouvrira et fermera&#xA;une connexion sur le &lt;em&gt;serveur repository&lt;/em&gt; lors de l’exécution du &lt;em&gt;snapshot&#xA;distant&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Bien évidemment, ce daemon a besoin de pouvoir se connecter sur tous les&#xA;&lt;em&gt;serveurs distants&lt;/em&gt; déclarés ainsi que le &lt;em&gt;serveur repository&lt;/em&gt;.  La table&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_servers&lt;/code&gt;, qui stocke la liste des &lt;em&gt;serveurs distants&lt;/em&gt;, a un champ pour&#xA;stocker les nom d’utilisateur et mot de passe pour se connecter aux &lt;em&gt;serveur&#xA;distants&lt;/em&gt;.  Stocker un mot de passe en clair dans cette table est une hérésie,&#xA;si l’on considère l’aspect sécurité.  Ainsi, comme indiqué dans la&#xA;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/security.html#connection-on-remote-servers&#34;&gt;section sécurité de&#xA;PoWA&lt;/a&gt;,&#xA;vous pouve stocker un mot de passe NULL et &lt;a href=&#34;https://www.postgresql.org/docs/current/auth-methods.html&#34;&gt;utiliser à la place n’importe&#xA;laquelle des autres méthodes d’authentification supportées par la&#xA;libpq&lt;/a&gt; (fichier&#xA;.pgpass, certificat…).  C’est très fortement recommandé pour toute&#xA;installation sérieuse.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La connexion persistente sur le &lt;em&gt;serveur repository&lt;/em&gt; est utilisée pour&#xA;superviser la daemon :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;pour vérifier  que le daemon est bien démarré&lt;/li&gt;&#xA;  &lt;li&gt;pour communiquer au travers de l’UI en utilisant un &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/protocol.html&#34;&gt;protocole simple&lt;/a&gt;&#xA;afin d’effectuer des actions diverses (recharger la configuration, vérifier&#xA;le status d’un thread dédié à un &lt;em&gt;serveur distant&lt;/em&gt;…)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Il est à noter que vous pouvez également demander au daemon de recharger sa&#xA;configuration en envoyant un SIGHUP au processus du daemon.  Un rechargement&#xA;est nécessaire pour toute modification effectuée sur la liste des serveurs&#xA;distants (ajout ou suppression d’un &lt;em&gt;serveur distant&lt;/em&gt;, ou mise à jour d’un&#xA;existant).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Veuillez également noter que, par choix,&#xA;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/index.html&#34;&gt;powa-collector&lt;/a&gt;&#xA;n’effectuera pas de &lt;em&gt;snapshot local&lt;/em&gt;.  Si vous voulez utiliser PoWA pour le&#xA;&lt;em&gt;serveur repository&lt;/em&gt;, il vous faudra activer le &lt;em&gt;background worker&lt;/em&gt; original.&lt;/p&gt;&#xA;&#xA;&lt;h5 id=&#34;nouvelle-page-de-configuration&#34;&gt;Nouvelle page de configuration&lt;/h5&gt;&#xA;&#xA;&lt;p&gt;La page de configuration est maintenant modifiée pour donner toutes les&#xA;informations nécessaires sur le status du background worker, le &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/index.html&#34;&gt;powa-collector&#xA;daemon&lt;/a&gt;&#xA;(incluant tous ses threads dédiés) ainsi que la liste des &lt;em&gt;serveurs distants&lt;/em&gt;&#xA;déclarés.  Voici un exemple de cette nouvelle page racine de configuration :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/powa_4_configuration_page.png&#34;&gt;&lt;img src=&#34;/images/powa_4_configuration_page.png&#34; alt=&#34;Nouvelle page de&#xA;configuration&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Si le &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/index.html&#34;&gt;daemon&#xA;powa-collector&lt;/a&gt;&#xA;est utilisé, le status de chaque serveur distant sera récupéré en utilisant le&#xA;protocole de communication.  Si le collecteur rencontre des erreurs (lors de la&#xA;connexion à un &lt;em&gt;serveur distant&lt;/em&gt;, durant un &lt;em&gt;snapshot&lt;/em&gt; par exemple), celles-ci&#xA;seront également affichées ici.  À noter également que ces erreurs seront&#xA;également affichées en haut de chaque page de toutes les pages de l’UI, afin&#xA;d’être sûr de ne pas les rater.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;De plus, la section configuration a maintenant une hiérarchie, et vous pourrez&#xA;voir la liste des extensions ainsi que la configuration actuelle de PostgreSQL&#xA;pour le serveur &lt;strong&gt;local&lt;/strong&gt; ou &lt;strong&gt;distant&lt;/strong&gt; en cliquant sur le serveur de votre&#xA;choix!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Il y a également un nouveau bouton &lt;strong&gt;Reload collector&lt;/strong&gt; sur le bandeau&#xA;d’en-tête qui, comme on pourrait s’y attendre, demandera au collecteur de&#xA;recharger sa configuration.  Cela peut être utile si vous avez déclarés de&#xA;nouveaux serveurs mais n’ave pas d’accès au serveur sur lequel le collecteur&#xA;s’exécute.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Cette article est le dernier de la séurie concernant la nouvelle version de&#xA;PoWA.  Il est toujours en beta, n’hésitez donc pas à le tester, &lt;a href=&#34;https://powa.readthedocs.io/en/latest/support.html#support&#34;&gt;rapporter&#xA;tout bug rencontré&lt;/a&gt;&#xA;ou donner tout autre retour!&lt;/p&gt;&#xA;&#xA;    &lt;p&gt;&lt;a href=&#34;https://rjuju.github.io/postgresqlfr/2019/12/10/powa-4-nouveau-powa-collector.html&#34;&gt;PoWA 4: Nouveau daemon powa-collector&lt;/a&gt; was originally published by Julien Rouhaud at &lt;a href=&#34;https://rjuju.github.io&#34;&gt;rjuju&#39;s home&lt;/a&gt; on December 10, 2019.&lt;/p&gt;</content>
    <link href="https://rjuju.github.io/postgresqlfr/2019/12/10/powa-4-nouveau-powa-collector.html" rel="alternate"></link>
    <summary type="html"></summary>
    <author>
      <name>Julien Rouhaud</name>
    </author>
  </entry>
  <entry>
    <title>PoWA 4: nouveautés dans powa-archivist !</title>
    <updated>2019-06-05T14:26:17Z</updated>
    <id>tag:rjuju.github.io,2019-06-05:/postgresqlfr/2019/06/05/powa-4-nouveaute-dans-powa-archivist.html</id>
    <content type="html">&lt;p&gt;Cet article fait partie d’une série d’article sur &lt;a href=&#34;http://powa.readthedocs.io/&#34;&gt;la beta de PoWA&#xA;4&lt;/a&gt;, et décrit les changements présents dans&#xA;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-archivist/index.html&#34;&gt;powa-archivist&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Pour plus d’information sur cette version 4, vous pouvez consulter &lt;a href=&#34;/postgresqlfr/2019/05/17/powa-4-avec-mode-remote-disponible-en-beta.html&#34;&gt;l’article&#xA;de présentation général&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;aperçu-rapide&#34;&gt;Aperçu rapide&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Tout d’abord, il faut savoir qu’il n’y a pas d’upgrade possible depuis la v3&#xA;vers la v4, il est donc nécessaire d’effectuer un &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;DROP EXTENSION powa&lt;/code&gt; si vous&#xA;utilisiez déjà PoWA sur vos serveurs.  Cela est du au fait que la v4 apporte&#xA;&lt;strong&gt;de très nombreux&lt;/strong&gt; changements dans la partie SQL de l’extension, ce qui en&#xA;fait le changement le plus significatif dans la suite PoWA pour cette nouvelle&#xA;version.  Au moment où j’écris cet article, la quantité de changements apportés&#xA;dans cette extension est :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt; CHANGELOG.md       |   14 +&#xA; powa--4.0.0dev.sql | 2075 +++++++++++++++++++++-------&#xA; powa.c             |   44 +-&#xA; 3 files changed, 1629 insertions(+), 504 deletions(-)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;L’absence d’upgrade ne devrait pas être un problème en pratique.  PoWA est un&#xA;outil pour analyser les performances, il est fait pour avoir des données avec&#xA;une grande précision mais un historique très limité.  Si vous cherchez une&#xA;solution de supervision généraliste pour conserver des mois de données, PoWA&#xA;n’est définitivement pas l’outil qu’il vous faut.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;configurer-la-liste-des-serveurs-distants&#34;&gt;Configurer la liste des &lt;em&gt;serveurs distants&lt;/em&gt;&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;En ce qui concerne les changements à proprement parler, le premier petit&#xA;changement est que le &lt;a href=&#34;https://www.postgresql.org/docs/current/bgworker.html&#34;&gt;background&#xA;worker&lt;/a&gt; n’est plus&#xA;nécessaire pour le fonctionnement de powa-archivist, car il n’est pas utilisé&#xA;pour le mode distant.  Cela signifie qu’un redémarrage de PostgreSQL n’est plus&#xA;nécessaire pour installer PoWA.  Bien évidemment, un redémarrage est toujours&#xA;nécessaire si vous souhaitez utiliser le mode local, en utilisant le background&#xA;worker, or si vous voulez installer des extensions additionelles qui&#xA;nécessitent elles-même un redémarrage.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Ensuite, comme PoWA requiert un peu de configuration (fréquence des snapshot,&#xA;rétention des données et ainsi de suite), certaines nouvelles tables sont&#xA;ajouter pour permettre de configurer tout ça.  La nouvelle table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_servers&lt;/code&gt;&#xA;stocke la configuration de toutes les instances distantes dont les données&#xA;doivent être stockées sur cette instance.  Cette &lt;em&gt;instance PoWA locale&lt;/em&gt; est&#xA;appelée un &lt;strong&gt;serveur repository&lt;/strong&gt; (qui devrait typiquement être dédiée à&#xA;stocker des données PoWA), en opposition aux &lt;strong&gt;instances distantes&lt;/strong&gt; qui sont&#xA;les instances que vous voulez monitorer.  Le contenu de cette table est tout ce&#xA;qu’il y a de plus simple :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;powa_servers&lt;/span&gt;&#xA;                              &lt;span class=&#34;k&#34;&gt;Table&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;public.powa_servers&#34;&lt;/span&gt;&#xA;  &lt;span class=&#34;k&#34;&gt;Column&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;k&#34;&gt;Type&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Collation&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;                 &lt;span class=&#34;k&#34;&gt;Default&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;-----------+----------+-----------+----------+------------------------------------------&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;            &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nextval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;powa_servers_id_seq&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;regclass&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;hostname&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;k&#34;&gt;alias&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;username&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;password&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;dbname&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;frequency&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;300&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;powa_coalesce&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;retention&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;interval&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;1 day&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;interval&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Si vous avez déjà utilisé PoWA, vous devriez reconnaître la plupart des options&#xA;de configuration qui sont maintenant stockées ici.  Les nouvelles options sont&#xA;utilisées pour décrire comment se connecter aux &lt;em&gt;instances distances&lt;/em&gt;, et&#xA;peuvent fournir un alias à afficher sur l’UI.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Vous avez également probablement remarqué une colonne &lt;strong&gt;password&lt;/strong&gt;.  Stocker un&#xA;mot de passe en clair dans cette table est une hérésie pour n’importe qui&#xA;désirant un minimum de sécurité.  Ainsi, comme mentionné dans la &lt;a href=&#34;https://powa.readthedocs.io/en/latest/security.html#connection-on-remote-servers&#34;&gt;section&#xA;sécurité de la documentation de PoWA&#xA;&lt;/a&gt;,&#xA;vous pouvez stocker NULL pour le champ password et à la place utiliser&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/current/auth-methods.html&#34;&gt;n’importe laquelle des autres méthodes d’authentification supportée par la&#xA;libpq&lt;/a&gt;&#xA;(fichier .pgpass, certificat…).  Une authentification plus sécurisée est&#xA;chaudement recommandée pour toute installation sérieuse.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Une autre table, la table &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_snapshot_metas&lt;/code&gt;, est également ajoutée pour&#xA;stocker quelques métadonnées concernant les informations de snapshot pour&#xA;chaque &lt;em&gt;serveur distant&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;                                   &lt;span class=&#34;k&#34;&gt;Table&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;public.powa_snapshot_metas&#34;&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;Column&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;k&#34;&gt;Type&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Collation&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;                &lt;span class=&#34;k&#34;&gt;Default&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;--------------+--------------------------+-----------+----------+---------------------------------------&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;srvid&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;                  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;coalesce_seq&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bigint&lt;/span&gt;                   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;snapts&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;zone&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;-infinity&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;zone&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;aggts&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;zone&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;-infinity&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;zone&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;purgets&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;zone&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;-infinity&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;zone&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;errors&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Il s’agit tout simplement d’un compteur pour compter le nombre de snapshots&#xA;effectués, un timestamp pour chaque type d’événement survenu (snapshot,&#xA;aggrégation et purge) et un tableau de chaîne de caractères pour stocker toute&#xA;erreur survenant durant le snapshot, afin que l’UI pour l’afficher.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;api-sql-pour-configurer-les-serveurs-distants&#34;&gt;API SQL pour configurer les &lt;em&gt;serveurs distants&lt;/em&gt;&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Bien que ces tables soient très simples, une &lt;a href=&#34;https://powa.readthedocs.io/en/latest/remote_setup.html#configure-powa-and-stats-extensions-on-each-remote-server&#34;&gt;API SQL basique est disponible&#xA;pour déclarer de nouveaux serveurs et les&#xA;configurer&lt;/a&gt;.&#xA;6 fonctions de bases sont disponibles :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_register_server()&lt;/code&gt;, pour déclarer un nouveau &lt;em&gt;servuer distant&lt;/em&gt;, ainsi&#xA;que la liste des extensions qui y sont disponibles&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_configure_server()&lt;/code&gt; pour mettre à jour un des paramètres pour le&#xA;&lt;em&gt;serveur distant&lt;/em&gt; spécifié (en utilisant un paramètre JSON, où la clé est&#xA;le nom du paramètre à changer et la valeur la nouvelle valeur à utiliser)&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_deactivate_server()&lt;/code&gt; pour désactiver les snapshots pour le &lt;em&gt;serveur&#xA;distant&lt;/em&gt; spécifiqué (ce qui concrètement positionnera le paramètre&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;frequency&lt;/code&gt; à &lt;strong&gt;-1&lt;/strong&gt;)&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_delete_and_purge_server()&lt;/code&gt; pour supprimer le &lt;em&gt;serveur distant&lt;/em&gt;&#xA;spécifié de la liste des serveurs et supprimer toutes les données associées&#xA;aux snapshots&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_activate_extension()&lt;/code&gt;, pour déclarer qu’une nouvelle extension est&#xA;disponible sur le &lt;em&gt;serveur distant&lt;/em&gt; spécifié&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_deactivate_extension()&lt;/code&gt;, pour spécifier qu’une extension n’est plus&#xA;disponible sur le &lt;em&gt;serveur distant&lt;/em&gt; spécifié&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Toute action plus compliquée que ça devra être effectuée en utilisant des&#xA;requêtes SQL.  Heureusement, il ne devrait pas y avoir beaucoup d’autres&#xA;besoins, et les tables sont vraiment très simple donc cela ne devrait pas poser&#xA;de soucis.  &lt;a href=&#34;https://github.com/powa-team/powa-archivist/issues&#34;&gt;N’hésitez cependant pas à demander de nouvelles&#xA;fonctions&lt;/a&gt; si vous aviez&#xA;d’autres besoins.  Veuillez également noter que l’UI ne vous permet pas&#xA;d’appeler ces fonctions, puisque celle-ci est pour le moment &lt;strong&gt;entièrement en&#xA;lecture seule&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;effectuer-des-snapshots-distants&#34;&gt;Effectuer des &lt;em&gt;snapshots distants&lt;/em&gt;&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Puisque les métriques sont maintenant stockées sur une instance PostgreSQL&#xA;différente, nous avons énormément changé la façon dont les &lt;em&gt;snapshots&lt;/em&gt;&#xA;(récupérer les données fournies par une &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/stats_extensions/index.html&#34;&gt;extensions&#xA;statistique&lt;/a&gt;&#xA;et les stockées dans le catalogue PoWA &lt;a href=&#34;/postgresqlfr/2019/04/06/minimiser-le-surcout-de-stockage-par-ligne.html&#34;&gt;de manière à optimiser le stockage&lt;/a&gt;) sont&#xA;effectués.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La liste de toutes les extensions statistiques, ou &lt;em&gt;sources de données&lt;/em&gt;, qui&#xA;sont disponibles sur un &lt;strong&gt;serveur&lt;/strong&gt; (soit &lt;em&gt;distant&lt;/em&gt; soit &lt;em&gt;local&lt;/em&gt;) et pour&#xA;lesquelles un &lt;em&gt;snapshot&lt;/em&gt; devrait être effectué est stockée dans une table&#xA;appelée &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_functions&lt;/code&gt;:&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;               &lt;span class=&#34;k&#34;&gt;Table&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;public.powa_functions&#34;&lt;/span&gt;&#xA;     &lt;span class=&#34;k&#34;&gt;Column&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;Type&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Collation&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Default&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;----------------+---------+-----------+----------+---------&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;srvid&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;module&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;k&#34;&gt;operation&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;function_name&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;query_source&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;text&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;added_manually&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;enabled&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;priority&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;numeric&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Un nouveau champ &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;query_source&lt;/code&gt; a été rajouté.  Celui-ci fournit le nom de la&#xA;&lt;em&gt;fonction source&lt;/em&gt;, nécessaire pour la compatibilité d’une &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/stats_extensions/index.html&#34;&gt;extension&#xA;statistique&lt;/a&gt;&#xA;avec les snapshots distants.  Cette fonction est utilisée pour exporter les&#xA;compteurs fournis par cette extension sur un serveur différent, dans une &lt;em&gt;table&#xA;transitoire&lt;/em&gt; dédiée.  La fonction de &lt;em&gt;snapshot&lt;/em&gt; effectuera alors le &lt;em&gt;snapshot&lt;/em&gt;&#xA;en utilisant automatiquement ces données exportées plutôt que celles fournies&#xA;par l’extension statististique locale quand le mode distant est utilisé.  Il&#xA;est à noter que l’export de ces compteurs ainsi que le snapshot distant est&#xA;effectué automatiquement par le nouveau &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/index.html&#34;&gt;daemon&#xA;powa-collector&lt;/a&gt;&#xA;que je présenterai dans un autre article.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Voici un exemple montant comment PoWA effectue un &lt;em&gt;snapshot distant&lt;/em&gt; d’une&#xA;liste de base données.  Comme vous allez le voir, c’est très simple ce qui&#xA;signifie qu’il est également très simple d’ajouter cette même compatibilité&#xA;pour une nouvelle extension statistique.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La &lt;em&gt;table transitoire&lt;/em&gt;:&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;   &lt;span class=&#34;n&#34;&gt;Unlogged&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;public.powa_databases_src_tmp&#34;&lt;/span&gt;&#xA; &lt;span class=&#34;k&#34;&gt;Column&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;Type&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Collation&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Default&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;---------+---------+-----------+----------+---------&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;srvid&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;oid&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;oid&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;datname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Pour de meilleurs performances, toutes les &lt;em&gt;tables transitoires&lt;/em&gt; sont &lt;strong&gt;non&#xA;journalisées (unlogged)&lt;/strong&gt;, puisque leur contenu n’est nécessaire que durant un&#xA;&lt;em&gt;snapshot&lt;/em&gt; et sont supprimées juste après.  Dans cet examlple, la &lt;em&gt;table&#xA;transitoire&lt;/em&gt; ne stocke que l’identifiant du serveur distant correspondant à ces&#xA;données, l’oid ainsi que le nom de chacune des bases de données présentes sur&#xA;le &lt;em&gt;serveur distant&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Et la &lt;em&gt;fonction source&lt;/em&gt; :&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;REPLACE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FUNCTION&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;powa_databases_src&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_srvid&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;OUT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;oid&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;oid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;OUT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datname&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA; &lt;span class=&#34;k&#34;&gt;RETURNS&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SETOF&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;record&lt;/span&gt;&#xA; &lt;span class=&#34;k&#34;&gt;LANGUAGE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;plpgsql&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;BEGIN&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;IF&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_srvid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;THEN&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;RETURN&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;QUERY&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;oid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datname&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_database&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;ELSE&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;RETURN&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;QUERY&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;oid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datname&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;powa_databases_src_tmp&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;srvid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_srvid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;IF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Cette fonction retourne simplement le contenu de &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_database&lt;/code&gt; si les données&#xA;locales sont demandées (l’identifiant de serveur &lt;strong&gt;0&lt;/strong&gt; est toujours le serveur&#xA;local), ou alors le contenu de la &lt;em&gt;table transitoire&lt;/em&gt; pour le serveur distant&#xA;spécifié.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La &lt;em&gt;fonction de snapshot&lt;/em&gt; peut alors facilement effectuer n’importe quel&#xA;traitement avec ces données pour le &lt;em&gt;serveur distant&lt;/em&gt; voulu.  Dans le cas de la&#xA;fonction &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;powa_databases_snapshot()&lt;/code&gt;, il s’agit simplement de synchroniser la&#xA;liste des bases de données, et de stocker le timestamp de suppression si une&#xA;base de données qui existait précédemment n’est plus listée.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Pour plus de détails, vous pouvez consulter la documentation concernant&#xA;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-archivist/development.html&#34;&gt;l’ajout d’une source de données dans&#xA;PoWA&lt;/a&gt;,&#xA;qui a été mise à jour pour les spécificités de la version 4.&lt;/p&gt;&#xA;&#xA;    &lt;p&gt;&lt;a href=&#34;https://rjuju.github.io/postgresqlfr/2019/06/05/powa-4-nouveaute-dans-powa-archivist.html&#34;&gt;PoWA 4: nouveautés dans powa-archivist !&lt;/a&gt; was originally published by Julien Rouhaud at &lt;a href=&#34;https://rjuju.github.io&#34;&gt;rjuju&#39;s home&lt;/a&gt; on June 05, 2019.&lt;/p&gt;</content>
    <link href="https://rjuju.github.io/postgresqlfr/2019/06/05/powa-4-nouveaute-dans-powa-archivist.html" rel="alternate"></link>
    <summary type="html"></summary>
    <author>
      <name>Julien Rouhaud</name>
    </author>
  </entry>
  <entry>
    <title>PoWA 4 apporte un mode remote, disponible en beta !</title>
    <updated>2019-05-17T11:04:17Z</updated>
    <id>tag:rjuju.github.io,2019-05-17:/postgresqlfr/2019/05/17/powa-4-avec-mode-remote-disponible-en-beta.html</id>
    <content type="html">&lt;p&gt;&lt;a href=&#34;http://powa.readthedocs.io/&#34;&gt;PoWA 4&lt;/a&gt; est disponible en beta.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;nouveau-mode-remote-&#34;&gt;Nouveau mode remote !&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Le &lt;a href=&#34;https://powa.readthedocs.io/en/latest/remote_setup.html&#34;&gt;nouveau mode remote&lt;/a&gt;&#xA;est la plus grosse fonctionnalité ajoutée dans PoWA 4, bien qu’il y ait eu&#xA;d’autres améliorations.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Je vais décrire ici ce que ce nouveau mode implique ainsi que ce qui a changé&#xA;sur l’&lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-web/index.html&#34;&gt;UI&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Si de plus amples détails sur le reste des changements apportés dans PoWA 4&#xA;vous intéresse, je publierai bientôt d’autres articles sur le sujet.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Pour les plus pressés, n’hésitez pas à aller directement sur la &lt;a href=&#34;https://dev-powa.anayrat.info/&#34;&gt;démo v4 de&#xA;PoWA&lt;/a&gt;, très gentiment hébergée par &lt;a href=&#34;http://blog.anayrat.info/&#34;&gt;Adrien&#xA;Nayrat&lt;/a&gt;.  Aucun authentification n’est requise,&#xA;cliquez simplement sur “Login”.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;pourquoi-un-mode-remote-est-il-important&#34;&gt;Pourquoi un mode remote est-il important&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Cette fonctionnalité a probablement été la plus fréquemment demandée depuis que&#xA;PoWA a été publié, en 2014.  Et c’est pour de bonnes raisons, car un mode local&#xA;a quelques inconvénients.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Tout d’abord, voyons comment se présentait l’architecture avec les versions 3&#xA;et antérieures.  Imaginons une instance contenant 2 bases de données (db1 et&#xA;db2), ainsi qu’&lt;strong&gt;une base de données dédiée à PoWA&lt;/strong&gt;.  Cette base de données&#xA;dédiée contient à la fois les &lt;em&gt;extensions statistiques&lt;/em&gt; nécessaires pour&#xA;récupérer compteurs de performances actuels ainsi que pour &lt;strong&gt;les stocker&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/powa_4_local.svg&#34;&gt;&lt;img src=&#34;/images/powa_4_local.svg&#34; alt=&#34;Architecture en mode local&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Un &lt;em&gt;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-archivist/configuration.html#background-worker-configuration&#34;&gt;background&#xA;worker&lt;/a&gt;&lt;/em&gt;&#xA;est démarré par PoWA, qui est responsable d’effectuer des &lt;em&gt;snapshots&lt;/em&gt; et de les&#xA;stocker dans la base powa dédiée à intervalle réguliers.  Ensuite, en utilisant&#xA;powa-web, vous pouvez consulter l’activité de n’importe laquelle des bases de&#xA;données &lt;strong&gt;locales&lt;/strong&gt; en effectuant des requêtes sur les données stockées dans la&#xA;base dédié, et potentiellement en se connectant sur l’une des autres bases de&#xA;données locales lorsque les données complètes sont nécessaires, par exemple&#xA;lorsque l’outil de suggestion d’index est utilisé.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Avec la version 4, l’architecture avec une configuration distante change de&#xA;manière significative:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/powa_4_remote.svg&#34;&gt;&lt;img src=&#34;/images/powa_4_remote.svg&#34; alt=&#34;Architecture en mode distant&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Vous pouvez voir qu’une base de donnée powa dédiée est toujours nécessaire,&#xA;mais &lt;strong&gt;uniquement pour les extensions statistiques&lt;/strong&gt;.  Les données sont&#xA;maintenant stockées sur une instance différente.  Ensuite, le &lt;em&gt;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-archivist/configuration.html#background-worker-configuration&#34;&gt;background&#xA;worker&lt;/a&gt;&lt;/em&gt;&#xA;est remplacé par un &lt;strong&gt;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/index.html&#34;&gt;nouveau daemon&#xA;collecteur&lt;/a&gt;&lt;/strong&gt;,&#xA;qui lit les métriques de performance depuis les &lt;em&gt;serveurs distants&lt;/em&gt;, et les&#xA;stocke sur le &lt;em&gt;serveur repository&lt;/em&gt; dédié.  Powa-web pourra présenter les&#xA;données en se connectant sur le &lt;em&gt;serveur repository&lt;/em&gt;, ainsi que sur les&#xA;&lt;strong&gt;serveurs distants&lt;/strong&gt; lorsque des données complètes sont nécessaires.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;En résumé, avec le nouveau mode distant ajouté dans cette version 4&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;un redémarrage de PostgreSQL n’est plus nécessaire pour installer&#xA;powa-archivist&lt;/li&gt;&#xA;  &lt;li&gt;il n’y a plus de surcoût du au fait de stocker et requêter les données sur&#xA;le même serveur PostgreSQL que vos serveurs de productions (il y a toujours&#xA;certaines partie de l’UI qui nécessitent d’effectuer des requêtes sur le&#xA;serveur d’origine, par exemple pour montrer des plans avec EXPLAIN, mais le&#xA;surcoût est négligeable)&lt;/li&gt;&#xA;  &lt;li&gt;il est maintenant possible d’utiliser PoWA sur un &lt;strong&gt;serveur en&#xA;hot-standby&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;L’UI vous accueillera donc maintenant avec une page initiale afin de choisir&#xA;lequel des serveurs stockés sur la base de données cible vous voulez&#xA;travailler :&#xA;&lt;a href=&#34;/images/powa_4_all_servers.png&#34;&gt;&lt;img src=&#34;/images/powa_4_all_servers.png&#34; alt=&#34;Choix des serveurs&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La principale raison pour laquelle il a fallu tellement de temps pour apporter&#xA;ce mode distant est parce que cela apporte beaucoup de complexité, nécessitant&#xA;une réécriture majeure de PoWA.  Nous voulions également ajouter d’abord&#xA;d’autres fonctionnalités, comme la &lt;strong&gt;suggestion globale d’index&lt;/strong&gt;, avec une&#xA;&lt;strong&gt;validation grâce à &lt;a href=&#34;http://hypopg.readthedocs.io/&#34;&gt;hypopg&lt;/a&gt;&lt;/strong&gt; introduit avec&#xA;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/releases/v3.0.0.html&#34;&gt;PoWA 3&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;changements-dans-powa-web&#34;&gt;Changements dans &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-web/index.html&#34;&gt;powa-web&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;L’&lt;em&gt;interface graphique&lt;/em&gt; est le composant qui a le plus de changements visibles&#xA;dans cette version 4.  Voici les plus changements les plus importants.&lt;/p&gt;&#xA;&#xA;&lt;h5 id=&#34;compatibilité-avec-le-mode-distant&#34;&gt;Compatibilité avec le mode distant&lt;/h5&gt;&#xA;&#xA;&lt;p&gt;Le changement le plus important est bien évidemment le support pour le &lt;a href=&#34;https://powa.readthedocs.io/en/latest/remote_setup.html&#34;&gt;nouveau&#xA;mode remote&lt;/a&gt;.  En&#xA;conséquence, la première page affichée est maintenant une page de &lt;strong&gt;sélection&#xA;de serveur&lt;/strong&gt;, affichant tous les &lt;em&gt;serveurs distants&lt;/em&gt; enregistrés.  Après avoir&#xA;choisi le &lt;em&gt;serveur distant&lt;/em&gt; voulu (ou le &lt;em&gt;serveur local&lt;/em&gt; si vous n’utilisez pas&#xA;le mode distant), toutes les autres pages seront similaires à celles&#xA;disponibles jusqu’à la version 3, mais afficheront les données pour un &lt;em&gt;serveur&#xA;distant&lt;/em&gt; spécifique uniquement, et bien entendu en récupérant les données&#xA;depuis la &lt;strong&gt;base de données repository&lt;/strong&gt;, avec en plus de nouvelles&#xA;informations décrites ci-dessous.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Veuillez notez que puisque les données sont maintenant stockées sur un &lt;em&gt;serveur&#xA;repository&lt;/em&gt; dédié quand le mode remote est utilisé, la majorité de l’UI est&#xA;utilisable sans se connecter au &lt;em&gt;serveur distant&lt;/em&gt; sélectionné.  Toutefois,&#xA;powa-web nécessite toujours de pouvoir se connecter sur le &lt;em&gt;serveur distant&lt;/em&gt;&#xA;quand les données originales sont nécessaires (par exemple, pour la suggestion&#xA;d’index ou pour montrer des plans avec &lt;strong&gt;EXPLAIN&lt;/strong&gt;).  Les &lt;a href=&#34;https://powa.readthedocs.io/en/latest/security.html#connection-on-remote-servers&#34;&gt;mêmes considérations&#xA;et possibilités concernant&#xA;l’authentification&lt;/a&gt;&#xA;que pour le nouveau &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/powa-collector/index.html&#34;&gt;daemon powa-collector&#xA;&lt;/a&gt;&#xA;(qui sera décrit dans un prochain article) s’appliquent ici.&lt;/p&gt;&#xA;&#xA;&lt;h5 id=&#34;pg_track_settings-support&#34;&gt;&lt;a href=&#34;https://github.com/rjuju/pg_track_settings/&#34;&gt;pg_track_settings&lt;/a&gt; support&lt;/h5&gt;&#xA;&#xA;&lt;p&gt;Quand cette extension est correctement configurée, un nouveau widget timeline&#xA;apparaîtra, placé entre chaque graph et son aperçu, affichant différents types&#xA;de changements enregistrés si ceux-ci ont été détectés sur l’intervalle de&#xA;temps sélectionné.  Sur les pages par base de données et par requête, la liste&#xA;sera également filtrée en fonction de la base de données sélectionnée.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;La même timeline sera affichée sur chacun des graphs de chacune des pages, afin&#xA;de facilement vérifier si ces changements ont eu un impact visible en utilisant&#xA;les différents graphs.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Veuillez noter que les détails des changements sont affichés au survol de la&#xA;souris.  Vous pouvez également cliquer sur n’importe lequel des événements de&#xA;la timeline pour figer l’affichage, et tracer une ligne verticale sur le graph&#xA;associé.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Voici un exemple d’un tel changement de configuration en action :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/pg_track_settings_powa4.png&#34;&gt;&lt;img src=&#34;/images/pg_track_settings_powa4.png&#34; alt=&#34;Changements de configuration détectés&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Veuillez également noter qu’il est nécessaire d’avoir au minimum la version&#xA;2.0.0 de &lt;a href=&#34;https://github.com/rjuju/pg_track_settings/&#34;&gt;pg_track_settings&lt;/a&gt;, et&#xA;que l’extension doit être installée &lt;strong&gt;à la fois sur les &lt;em&gt;serveurs distants&lt;/em&gt;&#xA;ainsi que sur le &lt;em&gt;serveur repository&lt;/em&gt;.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;h5 id=&#34;nouveaux-graphs-disponibles&#34;&gt;Nouveaux graphs disponibles&lt;/h5&gt;&#xA;&#xA;&lt;p&gt;Quand&#xA;&lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/stats_extensions/pg_stat_kcache.html&#34;&gt;pg_stat_kcache&lt;/a&gt;&#xA;est configuré, ses informations n’étaient auparavant affichées que sur la page&#xA;par requête.  Les informations sont maintenant également affichées sur les&#xA;pages par serveur et par base, dans deux nouveaux graphs :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;dans le graph &lt;strong&gt;Block Access&lt;/strong&gt;, où les métriques &lt;strong&gt;OS cache&lt;/strong&gt; et &lt;strong&gt;disk&#xA;read&lt;/strong&gt; remplaceront la métrique &lt;strong&gt;read&lt;/strong&gt;&lt;/li&gt;&#xA;  &lt;li&gt;dans un nouveau graph &lt;strong&gt;System Resources&lt;/strong&gt; (qui est également ajouté dans&#xA;la page &lt;em&gt;par requête&lt;/em&gt;), montrant les &lt;a href=&#34;/postgresql/2018/07/17/pg_stat_kcache-2-1-is-out.html&#34;&gt;metrics ajoutées dans pg_stat_kcache&#xA;2.1&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Voici un example de ce nouveau graph &lt;strong&gt;System Resources&lt;/strong&gt; :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/pg_stat_kcache_system_resources_powa4.png&#34;&gt;&lt;img src=&#34;/images/pg_stat_kcache_system_resources_powa4.png&#34; alt=&#34;Ressources système&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Il y avait également un graph &lt;strong&gt;Wait Events&lt;/strong&gt; (disponible quand &lt;a href=&#34;https://powa.readthedocs.io/en/v4/components/stats_extensions/pg_wait_sampling.html&#34;&gt;l’extension&#xA;pg_wait_sampling&lt;/a&gt;&#xA;est configuée) disponible uniquement sur la page par requête.  Ce graph est&#xA;maintenant disponible sur les pages par serveur et par base également.&lt;/p&gt;&#xA;&#xA;&lt;h5 id=&#34;documentation-des-métriques-et-liens-vers-la-documentation&#34;&gt;Documentation des métriques et liens vers la documentation&lt;/h5&gt;&#xA;&#xA;&lt;p&gt;Certaines métriques affichées sur l’interface sont assez parlante, mais&#xA;certaines autres peuvent être un peu obscures.  Jusqu’à maintenant, il n’y&#xA;avait malheureusement aucune documentation pour les métriques.  Le problème est&#xA;maintenant réglé, et tous les graphs ont une &lt;em&gt;icône d’information&lt;/em&gt;, qui&#xA;affichent une description des métriques utilisée dans le graph au survol de la&#xA;souris.  Certains graphs incluent également un lien vers la &lt;a href=&#34;https://powa.readthedocs.io/en/latest/components/stats_extensions/index.html&#34;&gt;documentation PoWA&#xA;de extension&#xA;statistiques&lt;/a&gt;&#xA;pour les utilisateurs qui désirent en apprendre plus à leur sujet.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Voici un exemple :&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/images/powa_4_metrics_doc.png&#34;&gt;&lt;img src=&#34;/images/powa_4_metrics_doc.png&#34; alt=&#34;Documentation des métriques&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;h5 id=&#34;et-des-correctifs-de-bugs-divers&#34;&gt;Et des correctifs de bugs divers&lt;/h5&gt;&#xA;&#xA;&lt;p&gt;Certains problèmes de longues dates ont également été rapportés :&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;la boîte affichée au survol d’un graph montant les valeurs des métriques&#xA;avait une position verticale incorrecte&lt;/li&gt;&#xA;  &lt;li&gt;la sélection temporelle en utilisant l’aperçu des graphs ne montrait pas un&#xA;aperçu correct après avoir appliqué la sélection&lt;/li&gt;&#xA;  &lt;li&gt;les erreurs lors de la création d’index hypothétiques ou dans certains cas&#xA;leur affichage n’était pas correctement gérés sur plusieurs pages&lt;/li&gt;&#xA;  &lt;li&gt;les filtres des tableaux n’était pas réappliqués quand l’intervalle de&#xA;temps sélectionné était changé&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Si un de ces problèmes vous a un jour posé problème, vous serez ravi&#xA;d’apprendre qu’ils sont maintenant tous corrigés !&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Cette 4ème version de PoWA représente un temps de développement très important,&#xA;de nombreuses améliorations sur la documentation et beaucoup de tests.  Nous&#xA;somme maintenant assez satisfaits, mais il est possible que nous ayons ratés&#xA;certains bugs.  Si vous vous intéressez à ce projet, j’espère que vous&#xA;essaierez de tester cette beta, et si besoin n’hésitez pas à &lt;a href=&#34;https://powa.readthedocs.io/en/latest/support.html#support&#34;&gt;nous remonter un&#xA;bug&lt;/a&gt;!&lt;/p&gt;&#xA;&#xA;    &lt;p&gt;&lt;a href=&#34;https://rjuju.github.io/postgresqlfr/2019/05/17/powa-4-avec-mode-remote-disponible-en-beta.html&#34;&gt;PoWA 4 apporte un mode remote, disponible en beta !&lt;/a&gt; was originally published by Julien Rouhaud at &lt;a href=&#34;https://rjuju.github.io&#34;&gt;rjuju&#39;s home&lt;/a&gt; on May 17, 2019.&lt;/p&gt;</content>
    <link href="https://rjuju.github.io/postgresqlfr/2019/05/17/powa-4-avec-mode-remote-disponible-en-beta.html" rel="alternate"></link>
    <summary type="html"></summary>
    <author>
      <name>Julien Rouhaud</name>
    </author>
  </entry>
  <entry>
    <title>Nouveauté pg12: Statistiques sur les erreurs de checkums</title>
    <updated>2019-04-18T11:02:26Z</updated>
    <id>tag:rjuju.github.io,2019-04-18:/postgresqlfr/2019/04/18/nouveau-dans-pg12-statistiques-erreurs-checksums.html</id>
    <content type="html">&lt;h3 id=&#34;data-checksums&#34;&gt;Data checksums&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Ajoutés dans &lt;a href=&#34;https://git.postgresql.org/gitweb/?p=postgresql.git;a=commitdiff;h=96ef3b8ff1c&#34;&gt;PostgreSQL&#xA;9.3&lt;/a&gt;,&#xA;les &lt;a href=&#34;https://www.postgresql.org/docs/current/app-initdb.html#APP-INITDB-DATA-CHECKSUMS&#34;&gt;data&#xA;checksums&lt;/a&gt;&#xA;peuvent aider à détecter les corruptions de données survenant sur votre&#xA;stockage.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Les checksums sont activés si l’instance a été initialisée en utilisant &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;initdb&#xA;--data-checksums&lt;/code&gt; (ce qui n’est pas le comportement par défaut), ou s’ils ont&#xA;été activés après en utilisant la nouvelle utilitaire&#xA;activated afterwards with the new&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/devel/app-pgchecksums.html&#34;&gt;pg_checksums&lt;/a&gt;&#xA;également &lt;a href=&#34;https://git.postgresql.org/gitweb/?p=postgresql.git;a=commitdiff;h=ed308d783790&#34;&gt;ajouté dans PostgreSQL&#xA;12&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Quand les checksums sont ativés, ceux-ci sont écrits à chaque fois qu’un bloc&#xA;de données est écrit sur disque, et vérifiés à chaque fois qu’un bloc est lu&#xA;depuis le disque (ou depuis le cache du système d’exploitation).  Si la&#xA;vérification échoue, une erreur est remontée dans les logs.  Si le bloc était&#xA;lu par un processus client, la requête associée échouera bien évidemment, mais&#xA;si le bloc était lu par une opération&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/current/protocol-replication.html#id-1.10.5.9.7.1.8.1.12&#34;&gt;BASE_BACKUP&lt;/a&gt;&#xA;(tel que pg_basebackup), la commande continuera à s’exécuter.  Bien que les&#xA;data checksums ne détecteront qu’un sous ensemble des problèmes possibles, ils&#xA;ont tout de même une certaine utilisé, surtout si vous ne faites pas confiance&#xA;à votre stockage.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Jusqu’à PostgreSQL 11, les erreurs de validation de checksum ne pouvaient être&#xA;trouvées qu’en cherchant dans les logs, ce qui n’est clairement pas pratique si&#xA;vous voulez monitorer de telles erreurs.&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;nouveaux-compteurs-disponibles-dans-pg_stat_database&#34;&gt;Nouveaux compteurs disponibles dans pg_stat_database&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Pour rendre la supervision des erreurs de checksum plus simple, et pour aider&#xA;les utilisateurs à réagir dès qu’un tel problème survient, PostgreSQL 12 ajoute&#xA;de nouveaux compteurs dans la vue &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_stat_database&lt;/code&gt; :&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-plaintext highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;commit 6b9e875f7286d8535bff7955e5aa3602e188e436&#xA;Author: Magnus Hagander &amp;lt;magnus@hagander.net&amp;gt;&#xA;Date:   Sat Mar 9 10:45:17 2019 -0800&#xA;&#xA;Track block level checksum failures in pg_stat_database&#xA;&#xA;This adds a column that counts how many checksum failures have occurred&#xA;on files belonging to a specific database. Both checksum failures&#xA;during normal backend processing and those created when a base backup&#xA;detects a checksum failure are counted.&#xA;&#xA;Author: Magnus Hagander&#xA;Reviewed by: Julien Rouhaud&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-plaintext highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;commit 77bd49adba4711b4497e7e39a5ec3a9812cbd52a&#xA;Author: Magnus Hagander &amp;lt;magnus@hagander.net&amp;gt;&#xA;Date:   Fri Apr 12 14:04:50 2019 +0200&#xA;&#xA;    Show shared object statistics in pg_stat_database&#xA;&#xA;    This adds a row to the pg_stat_database view with datoid 0 and datname&#xA;    NULL for those objects that are not in a database. This was added&#xA;    particularly for checksums, but we were already tracking more satistics&#xA;    for these objects, just not returning it.&#xA;&#xA;    Also add a checksum_last_failure column that holds the timestamptz of&#xA;    the last checksum failure that occurred in a database (or in a&#xA;    non-dataabase file), if any.&#xA;&#xA;    Author: Julien Rouhaud &amp;lt;rjuju123@gmail.com&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;language-plaintext highlighter-rouge&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;commit 252b707bc41cc9bf6c55c18d8cb302a6176b7e48&#xA;Author: Magnus Hagander &amp;lt;magnus@hagander.net&amp;gt;&#xA;Date:   Wed Apr 17 13:51:48 2019 +0200&#xA;&#xA;    Return NULL for checksum failures if checksums are not enabled&#xA;&#xA;    Returning 0 could falsely indicate that there is no problem. NULL&#xA;    correctly indicates that there is no information about potential&#xA;    problems.&#xA;&#xA;    Also return 0 as numbackends instead of NULL for shared objects (as no&#xA;    connection can be made to a shared object only).&#xA;&#xA;    Author: Julien Rouhaud &amp;lt;rjuju123@gmail.com&amp;gt;&#xA;    Reviewed-by: Robert Treat &amp;lt;rob@xzilla.net&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Ces compteurs reflèteront les erreurs de validation de checksum à la fois pour&#xA;les processus clients et pour l’activité&#xA;&lt;a href=&#34;https://www.postgresql.org/docs/current/protocol-replication.html#id-1.10.5.9.7.1.8.1.12&#34;&gt;BASE_BACKUP&lt;/a&gt;,&#xA;par base de données.&lt;/p&gt;&#xA;&#xA;&lt;figure class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;rjuju&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pg_stat_database&lt;/span&gt;&#xA;                        &lt;span class=&#34;k&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&#34;pg_catalog.pg_stat_database&#34;&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;Column&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;k&#34;&gt;Type&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Collation&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Default&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;-----------------------+--------------------------+-----------+----------+---------&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;datid&lt;/span&gt;                 &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;oid&lt;/span&gt;                      &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;datname&lt;/span&gt;               &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;                     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;p&#34;&gt;[...]&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;checksum_failures&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bigint&lt;/span&gt;                   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;checksum_last_failure&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;zone&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA; &lt;span class=&#34;p&#34;&gt;[...]&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;stats_reset&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;zone&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;La colonne &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;checksum_failures&lt;/code&gt; montrera un nombre cumulé d’erreurs, et la&#xA;colonne &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;checksum_last_failure&lt;/code&gt; montrera l’horodatage de la dernière erreur de&#xA;validation sur la base de données (NULL si aucune erreur n’est jamais&#xA;survenue).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Pour éviter toute confusion (merci à Robert Treat pour l’avoir signalé), ces&#xA;deux colonnes retourneront toujours NULL si les data checkums ne sont pas&#xA;activés, afin qu’on ne puisse pas croire que les checksums sont toujours&#xA;vérifiés avec succès.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Comme effet de bord, &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_stat_database&lt;/code&gt;  montrera maintenant également les&#xA;statistiques disponibles pour les objets partagés (tels que la table&#xA;&lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;pg_database&lt;/code&gt; par exemple), dans une nouvelle ligne pour laquelle &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;datid&lt;/code&gt; vaut&#xA;&lt;strong&gt;0&lt;/strong&gt;, et &lt;code class=&#34;language-plaintext highlighter-rouge&#34;&gt;datname&lt;/code&gt; vaut &lt;strong&gt;NULL&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;del&gt;Une sonde dédiée est également &lt;a href=&#34;https://github.com/OPMDG/check_pgactivity/issues/226&#34;&gt;déjà&#xA;planifiée&lt;/a&gt; dans&#xA;&lt;a href=&#34;https://opm.readthedocs.io/probes/check_pgactivity.html&#34;&gt;check_pgactivity&lt;/a&gt; !&lt;/del&gt;&#xA;Une sonde dédiée est également &lt;a href=&#34;https://github.com/OPMDG/check_pgactivity/commit/0e8b516e95e4364470d4e205aebc9fe68bbcfd23&#34;&gt;déjà&#xA;disponible&lt;/a&gt;&#xA;dans &lt;a href=&#34;https://opm.readthedocs.io/probes/check_pgactivity.html&#34;&gt;check_pgactivity&lt;/a&gt; !&lt;/p&gt;&#xA;&#xA;    &lt;p&gt;&lt;a href=&#34;https://rjuju.github.io/postgresqlfr/2019/04/18/nouveau-dans-pg12-statistiques-erreurs-checksums.html&#34;&gt;Nouveauté pg12: Statistiques sur les erreurs de checkums&lt;/a&gt; was originally published by Julien Rouhaud at &lt;a href=&#34;https://rjuju.github.io&#34;&gt;rjuju&#39;s home&lt;/a&gt; on April 18, 2019.&lt;/p&gt;</content>
    <link href="https://rjuju.github.io/postgresqlfr/2019/04/18/nouveau-dans-pg12-statistiques-erreurs-checksums.html" rel="alternate"></link>
    <summary type="html"></summary>
    <author>
      <name>Julien Rouhaud</name>
    </author>
  </entry>
  <entry>
    <title>Mettre en place une streaming replication avec PostgreSQL 10</title>
    <updated>2018-03-13T06:28:00Z</updated>
    <id>tag:blog.raveland.tech,2018-03-13:/post/postgresql_sr_fr/</id>
    <link href="https://blog.raveland.tech/post/postgresql_sr_fr/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dans ce post, je vais vous expliquer comment mettre en place une &lt;em&gt;streaming replication&lt;/em&gt; avec PostgreSQL 10. Par contre, je n&amp;rsquo;expliquerais pas comment installer PostgreSQL donc je suppose que cela est déjà le cas.&lt;/p&gt;</summary>
    <author>
      <name>blog.raveland.tech</name>
    </author>
  </entry>
  <entry>
    <title>OpenBSD / PostgreSQL / Authentification</title>
    <updated>2017-11-29T11:31:53Z</updated>
    <id>tag:blog.raveland.tech,2017-11-29:/post/openbsd_pg/</id>
    <link href="https://blog.raveland.tech/post/openbsd_pg/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Si vous êtes un utilisateur d&amp;rsquo;OpenBSD et de PostgreSQL, vous pouvez utiliser l&amp;rsquo;authentification BSD pour vous authentifier sur vos bases.&#xA;Nous allons voir comment faire cela.&lt;/p&gt;</summary>
    <author>
      <name>blog.raveland.tech</name>
    </author>
  </entry>
  <entry>
    <title>Postgresql et la réplication logique</title>
    <updated>2017-11-27T08:32:06Z</updated>
    <id>tag:blog.raveland.tech,2017-11-27:/post/postgresql_lr/</id>
    <link href="https://blog.raveland.tech/post/postgresql_lr/" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cet article va tester la nouvelle fonctionnalité disponible depuis PostgreSQL 10.0 : la réplication logique.&lt;/p&gt;&#xA;&lt;p&gt;Pour en savoir plus, l&amp;rsquo;excellente &lt;a href=&#34;https://docs.postgresql.fr/10/logical-replication.html&#34;&gt;documentation de PostgreSQL&lt;/a&gt;&lt;/p&gt;</summary>
    <author>
      <name>blog.raveland.tech</name>
    </author>
  </entry>
  <entry>
    <title>Utiliser le dépôt Debian/Ubuntu de PostgreSQL.org</title>
    <updated>2013-04-03T06:05:00Z</updated>
    <id>tag:blog.kryskool.org,2013-04-03:/utiliser-le-depot-debian-ubuntu-de-postgresql-org-fr.html</id>
    <link href="http://blog.kryskool.org/utiliser-le-depot-debian-ubuntu-de-postgresql-org-fr.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Le projet PostgreSQL possède depuis peu son propre dépôt APT pour les différentes versions des serveurs encore maintenu et &lt;a class=&#34;reference external&#34; href=&#34;http://pgadmin.org/&#34;&gt;PgAdmin3&lt;/a&gt;, sur les versions de Debian et Ubuntu suivantes&lt;/p&gt;&#xA;&lt;ul class=&#34;simple&#34;&gt;&#xA;&lt;li&gt;Debian&lt;ul&gt;&#xA;&lt;li&gt;Etch&lt;/li&gt;&#xA;&lt;li&gt;Lenny&lt;/li&gt;&#xA;&lt;li&gt;Squeeze&lt;/li&gt;&#xA;&lt;li&gt;Wheezy&lt;/li&gt;&#xA;&lt;li&gt;Sid&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Ubuntu&lt;ul&gt;&#xA;&lt;li&gt;Precise (12.04)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Si vous utilisiez déjà le dépôt squeeze backports par exemple, vous pouvez basculer facilement vers ce nouveau dépôt sans problème&lt;/p&gt;&#xA;&lt;div class=&#34;section&#34; id=&#34;cle-de-signature-des-paquets&#34;&gt;&#xA;&lt;h2&gt;Clé de signature des paquets&lt;/h2&gt;&#xA;&lt;p&gt;Avant d&#39;installer une version de PostgreSQL, il faut ajouter la clé d&#39;authentification des paquets dans notre trousseau de clé.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;wget -O - http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc | sudo apt-key add -&#xA;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;section&#34; id=&#34;source-list&#34;&gt;&#xA;&lt;h2&gt;source.list&lt;/h2&gt;&#xA;&lt;p&gt;Il faut ensuite ajouter le dépôt au source.list, pour cela créer le fichier &lt;tt class=&#34;docutils literal&#34;&gt;/etc/apt/sources.list.d/pgdg.list&lt;/tt&gt;&#xA;et ajouter les lignes suivantes (l&#39;exemple ci-dessous est pour la version squeeze).&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;deb http://apt.postgresql.org/pub/repos/apt/ squeeze-pgdg main&#xA;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;Remplacer &lt;tt class=&#34;docutils literal&#34;&gt;Squeeze&lt;/tt&gt; par le nom de votre distribution.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;section&#34; id=&#34;preferences&#34;&gt;&#xA;&lt;h2&gt;Préférences&lt;/h2&gt;&#xA;&lt;p&gt;Pour indiquer à votre distribution de prendre et mettre à jour votre ou vos PostgreSQL à partir de cette source,&#xA;il faut rajouter une configuration dite de &lt;tt class=&#34;docutils literal&#34;&gt;pinning&lt;/tt&gt;&lt;/p&gt;&#xA;&lt;p&gt;Créer le fichier &lt;tt class=&#34;docutils literal&#34;&gt;/etc/apt/preferences.d/pgdg.pref&lt;/tt&gt; et ajouter les lignes suivantes&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;Package: *&#xA;Pin: release o=apt.postgresql.org&#xA;Pin-Priority: 500&#xA;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;section&#34; id=&#34;initialisation&#34;&gt;&#xA;&lt;h2&gt;Initialisation&lt;/h2&gt;&#xA;&lt;p&gt;Une fois la configuration, il faut faire un &lt;tt class=&#34;docutils literal&#34;&gt;update&lt;/tt&gt; pour mettre a jour votre gestionnaire de paquet avec ce nouveau dépôt, et charger le trousseau de clé&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;apt-get update&#xA;apt-get install pgdg-keyring&#xA;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;Ensuite il en reste plus qu&#39;a installer la version de PostgreSQL que vous souhaitez.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;apt-get install postgresql-9.2 postgresql-client-9.2 postgresql-contrib-9.2 postgresql-plpython-9.2 postgresql-server-dev-9.2 libpq-dev&#xA;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;/div&gt;</summary>
    <author>
      <name>Christophe Chauvet</name>
    </author>
  </entry>
  <entry>
    <title>Connaitre la taille d&#39;un base de données PostgreSQL</title>
    <updated>2011-12-12T11:30:00Z</updated>
    <id>tag:blog.kryskool.org,2011-12-12:/connaitre-taille-base-postgresql.html</id>
    <link href="http://blog.kryskool.org/connaitre-taille-base-postgresql.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pour connaitre la taille d&#39;un base de données il faut utiliser la fonction &lt;a class=&#34;reference external&#34; href=&#34;http://docs.postgresql.fr/9.1/functions-admin.html&#34;&gt;pg_database_size&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;production=# select pg_database_size(&amp;#39;production&amp;#39;);&#xA; pg_database_size&#xA;------------------&#xA;        513343780&#xA;(1 ligne)&#xA;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;Cette taille est donnée en octets, pour avoir une meilleur représentation en Méga ou Giga, il faut utiliser la fonction &lt;a class=&#34;reference external&#34; href=&#34;http://docs.postgresql.fr/9.1/functions-admin.html&#34;&gt;pg_size_pretty&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;production=# select pg_size_pretty(pg_database_size(&amp;#39;production&amp;#39;));&#xA; pg_size_pretty&#xA;----------------&#xA; 490 MB&#xA;(1 ligne)&#xA;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;Ensuite si l&#39;on souhaite connaître la taille d&#39;un table il faut utiliser la fonction &lt;a class=&#34;reference external&#34; href=&#34;http://docs.postgresql.fr/9.1/functions-admin.html&#34;&gt;pg_relation_size&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;production=# select pg_size_pretty(pg_relation_size(&amp;#39;res_partner&amp;#39;));&#xA; pg_size_pretty&#xA;----------------&#xA; 152 kB&#xA;(1 ligne)&#xA;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;Si l&#39;on souhaite également avoir la place prise par les indexes, il faut utiliser la fonction &lt;a class=&#34;reference external&#34; href=&#34;http://docs.postgresql.fr/9.1/functions-admin.html&#34;&gt;pg_total_relation_size&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;production=# select pg_size_pretty(pg_total_relation_size(&amp;#39;res_partner&amp;#39;));&#xA; pg_size_pretty&#xA;----------------&#xA; 528 kB&#xA;(1 ligne)&#xA;&lt;/pre&gt;&lt;/div&gt;</summary>
    <author>
      <name>Christophe Chauvet</name>
    </author>
  </entry>
  <entry>
    <title>Installation TinyERP 4.2 avec PostgreSQL 8.3</title>
    <updated>2008-05-25T09:33:00Z</updated>
    <id>tag:blog.kryskool.org,2008-05-25:/Installation-TinyERP-42-avec-PostgreSQL-83-fr.html</id>
    <link href="http://blog.kryskool.org/Installation-TinyERP-42-avec-PostgreSQL-83-fr.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Depuis la version 8.3, certain CAST ne sont plus implicites, notamment ceux qui peuvent ramener des résultats inattendus.&#xA;Dans la version de TinyERP 4.2 (4.2.2 actuellement) certaines requêtes avec des CAST implicites sur les dates étaient utilisés,&#xA;ceux qui avec PostgreSQL 8.3 ramène un message d&#39;erreur à l&#39;utilisation de cette requête. La question que l&#39;on se pose:&lt;/p&gt;&#xA;&lt;ul class=&#34;simple&#34;&gt;&#xA;&lt;li&gt;Doit on utiliser PostgreSQL 8.3 avec TinyERP 4.2.2 ?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;La réponse est non, simplement que le version 4.2 de TinyERP est la version stable, il ne faut surtout pas toucher au code.&#xA;Le Trunk du SVN fonctionne déjà avec la version 8.3, ainsi la prochaine version de OpenERP fonctionnera avec PostgreSQL 8.3.&lt;/p&gt;&#xA;&lt;ul class=&#34;simple&#34;&gt;&#xA;&lt;li&gt;Quelle version de PostgreSQL puis je utiliser ?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Avec TinyERP 4.2 il est possible d&#39;utiliser PostgreSQL 7.4, 8.0, 8.1 et 8.2 sauf sous Windows ou les versions 8.0 et 8.1 ne sont plus maintenus. Sous Windows seule la version 8.2 est supporté.&lt;/p&gt;&#xA;&lt;p&gt;08/09/2008 : Ceci n&#39;est plus tout a fait vrai, voir ce &lt;a class=&#34;reference external&#34; href=&#34;Premier-patch-pour-TinyERP/OpenERP&#34;&gt;billet&lt;/a&gt; pour les explications&lt;/p&gt;</summary>
    <author>
      <name>Christophe Chauvet</name>
    </author>
  </entry>
  <entry>
    <title>Réinstallation PostgreSQL sous Windows XP</title>
    <updated>2008-03-31T14:00:00Z</updated>
    <id>tag:blog.kryskool.org,2008-03-31:/Reinstallation-PostgreSQL-sous-Windows-XP-fr.html</id>
    <link href="http://blog.kryskool.org/Reinstallation-PostgreSQL-sous-Windows-XP-fr.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ce message d&#39;erreur vous indique que l&#39;utilisateur système Windows existe déjà, et donc par conséquent que sa création à échoué,&#xA;si vous aviez mémorisé le mot de passe attribuer à ce compte, il vous suffit de le saisir, sinon il va falloir supprimer l&#39;utilisateur avec la commande ci-dessous&#xA;a lancer dans une fenêtre CMD avec les droits administrateurs.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;net user postgres &lt;span class=&#34;n&#34;&gt;/DELETE&lt;/span&gt;&#xA;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;Ensuite il vous suffit de relancer l&#39;installation, qui recréera le nouveau compte &lt;strong&gt;postgres&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Si vous avez également réinstallé &lt;strong&gt;PostgreSQL&lt;/strong&gt;, lors de la précédente désinstallation, le répertoire de données&#xA;se trouvant dans &amp;quot;Program FilesPostgreSQL8.x&amp;quot; (ou X est le numéro de version mineure) n&#39;est pas supprimé,&#xA;ce qui fait également échouer l&#39;installation lors de la création du &lt;em&gt;CLUSTER&lt;/em&gt;.&lt;/p&gt;</summary>
    <author>
      <name>Christophe Chauvet</name>
    </author>
  </entry>
  <entry>
    <title>Base de données de test utilisée pour les articles du site</title>
    <updated>2008-03-12T11:30:00Z</updated>
    <id>tag:blog.kryskool.org,2008-03-12:/Base-de-donnees-de-test-utilises-pour-les-articles-du-site-fr.html</id>
    <link href="http://blog.kryskool.org/Base-de-donnees-de-test-utilises-pour-les-articles-du-site-fr.html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;La base de test utilisée, se nomme Pagila. Elle fait partie du projet &lt;em&gt;DbSample&lt;/em&gt; sur &lt;em&gt;pgFoundry.org&lt;/em&gt;&#xA;vous pouvez la télécharger directement &lt;a class=&#34;reference external&#34; href=&#34;http://pgfoundry.org/frs/download.php/1556/pagila-0.10.0.zip&#34;&gt;ici&lt;/a&gt;.&#xA;La version 0.10 supporte la version 8.3 de PostgreSQL qui intègre nativement Tsearch2 (la recherche FullText native),&#xA;les versions antérieurs de pagila nécessitait d&#39;avoir tsearch2 d&#39;activer ce qui n&#39;était pas possible de faire sous Windows sans compilation.&lt;/p&gt;&#xA;&lt;p&gt;L&#39;installation de la base pagila se fera en ligne de commande.&#xA;Les utilisateurs de windows se réfèrerons a cet &lt;a class=&#34;reference external&#34; href=&#34;/Utilisation-de-psql-sous-Windows&#34;&gt;article&lt;/a&gt; pour utiliser correctement la méthode en ligne de commande,&#xA;les utilisateurs sous Linux utiliserons l&#39;utilisateur système &lt;em&gt;postgres&lt;/em&gt; directement.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;%PSQL%&lt;span class=&#34;se&#34;&gt;\c&lt;/span&gt;reatedb -U postgres -E UTF8 -e pagila&#xA;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;Lorsque vous allez valider cette commande, le mot de passe de l&#39;utilisateur &lt;em&gt;postgres&lt;/em&gt; vous sera demandé, et la base &lt;em&gt;pagila&lt;/em&gt; sera crée avec un encodage en UTF8.&#xA;La base de données est crée, nous allons pouvoir importer les données.&lt;/p&gt;&#xA;&lt;p&gt;Positionnez vous dans le répertoire ou vous avez décompressez l&#39;archive de &lt;em&gt;Pagila&lt;/em&gt;, puis toujours en ligne de commande exécuter la commande suivante :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;%PSQL%&lt;span class=&#34;se&#34;&gt;\p&lt;/span&gt;sql -U postgres -d pagila -f pagila-schema.sql&#xA;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;une fois la touche entrée validé, le mot de passe de l&#39;utilisateur &lt;em&gt;postgres&lt;/em&gt; peut vous être demander, et ensuite vous verrez apparaître le retour de chaque commande,&#xA;vérifier qu&#39;aucun message d&#39;erreur n&#39;apparaît. a cet instant le schéma devant accueillir les données a été inséré dans la base &lt;em&gt;pagila&lt;/em&gt; crée précédemment.&lt;/p&gt;&#xA;&lt;p&gt;Nous allons maintenant y inséré les données à l&#39;aide de cette commande.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;%PSQL%&lt;span class=&#34;se&#34;&gt;\p&lt;/span&gt;sql -U postgres -d pagila -f pagila-data.sql&#xA;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;Si pas de message d&#39;erreur, notre base de test est prête, nous allons faire une petite requête de vérification dans &lt;em&gt;psql&lt;/em&gt;. une fois connecté, exécuter la requête suivante&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;n&#34;&gt;pagila&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;description&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;film&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;film_id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;      &lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;                                           &lt;span class=&#34;n&#34;&gt;description&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;------------------+--------------------------------------------------------------------------------------------------&lt;/span&gt;&#xA; &lt;span class=&#34;n&#34;&gt;ACADEMY&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DINOSAUR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Epic&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Drama&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Feminist&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;And&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Mad&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Scientist&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;who&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;must&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Battle&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Teacher&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;The&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Canadian&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Rockies&lt;/span&gt;&#xA;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&#xA;&lt;span class=&#34;n&#34;&gt;pagila&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=#&lt;/span&gt;&#xA;&lt;/pre&gt;&lt;/div&gt;</summary>
    <author>
      <name>Christophe Chauvet</name>
    </author>
  </entry>
  <entry>
    <title>Installation de PostgreSQL 8.3 sous Windows XP</title>
    <updated>2008-02-26T13:02:00Z</updated>
    <id>tag:blog.kryskool.org,2008-02-26:/Installation-de-PostgreSQL-83-sous-Windows-XP-fr.html</id>
    <link href="http://blog.kryskool.org/Installation-de-PostgreSQL-83-sous-Windows-XP-fr.html" rel="alternate"></link>
    <summary type="html">&lt;div class=&#34;section&#34; id=&#34;telechargement&#34;&gt;&#xA;&lt;h2&gt;Téléchargement&lt;/h2&gt;&#xA;&lt;p&gt;Avant l&#39;installation de PostgreSQL 8.3, nous devons au préalable le récupérer, pour cela nous allons le télécharger sur l&#39;un des &lt;a class=&#34;reference external&#34; href=&#34;http://wwwmaster.postgresql.org/download/mirrors-ftp?file=%2Fbinary%2Fv8.3.0%2Fwin32%2Fpostgresql-8.3.0-1.zip&#34;&gt;miroirs&lt;/a&gt; disponibles.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;section&#34; id=&#34;lancement&#34;&gt;&#xA;&lt;h2&gt;Lancement&lt;/h2&gt;&#xA;&lt;p&gt;Un fois le téléchargement terminé, vous obtenez un fichier nommé postgresql-8.3.0-1.zip dans votre répertoire de destination. Décompresser le et vous obtiendrez la liste de fichier ci-dessous.&lt;/p&gt;&#xA;&lt;img alt=&#34;Listes_fichiers&#34; src=&#34;images/InstPg83/liste_fichier.jpg&#34; /&gt;&#xA;&lt;p&gt;Puisqu&#39;il s&#39;agit de la première version stable de la version 8.3, il est pas conseiller d&#39;exécuter une mise à jour avec upgrade.bat, à partir des versions RC ou Beta.&#xA;Le script upgrade.bat ne peut en aucun cas servir à mettre à jour une 8.2 vers une 8.3. Il servira uniquement à la mise à jour de votre 8.3 lorsque de nouvelle versions correctives sortiront.&lt;/p&gt;&#xA;&lt;div class=&#34;note&#34;&gt;&#xA;&lt;p class=&#34;first admonition-title&#34;&gt;Note&lt;/p&gt;&#xA;&lt;p class=&#34;last&#34;&gt;Afin d&#39;eviter le plantage lors du démarrage du service PostgreSQL une fois installé, il convient de vérifier que le service windows &lt;strong&gt;Connexion secondaire&lt;/strong&gt; est démarré.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;Pour commencer l&#39;installation de PostgreSQL 8.3, exécuter indifféremment &lt;strong&gt;SETUP.bat&lt;/strong&gt; ou &lt;strong&gt;postgresql-8.3.msi&lt;/strong&gt; (si votre environnement Windows est correctement installé,&#xA;le fichier msi devrait déclencher l&#39;installation.). Un fois lancer vous obtiendrez l&#39;écran suivant.&lt;/p&gt;&#xA;&lt;div class=&#34;section&#34; id=&#34;ecran-d-accueil&#34;&gt;&#xA;&lt;h3&gt;Ecran d&#39;accueil&lt;/h3&gt;&#xA;&lt;img alt=&#34;Choix_Langue&#34; src=&#34;images/InstPg83/PostgreSQL--2008-02-12--14-56-00.jpg&#34; /&gt;&#xA;&lt;p&gt;Ce premier écran va nous permettre de sélectionner la langue utiliser pour le reste de l&#39;installation, nous allons bien évidement choisir « French / Français ». Nous allons également cocher la case « &#39;&#39;Write detailed installation log to postgresql-8.3.log in the current directory&#39;&#39; », ceci enregistrera des informations utiles pour un éventuel dépannage, si l&#39;installation ne se déroulait pas correctement.&lt;/p&gt;&#xA;&lt;p&gt;Pour poursuivre l&#39;installation appuyer sur le bouton « Start ».&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;section&#34; id=&#34;ecran-bienvenue-en-francais&#34;&gt;&#xA;&lt;h3&gt;Ecran bienvenue en Français&lt;/h3&gt;&#xA;&lt;img alt=&#34;Ecran debut install&#34; src=&#34;images/InstPg83/PostgreSQL--2008-02-12--14-56-40.jpg&#34; /&gt;&#xA;&lt;p&gt;Sur cette écran, rien de bien compliquer, il suffit de suivre les instructions, et de cliquer sur « Suivant »&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;section&#34; id=&#34;license&#34;&gt;&#xA;&lt;h3&gt;License&lt;/h3&gt;&#xA;&lt;img alt=&#34;Licence&#34; src=&#34;images/InstPg83/PostgreSQL--2008-02-12--14-56-50.jpg&#34; /&gt;&#xA;&lt;p&gt;Cette écran détaille toutes les licenses inclus dans cette installation&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;section&#34; id=&#34;option-d-installation&#34;&gt;&#xA;&lt;h3&gt;Option d&#39;installation&lt;/h3&gt;&#xA;&lt;img alt=&#34;Choix des options&#34; src=&#34;images/InstPg83/PostgreSQL--2008-02-12--14-57-23.jpg&#34; /&gt;&#xA;&lt;p&gt;Les options par défaut sont suffisantes, pour avoir la gestion de la langue, activé également &lt;strong&gt;Support de la langue&lt;/strong&gt;.&#xA;les messages d&#39;erreurs apparaîtrons également traduit, il sera possible au niveau de la session de les obtenir en Anglais,&#xA;ce qui vous permettra d&#39;avoir plus de resultat lors de la recherche de message d&#39;erreur similaire dans votre moteur de recherche favori.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;section&#34; id=&#34;configuration-du-service&#34;&gt;&#xA;&lt;h3&gt;Configuration du service&lt;/h3&gt;&#xA;&lt;img alt=&#34;Configuration du service&#34; src=&#34;images/InstPg83/PostgreSQL--2008-02-12--14-58-05.jpg&#34; /&gt;&#xA;&lt;p&gt;PostgreSQL sous Windows est vu comme un service, celui a besoin d&#39;avoir un compte utilisateur avec le minimum de droit,&#xA;par defaut l&#39;utilisateur crée se nomme &lt;strong&gt;postgres&lt;/strong&gt;,&#xA;il convient de mémoriser son mot de passe, qui vous permettra par la suite de faire cohabiter plusieurs versions de &lt;strong&gt;PostgreSQL&lt;/strong&gt;,&#xA;en utilisant le même utilisateur système pour démarrer les différents services.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;section&#34; id=&#34;initialisation-du-cluster&#34;&gt;&#xA;&lt;h3&gt;Initialisation du cluster&lt;/h3&gt;&#xA;&lt;img alt=&#34;Initialisation du cluster&#34; src=&#34;images/InstPg83/PostgreSQL--2008-02-12--14-58-46.jpg&#34; /&gt;&#xA;&lt;p&gt;&lt;strong&gt;psql&lt;/strong&gt; dans une console Windows a besoin d&#39;un encodage WIN1252. dans cette configuration coté serveur faut absolument choisir l&#39;encodage UTF8.&#xA;Par défaut un utilisateur &lt;strong&gt;postgres&lt;/strong&gt; est crée dans la base de données, il s&#39;agit du super utilisateur qui possèdent les pleins droits sur le cluster de base de données.&#xA;Pour cette raison il faut bien mémoriser le mot de passe que vous lui attribuer, car celui ci servira à établir la première connexion à la base de données,&#xA;en vue du crée votre première base, mais également un utilisateur lambda.&#xA;Il est bien sur fortement conseiller de mettre un mot de passe différents de celui qui a servit à créer l&#39;utilisateur local de la machine.&lt;/p&gt;&#xA;&lt;img alt=&#34;Connexions distantes&#34; src=&#34;images/InstPg83/Connexions%20distantes--2008-02-12--14-59-07.jpg&#34; /&gt;&#xA;&lt;p&gt;Ce message vous indique que vous avez activé la connexion TCP/IP et que votre serveur PostgreSQL est accessible à travers toutes les machines du réseau, pour en restreindre l&#39;usage, consulter cette &lt;a class=&#34;reference external&#34; href=&#34;http://docs.postgresqlfr.org/8.3/client-authentication.html#auth-pg-hba-conf&#34;&gt;partie&lt;/a&gt; de la documentation.&lt;/p&gt;&#xA;&lt;ul class=&#34;simple&#34;&gt;&#xA;&lt;li&gt;Dans cette configuration il convient de choisir un mot de passe pour le super-utilisateur &lt;strong&gt;postgres&lt;/strong&gt; qui ne soit pas identique au login.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;section&#34; id=&#34;langages-proceduraux&#34;&gt;&#xA;&lt;h3&gt;Langages procéduraux&lt;/h3&gt;&#xA;&lt;img alt=&#34;Langages procéduraux&#34; src=&#34;images/InstPg83/PostgreSQL--2008-02-12--14-59-17.jpg&#34; /&gt;&#xA;&lt;p&gt;Les langages proceduraux (PL) peuvent être installer séparément, pendant l&#39;installation ou ultérieurement. Par défaut PL/pgSQL est activé,&#xA;cela signifie qu&#39;il sera installé dans la base &lt;strong&gt;template1&lt;/strong&gt; qui est utilisé comme modèle lors de la création d&#39;une nouvelle base de données.&#xA;L&#39;activation des case a coché pour les autres langages dépend si le module d&#39;installation a détecté la présence des interpreteurs pour les différents langages.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;section&#34; id=&#34;choix-des-contrib&#34;&gt;&#xA;&lt;h3&gt;Choix des contrib&lt;/h3&gt;&#xA;&lt;img alt=&#34;Choix des contribs&#34; src=&#34;images/InstPg83/PostgreSQL--2008-02-12--15-00-08.jpg&#34; /&gt;&#xA;&lt;p&gt;Par défaut 2 contributions sont installés&lt;/p&gt;&#xA;&lt;ul class=&#34;simple&#34;&gt;&#xA;&lt;li&gt;Adminpack&lt;/li&gt;&#xA;&lt;li&gt;Debugger&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Si vous cochez d&#39;autres contributions, celles-ci seront installés et activés par défaut, sinon elle seront juste installés dans le répertoire de contrib et&#xA;leur activation se fera au travers de leurs scripts d&#39;installation respectif (dans ce même répertoire se trouve également les scripts de désinstallations)&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;section&#34; id=&#34;progression-de-l-installation&#34;&gt;&#xA;&lt;h3&gt;Progression de l&#39;installation&lt;/h3&gt;&#xA;&lt;img alt=&#34;Debut installation&#34; src=&#34;images/InstPg83/PostgreSQL--2008-02-12--15-00-20.jpg&#34; /&gt;&#xA;&lt;p&gt;L&#39;installation ne devrait pas poser de soucis, sinon vous obtiendrez un message d&#39;erreur explique, mais également une trace dans le fichier de log.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;section&#34; id=&#34;fin-d-installation&#34;&gt;&#xA;&lt;h3&gt;Fin d&#39;installation&lt;/h3&gt;&#xA;&lt;img alt=&#34;Ecran final&#34; src=&#34;images/InstPg83/PostgreSQL--2008-02-12--15-01-07.jpg&#34; /&gt;&#xA;&lt;p&gt;Voila &lt;strong&gt;PostgreSQL&lt;/strong&gt; est fraichement installé sur votre environnement. sur ce dernier écran il vous est conseillé de vous inscrire à la liste &lt;strong&gt;psql-announce&lt;/strong&gt;&#xA;pour être informer des nouvelles mises à jour mais également des bugs ou correction de bug.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;section&#34; id=&#34;premiere-connexion&#34;&gt;&#xA;&lt;h2&gt;Première connexion&lt;/h2&gt;&#xA;&lt;div class=&#34;section&#34; id=&#34;avec-psql&#34;&gt;&#xA;&lt;h3&gt;Avec psql&lt;/h3&gt;&#xA;&lt;p&gt;Pour la première connexion avec psql, faite &lt;strong&gt;Demarrer / Executer&lt;/strong&gt; puis saisissez &lt;strong&gt;cmd&lt;/strong&gt;. Lorsque la console est ouverte saisissez les lignes ci-dessous.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;chcp 1252&#xA;set PSQL=&amp;quot;c:\Program Files\PostgreSQL\8.3\bin&amp;quot;&#xA;%PSQL%\psql -U postgres&#xA;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;vous devriez obtenir l&#39;écran ci-dessous, après avoir saisie le mot de passe de l&#39;utilisateur &lt;strong&gt;postgres&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;Password for user postgres:&#xA;Welcome to psql 8.3.0, the PostgreSQL interactive terminal.&#xA;&#xA;Type:  \copyright for distribution terms&#xA;       \h for help with SQL commands&#xA;       \? for help with psql commands&#xA;       \g or terminate with semicolon to execute query&#xA;       \q to quit&#xA;&#xA;postgres=#&#xA;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;section&#34; id=&#34;avec-pgadmin-iii&#34;&gt;&#xA;&lt;h3&gt;Avec pgAdmin III&lt;/h3&gt;&#xA;&lt;p&gt;Pour lancer pgAdmin3, aller sur &lt;strong&gt;Demarrer / Programmes / PostgreSQL 8.3 / pgAdmin3&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;img alt=&#34;pgAdmin3 Connexion&#34; src=&#34;images/InstPg83/pgAdmin_III--2008-03-01--20-58-50.jpg&#34; /&gt;&#xA;&lt;p&gt;Choisissez le serveur sur lequel vous souhaitez vous connecter, pour l&#39;instant 1 seul est déclaré et faites un clic droit, puis &lt;strong&gt;Se connecter&lt;/strong&gt;,&#xA;vous pouvez maintenant naviguer dans l&#39;arborescence, et commencer par créer un Utilisateur puis une base de données.&lt;/p&gt;&#xA;&lt;img alt=&#34;pgAdmin3 Arborescence&#34; src=&#34;images/InstPg83/pgAdmin_III--2008-03-01--21-23-40.jpg&#34; /&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;</summary>
    <author>
      <name>Christophe Chauvet</name>
    </author>
  </entry>
</feed>